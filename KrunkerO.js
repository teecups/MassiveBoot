(function anonymous(AJiNqnGnImofXPRjScNxWzhhtTBqWrLt, OySKZZHYnhbhpnVKyLzlUooLwYvxTuDJ) {
    !function(c) {
        var d = {};
        function e(f) {
            if (d[f])
                return d[f]['exports'];
            var g = d[f] = {
                'i': f,
                'l': !0x1,
                'exports': {}
            };
            return c[f]['call'](g['exports'], g, g['exports'], e),
            g['l'] = !0x0,
            g['exports'];
        }
        e['m'] = c,
        e['c'] = d,
        e['d'] = function(c, d, j) {
            e['o'](c, d) || Object['defineProperty'](c, d, {
                'enumerable': !0x0,
                'get': j
            });
        }
        ,
        e['r'] = function(c) {
            'undefined' != typeof Symbol && Symbol['toStringTag'] && Object['defineProperty'](c, Symbol['toStringTag'], {
                'value': 'Module'
            }),
            Object['defineProperty'](c, '__esModule', {
                'value': !0x0
            });
        }
        ,
        e['t'] = function(c, d) {
            if (0x1 & d && (c = e(c)),
            0x8 & d)
                return c;
            if (0x4 & d && 'object' == typeof c && c && c['__esModule'])
                return c;
            var n = Object['create'](null);
            if (e['r'](n),
            Object['defineProperty'](n, 'default', {
                'enumerable': !0x0,
                'value': c
            }),
            0x2 & d && 'string' != typeof c)
                for (var o in c)
                    e['d'](n, o, function(d) {
                        return c[d];
                    }
                    ['bind'](null, o));
            return n;
        }
        ,
        e['n'] = function(c) {
            var d = c && c['__esModule'] ? function() {
                return c['default'];
            }
            : function() {
                return c;
            }
            ;
            return e['d'](d, 'a', d),
            d;
        }
        ,
        e['o'] = function(c, d) {
            return Object['prototype']['hasOwnProperty']['call'](c, d);
        }
        ,
        e['p'] = '',
        e(e['s'] = 0x6c);
    }([function(u, v, w) {
        'use strict';
        w['d'](v, 'b', function() {
            return F;
        }),
        w['d'](v, 'a', function() {
            return J;
        }),
        w['d'](v, 'c', function() {
            return P;
        }),
        w['d'](v, 'd', function() {
            return Y;
        });
        var x = function(u, v) {
            return (x = Object['setPrototypeOf'] || {
                '__proto__': []
            }instanceof Array && function(u, v) {
                u['__proto__'] = v;
            }
            || function(u, v) {
                for (var w in v)
                    v['hasOwnProperty'](w) && (u[w] = v[w]);
            }
            )(u, v);
        };
        function F(u, v) {
            function w() {
                this['constructor'] = u;
            }
            x(u, v),
            u['prototype'] = null === v ? Object['create'](v) : (w['prototype'] = v['prototype'],
            new w());
        }
        var J = function() {
            return (J = Object['assign'] || function(u) {
                for (var v, w = 0x1, x = arguments['length']; w < x; w++)
                    for (var F in v = arguments[w])
                        Object['prototype']['hasOwnProperty']['call'](v, F) && (u[F] = v[F]);
                return u;
            }
            )['apply'](this, arguments);
        };
        function P(u, v) {
            var w = 'function' == typeof Symbol && u[Symbol['iterator']];
            if (!w)
                return u;
            var x, F, J = w['call'](u), P = [];
            try {
                for (; (void 0x0 === v || 0x0 < v--) && !(x = J['next']())['done']; )
                    P['push'](x['value']);
            } catch (X) {
                F = {
                    'error': X
                };
            } finally {
                try {
                    x && !x['done'] && (w = J['return']) && w['call'](J);
                } finally {
                    if (F)
                        throw F['error'];
                }
            }
            return P;
        }
        function Y() {
            for (var u = [], v = 0x0; v < arguments['length']; v++)
                u = u['concat'](P(arguments[v]));
            return u;
        }
    }
    , , function(a1, a2, a3) {
        'use strict';
        (function(a1, a5) {
            function a6(a1, a2) {
                return a1['require'](a2);
            }
            a3['d'](a2, 'c', function() {
                return a6;
            }),
            a3['d'](a2, 'e', function() {
                return aa;
            }),
            a3['d'](a2, 'g', function() {
                return ab;
            }),
            a3['d'](a2, 'f', function() {
                return ak;
            }),
            a3['d'](a2, 'd', function() {
                return ap;
            }),
            a3['d'](a2, 'b', function() {
                return as;
            }),
            a3['d'](a2, 'a', function() {
                return aA;
            });
            var a9 = {};
            function aa() {
                return '[object\x20process]' === Object['prototype']['toString']['call'](void 0x0 === a1 ? 0x0 : a1) ? a5 : 'undefined' == typeof window ? 'undefined' == typeof self ? a9 : self : window;
            }
            function ab() {
                var a1 = aa()
                  , a2 = a1['crypto'] || a1['msCrypto'];
                if (void 0x0 !== a2 && a2['getRandomValues']) {
                    var a3 = new Uint16Array(0x8);
                    a2['getRandomValues'](a3),
                    a3[0x3] = 0x4000 | 0xfff & a3[0x3],
                    a3[0x4] = 0x8000 | 0x3fff & a3[0x4];
                    var a5 = function(a1) {
                        for (var a2 = a1['toString'](0x10); 0x4 > a2['length']; )
                            a2 = '0' + a2;
                        return a2;
                    };
                    return a5(a3[0x0]) + a5(a3[0x1]) + a5(a3[0x2]) + a5(a3[0x3]) + a5(a3[0x4]) + a5(a3[0x5]) + a5(a3[0x6]) + a5(a3[0x7]);
                }
                return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'['replace'](/[xy]/g, function(a1) {
                    var a2 = 0x0 | 0x10 * Math['random']();
                    return ('x' === a1 ? a2 : 0x8 | 0x3 & a2)['toString'](0x10);
                });
            }
            function ak(a1) {
                if (!a1)
                    return {};
                var a2 = a1['match'](/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
                if (!a2)
                    return {};
                var a3 = a2[0x6] || ''
                  , a5 = a2[0x8] || '';
                return {
                    'host': a2[0x4],
                    'path': a2[0x5],
                    'protocol': a2[0x2],
                    'relative': a2[0x5] + a3 + a5
                };
            }
            function ap(a1) {
                if (a1['message'])
                    return a1['message'];
                if (a1['exception'] && a1['exception']['values'] && a1['exception']['values'][0x0]) {
                    var a2 = a1['exception']['values'][0x0];
                    return a2['type'] && a2['value'] ? a2['type'] + ':\x20' + a2['value'] : a2['type'] || a2['value'] || a1['event_id'] || '<unknown>';
                }
                return a1['event_id'] || '<unknown>';
            }
            function as(a1) {
                var a2 = aa();
                if (!('console'in a2))
                    return a1();
                var a3 = a2['console']
                  , a5 = {};
                ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(a1) {
                    a1 in a2['console'] && a3[a1]['__sentry__'] && (a5[a1] = a3[a1]['__sentry_wrapped__'],
                    a3[a1] = a3[a1]['__sentry_original__']);
                });
                var a6 = a1();
                return Object['keys'](a5)['forEach'](function(a1) {
                    a3[a1] = a5[a1];
                }),
                a6;
            }
            function aA(a1, a2, a3, a5) {
                void 0x0 === a5 && (a5 = {
                    'handled': !0x0,
                    'type': 'generic'
                }),
                a1['exception'] = a1['exception'] || {},
                a1['exception']['values'] = a1['exception']['values'] || [],
                a1['exception']['values'][0x0] = a1['exception']['values'][0x0] || {},
                a1['exception']['values'][0x0]['value'] = a1['exception']['values'][0x0]['value'] || a2 || '',
                a1['exception']['values'][0x0]['type'] = a1['exception']['values'][0x0]['type'] || a3 || 'Error',
                a1['exception']['values'][0x0]['mechanism'] = a1['exception']['values'][0x0]['mechanism'] || a5;
            }
        }
        ['call'](this, a3(0xe), a3(0x15)));
    }
    , function(aF, aG, aH) {
        var aI = aG['global'] = aH(0x2b)
          , aJ = aG['hasBuffer'] = aI && !!aI['isBuffer']
          , aK = aG['hasArrayBuffer'] = 'undefined' != typeof ArrayBuffer
          , aL = aG['isArray'] = aH(0xb);
        aG['isArrayBuffer'] = aK ? function(aF) {
            return aF instanceof ArrayBuffer || b7(aF);
        }
        : ba;
        var aN = aG['isBuffer'] = aJ ? aI['isBuffer'] : ba
          , aO = aG['isView'] = aK ? ArrayBuffer['isView'] || bb('ArrayBuffer', 'buffer') : ba;
        aG['alloc'] = b5,
        aG['concat'] = function(aF, aH) {
            aH || (aH = 0x0,
            Array['prototype']['forEach']['call'](aF, function(aF) {
                aH += aF['length'];
            }));
            var aI = this !== aG && this || aF[0x0]
              , aJ = b5['call'](aI, aH)
              , aK = 0x0;
            return Array['prototype']['forEach']['call'](aF, function(aF) {
                aK += b4['copy']['call'](aF, aJ, aK);
            }),
            aJ;
        }
        ,
        aG['from'] = function(aF) {
            return 'string' == typeof aF ? function(aF) {
                var aG = 0x3 * aF['length']
                  , aH = b5['call'](this, aG)
                  , aI = b4['write']['call'](aH, aF);
                return aG !== aI && (aH = b4['slice']['call'](aH, 0x0, aI)),
                aH;
            }
            ['call'](this, aF) : b8(this)['from'](aF);
        }
        ;
        var b1 = aG['Array'] = aH(0x2d)
          , b2 = aG['Buffer'] = aH(0x2e)
          , b3 = aG['Uint8Array'] = aH(0x2f)
          , b4 = aG['prototype'] = aH(0x12);
        function b5(aF) {
            return b8(this)['alloc'](aF);
        }
        var b7 = bb('ArrayBuffer');
        function b8(aF) {
            return aN(aF) ? b2 : aO(aF) ? b3 : aL(aF) ? b1 : aJ ? b2 : aK ? b3 : b1;
        }
        function ba() {
            return !0x1;
        }
        function bb(aF, aG) {
            return aF = '[object\x20' + aF + ']',
            function(aH) {
                return null != aH && {}['toString']['call'](aG ? aH[aG] : aH) === aF;
            }
            ;
        }
    }
    , function(bf, bg, bh) {
        'use strict';
        function bi() {}
        bh['r'](bg),
        bh['d'](bg, 'ACESFilmicToneMapping', function() {
            return cD;
        }),
        bh['d'](bg, 'AddEquation', function() {
            return c7;
        }),
        bh['d'](bg, 'AddOperation', function() {
            return cx;
        }),
        bh['d'](bg, 'AdditiveBlending', function() {
            return c3;
        }),
        bh['d'](bg, 'AlphaFormat', function() {
            return d7;
        }),
        bh['d'](bg, 'AlwaysDepth', function() {
            return co;
        }),
        bh['d'](bg, 'AmbientLight', function() {
            return aJY;
        }),
        bh['d'](bg, 'AmbientLightProbe', function() {
            return aSr;
        }),
        bh['d'](bg, 'AnimationClip', function() {
            return ayK;
        }),
        bh['d'](bg, 'AnimationLoader', function() {
            return aCx;
        }),
        bh['d'](bg, 'AnimationMixer', function() {
            return aWh;
        }),
        bh['d'](bg, 'AnimationObjectGroup', function() {
            return aW2;
        }),
        bh['d'](bg, 'AnimationUtils', function() {
            return axj;
        }),
        bh['d'](bg, 'ArcCurve', function() {
            return aCT;
        }),
        bh['d'](bg, 'ArrayCamera', function() {
            return a6d;
        }),
        bh['d'](bg, 'ArrowHelper', function() {
            return aZu;
        }),
        bh['d'](bg, 'Audio', function() {
            return aU3;
        }),
        bh['d'](bg, 'AudioAnalyser', function() {
            return aU7;
        }),
        bh['d'](bg, 'AudioContext', function() {
            return aS8;
        }),
        bh['d'](bg, 'AudioListener', function() {
            return aU2;
        }),
        bh['d'](bg, 'AudioLoader', function() {
            return aSa;
        }),
        bh['d'](bg, 'AxesHelper', function() {
            return aZB;
        }),
        bh['d'](bg, 'AxisHelper', function() {
            return ba8;
        }),
        bh['d'](bg, 'BackSide', function() {
            return bU;
        }),
        bh['d'](bg, 'BasicDepthPacking', function() {
            return dY;
        }),
        bh['d'](bg, 'BasicShadowMap', function() {
            return bQ;
        }),
        bh['d'](bg, 'BinaryTextureLoader', function() {
            return bal;
        }),
        bh['d'](bg, 'Bone', function() {
            return aex;
        }),
        bh['d'](bg, 'BooleanKeyframeTrack', function() {
            return ayc;
        }),
        bh['d'](bg, 'BoundingBoxHelper', function() {
            return baa;
        }),
        bh['d'](bg, 'Box2', function() {
            return aWN;
        }),
        bh['d'](bg, 'Box3', function() {
            return mB;
        }),
        bh['d'](bg, 'Box3Helper', function() {
            return aZh;
        }),
        bh['d'](bg, 'BoxBufferGeometry', function() {
            return Gn;
        }),
        bh['d'](bg, 'BoxGeometry', function() {
            return Gg;
        }),
        bh['d'](bg, 'BoxHelper', function() {
            return aZb;
        }),
        bh['d'](bg, 'BufferAttribute', function() {
            return AI;
        }),
        bh['d'](bg, 'BufferGeometry', function() {
            return Gf;
        }),
        bh['d'](bg, 'BufferGeometryLoader', function() {
            return aNb;
        }),
        bh['d'](bg, 'ByteType', function() {
            return cW;
        }),
        bh['d'](bg, 'Cache', function() {
            return aCa;
        }),
        bh['d'](bg, 'Camera', function() {
            return a67;
        }),
        bh['d'](bg, 'CameraHelper', function() {
            return aYS;
        }),
        bh['d'](bg, 'CanvasRenderer', function() {
            return bcx;
        }),
        bh['d'](bg, 'CanvasTexture', function() {
            return afc;
        }),
        bh['d'](bg, 'CatmullRomCurve3', function() {
            return aGw;
        }),
        bh['d'](bg, 'CineonToneMapping', function() {
            return cC;
        }),
        bh['d'](bg, 'CircleBufferGeometry', function() {
            return awy;
        }),
        bh['d'](bg, 'CircleGeometry', function() {
            return awt;
        }),
        bh['d'](bg, 'ClampToEdgeWrapping', function() {
            return cN;
        }),
        bh['d'](bg, 'Clock', function() {
            return aU0;
        }),
        bh['d'](bg, 'ClosedSplineCurve3', function() {
            return ba2;
        }),
        bh['d'](bg, 'Color', function() {
            return w7;
        }),
        bh['d'](bg, 'ColorKeyframeTrack', function() {
            return ayg;
        }),
        bh['d'](bg, 'CompressedTexture', function() {
            return aeZ;
        }),
        bh['d'](bg, 'CompressedTextureLoader', function() {
            return aCz;
        }),
        bh['d'](bg, 'ConeBufferGeometry', function() {
            return awl;
        }),
        bh['d'](bg, 'ConeGeometry', function() {
            return awd;
        }),
        bh['d'](bg, 'CubeCamera', function() {
            return aTD;
        }),
        bh['d'](bg, 'CubeGeometry', function() {
            return Gg;
        }),
        bh['d'](bg, 'CubeReflectionMapping', function() {
            return cF;
        }),
        bh['d'](bg, 'CubeRefractionMapping', function() {
            return cG;
        }),
        bh['d'](bg, 'CubeTexture', function() {
            return O3;
        }),
        bh['d'](bg, 'CubeTextureLoader', function() {
            return aCF;
        }),
        bh['d'](bg, 'CubeUVReflectionMapping', function() {
            return cK;
        }),
        bh['d'](bg, 'CubeUVRefractionMapping', function() {
            return cL;
        }),
        bh['d'](bg, 'CubicBezierCurve', function() {
            return aHc;
        }),
        bh['d'](bg, 'CubicBezierCurve3', function() {
            return aHh;
        }),
        bh['d'](bg, 'CubicInterpolant', function() {
            return axS;
        }),
        bh['d'](bg, 'CullFaceBack', function() {
            return bL;
        }),
        bh['d'](bg, 'CullFaceFront', function() {
            return bM;
        }),
        bh['d'](bg, 'CullFaceFrontBack', function() {
            return bN;
        }),
        bh['d'](bg, 'CullFaceNone', function() {
            return bK;
        }),
        bh['d'](bg, 'Curve', function() {
            return aCJ;
        }),
        bh['d'](bg, 'CurvePath', function() {
            return aJk;
        }),
        bh['d'](bg, 'CustomBlending', function() {
            return c6;
        }),
        bh['d'](bg, 'CylinderBufferGeometry', function() {
            return avp;
        }),
        bh['d'](bg, 'CylinderGeometry', function() {
            return avg;
        }),
        bh['d'](bg, 'Cylindrical', function() {
            return aWJ;
        }),
        bh['d'](bg, 'DataTexture', function() {
            return mo;
        }),
        bh['d'](bg, 'DataTexture2DArray', function() {
            return Oe;
        }),
        bh['d'](bg, 'DataTexture3D', function() {
            return Oj;
        }),
        bh['d'](bg, 'DataTextureLoader', function() {
            return aCB;
        }),
        bh['d'](bg, 'DefaultLoadingManager', function() {
            return aCt;
        }),
        bh['d'](bg, 'DepthFormat', function() {
            return dd;
        }),
        bh['d'](bg, 'DepthStencilFormat', function() {
            return de;
        }),
        bh['d'](bg, 'DepthTexture', function() {
            return afm;
        }),
        bh['d'](bg, 'DirectionalLight', function() {
            return aJV;
        }),
        bh['d'](bg, 'DirectionalLightHelper', function() {
            return aYM;
        }),
        bh['d'](bg, 'DirectionalLightShadow', function() {
            return aJU;
        }),
        bh['d'](bg, 'DiscreteInterpolant', function() {
            return ay2;
        }),
        bh['d'](bg, 'DodecahedronBufferGeometry', function() {
            return ahO;
        }),
        bh['d'](bg, 'DodecahedronGeometry', function() {
            return ahL;
        }),
        bh['d'](bg, 'DoubleSide', function() {
            return bV;
        }),
        bh['d'](bg, 'DstAlphaFactor', function() {
            return ci;
        }),
        bh['d'](bg, 'DstColorFactor', function() {
            return ck;
        }),
        bh['d'](bg, 'DynamicBufferAttribute', function() {
            return b9y;
        }),
        bh['d'](bg, 'EdgesGeometry', function() {
            return auW;
        }),
        bh['d'](bg, 'EdgesHelper', function() {
            return bad;
        }),
        bh['d'](bg, 'EllipseCurve', function() {
            return aCK;
        }),
        bh['d'](bg, 'EqualDepth', function() {
            return cr;
        }),
        bh['d'](bg, 'EquirectangularReflectionMapping', function() {
            return cH;
        }),
        bh['d'](bg, 'EquirectangularRefractionMapping', function() {
            return cI;
        }),
        bh['d'](bg, 'Euler', function() {
            return xZ;
        }),
        bh['d'](bg, 'EventDispatcher', function() {
            return bi;
        }),
        bh['d'](bg, 'ExtrudeBufferGeometry', function() {
            return aqj;
        }),
        bh['d'](bg, 'ExtrudeGeometry', function() {
            return aqg;
        }),
        bh['d'](bg, 'Face3', function() {
            return xS;
        }),
        bh['d'](bg, 'Face4', function() {
            return aZG;
        }),
        bh['d'](bg, 'FaceColors', function() {
            return bZ;
        }),
        bh['d'](bg, 'FaceNormalsHelper', function() {
            return aYB;
        }),
        bh['d'](bg, 'FileLoader', function() {
            return aCv;
        }),
        bh['d'](bg, 'FlatShading', function() {
            return bW;
        }),
        bh['d'](bg, 'Float32Attribute', function() {
            return b9W;
        }),
        bh['d'](bg, 'Float32BufferAttribute', function() {
            return Be;
        }),
        bh['d'](bg, 'Float64Attribute', function() {
            return b9Z;
        }),
        bh['d'](bg, 'Float64BufferAttribute', function() {
            return Bi;
        }),
        bh['d'](bg, 'FloatType', function() {
            return d1;
        }),
        bh['d'](bg, 'Fog', function() {
            return ae6;
        }),
        bh['d'](bg, 'FogExp2', function() {
            return ae3;
        }),
        bh['d'](bg, 'Font', function() {
            return aPz;
        }),
        bh['d'](bg, 'FontLoader', function() {
            return aPU;
        }),
        bh['d'](bg, 'FrontFaceDirectionCCW', function() {
            return bP;
        }),
        bh['d'](bg, 'FrontFaceDirectionCW', function() {
            return bO;
        }),
        bh['d'](bg, 'FrontSide', function() {
            return bT;
        }),
        bh['d'](bg, 'Frustum', function() {
            return mK;
        }),
        bh['d'](bg, 'GammaEncoding', function() {
            return dS;
        }),
        bh['d'](bg, 'Geometry', function() {
            return AH;
        }),
        bh['d'](bg, 'GeometryUtils', function() {
            return bcr;
        }),
        bh['d'](bg, 'GreaterDepth', function() {
            return ct;
        }),
        bh['d'](bg, 'GreaterEqualDepth', function() {
            return cs;
        }),
        bh['d'](bg, 'GridHelper', function() {
            return aXT;
        }),
        bh['d'](bg, 'Group', function() {
            return a66;
        }),
        bh['d'](bg, 'HalfFloatType', function() {
            return d2;
        }),
        bh['d'](bg, 'HemisphereLight', function() {
            return aJs;
        }),
        bh['d'](bg, 'HemisphereLightHelper', function() {
            return aXG;
        }),
        bh['d'](bg, 'HemisphereLightProbe', function() {
            return aSh;
        }),
        bh['d'](bg, 'IcosahedronBufferGeometry', function() {
            return ahG;
        }),
        bh['d'](bg, 'IcosahedronGeometry', function() {
            return ahD;
        }),
        bh['d'](bg, 'ImageBitmapLoader', function() {
            return aPw;
        }),
        bh['d'](bg, 'ImageLoader', function() {
            return aCD;
        }),
        bh['d'](bg, 'ImageUtils', function() {
            return lR;
        }),
        bh['d'](bg, 'ImmediateRenderObject', function() {
            return aWT;
        }),
        bh['d'](bg, 'InstancedBufferAttribute', function() {
            return aN6;
        }),
        bh['d'](bg, 'InstancedBufferGeometry', function() {
            return aN5;
        }),
        bh['d'](bg, 'InstancedInterleavedBuffer', function() {
            return aWl;
        }),
        bh['d'](bg, 'Int16Attribute', function() {
            return b9K;
        }),
        bh['d'](bg, 'Int16BufferAttribute', function() {
            return AY;
        }),
        bh['d'](bg, 'Int32Attribute', function() {
            return b9Q;
        }),
        bh['d'](bg, 'Int32BufferAttribute', function() {
            return B6;
        }),
        bh['d'](bg, 'Int8Attribute', function() {
            return b9B;
        }),
        bh['d'](bg, 'Int8BufferAttribute', function() {
            return AM;
        }),
        bh['d'](bg, 'IntType', function() {
            return cZ;
        }),
        bh['d'](bg, 'InterleavedBuffer', function() {
            return aeb;
        }),
        bh['d'](bg, 'InterleavedBufferAttribute', function() {
            return aee;
        }),
        bh['d'](bg, 'Interpolant', function() {
            return axN;
        }),
        bh['d'](bg, 'InterpolateDiscrete', function() {
            return dH;
        }),
        bh['d'](bg, 'InterpolateLinear', function() {
            return dI;
        }),
        bh['d'](bg, 'InterpolateSmooth', function() {
            return dJ;
        }),
        bh['d'](bg, 'JSONLoader', function() {
            return bcy;
        }),
        bh['d'](bg, 'KeyframeTrack', function() {
            return ay7;
        }),
        bh['d'](bg, 'LOD', function() {
            return aeo;
        }),
        bh['d'](bg, 'LatheBufferGeometry', function() {
            return atZ;
        }),
        bh['d'](bg, 'LatheGeometry', function() {
            return atU;
        }),
        bh['d'](bg, 'Layers', function() {
            return y4;
        }),
        bh['d'](bg, 'LensFlare', function() {
            return bcM;
        }),
        bh['d'](bg, 'LessDepth', function() {
            return cp;
        }),
        bh['d'](bg, 'LessEqualDepth', function() {
            return cq;
        }),
        bh['d'](bg, 'Light', function() {
            return aJp;
        }),
        bh['d'](bg, 'LightProbe', function() {
            return aSe;
        }),
        bh['d'](bg, 'LightProbeHelper', function() {
            return aXN;
        }),
        bh['d'](bg, 'LightShadow', function() {
            return aJw;
        }),
        bh['d'](bg, 'Line', function() {
            return aeA;
        }),
        bh['d'](bg, 'Line3', function() {
            return aWQ;
        }),
        bh['d'](bg, 'LineBasicMaterial', function() {
            return aey;
        }),
        bh['d'](bg, 'LineCurve', function() {
            return aHm;
        }),
        bh['d'](bg, 'LineCurve3', function() {
            return aHp;
        }),
        bh['d'](bg, 'LineDashedMaterial', function() {
            return ax7;
        }),
        bh['d'](bg, 'LineLoop', function() {
            return aeH;
        }),
        bh['d'](bg, 'LinePieces', function() {
            return b9b;
        }),
        bh['d'](bg, 'LineSegments', function() {
            return aeE;
        }),
        bh['d'](bg, 'LineStrip', function() {
            return b9a;
        }),
        bh['d'](bg, 'LinearEncoding', function() {
            return dQ;
        }),
        bh['d'](bg, 'LinearFilter', function() {
            return cS;
        }),
        bh['d'](bg, 'LinearInterpolant', function() {
            return axX;
        }),
        bh['d'](bg, 'LinearMipMapLinearFilter', function() {
            return cU;
        }),
        bh['d'](bg, 'LinearMipMapNearestFilter', function() {
            return cT;
        }),
        bh['d'](bg, 'LinearToneMapping', function() {
            return cz;
        }),
        bh['d'](bg, 'Loader', function() {
            return aPW;
        }),
        bh['d'](bg, 'LoaderUtils', function() {
            return aMX;
        }),
        bh['d'](bg, 'LoadingManager', function() {
            return aCf;
        }),
        bh['d'](bg, 'LogLuvEncoding', function() {
            return dU;
        }),
        bh['d'](bg, 'LoopOnce', function() {
            return dE;
        }),
        bh['d'](bg, 'LoopPingPong', function() {
            return dG;
        }),
        bh['d'](bg, 'LoopRepeat', function() {
            return dF;
        }),
        bh['d'](bg, 'LuminanceAlphaFormat', function() {
            return db;
        }),
        bh['d'](bg, 'LuminanceFormat', function() {
            return da;
        }),
        bh['d'](bg, 'MOUSE', function() {
            return bJ;
        }),
        bh['d'](bg, 'Material', function() {
            return Kf;
        }),
        bh['d'](bg, 'MaterialLoader', function() {
            return aK6;
        }),
        bh['d'](bg, 'Math', function() {
            return e2;
        }),
        bh['d'](bg, 'Matrix3', function() {
            return eO;
        }),
        bh['d'](bg, 'Matrix4', function() {
            return mR;
        }),
        bh['d'](bg, 'MaxEquation', function() {
            return cb;
        }),
        bh['d'](bg, 'Mesh', function() {
            return KY;
        }),
        bh['d'](bg, 'MeshBasicMaterial', function() {
            return KW;
        }),
        bh['d'](bg, 'MeshDepthMaterial', function() {
            return ZV;
        }),
        bh['d'](bg, 'MeshDistanceMaterial', function() {
            return ZX;
        }),
        bh['d'](bg, 'MeshFaceMaterial', function() {
            return b9c;
        }),
        bh['d'](bg, 'MeshLambertMaterial', function() {
            return ax3;
        }),
        bh['d'](bg, 'MeshMatcapMaterial', function() {
            return ax5;
        }),
        bh['d'](bg, 'MeshNormalMaterial', function() {
            return ax1;
        }),
        bh['d'](bg, 'MeshPhongMaterial', function() {
            return awX;
        }),
        bh['d'](bg, 'MeshPhysicalMaterial', function() {
            return awV;
        }),
        bh['d'](bg, 'MeshStandardMaterial', function() {
            return awT;
        }),
        bh['d'](bg, 'MeshToonMaterial', function() {
            return awZ;
        }),
        bh['d'](bg, 'MinEquation', function() {
            return ca;
        }),
        bh['d'](bg, 'MirroredRepeatWrapping', function() {
            return cO;
        }),
        bh['d'](bg, 'MixOperation', function() {
            return cw;
        }),
        bh['d'](bg, 'MultiMaterial', function() {
            return b9e;
        }),
        bh['d'](bg, 'MultiplyBlending', function() {
            return c5;
        }),
        bh['d'](bg, 'MultiplyOperation', function() {
            return cv;
        }),
        bh['d'](bg, 'NearestFilter', function() {
            return cP;
        }),
        bh['d'](bg, 'NearestMipMapLinearFilter', function() {
            return cR;
        }),
        bh['d'](bg, 'NearestMipMapNearestFilter', function() {
            return cQ;
        }),
        bh['d'](bg, 'NeverDepth', function() {
            return cn;
        }),
        bh['d'](bg, 'NoBlending', function() {
            return c1;
        }),
        bh['d'](bg, 'NoColors', function() {
            return bY;
        }),
        bh['d'](bg, 'NoToneMapping', function() {
            return cy;
        }),
        bh['d'](bg, 'NormalBlending', function() {
            return c2;
        }),
        bh['d'](bg, 'NotEqualDepth', function() {
            return cu;
        }),
        bh['d'](bg, 'NumberKeyframeTrack', function() {
            return ayl;
        }),
        bh['d'](bg, 'Object3D', function() {
            return yT;
        }),
        bh['d'](bg, 'ObjectLoader', function() {
            return aNJ;
        }),
        bh['d'](bg, 'ObjectSpaceNormalMap', function() {
            return e1;
        }),
        bh['d'](bg, 'OctahedronBufferGeometry', function() {
            return ahA;
        }),
        bh['d'](bg, 'OctahedronGeometry', function() {
            return ahx;
        }),
        bh['d'](bg, 'OneFactor', function() {
            return cd;
        }),
        bh['d'](bg, 'OneMinusDstAlphaFactor', function() {
            return cj;
        }),
        bh['d'](bg, 'OneMinusDstColorFactor', function() {
            return cl;
        }),
        bh['d'](bg, 'OneMinusSrcAlphaFactor', function() {
            return ch;
        }),
        bh['d'](bg, 'OneMinusSrcColorFactor', function() {
            return cf;
        }),
        bh['d'](bg, 'OrthographicCamera', function() {
            return aJN;
        }),
        bh['d'](bg, 'PCFShadowMap', function() {
            return bR;
        }),
        bh['d'](bg, 'PCFSoftShadowMap', function() {
            return bS;
        }),
        bh['d'](bg, 'ParametricBufferGeometry', function() {
            return ag0;
        }),
        bh['d'](bg, 'ParametricGeometry', function() {
            return afW;
        }),
        bh['d'](bg, 'Particle', function() {
            return b9j;
        }),
        bh['d'](bg, 'ParticleBasicMaterial', function() {
            return b9q;
        }),
        bh['d'](bg, 'ParticleSystem', function() {
            return b9l;
        }),
        bh['d'](bg, 'ParticleSystemMaterial', function() {
            return b9s;
        }),
        bh['d'](bg, 'Path', function() {
            return aJl;
        }),
        bh['d'](bg, 'PerspectiveCamera', function() {
            return a68;
        }),
        bh['d'](bg, 'Plane', function() {
            return mH;
        }),
        bh['d'](bg, 'PlaneBufferGeometry', function() {
            return Ha;
        }),
        bh['d'](bg, 'PlaneGeometry', function() {
            return H5;
        }),
        bh['d'](bg, 'PlaneHelper', function() {
            return aZn;
        }),
        bh['d'](bg, 'PointCloud', function() {
            return b9g;
        }),
        bh['d'](bg, 'PointCloudMaterial', function() {
            return b9o;
        }),
        bh['d'](bg, 'PointLight', function() {
            return aJH;
        }),
        bh['d'](bg, 'PointLightHelper', function() {
            return aXu;
        }),
        bh['d'](bg, 'Points', function() {
            return aeM;
        }),
        bh['d'](bg, 'PointsMaterial', function() {
            return aeK;
        }),
        bh['d'](bg, 'PolarGridHelper', function() {
            return aY9;
        }),
        bh['d'](bg, 'PolyhedronBufferGeometry', function() {
            return agr;
        }),
        bh['d'](bg, 'PolyhedronGeometry', function() {
            return agm;
        }),
        bh['d'](bg, 'PositionalAudio', function() {
            return aU5;
        }),
        bh['d'](bg, 'PositionalAudioHelper', function() {
            return aYr;
        }),
        bh['d'](bg, 'PropertyBinding', function() {
            return aVY;
        }),
        bh['d'](bg, 'PropertyMixer', function() {
            return aUa;
        }),
        bh['d'](bg, 'QuadraticBezierCurve', function() {
            return aHs;
        }),
        bh['d'](bg, 'QuadraticBezierCurve3', function() {
            return aHw;
        }),
        bh['d'](bg, 'Quaternion', function() {
            return eF;
        }),
        bh['d'](bg, 'QuaternionKeyframeTrack', function() {
            return ayv;
        }),
        bh['d'](bg, 'QuaternionLinearInterpolant', function() {
            return ayq;
        }),
        bh['d'](bg, 'REVISION', function() {
            return bI;
        }),
        bh['d'](bg, 'RGBADepthPacking', function() {
            return dZ;
        }),
        bh['d'](bg, 'RGBAFormat', function() {
            return d9;
        }),
        bh['d'](bg, 'RGBA_ASTC_10x10_Format', function() {
            return dB;
        }),
        bh['d'](bg, 'RGBA_ASTC_10x5_Format', function() {
            return dy;
        }),
        bh['d'](bg, 'RGBA_ASTC_10x6_Format', function() {
            return dz;
        }),
        bh['d'](bg, 'RGBA_ASTC_10x8_Format', function() {
            return dA;
        }),
        bh['d'](bg, 'RGBA_ASTC_12x10_Format', function() {
            return dC;
        }),
        bh['d'](bg, 'RGBA_ASTC_12x12_Format', function() {
            return dD;
        }),
        bh['d'](bg, 'RGBA_ASTC_4x4_Format', function() {
            return dq;
        }),
        bh['d'](bg, 'RGBA_ASTC_5x4_Format', function() {
            return dr;
        }),
        bh['d'](bg, 'RGBA_ASTC_5x5_Format', function() {
            return ds;
        }),
        bh['d'](bg, 'RGBA_ASTC_6x5_Format', function() {
            return dt;
        }),
        bh['d'](bg, 'RGBA_ASTC_6x6_Format', function() {
            return du;
        }),
        bh['d'](bg, 'RGBA_ASTC_8x5_Format', function() {
            return dv;
        }),
        bh['d'](bg, 'RGBA_ASTC_8x6_Format', function() {
            return dw;
        }),
        bh['d'](bg, 'RGBA_ASTC_8x8_Format', function() {
            return dx;
        }),
        bh['d'](bg, 'RGBA_PVRTC_2BPPV1_Format', function() {
            return dn;
        }),
        bh['d'](bg, 'RGBA_PVRTC_4BPPV1_Format', function() {
            return dm;
        }),
        bh['d'](bg, 'RGBA_S3TC_DXT1_Format', function() {
            return dh;
        }),
        bh['d'](bg, 'RGBA_S3TC_DXT3_Format', function() {
            return di;
        }),
        bh['d'](bg, 'RGBA_S3TC_DXT5_Format', function() {
            return dj;
        }),
        bh['d'](bg, 'RGBDEncoding', function() {
            return dX;
        }),
        bh['d'](bg, 'RGBEEncoding', function() {
            return dT;
        }),
        bh['d'](bg, 'RGBEFormat', function() {
            return dc;
        }),
        bh['d'](bg, 'RGBFormat', function() {
            return d8;
        }),
        bh['d'](bg, 'RGBM16Encoding', function() {
            return dW;
        }),
        bh['d'](bg, 'RGBM7Encoding', function() {
            return dV;
        }),
        bh['d'](bg, 'RGB_ETC1_Format', function() {
            return dp;
        }),
        bh['d'](bg, 'RGB_PVRTC_2BPPV1_Format', function() {
            return dl;
        }),
        bh['d'](bg, 'RGB_PVRTC_4BPPV1_Format', function() {
            return dk;
        }),
        bh['d'](bg, 'RGB_S3TC_DXT1_Format', function() {
            return dg;
        }),
        bh['d'](bg, 'RawShaderMaterial', function() {
            return awR;
        }),
        bh['d'](bg, 'Ray', function() {
            return KP;
        }),
        bh['d'](bg, 'Raycaster', function() {
            return aWp;
        }),
        bh['d'](bg, 'RectAreaLight', function() {
            return aK1;
        }),
        bh['d'](bg, 'RectAreaLightHelper', function() {
            return aXA;
        }),
        bh['d'](bg, 'RedFormat', function() {
            return df;
        }),
        bh['d'](bg, 'ReinhardToneMapping', function() {
            return cA;
        }),
        bh['d'](bg, 'RepeatWrapping', function() {
            return cM;
        }),
        bh['d'](bg, 'ReverseSubtractEquation', function() {
            return c9;
        }),
        bh['d'](bg, 'RingBufferGeometry', function() {
            return atx;
        }),
        bh['d'](bg, 'RingGeometry', function() {
            return atq;
        }),
        bh['d'](bg, 'Scene', function() {
            return aea;
        }),
        bh['d'](bg, 'SceneUtils', function() {
            return bcL;
        }),
        bh['d'](bg, 'ShaderChunk', function() {
            return vP;
        }),
        bh['d'](bg, 'ShaderLib', function() {
            return xo;
        }),
        bh['d'](bg, 'ShaderMaterial', function() {
            return KN;
        }),
        bh['d'](bg, 'ShadowMaterial', function() {
            return awP;
        }),
        bh['d'](bg, 'Shape', function() {
            return aJn;
        }),
        bh['d'](bg, 'ShapeBufferGeometry', function() {
            return aur;
        }),
        bh['d'](bg, 'ShapeGeometry', function() {
            return auo;
        }),
        bh['d'](bg, 'ShapePath', function() {
            return aPy;
        }),
        bh['d'](bg, 'ShapeUtils', function() {
            return apU;
        }),
        bh['d'](bg, 'ShortType', function() {
            return cX;
        }),
        bh['d'](bg, 'Skeleton', function() {
            return aes;
        }),
        bh['d'](bg, 'SkeletonHelper', function() {
            return aXg;
        }),
        bh['d'](bg, 'SkinnedMesh', function() {
            return aep;
        }),
        bh['d'](bg, 'SmoothShading', function() {
            return bX;
        }),
        bh['d'](bg, 'Sphere', function() {
            return mE;
        }),
        bh['d'](bg, 'SphereBufferGeometry', function() {
            return asZ;
        }),
        bh['d'](bg, 'SphereGeometry', function() {
            return asR;
        }),
        bh['d'](bg, 'Spherical', function() {
            return aWF;
        }),
        bh['d'](bg, 'SphericalHarmonics3', function() {
            return aSc;
        }),
        bh['d'](bg, 'SphericalReflectionMapping', function() {
            return cJ;
        }),
        bh['d'](bg, 'Spline', function() {
            return ba6;
        }),
        bh['d'](bg, 'SplineCurve', function() {
            return aHA;
        }),
        bh['d'](bg, 'SplineCurve3', function() {
            return ba4;
        }),
        bh['d'](bg, 'SpotLight', function() {
            return aJz;
        }),
        bh['d'](bg, 'SpotLightHelper', function() {
            return aX6;
        }),
        bh['d'](bg, 'SpotLightShadow', function() {
            return aJy;
        }),
        bh['d'](bg, 'Sprite', function() {
            return ael;
        }),
        bh['d'](bg, 'SpriteMaterial', function() {
            return aej;
        }),
        bh['d'](bg, 'SrcAlphaFactor', function() {
            return cg;
        }),
        bh['d'](bg, 'SrcAlphaSaturateFactor', function() {
            return cm;
        }),
        bh['d'](bg, 'SrcColorFactor', function() {
            return ce;
        }),
        bh['d'](bg, 'StereoCamera', function() {
            return aSv;
        }),
        bh['d'](bg, 'StringKeyframeTrack', function() {
            return ayA;
        }),
        bh['d'](bg, 'SubtractEquation', function() {
            return c8;
        }),
        bh['d'](bg, 'SubtractiveBlending', function() {
            return c4;
        }),
        bh['d'](bg, 'TangentSpaceNormalMap', function() {
            return e0;
        }),
        bh['d'](bg, 'TetrahedronBufferGeometry', function() {
            return ahu;
        }),
        bh['d'](bg, 'TetrahedronGeometry', function() {
            return ahr;
        }),
        bh['d'](bg, 'TextBufferGeometry', function() {
            return asM;
        }),
        bh['d'](bg, 'TextGeometry', function() {
            return asJ;
        }),
        bh['d'](bg, 'Texture', function() {
            return lW;
        }),
        bh['d'](bg, 'TextureLoader', function() {
            return aCH;
        }),
        bh['d'](bg, 'TorusBufferGeometry', function() {
            return ajk;
        }),
        bh['d'](bg, 'TorusGeometry', function() {
            return aje;
        }),
        bh['d'](bg, 'TorusKnotBufferGeometry', function() {
            return aiC;
        }),
        bh['d'](bg, 'TorusKnotGeometry', function() {
            return aiu;
        }),
        bh['d'](bg, 'Triangle', function() {
            return KS;
        }),
        bh['d'](bg, 'TriangleFanDrawMode', function() {
            return dP;
        }),
        bh['d'](bg, 'TriangleStripDrawMode', function() {
            return dO;
        }),
        bh['d'](bg, 'TrianglesDrawMode', function() {
            return dN;
        }),
        bh['d'](bg, 'TubeBufferGeometry', function() {
            return ai2;
        }),
        bh['d'](bg, 'TubeGeometry', function() {
            return ahU;
        }),
        bh['d'](bg, 'UVMapping', function() {
            return cE;
        }),
        bh['d'](bg, 'Uint16Attribute', function() {
            return b9N;
        }),
        bh['d'](bg, 'Uint16BufferAttribute', function() {
            return B2;
        }),
        bh['d'](bg, 'Uint32Attribute', function() {
            return b9T;
        }),
        bh['d'](bg, 'Uint32BufferAttribute', function() {
            return Ba;
        }),
        bh['d'](bg, 'Uint8Attribute', function() {
            return b9E;
        }),
        bh['d'](bg, 'Uint8BufferAttribute', function() {
            return AQ;
        }),
        bh['d'](bg, 'Uint8ClampedAttribute', function() {
            return b9H;
        }),
        bh['d'](bg, 'Uint8ClampedBufferAttribute', function() {
            return AU;
        }),
        bh['d'](bg, 'Uncharted2ToneMapping', function() {
            return cB;
        }),
        bh['d'](bg, 'Uniform', function() {
            return aWj;
        }),
        bh['d'](bg, 'UniformsLib', function() {
            return xn;
        }),
        bh['d'](bg, 'UniformsUtils', function() {
            return w5;
        }),
        bh['d'](bg, 'UnsignedByteType', function() {
            return cV;
        }),
        bh['d'](bg, 'UnsignedInt248Type', function() {
            return d6;
        }),
        bh['d'](bg, 'UnsignedIntType', function() {
            return d0;
        }),
        bh['d'](bg, 'UnsignedShort4444Type', function() {
            return d3;
        }),
        bh['d'](bg, 'UnsignedShort5551Type', function() {
            return d4;
        }),
        bh['d'](bg, 'UnsignedShort565Type', function() {
            return d5;
        }),
        bh['d'](bg, 'UnsignedShortType', function() {
            return cY;
        }),
        bh['d'](bg, 'Vector2', function() {
            return eC;
        }),
        bh['d'](bg, 'Vector3', function() {
            return eK;
        }),
        bh['d'](bg, 'Vector4', function() {
            return m7;
        }),
        bh['d'](bg, 'VectorKeyframeTrack', function() {
            return ayF;
        }),
        bh['d'](bg, 'Vertex', function() {
            return b9u;
        }),
        bh['d'](bg, 'VertexColors', function() {
            return c0;
        }),
        bh['d'](bg, 'VertexNormalsHelper', function() {
            return aWV;
        }),
        bh['d'](bg, 'VideoTexture', function() {
            return aeP;
        }),
        bh['d'](bg, 'WebGLMultisampleRenderTarget', function() {
            return mg;
        }),
        bh['d'](bg, 'WebGLRenderTarget', function() {
            return mc;
        }),
        bh['d'](bg, 'WebGLRenderTargetCube', function() {
            return mk;
        }),
        bh['d'](bg, 'WebGLRenderer', function() {
            return a8U;
        }),
        bh['d'](bg, 'WebGLUtils', function() {
            return a60;
        }),
        bh['d'](bg, 'WireframeGeometry', function() {
            return afx;
        }),
        bh['d'](bg, 'WireframeHelper', function() {
            return bag;
        }),
        bh['d'](bg, 'WrapAroundEnding', function() {
            return dM;
        }),
        bh['d'](bg, 'XHRLoader', function() {
            return baj;
        }),
        bh['d'](bg, 'ZeroCurvatureEnding', function() {
            return dK;
        }),
        bh['d'](bg, 'ZeroFactor', function() {
            return cc;
        }),
        bh['d'](bg, 'ZeroSlopeEnding', function() {
            return dL;
        }),
        bh['d'](bg, 'sRGBEncoding', function() {
            return dR;
        }),
        void 0x0 === Number['EPSILON'] && (Number['EPSILON'] = Math['pow'](0x2, -0x34)),
        void 0x0 === Number['isInteger'] && (Number['isInteger'] = function(bf) {
            return 'number' == typeof bf && isFinite(bf) && Math['floor'](bf) === bf;
        }
        ),
        void 0x0 === Math['sign'] && (Math['sign'] = function(bf) {
            return bf < 0x0 ? -0x1 : bf > 0x0 ? 0x1 : +bf;
        }
        ),
        'name'in Function['prototype'] == !0x1 && Object['defineProperty'](Function['prototype'], 'name', {
            'get': function() {
                return this['toString']()['match'](/^\s*function\s*([^\(\s]*)/)[0x1];
            }
        }),
        void 0x0 === Object['assign'] && (Object['assign'] = function(bf) {
            if (null == bf)
                throw new TypeError('Cannot\x20convert\x20undefined\x20or\x20null\x20to\x20object');
            for (var bg = Object(bf), bh = 0x1; bh < arguments['length']; bh++) {
                var bi = arguments[bh];
                if (null != bi)
                    for (var bp in bi)
                        Object['prototype']['hasOwnProperty']['call'](bi, bp) && (bg[bp] = bi[bp]);
            }
            return bg;
        }
        ),
        Object['assign'](bi['prototype'], {
            'addEventListener': function(bf, bg) {
                void 0x0 === this['_listeners'] && (this['_listeners'] = {});
                var bh = this['_listeners'];
                void 0x0 === bh[bf] && (bh[bf] = []),
                -0x1 === bh[bf]['indexOf'](bg) && bh[bf]['push'](bg);
            },
            'hasEventListener': function(bf, bg) {
                if (void 0x0 === this['_listeners'])
                    return !0x1;
                var bh = this['_listeners'];
                return void 0x0 !== bh[bf] && -0x1 !== bh[bf]['indexOf'](bg);
            },
            'removeEventListener': function(bf, bg) {
                if (void 0x0 !== this['_listeners']) {
                    var bh = this['_listeners'][bf];
                    if (void 0x0 !== bh) {
                        var bi = bh['indexOf'](bg);
                        -0x1 !== bi && bh['splice'](bi, 0x1);
                    }
                }
            },
            'dispatchEvent': function(bf) {
                if (void 0x0 !== this['_listeners']) {
                    var bg = this['_listeners'][bf['type']];
                    if (void 0x0 !== bg) {
                        bf['target'] = this;
                        for (var bh = bg['slice'](0x0), bi = 0x0, bE = bh['length']; bi < bE; bi++)
                            bh[bi]['call'](this, bf);
                    }
                }
            }
        });
        var bF, bG, bH, bI = '105', bJ = {
            'LEFT': 0x0,
            'MIDDLE': 0x1,
            'RIGHT': 0x2
        }, bK = 0x0, bL = 0x1, bM = 0x2, bN = 0x3, bO = 0x0, bP = 0x1, bQ = 0x0, bR = 0x1, bS = 0x2, bT = 0x0, bU = 0x1, bV = 0x2, bW = 0x1, bX = 0x2, bY = 0x0, bZ = 0x1, c0 = 0x2, c1 = 0x0, c2 = 0x1, c3 = 0x2, c4 = 0x3, c5 = 0x4, c6 = 0x5, c7 = 0x64, c8 = 0x65, c9 = 0x66, ca = 0x67, cb = 0x68, cc = 0xc8, cd = 0xc9, ce = 0xca, cf = 0xcb, cg = 0xcc, ch = 0xcd, ci = 0xce, cj = 0xcf, ck = 0xd0, cl = 0xd1, cm = 0xd2, cn = 0x0, co = 0x1, cp = 0x2, cq = 0x3, cr = 0x4, cs = 0x5, ct = 0x6, cu = 0x7, cv = 0x0, cw = 0x1, cx = 0x2, cy = 0x0, cz = 0x1, cA = 0x2, cB = 0x3, cC = 0x4, cD = 0x5, cE = 0x12c, cF = 0x12d, cG = 0x12e, cH = 0x12f, cI = 0x130, cJ = 0x131, cK = 0x132, cL = 0x133, cM = 0x3e8, cN = 0x3e9, cO = 0x3ea, cP = 0x3eb, cQ = 0x3ec, cR = 0x3ed, cS = 0x3ee, cT = 0x3ef, cU = 0x3f0, cV = 0x3f1, cW = 0x3f2, cX = 0x3f3, cY = 0x3f4, cZ = 0x3f5, d0 = 0x3f6, d1 = 0x3f7, d2 = 0x3f8, d3 = 0x3f9, d4 = 0x3fa, d5 = 0x3fb, d6 = 0x3fc, d7 = 0x3fd, d8 = 0x3fe, d9 = 0x3ff, da = 0x400, db = 0x401, dc = d9, dd = 0x402, de = 0x403, df = 0x404, dg = 0x83f0, dh = 0x83f1, di = 0x83f2, dj = 0x83f3, dk = 0x8c00, dl = 0x8c01, dm = 0x8c02, dn = 0x8c03, dp = 0x8d64, dq = 0x93b0, dr = 0x93b1, ds = 0x93b2, dt = 0x93b3, du = 0x93b4, dv = 0x93b5, dw = 0x93b6, dx = 0x93b7, dy = 0x93b8, dz = 0x93b9, dA = 0x93ba, dB = 0x93bb, dC = 0x93bc, dD = 0x93bd, dE = 0x898, dF = 0x899, dG = 0x89a, dH = 0x8fc, dI = 0x8fd, dJ = 0x8fe, dK = 0x960, dL = 0x961, dM = 0x962, dN = 0x0, dO = 0x1, dP = 0x2, dQ = 0xbb8, dR = 0xbb9, dS = 0xbbf, dT = 0xbba, dU = 0xbbb, dV = 0xbbc, dW = 0xbbd, dX = 0xbbe, dY = 0xc80, dZ = 0xc81, e0 = 0x0, e1 = 0x1, e2 = {
            'DEG2RAD': Math['PI'] / 0xb4,
            'RAD2DEG': 0xb4 / Math['PI'],
            'generateUUID': function() {
                for (var bf = [], bg = 0x0; bg < 0x100; bg++)
                    bf[bg] = (bg < 0x10 ? '0' : '') + bg['toString'](0x10);
                return function() {
                    var bg = 0xffffffff * Math['random']() | 0x0
                      , bh = 0xffffffff * Math['random']() | 0x0
                      , bi = 0xffffffff * Math['random']() | 0x0
                      , bF = 0xffffffff * Math['random']() | 0x0;
                    return (bf[0xff & bg] + bf[bg >> 0x8 & 0xff] + bf[bg >> 0x10 & 0xff] + bf[bg >> 0x18 & 0xff] + '-' + bf[0xff & bh] + bf[bh >> 0x8 & 0xff] + '-' + bf[bh >> 0x10 & 0xf | 0x40] + bf[bh >> 0x18 & 0xff] + '-' + bf[0x3f & bi | 0x80] + bf[bi >> 0x8 & 0xff] + '-' + bf[bi >> 0x10 & 0xff] + bf[bi >> 0x18 & 0xff] + bf[0xff & bF] + bf[bF >> 0x8 & 0xff] + bf[bF >> 0x10 & 0xff] + bf[bF >> 0x18 & 0xff])['toUpperCase']();
                }
                ;
            }(),
            'clamp': function(bf, bg, bh) {
                return Math['max'](bg, Math['min'](bh, bf));
            },
            'euclideanModulo': function(bf, bg) {
                return (bf % bg + bg) % bg;
            },
            'mapLinear': function(bf, bg, bh, bi, bF) {
                return bi + (bf - bg) * (bF - bi) / (bh - bg);
            },
            'lerp': function(bf, bg, bh) {
                return (0x1 - bh) * bf + bh * bg;
            },
            'smoothstep': function(bf, bg, bh) {
                return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * (0x3 - 0x2 * bf);
            },
            'smootherstep': function(bf, bg, bh) {
                return bf <= bg ? 0x0 : bf >= bh ? 0x1 : (bf = (bf - bg) / (bh - bg)) * bf * bf * (bf * (0x6 * bf - 0xf) + 0xa);
            },
            'randInt': function(bf, bg) {
                return bf + Math['floor'](Math['random']() * (bg - bf + 0x1));
            },
            'randFloat': function(bf, bg) {
                return bf + Math['random']() * (bg - bf);
            },
            'randFloatSpread': function(bf) {
                return bf * (0.5 - Math['random']());
            },
            'degToRad': function(bf) {
                return bf * e2['DEG2RAD'];
            },
            'radToDeg': function(bf) {
                return bf * e2['RAD2DEG'];
            },
            'isPowerOfTwo': function(bf) {
                return 0x0 == (bf & bf - 0x1) && 0x0 !== bf;
            },
            'ceilPowerOfTwo': function(bf) {
                return Math['pow'](0x2, Math['ceil'](Math['log'](bf) / Math['LN2']));
            },
            'floorPowerOfTwo': function(bf) {
                return Math['pow'](0x2, Math['floor'](Math['log'](bf) / Math['LN2']));
            }
        };
        function eC(bf, bg) {
            this['x'] = bf || 0x0,
            this['y'] = bg || 0x0;
        }
        function eF(bf, bg, bh, bi) {
            this['_x'] = bf || 0x0,
            this['_y'] = bg || 0x0,
            this['_z'] = bh || 0x0,
            this['_w'] = void 0x0 !== bi ? bi : 0x1;
        }
        function eK(bf, bg, bh) {
            this['x'] = bf || 0x0,
            this['y'] = bg || 0x0,
            this['z'] = bh || 0x0;
        }
        function eO() {
            this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1],
            arguments['length'] > 0x0 && console['error']('THREE.Matrix3:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
        }
        Object['defineProperties'](eC['prototype'], {
            'width': {
                'get': function() {
                    return this['x'];
                },
                'set': function(bf) {
                    this['x'] = bf;
                }
            },
            'height': {
                'get': function() {
                    return this['y'];
                },
                'set': function(bf) {
                    this['y'] = bf;
                }
            }
        }),
        Object['assign'](eC['prototype'], {
            'isVector2': !0x0,
            'set': function(bf, bg) {
                return this['x'] = bf,
                this['y'] = bg,
                this;
            },
            'setScalar': function(bf) {
                return this['x'] = bf,
                this['y'] = bf,
                this;
            },
            'setX': function(bf) {
                return this['x'] = bf,
                this;
            },
            'setY': function(bf) {
                return this['y'] = bf,
                this;
            },
            'setComponent': function(bf, bg) {
                switch (bf) {
                case 0x0:
                    this['x'] = bg;
                    break;
                case 0x1:
                    this['y'] = bg;
                    break;
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
                }
                return this;
            },
            'getComponent': function(bf) {
                switch (bf) {
                case 0x0:
                    return this['x'];
                case 0x1:
                    return this['y'];
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
                }
            },
            'clone': function() {
                return new this['constructor'](this['x'],this['y']);
            },
            'copy': function(bf) {
                return this['x'] = bf['x'],
                this['y'] = bf['y'],
                this;
            },
            'add': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'),
                this['addVectors'](bf, bg)) : (this['x'] += bf['x'],
                this['y'] += bf['y'],
                this);
            },
            'addScalar': function(bf) {
                return this['x'] += bf,
                this['y'] += bf,
                this;
            },
            'addVectors': function(bf, bg) {
                return this['x'] = bf['x'] + bg['x'],
                this['y'] = bf['y'] + bg['y'],
                this;
            },
            'addScaledVector': function(bf, bg) {
                return this['x'] += bf['x'] * bg,
                this['y'] += bf['y'] * bg,
                this;
            },
            'sub': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector2:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'),
                this['subVectors'](bf, bg)) : (this['x'] -= bf['x'],
                this['y'] -= bf['y'],
                this);
            },
            'subScalar': function(bf) {
                return this['x'] -= bf,
                this['y'] -= bf,
                this;
            },
            'subVectors': function(bf, bg) {
                return this['x'] = bf['x'] - bg['x'],
                this['y'] = bf['y'] - bg['y'],
                this;
            },
            'multiply': function(bf) {
                return this['x'] *= bf['x'],
                this['y'] *= bf['y'],
                this;
            },
            'multiplyScalar': function(bf) {
                return this['x'] *= bf,
                this['y'] *= bf,
                this;
            },
            'divide': function(bf) {
                return this['x'] /= bf['x'],
                this['y'] /= bf['y'],
                this;
            },
            'divideScalar': function(bf) {
                return this['multiplyScalar'](0x1 / bf);
            },
            'applyMatrix3': function(bf) {
                var bg = this['x']
                  , bh = this['y']
                  , bi = bf['elements'];
                return this['x'] = bi[0x0] * bg + bi[0x3] * bh + bi[0x6],
                this['y'] = bi[0x1] * bg + bi[0x4] * bh + bi[0x7],
                this;
            },
            'min': function(bf) {
                return this['x'] = Math['min'](this['x'], bf['x']),
                this['y'] = Math['min'](this['y'], bf['y']),
                this;
            },
            'max': function(bf) {
                return this['x'] = Math['max'](this['x'], bf['x']),
                this['y'] = Math['max'](this['y'], bf['y']),
                this;
            },
            'clamp': function(bf, bg) {
                return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])),
                this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])),
                this;
            },
            'clampScalar': function(bf, bg) {
                return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])),
                this['y'] = Math['max'](bf, Math['min'](bg, this['y'])),
                this;
            },
            'clampLength': function(bf, bg) {
                var bh = this['length']();
                return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
            },
            'floor': function() {
                return this['x'] = Math['floor'](this['x']),
                this['y'] = Math['floor'](this['y']),
                this;
            },
            'ceil': function() {
                return this['x'] = Math['ceil'](this['x']),
                this['y'] = Math['ceil'](this['y']),
                this;
            },
            'round': function() {
                return this['x'] = Math['round'](this['x']),
                this['y'] = Math['round'](this['y']),
                this;
            },
            'roundToZero': function() {
                return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']),
                this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']),
                this;
            },
            'negate': function() {
                return this['x'] = -this['x'],
                this['y'] = -this['y'],
                this;
            },
            'dot': function(bf) {
                return this['x'] * bf['x'] + this['y'] * bf['y'];
            },
            'cross': function(bf) {
                return this['x'] * bf['y'] - this['y'] * bf['x'];
            },
            'lengthSq': function() {
                return this['x'] * this['x'] + this['y'] * this['y'];
            },
            'length': function() {
                return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y']);
            },
            'manhattanLength': function() {
                return Math['abs'](this['x']) + Math['abs'](this['y']);
            },
            'normalize': function() {
                return this['divideScalar'](this['length']() || 0x1);
            },
            'angle': function() {
                var bf = Math['atan2'](this['y'], this['x']);
                return bf < 0x0 && (bf += 0x2 * Math['PI']),
                bf;
            },
            'distanceTo': function(bf) {
                return Math['sqrt'](this['distanceToSquared'](bf));
            },
            'distanceToSquared': function(bf) {
                var bg = this['x'] - bf['x']
                  , bh = this['y'] - bf['y'];
                return bg * bg + bh * bh;
            },
            'manhattanDistanceTo': function(bf) {
                return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']);
            },
            'setLength': function(bf) {
                return this['normalize']()['multiplyScalar'](bf);
            },
            'lerp': function(bf, bg) {
                return this['x'] += (bf['x'] - this['x']) * bg,
                this['y'] += (bf['y'] - this['y']) * bg,
                this;
            },
            'lerpVectors': function(bf, bg, bh) {
                return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
            },
            'equals': function(bf) {
                return bf['x'] === this['x'] && bf['y'] === this['y'];
            },
            'fromArray': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['x'] = bf[bg],
                this['y'] = bf[bg + 0x1],
                this;
            },
            'toArray': function(bf, bg) {
                return void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0),
                bf[bg] = this['x'],
                bf[bg + 0x1] = this['y'],
                bf;
            },
            'fromBufferAttribute': function(bf, bg, bh) {
                return void 0x0 !== bh && console['warn']('THREE.Vector2:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'),
                this['x'] = bf['getX'](bg),
                this['y'] = bf['getY'](bg),
                this;
            },
            'rotateAround': function(bf, bg) {
                var bh = Math['cos'](bg)
                  , bi = Math['sin'](bg)
                  , bF = this['x'] - bf['x']
                  , bG = this['y'] - bf['y'];
                return this['x'] = bF * bh - bG * bi + bf['x'],
                this['y'] = bF * bi + bG * bh + bf['y'],
                this;
            }
        }),
        Object['assign'](eF, {
            'slerp': function(bf, bg, bh, bi) {
                return bh['copy'](bf)['slerp'](bg, bi);
            },
            'slerpFlat': function(bf, bg, bh, bi, bF, bG, bH) {
                var bI = bh[bi + 0x0]
                  , bJ = bh[bi + 0x1]
                  , bK = bh[bi + 0x2]
                  , bL = bh[bi + 0x3]
                  , bM = bF[bG + 0x0]
                  , bN = bF[bG + 0x1]
                  , bO = bF[bG + 0x2]
                  , bP = bF[bG + 0x3];
                if (bL !== bP || bI !== bM || bJ !== bN || bK !== bO) {
                    var bQ = 0x1 - bH
                      , bR = bI * bM + bJ * bN + bK * bO + bL * bP
                      , bS = bR >= 0x0 ? 0x1 : -0x1
                      , bT = 0x1 - bR * bR;
                    if (bT > Number['EPSILON']) {
                        var bU = Math['sqrt'](bT)
                          , bV = Math['atan2'](bU, bR * bS);
                        bQ = Math['sin'](bQ * bV) / bU,
                        bH = Math['sin'](bH * bV) / bU;
                    }
                    var bW = bH * bS;
                    if (bI = bI * bQ + bM * bW,
                    bJ = bJ * bQ + bN * bW,
                    bK = bK * bQ + bO * bW,
                    bL = bL * bQ + bP * bW,
                    bQ === 0x1 - bH) {
                        var bX = 0x1 / Math['sqrt'](bI * bI + bJ * bJ + bK * bK + bL * bL);
                        bI *= bX,
                        bJ *= bX,
                        bK *= bX,
                        bL *= bX;
                    }
                }
                bf[bg] = bI,
                bf[bg + 0x1] = bJ,
                bf[bg + 0x2] = bK,
                bf[bg + 0x3] = bL;
            }
        }),
        Object['defineProperties'](eF['prototype'], {
            'x': {
                'get': function() {
                    return this['_x'];
                },
                'set': function(bf) {
                    this['_x'] = bf,
                    this['onChangeCallback']();
                }
            },
            'y': {
                'get': function() {
                    return this['_y'];
                },
                'set': function(bf) {
                    this['_y'] = bf,
                    this['onChangeCallback']();
                }
            },
            'z': {
                'get': function() {
                    return this['_z'];
                },
                'set': function(bf) {
                    this['_z'] = bf,
                    this['onChangeCallback']();
                }
            },
            'w': {
                'get': function() {
                    return this['_w'];
                },
                'set': function(bf) {
                    this['_w'] = bf,
                    this['onChangeCallback']();
                }
            }
        }),
        Object['assign'](eF['prototype'], {
            'isQuaternion': !0x0,
            'set': function(bf, bg, bh, bi) {
                return this['_x'] = bf,
                this['_y'] = bg,
                this['_z'] = bh,
                this['_w'] = bi,
                this['onChangeCallback'](),
                this;
            },
            'clone': function() {
                return new this['constructor'](this['_x'],this['_y'],this['_z'],this['_w']);
            },
            'copy': function(bf) {
                return this['_x'] = bf['x'],
                this['_y'] = bf['y'],
                this['_z'] = bf['z'],
                this['_w'] = bf['w'],
                this['onChangeCallback'](),
                this;
            },
            'setFromEuler': function(bf, bg) {
                if (!bf || !bf['isEuler'])
                    throw new Error('THREE.Quaternion:\x20.setFromEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
                var bh = bf['_x']
                  , bi = bf['_y']
                  , bF = bf['_z']
                  , bG = bf['order']
                  , bH = Math['cos']
                  , bI = Math['sin']
                  , bJ = bH(bh / 0x2)
                  , bK = bH(bi / 0x2)
                  , bL = bH(bF / 0x2)
                  , bM = bI(bh / 0x2)
                  , bN = bI(bi / 0x2)
                  , bO = bI(bF / 0x2);
                return 'XYZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO,
                this['_y'] = bJ * bN * bL - bM * bK * bO,
                this['_z'] = bJ * bK * bO + bM * bN * bL,
                this['_w'] = bJ * bK * bL - bM * bN * bO) : 'YXZ' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO,
                this['_y'] = bJ * bN * bL - bM * bK * bO,
                this['_z'] = bJ * bK * bO - bM * bN * bL,
                this['_w'] = bJ * bK * bL + bM * bN * bO) : 'ZXY' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO,
                this['_y'] = bJ * bN * bL + bM * bK * bO,
                this['_z'] = bJ * bK * bO + bM * bN * bL,
                this['_w'] = bJ * bK * bL - bM * bN * bO) : 'ZYX' === bG ? (this['_x'] = bM * bK * bL - bJ * bN * bO,
                this['_y'] = bJ * bN * bL + bM * bK * bO,
                this['_z'] = bJ * bK * bO - bM * bN * bL,
                this['_w'] = bJ * bK * bL + bM * bN * bO) : 'YZX' === bG ? (this['_x'] = bM * bK * bL + bJ * bN * bO,
                this['_y'] = bJ * bN * bL + bM * bK * bO,
                this['_z'] = bJ * bK * bO - bM * bN * bL,
                this['_w'] = bJ * bK * bL - bM * bN * bO) : 'XZY' === bG && (this['_x'] = bM * bK * bL - bJ * bN * bO,
                this['_y'] = bJ * bN * bL - bM * bK * bO,
                this['_z'] = bJ * bK * bO + bM * bN * bL,
                this['_w'] = bJ * bK * bL + bM * bN * bO),
                !0x1 !== bg && this['onChangeCallback'](),
                this;
            },
            'setFromAxisAngle': function(bf, bg) {
                var bh = bg / 0x2
                  , bi = Math['sin'](bh);
                return this['_x'] = bf['x'] * bi,
                this['_y'] = bf['y'] * bi,
                this['_z'] = bf['z'] * bi,
                this['_w'] = Math['cos'](bh),
                this['onChangeCallback'](),
                this;
            },
            'setFromRotationMatrix': function(bf) {
                var bg, bh = bf['elements'], bi = bh[0x0], bF = bh[0x4], bG = bh[0x8], bH = bh[0x1], bI = bh[0x5], bJ = bh[0x9], bK = bh[0x2], bL = bh[0x6], bM = bh[0xa], bN = bi + bI + bM;
                return bN > 0x0 ? (bg = 0.5 / Math['sqrt'](bN + 0x1),
                this['_w'] = 0.25 / bg,
                this['_x'] = (bL - bJ) * bg,
                this['_y'] = (bG - bK) * bg,
                this['_z'] = (bH - bF) * bg) : bi > bI && bi > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bi - bI - bM),
                this['_w'] = (bL - bJ) / bg,
                this['_x'] = 0.25 * bg,
                this['_y'] = (bF + bH) / bg,
                this['_z'] = (bG + bK) / bg) : bI > bM ? (bg = 0x2 * Math['sqrt'](0x1 + bI - bi - bM),
                this['_w'] = (bG - bK) / bg,
                this['_x'] = (bF + bH) / bg,
                this['_y'] = 0.25 * bg,
                this['_z'] = (bJ + bL) / bg) : (bg = 0x2 * Math['sqrt'](0x1 + bM - bi - bI),
                this['_w'] = (bH - bF) / bg,
                this['_x'] = (bG + bK) / bg,
                this['_y'] = (bJ + bL) / bg,
                this['_z'] = 0.25 * bg),
                this['onChangeCallback'](),
                this;
            },
            'setFromUnitVectors': function(bf, bg) {
                var bh = bf['dot'](bg) + 0x1;
                return bh < 0.000001 ? (bh = 0x0,
                Math['abs'](bf['x']) > Math['abs'](bf['z']) ? (this['_x'] = -bf['y'],
                this['_y'] = bf['x'],
                this['_z'] = 0x0,
                this['_w'] = bh) : (this['_x'] = 0x0,
                this['_y'] = -bf['z'],
                this['_z'] = bf['y'],
                this['_w'] = bh)) : (this['_x'] = bf['y'] * bg['z'] - bf['z'] * bg['y'],
                this['_y'] = bf['z'] * bg['x'] - bf['x'] * bg['z'],
                this['_z'] = bf['x'] * bg['y'] - bf['y'] * bg['x'],
                this['_w'] = bh),
                this['normalize']();
            },
            'angleTo': function(bf) {
                return 0x2 * Math['acos'](Math['abs'](e2['clamp'](this['dot'](bf), -0x1, 0x1)));
            },
            'rotateTowards': function(bf, bg) {
                var bh = this['angleTo'](bf);
                if (0x0 === bh)
                    return this;
                var bi = Math['min'](0x1, bg / bh);
                return this['slerp'](bf, bi),
                this;
            },
            'inverse': function() {
                return this['conjugate']();
            },
            'conjugate': function() {
                return this['_x'] *= -0x1,
                this['_y'] *= -0x1,
                this['_z'] *= -0x1,
                this['onChangeCallback'](),
                this;
            },
            'dot': function(bf) {
                return this['_x'] * bf['_x'] + this['_y'] * bf['_y'] + this['_z'] * bf['_z'] + this['_w'] * bf['_w'];
            },
            'lengthSq': function() {
                return this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w'];
            },
            'length': function() {
                return Math['sqrt'](this['_x'] * this['_x'] + this['_y'] * this['_y'] + this['_z'] * this['_z'] + this['_w'] * this['_w']);
            },
            'normalize': function() {
                var bf = this['length']();
                return 0x0 === bf ? (this['_x'] = 0x0,
                this['_y'] = 0x0,
                this['_z'] = 0x0,
                this['_w'] = 0x1) : (bf = 0x1 / bf,
                this['_x'] = this['_x'] * bf,
                this['_y'] = this['_y'] * bf,
                this['_z'] = this['_z'] * bf,
                this['_w'] = this['_w'] * bf),
                this['onChangeCallback'](),
                this;
            },
            'multiply': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Quaternion:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyQuaternions(\x20a,\x20b\x20)\x20instead.'),
                this['multiplyQuaternions'](bf, bg)) : this['multiplyQuaternions'](this, bf);
            },
            'premultiply': function(bf) {
                return this['multiplyQuaternions'](bf, this);
            },
            'multiplyQuaternions': function(bf, bg) {
                var bh = bf['_x']
                  , bi = bf['_y']
                  , bF = bf['_z']
                  , bG = bf['_w']
                  , bH = bg['_x']
                  , bI = bg['_y']
                  , bJ = bg['_z']
                  , bK = bg['_w'];
                return this['_x'] = bh * bK + bG * bH + bi * bJ - bF * bI,
                this['_y'] = bi * bK + bG * bI + bF * bH - bh * bJ,
                this['_z'] = bF * bK + bG * bJ + bh * bI - bi * bH,
                this['_w'] = bG * bK - bh * bH - bi * bI - bF * bJ,
                this['onChangeCallback'](),
                this;
            },
            'slerp': function(bf, bg) {
                if (0x0 === bg)
                    return this;
                if (0x1 === bg)
                    return this['copy'](bf);
                var bh = this['_x']
                  , bi = this['_y']
                  , bF = this['_z']
                  , bG = this['_w']
                  , bH = bG * bf['_w'] + bh * bf['_x'] + bi * bf['_y'] + bF * bf['_z'];
                if (bH < 0x0 ? (this['_w'] = -bf['_w'],
                this['_x'] = -bf['_x'],
                this['_y'] = -bf['_y'],
                this['_z'] = -bf['_z'],
                bH = -bH) : this['copy'](bf),
                bH >= 0x1)
                    return this['_w'] = bG,
                    this['_x'] = bh,
                    this['_y'] = bi,
                    this['_z'] = bF,
                    this;
                var bI = 0x1 - bH * bH;
                if (bI <= Number['EPSILON']) {
                    var bJ = 0x1 - bg;
                    return this['_w'] = bJ * bG + bg * this['_w'],
                    this['_x'] = bJ * bh + bg * this['_x'],
                    this['_y'] = bJ * bi + bg * this['_y'],
                    this['_z'] = bJ * bF + bg * this['_z'],
                    this['normalize']();
                }
                var bK = Math['sqrt'](bI)
                  , bL = Math['atan2'](bK, bH)
                  , bM = Math['sin']((0x1 - bg) * bL) / bK
                  , bN = Math['sin'](bg * bL) / bK;
                return this['_w'] = bG * bM + this['_w'] * bN,
                this['_x'] = bh * bM + this['_x'] * bN,
                this['_y'] = bi * bM + this['_y'] * bN,
                this['_z'] = bF * bM + this['_z'] * bN,
                this['onChangeCallback'](),
                this;
            },
            'equals': function(bf) {
                return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_w'] === this['_w'];
            },
            'fromArray': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['_x'] = bf[bg],
                this['_y'] = bf[bg + 0x1],
                this['_z'] = bf[bg + 0x2],
                this['_w'] = bf[bg + 0x3],
                this['onChangeCallback'](),
                this;
            },
            'toArray': function(bf, bg) {
                return void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0),
                bf[bg] = this['_x'],
                bf[bg + 0x1] = this['_y'],
                bf[bg + 0x2] = this['_z'],
                bf[bg + 0x3] = this['_w'],
                bf;
            },
            'onChange': function(bf) {
                return this['onChangeCallback'] = bf,
                this;
            },
            'onChangeCallback': function() {}
        }),
        Object['assign'](eK['prototype'], {
            'isVector3': !0x0,
            'set': function(bf, bg, bh) {
                return this['x'] = bf,
                this['y'] = bg,
                this['z'] = bh,
                this;
            },
            'setScalar': function(bf) {
                return this['x'] = bf,
                this['y'] = bf,
                this['z'] = bf,
                this;
            },
            'setX': function(bf) {
                return this['x'] = bf,
                this;
            },
            'setY': function(bf) {
                return this['y'] = bf,
                this;
            },
            'setZ': function(bf) {
                return this['z'] = bf,
                this;
            },
            'setComponent': function(bf, bg) {
                switch (bf) {
                case 0x0:
                    this['x'] = bg;
                    break;
                case 0x1:
                    this['y'] = bg;
                    break;
                case 0x2:
                    this['z'] = bg;
                    break;
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
                }
                return this;
            },
            'getComponent': function(bf) {
                switch (bf) {
                case 0x0:
                    return this['x'];
                case 0x1:
                    return this['y'];
                case 0x2:
                    return this['z'];
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
                }
            },
            'clone': function() {
                return new this['constructor'](this['x'],this['y'],this['z']);
            },
            'copy': function(bf) {
                return this['x'] = bf['x'],
                this['y'] = bf['y'],
                this['z'] = bf['z'],
                this;
            },
            'add': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'),
                this['addVectors'](bf, bg)) : (this['x'] += bf['x'],
                this['y'] += bf['y'],
                this['z'] += bf['z'],
                this);
            },
            'addScalar': function(bf) {
                return this['x'] += bf,
                this['y'] += bf,
                this['z'] += bf,
                this;
            },
            'addVectors': function(bf, bg) {
                return this['x'] = bf['x'] + bg['x'],
                this['y'] = bf['y'] + bg['y'],
                this['z'] = bf['z'] + bg['z'],
                this;
            },
            'addScaledVector': function(bf, bg) {
                return this['x'] += bf['x'] * bg,
                this['y'] += bf['y'] * bg,
                this['z'] += bf['z'] * bg,
                this;
            },
            'sub': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'),
                this['subVectors'](bf, bg)) : (this['x'] -= bf['x'],
                this['y'] -= bf['y'],
                this['z'] -= bf['z'],
                this);
            },
            'subScalar': function(bf) {
                return this['x'] -= bf,
                this['y'] -= bf,
                this['z'] -= bf,
                this;
            },
            'subVectors': function(bf, bg) {
                return this['x'] = bf['x'] - bg['x'],
                this['y'] = bf['y'] - bg['y'],
                this['z'] = bf['z'] - bg['z'],
                this;
            },
            'multiply': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyVectors(\x20a,\x20b\x20)\x20instead.'),
                this['multiplyVectors'](bf, bg)) : (this['x'] *= bf['x'],
                this['y'] *= bf['y'],
                this['z'] *= bf['z'],
                this);
            },
            'multiplyScalar': function(bf) {
                return this['x'] *= bf,
                this['y'] *= bf,
                this['z'] *= bf,
                this;
            },
            'multiplyVectors': function(bf, bg) {
                return this['x'] = bf['x'] * bg['x'],
                this['y'] = bf['y'] * bg['y'],
                this['z'] = bf['z'] * bg['z'],
                this;
            },
            'applyEuler': (bG = new eF(),
            function(bf) {
                return bf && bf['isEuler'] || console['error']('THREE.Vector3:\x20.applyEuler()\x20now\x20expects\x20an\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.'),
                this['applyQuaternion'](bG['setFromEuler'](bf));
            }
            ),
            'applyAxisAngle': function() {
                var bf = new eF();
                return function(bg, bh) {
                    return this['applyQuaternion'](bf['setFromAxisAngle'](bg, bh));
                }
                ;
            }(),
            'applyMatrix3': function(bf) {
                var bg = this['x']
                  , bh = this['y']
                  , bi = this['z']
                  , bF = bf['elements'];
                return this['x'] = bF[0x0] * bg + bF[0x3] * bh + bF[0x6] * bi,
                this['y'] = bF[0x1] * bg + bF[0x4] * bh + bF[0x7] * bi,
                this['z'] = bF[0x2] * bg + bF[0x5] * bh + bF[0x8] * bi,
                this;
            },
            'applyMatrix4': function(bf) {
                var bg = this['x']
                  , bh = this['y']
                  , bi = this['z']
                  , bF = bf['elements']
                  , bG = 0x1 / (bF[0x3] * bg + bF[0x7] * bh + bF[0xb] * bi + bF[0xf]);
                return this['x'] = (bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi + bF[0xc]) * bG,
                this['y'] = (bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi + bF[0xd]) * bG,
                this['z'] = (bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi + bF[0xe]) * bG,
                this;
            },
            'applyQuaternion': function(bf) {
                var bg = this['x']
                  , bh = this['y']
                  , bi = this['z']
                  , bF = bf['x']
                  , bG = bf['y']
                  , bH = bf['z']
                  , bI = bf['w']
                  , bJ = bI * bg + bG * bi - bH * bh
                  , bK = bI * bh + bH * bg - bF * bi
                  , bL = bI * bi + bF * bh - bG * bg
                  , bM = -bF * bg - bG * bh - bH * bi;
                return this['x'] = bJ * bI + bM * -bF + bK * -bH - bL * -bG,
                this['y'] = bK * bI + bM * -bG + bL * -bF - bJ * -bH,
                this['z'] = bL * bI + bM * -bH + bJ * -bG - bK * -bF,
                this;
            },
            'project': function(bf) {
                return this['applyMatrix4'](bf['matrixWorldInverse'])['applyMatrix4'](bf['projectionMatrix']);
            },
            'unproject': function(bf) {
                return this['applyMatrix4'](bf['projectionMatrixInverse'])['applyMatrix4'](bf['matrixWorld']);
            },
            'transformDirection': function(bf) {
                var bg = this['x']
                  , bh = this['y']
                  , bi = this['z']
                  , bF = bf['elements'];
                return this['x'] = bF[0x0] * bg + bF[0x4] * bh + bF[0x8] * bi,
                this['y'] = bF[0x1] * bg + bF[0x5] * bh + bF[0x9] * bi,
                this['z'] = bF[0x2] * bg + bF[0x6] * bh + bF[0xa] * bi,
                this['normalize']();
            },
            'divide': function(bf) {
                return this['x'] /= bf['x'],
                this['y'] /= bf['y'],
                this['z'] /= bf['z'],
                this;
            },
            'divideScalar': function(bf) {
                return this['multiplyScalar'](0x1 / bf);
            },
            'min': function(bf) {
                return this['x'] = Math['min'](this['x'], bf['x']),
                this['y'] = Math['min'](this['y'], bf['y']),
                this['z'] = Math['min'](this['z'], bf['z']),
                this;
            },
            'max': function(bf) {
                return this['x'] = Math['max'](this['x'], bf['x']),
                this['y'] = Math['max'](this['y'], bf['y']),
                this['z'] = Math['max'](this['z'], bf['z']),
                this;
            },
            'clamp': function(bf, bg) {
                return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])),
                this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])),
                this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])),
                this;
            },
            'clampScalar': function(bf, bg) {
                return this['x'] = Math['max'](bf, Math['min'](bg, this['x'])),
                this['y'] = Math['max'](bf, Math['min'](bg, this['y'])),
                this['z'] = Math['max'](bf, Math['min'](bg, this['z'])),
                this;
            },
            'clampLength': function(bf, bg) {
                var bh = this['length']();
                return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
            },
            'floor': function() {
                return this['x'] = Math['floor'](this['x']),
                this['y'] = Math['floor'](this['y']),
                this['z'] = Math['floor'](this['z']),
                this;
            },
            'ceil': function() {
                return this['x'] = Math['ceil'](this['x']),
                this['y'] = Math['ceil'](this['y']),
                this['z'] = Math['ceil'](this['z']),
                this;
            },
            'round': function() {
                return this['x'] = Math['round'](this['x']),
                this['y'] = Math['round'](this['y']),
                this['z'] = Math['round'](this['z']),
                this;
            },
            'roundToZero': function() {
                return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']),
                this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']),
                this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']),
                this;
            },
            'negate': function() {
                return this['x'] = -this['x'],
                this['y'] = -this['y'],
                this['z'] = -this['z'],
                this;
            },
            'dot': function(bf) {
                return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'];
            },
            'lengthSq': function() {
                return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'];
            },
            'length': function() {
                return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z']);
            },
            'manhattanLength': function() {
                return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']);
            },
            'normalize': function() {
                return this['divideScalar'](this['length']() || 0x1);
            },
            'setLength': function(bf) {
                return this['normalize']()['multiplyScalar'](bf);
            },
            'lerp': function(bf, bg) {
                return this['x'] += (bf['x'] - this['x']) * bg,
                this['y'] += (bf['y'] - this['y']) * bg,
                this['z'] += (bf['z'] - this['z']) * bg,
                this;
            },
            'lerpVectors': function(bf, bg, bh) {
                return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
            },
            'cross': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector3:\x20.cross()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.crossVectors(\x20a,\x20b\x20)\x20instead.'),
                this['crossVectors'](bf, bg)) : this['crossVectors'](this, bf);
            },
            'crossVectors': function(bf, bg) {
                var bh = bf['x']
                  , bi = bf['y']
                  , bF = bf['z']
                  , bG = bg['x']
                  , bH = bg['y']
                  , bI = bg['z'];
                return this['x'] = bi * bI - bF * bH,
                this['y'] = bF * bG - bh * bI,
                this['z'] = bh * bH - bi * bG,
                this;
            },
            'projectOnVector': function(bf) {
                var bg = bf['dot'](this) / bf['lengthSq']();
                return this['copy'](bf)['multiplyScalar'](bg);
            },
            'projectOnPlane': (bF = new eK(),
            function(bf) {
                return bF['copy'](this)['projectOnVector'](bf),
                this['sub'](bF);
            }
            ),
            'reflect': function() {
                var bf = new eK();
                return function(bg) {
                    return this['sub'](bf['copy'](bg)['multiplyScalar'](0x2 * this['dot'](bg)));
                }
                ;
            }(),
            'angleTo': function(bf) {
                var bg = this['dot'](bf) / Math['sqrt'](this['lengthSq']() * bf['lengthSq']());
                return Math['acos'](e2['clamp'](bg, -0x1, 0x1));
            },
            'distanceTo': function(bf) {
                return Math['sqrt'](this['distanceToSquared'](bf));
            },
            'distanceToSquared': function(bf) {
                var bg = this['x'] - bf['x']
                  , bh = this['y'] - bf['y']
                  , bi = this['z'] - bf['z'];
                return bg * bg + bh * bh + bi * bi;
            },
            'manhattanDistanceTo': function(bf) {
                return Math['abs'](this['x'] - bf['x']) + Math['abs'](this['y'] - bf['y']) + Math['abs'](this['z'] - bf['z']);
            },
            'setFromSpherical': function(bf) {
                return this['setFromSphericalCoords'](bf['radius'], bf['phi'], bf['theta']);
            },
            'setFromSphericalCoords': function(bf, bg, bh) {
                var bi = Math['sin'](bg) * bf;
                return this['x'] = bi * Math['sin'](bh),
                this['y'] = Math['cos'](bg) * bf,
                this['z'] = bi * Math['cos'](bh),
                this;
            },
            'setFromCylindrical': function(bf) {
                return this['setFromCylindricalCoords'](bf['radius'], bf['theta'], bf['y']);
            },
            'setFromCylindricalCoords': function(bf, bg, bh) {
                return this['x'] = bf * Math['sin'](bg),
                this['y'] = bh,
                this['z'] = bf * Math['cos'](bg),
                this;
            },
            'setFromMatrixPosition': function(bf) {
                var bg = bf['elements'];
                return this['x'] = bg[0xc],
                this['y'] = bg[0xd],
                this['z'] = bg[0xe],
                this;
            },
            'setFromMatrixScale': function(bf) {
                var bg = this['setFromMatrixColumn'](bf, 0x0)['length']()
                  , bh = this['setFromMatrixColumn'](bf, 0x1)['length']()
                  , bi = this['setFromMatrixColumn'](bf, 0x2)['length']();
                return this['x'] = bg,
                this['y'] = bh,
                this['z'] = bi,
                this;
            },
            'setFromMatrixColumn': function(bf, bg) {
                return this['fromArray'](bf['elements'], 0x4 * bg);
            },
            'equals': function(bf) {
                return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'];
            },
            'fromArray': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['x'] = bf[bg],
                this['y'] = bf[bg + 0x1],
                this['z'] = bf[bg + 0x2],
                this;
            },
            'toArray': function(bf, bg) {
                return void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0),
                bf[bg] = this['x'],
                bf[bg + 0x1] = this['y'],
                bf[bg + 0x2] = this['z'],
                bf;
            },
            'fromBufferAttribute': function(bf, bg, bh) {
                return void 0x0 !== bh && console['warn']('THREE.Vector3:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'),
                this['x'] = bf['getX'](bg),
                this['y'] = bf['getY'](bg),
                this['z'] = bf['getZ'](bg),
                this;
            }
        }),
        Object['assign'](eO['prototype'], {
            'isMatrix3': !0x0,
            'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
                var bK = this['elements'];
                return bK[0x0] = bf,
                bK[0x1] = bi,
                bK[0x2] = bH,
                bK[0x3] = bg,
                bK[0x4] = bF,
                bK[0x5] = bI,
                bK[0x6] = bh,
                bK[0x7] = bG,
                bK[0x8] = bJ,
                this;
            },
            'identity': function() {
                return this['set'](0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'clone': function() {
                return new this['constructor']()['fromArray'](this['elements']);
            },
            'copy': function(bf) {
                var bg = this['elements']
                  , bh = bf['elements'];
                return bg[0x0] = bh[0x0],
                bg[0x1] = bh[0x1],
                bg[0x2] = bh[0x2],
                bg[0x3] = bh[0x3],
                bg[0x4] = bh[0x4],
                bg[0x5] = bh[0x5],
                bg[0x6] = bh[0x6],
                bg[0x7] = bh[0x7],
                bg[0x8] = bh[0x8],
                this;
            },
            'setFromMatrix4': function(bf) {
                var bg = bf['elements'];
                return this['set'](bg[0x0], bg[0x4], bg[0x8], bg[0x1], bg[0x5], bg[0x9], bg[0x2], bg[0x6], bg[0xa]),
                this;
            },
            'applyToBufferAttribute': function() {
                var bf = new eK();
                return function(bg) {
                    for (var bh = 0x0, bi = bg['count']; bh < bi; bh++)
                        bf['x'] = bg['getX'](bh),
                        bf['y'] = bg['getY'](bh),
                        bf['z'] = bg['getZ'](bh),
                        bf['applyMatrix3'](this),
                        bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                    return bg;
                }
                ;
            }(),
            'multiply': function(bf) {
                return this['multiplyMatrices'](this, bf);
            },
            'premultiply': function(bf) {
                return this['multiplyMatrices'](bf, this);
            },
            'multiplyMatrices': function(bf, bg) {
                var bh = bf['elements']
                  , bi = bg['elements']
                  , bF = this['elements']
                  , bG = bh[0x0]
                  , bH = bh[0x3]
                  , bI = bh[0x6]
                  , bJ = bh[0x1]
                  , bK = bh[0x4]
                  , bL = bh[0x7]
                  , bM = bh[0x2]
                  , bN = bh[0x5]
                  , bO = bh[0x8]
                  , bP = bi[0x0]
                  , bQ = bi[0x3]
                  , bR = bi[0x6]
                  , bS = bi[0x1]
                  , bT = bi[0x4]
                  , bU = bi[0x7]
                  , bV = bi[0x2]
                  , bW = bi[0x5]
                  , bX = bi[0x8];
                return bF[0x0] = bG * bP + bH * bS + bI * bV,
                bF[0x3] = bG * bQ + bH * bT + bI * bW,
                bF[0x6] = bG * bR + bH * bU + bI * bX,
                bF[0x1] = bJ * bP + bK * bS + bL * bV,
                bF[0x4] = bJ * bQ + bK * bT + bL * bW,
                bF[0x7] = bJ * bR + bK * bU + bL * bX,
                bF[0x2] = bM * bP + bN * bS + bO * bV,
                bF[0x5] = bM * bQ + bN * bT + bO * bW,
                bF[0x8] = bM * bR + bN * bU + bO * bX,
                this;
            },
            'multiplyScalar': function(bf) {
                var bg = this['elements'];
                return bg[0x0] *= bf,
                bg[0x3] *= bf,
                bg[0x6] *= bf,
                bg[0x1] *= bf,
                bg[0x4] *= bf,
                bg[0x7] *= bf,
                bg[0x2] *= bf,
                bg[0x5] *= bf,
                bg[0x8] *= bf,
                this;
            },
            'determinant': function() {
                var bf = this['elements']
                  , bg = bf[0x0]
                  , bh = bf[0x1]
                  , bi = bf[0x2]
                  , bF = bf[0x3]
                  , bG = bf[0x4]
                  , bH = bf[0x5]
                  , bI = bf[0x6]
                  , bJ = bf[0x7]
                  , bK = bf[0x8];
                return bg * bG * bK - bg * bH * bJ - bh * bF * bK + bh * bH * bI + bi * bF * bJ - bi * bG * bI;
            },
            'getInverse': function(bf, bg) {
                bf && bf['isMatrix4'] && console['error']('THREE.Matrix3:\x20.getInverse()\x20no\x20longer\x20takes\x20a\x20Matrix4\x20argument.');
                var bh = bf['elements']
                  , bi = this['elements']
                  , bF = bh[0x0]
                  , bG = bh[0x1]
                  , bH = bh[0x2]
                  , bI = bh[0x3]
                  , bJ = bh[0x4]
                  , bK = bh[0x5]
                  , bL = bh[0x6]
                  , bM = bh[0x7]
                  , bN = bh[0x8]
                  , bO = bN * bJ - bK * bM
                  , bP = bK * bL - bN * bI
                  , bQ = bM * bI - bJ * bL
                  , bR = bF * bO + bG * bP + bH * bQ;
                if (0x0 === bR) {
                    var bS = 'THREE.Matrix3:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
                    if (!0x0 === bg)
                        throw new Error(bS);
                    return console['warn'](bS),
                    this['identity']();
                }
                var bT = 0x1 / bR;
                return bi[0x0] = bO * bT,
                bi[0x1] = (bH * bM - bN * bG) * bT,
                bi[0x2] = (bK * bG - bH * bJ) * bT,
                bi[0x3] = bP * bT,
                bi[0x4] = (bN * bF - bH * bL) * bT,
                bi[0x5] = (bH * bI - bK * bF) * bT,
                bi[0x6] = bQ * bT,
                bi[0x7] = (bG * bL - bM * bF) * bT,
                bi[0x8] = (bJ * bF - bG * bI) * bT,
                this;
            },
            'transpose': function() {
                var bf, bg = this['elements'];
                return bf = bg[0x1],
                bg[0x1] = bg[0x3],
                bg[0x3] = bf,
                bf = bg[0x2],
                bg[0x2] = bg[0x6],
                bg[0x6] = bf,
                bf = bg[0x5],
                bg[0x5] = bg[0x7],
                bg[0x7] = bf,
                this;
            },
            'getNormalMatrix': function(bf) {
                return this['setFromMatrix4'](bf)['getInverse'](this)['transpose']();
            },
            'transposeIntoArray': function(bf) {
                var bg = this['elements'];
                return bf[0x0] = bg[0x0],
                bf[0x1] = bg[0x3],
                bf[0x2] = bg[0x6],
                bf[0x3] = bg[0x1],
                bf[0x4] = bg[0x4],
                bf[0x5] = bg[0x7],
                bf[0x6] = bg[0x2],
                bf[0x7] = bg[0x5],
                bf[0x8] = bg[0x8],
                this;
            },
            'setUvTransform': function(bf, bg, bh, bi, bF, bG, bH) {
                var bI = Math['cos'](bF)
                  , bJ = Math['sin'](bF);
                this['set'](bh * bI, bh * bJ, -bh * (bI * bG + bJ * bH) + bG + bf, -bi * bJ, bi * bI, -bi * (-bJ * bG + bI * bH) + bH + bg, 0x0, 0x0, 0x1);
            },
            'scale': function(bf, bg) {
                var bh = this['elements'];
                return bh[0x0] *= bf,
                bh[0x3] *= bf,
                bh[0x6] *= bf,
                bh[0x1] *= bg,
                bh[0x4] *= bg,
                bh[0x7] *= bg,
                this;
            },
            'rotate': function(bf) {
                var bg = Math['cos'](bf)
                  , bh = Math['sin'](bf)
                  , bi = this['elements']
                  , bF = bi[0x0]
                  , bG = bi[0x3]
                  , bH = bi[0x6]
                  , bI = bi[0x1]
                  , bJ = bi[0x4]
                  , bK = bi[0x7];
                return bi[0x0] = bg * bF + bh * bI,
                bi[0x3] = bg * bG + bh * bJ,
                bi[0x6] = bg * bH + bh * bK,
                bi[0x1] = -bh * bF + bg * bI,
                bi[0x4] = -bh * bG + bg * bJ,
                bi[0x7] = -bh * bH + bg * bK,
                this;
            },
            'translate': function(bf, bg) {
                var bh = this['elements'];
                return bh[0x0] += bf * bh[0x2],
                bh[0x3] += bf * bh[0x5],
                bh[0x6] += bf * bh[0x8],
                bh[0x1] += bg * bh[0x2],
                bh[0x4] += bg * bh[0x5],
                bh[0x7] += bg * bh[0x8],
                this;
            },
            'equals': function(bf) {
                for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x9; bi++)
                    if (bg[bi] !== bh[bi])
                        return !0x1;
                return !0x0;
            },
            'fromArray': function(bf, bg) {
                void 0x0 === bg && (bg = 0x0);
                for (var bh = 0x0; bh < 0x9; bh++)
                    this['elements'][bh] = bf[bh + bg];
                return this;
            },
            'toArray': function(bf, bg) {
                void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0);
                var bh = this['elements'];
                return bf[bg] = bh[0x0],
                bf[bg + 0x1] = bh[0x1],
                bf[bg + 0x2] = bh[0x2],
                bf[bg + 0x3] = bh[0x3],
                bf[bg + 0x4] = bh[0x4],
                bf[bg + 0x5] = bh[0x5],
                bf[bg + 0x6] = bh[0x6],
                bf[bg + 0x7] = bh[0x7],
                bf[bg + 0x8] = bh[0x8],
                bf;
            }
        });
        var lD, lE, lF, lG, lH, lI, lJ, lK, lL, lM, lN, lO, lP, lQ, lR = {
            'getDataURL': function(bf) {
                var bg;
                if ('undefined' == typeof HTMLCanvasElement)
                    return bf['src'];
                if (bf instanceof HTMLCanvasElement)
                    bg = bf;
                else {
                    void 0x0 === bH && (bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas')),
                    bH['width'] = bf['width'],
                    bH['height'] = bf['height'];
                    var bh = bH['getContext']('2d');
                    bf instanceof ImageData ? bh['putImageData'](bf, 0x0, 0x0) : bh['drawImage'](bf, 0x0, 0x0, bf['width'], bf['height']),
                    bg = bH;
                }
                return bg['width'] > 0x800 || bg['height'] > 0x800 ? bg['toDataURL']('image/jpeg', 0.6) : bg['toDataURL']('image/png');
            }
        }, lS = 0x0;
        function lW(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
            Object['defineProperty'](this, 'id', {
                'value': lS++
            }),
            this['uuid'] = e2['generateUUID'](),
            this['name'] = '',
            this['image'] = void 0x0 !== bf ? bf : lW['DEFAULT_IMAGE'],
            this['mipmaps'] = [],
            this['mapping'] = void 0x0 !== bg ? bg : lW['DEFAULT_MAPPING'],
            this['wrapS'] = void 0x0 !== bh ? bh : cN,
            this['wrapT'] = void 0x0 !== bi ? bi : cN,
            this['magFilter'] = void 0x0 !== bF ? bF : cS,
            this['minFilter'] = void 0x0 !== bG ? bG : cU,
            this['anisotropy'] = void 0x0 !== bJ ? bJ : 0x1,
            this['format'] = void 0x0 !== bH ? bH : d9,
            this['type'] = void 0x0 !== bI ? bI : cV,
            this['offset'] = new eC(0x0,0x0),
            this['repeat'] = new eC(0x1,0x1),
            this['center'] = new eC(0x0,0x0),
            this['rotation'] = 0x0,
            this['matrixAutoUpdate'] = !0x0,
            this['matrix'] = new eO(),
            this['generateMipmaps'] = !0x0,
            this['premultiplyAlpha'] = !0x1,
            this['flipY'] = !0x0,
            this['unpackAlignment'] = 0x4,
            this['encoding'] = void 0x0 !== bK ? bK : dQ,
            this['version'] = 0x0,
            this['onUpdate'] = null;
        }
        function m7(bf, bg, bh, bi) {
            this['x'] = bf || 0x0,
            this['y'] = bg || 0x0,
            this['z'] = bh || 0x0,
            this['w'] = void 0x0 !== bi ? bi : 0x1;
        }
        function mc(bf, bg, bh) {
            this['width'] = bf,
            this['height'] = bg,
            this['scissor'] = new m7(0x0,0x0,bf,bg),
            this['scissorTest'] = !0x1,
            this['viewport'] = new m7(0x0,0x0,bf,bg),
            bh = bh || {},
            this['texture'] = new lW(void 0x0,void 0x0,bh['wrapS'],bh['wrapT'],bh['magFilter'],bh['minFilter'],bh['format'],bh['type'],bh['anisotropy'],bh['encoding']),
            this['texture']['generateMipmaps'] = void 0x0 !== bh['generateMipmaps'] && bh['generateMipmaps'],
            this['texture']['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cS,
            this['depthBuffer'] = void 0x0 === bh['depthBuffer'] || bh['depthBuffer'],
            this['stencilBuffer'] = void 0x0 === bh['stencilBuffer'] || bh['stencilBuffer'],
            this['depthTexture'] = void 0x0 !== bh['depthTexture'] ? bh['depthTexture'] : null;
        }
        function mg(bf, bg, bh) {
            mc['call'](this, bf, bg, bh),
            this['samples'] = 0x4;
        }
        function mk(bf, bg, bh) {
            mc['call'](this, bf, bg, bh);
        }
        function mo(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
            lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM),
            this['image'] = {
                'data': bf,
                'width': bg,
                'height': bh
            },
            this['magFilter'] = void 0x0 !== bJ ? bJ : cP,
            this['minFilter'] = void 0x0 !== bK ? bK : cP,
            this['generateMipmaps'] = !0x1,
            this['flipY'] = !0x1,
            this['unpackAlignment'] = 0x1;
        }
        function mB(bf, bg) {
            this['min'] = void 0x0 !== bf ? bf : new eK(0x1 / 0x0,0x1 / 0x0,0x1 / 0x0),
            this['max'] = void 0x0 !== bg ? bg : new eK(-0x1 / 0x0,-0x1 / 0x0,-0x1 / 0x0);
        }
        function mE(bf, bg) {
            this['center'] = void 0x0 !== bf ? bf : new eK(),
            this['radius'] = void 0x0 !== bg ? bg : 0x0;
        }
        function mH(bf, bg) {
            this['normal'] = void 0x0 !== bf ? bf : new eK(0x1,0x0,0x0),
            this['constant'] = void 0x0 !== bg ? bg : 0x0;
        }
        function mK(bf, bg, bh, bi, bF, bG) {
            this['planes'] = [void 0x0 !== bf ? bf : new mH(), void 0x0 !== bg ? bg : new mH(), void 0x0 !== bh ? bh : new mH(), void 0x0 !== bi ? bi : new mH(), void 0x0 !== bF ? bF : new mH(), void 0x0 !== bG ? bG : new mH()];
        }
        function mR() {
            this['elements'] = [0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1],
            arguments['length'] > 0x0 && console['error']('THREE.Matrix4:\x20the\x20constructor\x20no\x20longer\x20reads\x20arguments.\x20use\x20.set()\x20instead.');
        }
        lW['DEFAULT_IMAGE'] = void 0x0,
        lW['DEFAULT_MAPPING'] = cE,
        lW['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': lW,
            'isTexture': !0x0,
            'updateMatrix': function() {
                this['matrix']['setUvTransform'](this['offset']['x'], this['offset']['y'], this['repeat']['x'], this['repeat']['y'], this['rotation'], this['center']['x'], this['center']['y']);
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['name'] = bf['name'],
                this['image'] = bf['image'],
                this['mipmaps'] = bf['mipmaps']['slice'](0x0),
                this['mapping'] = bf['mapping'],
                this['wrapS'] = bf['wrapS'],
                this['wrapT'] = bf['wrapT'],
                this['magFilter'] = bf['magFilter'],
                this['minFilter'] = bf['minFilter'],
                this['anisotropy'] = bf['anisotropy'],
                this['format'] = bf['format'],
                this['type'] = bf['type'],
                this['offset']['copy'](bf['offset']),
                this['repeat']['copy'](bf['repeat']),
                this['center']['copy'](bf['center']),
                this['rotation'] = bf['rotation'],
                this['matrixAutoUpdate'] = bf['matrixAutoUpdate'],
                this['matrix']['copy'](bf['matrix']),
                this['generateMipmaps'] = bf['generateMipmaps'],
                this['premultiplyAlpha'] = bf['premultiplyAlpha'],
                this['flipY'] = bf['flipY'],
                this['unpackAlignment'] = bf['unpackAlignment'],
                this['encoding'] = bf['encoding'],
                this;
            },
            'toJSON': function(bf) {
                var bg = void 0x0 === bf || 'string' == typeof bf;
                if (!bg && void 0x0 !== bf['textures'][this['uuid']])
                    return bf['textures'][this['uuid']];
                var bh = {
                    'metadata': {
                        'version': 4.5,
                        'type': 'Texture',
                        'generator': 'Texture.toJSON'
                    },
                    'uuid': this['uuid'],
                    'name': this['name'],
                    'mapping': this['mapping'],
                    'repeat': [this['repeat']['x'], this['repeat']['y']],
                    'offset': [this['offset']['x'], this['offset']['y']],
                    'center': [this['center']['x'], this['center']['y']],
                    'rotation': this['rotation'],
                    'wrap': [this['wrapS'], this['wrapT']],
                    'format': this['format'],
                    'type': this['type'],
                    'encoding': this['encoding'],
                    'minFilter': this['minFilter'],
                    'magFilter': this['magFilter'],
                    'anisotropy': this['anisotropy'],
                    'flipY': this['flipY'],
                    'premultiplyAlpha': this['premultiplyAlpha'],
                    'unpackAlignment': this['unpackAlignment']
                };
                if (void 0x0 !== this['image']) {
                    var bi = this['image'];
                    if (void 0x0 === bi['uuid'] && (bi['uuid'] = e2['generateUUID']()),
                    !bg && void 0x0 === bf['images'][bi['uuid']]) {
                        var bF;
                        if (Array['isArray'](bi)) {
                            bF = [];
                            for (var bG = 0x0, bH = bi['length']; bG < bH; bG++)
                                bF['push'](lR['getDataURL'](bi[bG]));
                        } else
                            bF = lR['getDataURL'](bi);
                        bf['images'][bi['uuid']] = {
                            'uuid': bi['uuid'],
                            'url': bF
                        };
                    }
                    bh['image'] = bi['uuid'];
                }
                return bg || (bf['textures'][this['uuid']] = bh),
                bh;
            },
            'dispose': function() {
                this['dispatchEvent']({
                    'type': 'dispose'
                });
            },
            'transformUv': function(bf) {
                if (this['mapping'] !== cE)
                    return bf;
                if (bf['applyMatrix3'](this['matrix']),
                bf['x'] < 0x0 || bf['x'] > 0x1)
                    switch (this['wrapS']) {
                    case cM:
                        bf['x'] = bf['x'] - Math['floor'](bf['x']);
                        break;
                    case cN:
                        bf['x'] = bf['x'] < 0x0 ? 0x0 : 0x1;
                        break;
                    case cO:
                        0x1 === Math['abs'](Math['floor'](bf['x']) % 0x2) ? bf['x'] = Math['ceil'](bf['x']) - bf['x'] : bf['x'] = bf['x'] - Math['floor'](bf['x']);
                    }
                if (bf['y'] < 0x0 || bf['y'] > 0x1)
                    switch (this['wrapT']) {
                    case cM:
                        bf['y'] = bf['y'] - Math['floor'](bf['y']);
                        break;
                    case cN:
                        bf['y'] = bf['y'] < 0x0 ? 0x0 : 0x1;
                        break;
                    case cO:
                        0x1 === Math['abs'](Math['floor'](bf['y']) % 0x2) ? bf['y'] = Math['ceil'](bf['y']) - bf['y'] : bf['y'] = bf['y'] - Math['floor'](bf['y']);
                    }
                return this['flipY'] && (bf['y'] = 0x1 - bf['y']),
                bf;
            }
        }),
        Object['defineProperty'](lW['prototype'], 'needsUpdate', {
            'set': function(bf) {
                !0x0 === bf && this['version']++;
            }
        }),
        Object['assign'](m7['prototype'], {
            'isVector4': !0x0,
            'set': function(bf, bg, bh, bi) {
                return this['x'] = bf,
                this['y'] = bg,
                this['z'] = bh,
                this['w'] = bi,
                this;
            },
            'setScalar': function(bf) {
                return this['x'] = bf,
                this['y'] = bf,
                this['z'] = bf,
                this['w'] = bf,
                this;
            },
            'setX': function(bf) {
                return this['x'] = bf,
                this;
            },
            'setY': function(bf) {
                return this['y'] = bf,
                this;
            },
            'setZ': function(bf) {
                return this['z'] = bf,
                this;
            },
            'setW': function(bf) {
                return this['w'] = bf,
                this;
            },
            'setComponent': function(bf, bg) {
                switch (bf) {
                case 0x0:
                    this['x'] = bg;
                    break;
                case 0x1:
                    this['y'] = bg;
                    break;
                case 0x2:
                    this['z'] = bg;
                    break;
                case 0x3:
                    this['w'] = bg;
                    break;
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
                }
                return this;
            },
            'getComponent': function(bf) {
                switch (bf) {
                case 0x0:
                    return this['x'];
                case 0x1:
                    return this['y'];
                case 0x2:
                    return this['z'];
                case 0x3:
                    return this['w'];
                default:
                    throw new Error('index\x20is\x20out\x20of\x20range:\x20' + bf);
                }
            },
            'clone': function() {
                return new this['constructor'](this['x'],this['y'],this['z'],this['w']);
            },
            'copy': function(bf) {
                return this['x'] = bf['x'],
                this['y'] = bf['y'],
                this['z'] = bf['z'],
                this['w'] = void 0x0 !== bf['w'] ? bf['w'] : 0x1,
                this;
            },
            'add': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.add()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.addVectors(\x20a,\x20b\x20)\x20instead.'),
                this['addVectors'](bf, bg)) : (this['x'] += bf['x'],
                this['y'] += bf['y'],
                this['z'] += bf['z'],
                this['w'] += bf['w'],
                this);
            },
            'addScalar': function(bf) {
                return this['x'] += bf,
                this['y'] += bf,
                this['z'] += bf,
                this['w'] += bf,
                this;
            },
            'addVectors': function(bf, bg) {
                return this['x'] = bf['x'] + bg['x'],
                this['y'] = bf['y'] + bg['y'],
                this['z'] = bf['z'] + bg['z'],
                this['w'] = bf['w'] + bg['w'],
                this;
            },
            'addScaledVector': function(bf, bg) {
                return this['x'] += bf['x'] * bg,
                this['y'] += bf['y'] * bg,
                this['z'] += bf['z'] * bg,
                this['w'] += bf['w'] * bg,
                this;
            },
            'sub': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Vector4:\x20.sub()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.subVectors(\x20a,\x20b\x20)\x20instead.'),
                this['subVectors'](bf, bg)) : (this['x'] -= bf['x'],
                this['y'] -= bf['y'],
                this['z'] -= bf['z'],
                this['w'] -= bf['w'],
                this);
            },
            'subScalar': function(bf) {
                return this['x'] -= bf,
                this['y'] -= bf,
                this['z'] -= bf,
                this['w'] -= bf,
                this;
            },
            'subVectors': function(bf, bg) {
                return this['x'] = bf['x'] - bg['x'],
                this['y'] = bf['y'] - bg['y'],
                this['z'] = bf['z'] - bg['z'],
                this['w'] = bf['w'] - bg['w'],
                this;
            },
            'multiplyScalar': function(bf) {
                return this['x'] *= bf,
                this['y'] *= bf,
                this['z'] *= bf,
                this['w'] *= bf,
                this;
            },
            'applyMatrix4': function(bf) {
                var bg = this['x']
                  , bh = this['y']
                  , bi = this['z']
                  , bF = this['w']
                  , bG = bf['elements'];
                return this['x'] = bG[0x0] * bg + bG[0x4] * bh + bG[0x8] * bi + bG[0xc] * bF,
                this['y'] = bG[0x1] * bg + bG[0x5] * bh + bG[0x9] * bi + bG[0xd] * bF,
                this['z'] = bG[0x2] * bg + bG[0x6] * bh + bG[0xa] * bi + bG[0xe] * bF,
                this['w'] = bG[0x3] * bg + bG[0x7] * bh + bG[0xb] * bi + bG[0xf] * bF,
                this;
            },
            'divideScalar': function(bf) {
                return this['multiplyScalar'](0x1 / bf);
            },
            'setAxisAngleFromQuaternion': function(bf) {
                this['w'] = 0x2 * Math['acos'](bf['w']);
                var bg = Math['sqrt'](0x1 - bf['w'] * bf['w']);
                return bg < 0.0001 ? (this['x'] = 0x1,
                this['y'] = 0x0,
                this['z'] = 0x0) : (this['x'] = bf['x'] / bg,
                this['y'] = bf['y'] / bg,
                this['z'] = bf['z'] / bg),
                this;
            },
            'setAxisAngleFromRotationMatrix': function(bf) {
                var bg, bh, bi, bF, bG = bf['elements'], bH = bG[0x0], bI = bG[0x4], bJ = bG[0x8], bK = bG[0x1], bL = bG[0x5], bM = bG[0x9], bN = bG[0x2], bO = bG[0x6], bP = bG[0xa];
                if (Math['abs'](bI - bK) < 0.01 && Math['abs'](bJ - bN) < 0.01 && Math['abs'](bM - bO) < 0.01) {
                    if (Math['abs'](bI + bK) < 0.1 && Math['abs'](bJ + bN) < 0.1 && Math['abs'](bM + bO) < 0.1 && Math['abs'](bH + bL + bP - 0x3) < 0.1)
                        return this['set'](0x1, 0x0, 0x0, 0x0),
                        this;
                    bg = Math['PI'];
                    var bQ = (bH + 0x1) / 0x2
                      , bR = (bL + 0x1) / 0x2
                      , bS = (bP + 0x1) / 0x2
                      , bT = (bI + bK) / 0x4
                      , bU = (bJ + bN) / 0x4
                      , bV = (bM + bO) / 0x4;
                    return bQ > bR && bQ > bS ? bQ < 0.01 ? (bh = 0x0,
                    bi = 0.707106781,
                    bF = 0.707106781) : (bi = bT / (bh = Math['sqrt'](bQ)),
                    bF = bU / bh) : bR > bS ? bR < 0.01 ? (bh = 0.707106781,
                    bi = 0x0,
                    bF = 0.707106781) : (bh = bT / (bi = Math['sqrt'](bR)),
                    bF = bV / bi) : bS < 0.01 ? (bh = 0.707106781,
                    bi = 0.707106781,
                    bF = 0x0) : (bh = bU / (bF = Math['sqrt'](bS)),
                    bi = bV / bF),
                    this['set'](bh, bi, bF, bg),
                    this;
                }
                var bW = Math['sqrt']((bO - bM) * (bO - bM) + (bJ - bN) * (bJ - bN) + (bK - bI) * (bK - bI));
                return Math['abs'](bW) < 0.001 && (bW = 0x1),
                this['x'] = (bO - bM) / bW,
                this['y'] = (bJ - bN) / bW,
                this['z'] = (bK - bI) / bW,
                this['w'] = Math['acos']((bH + bL + bP - 0x1) / 0x2),
                this;
            },
            'min': function(bf) {
                return this['x'] = Math['min'](this['x'], bf['x']),
                this['y'] = Math['min'](this['y'], bf['y']),
                this['z'] = Math['min'](this['z'], bf['z']),
                this['w'] = Math['min'](this['w'], bf['w']),
                this;
            },
            'max': function(bf) {
                return this['x'] = Math['max'](this['x'], bf['x']),
                this['y'] = Math['max'](this['y'], bf['y']),
                this['z'] = Math['max'](this['z'], bf['z']),
                this['w'] = Math['max'](this['w'], bf['w']),
                this;
            },
            'clamp': function(bf, bg) {
                return this['x'] = Math['max'](bf['x'], Math['min'](bg['x'], this['x'])),
                this['y'] = Math['max'](bf['y'], Math['min'](bg['y'], this['y'])),
                this['z'] = Math['max'](bf['z'], Math['min'](bg['z'], this['z'])),
                this['w'] = Math['max'](bf['w'], Math['min'](bg['w'], this['w'])),
                this;
            },
            'clampScalar': function(bf, bg) {
                return void 0x0 === lD && (lD = new m7(),
                lE = new m7()),
                lD['set'](bf, bf, bf, bf),
                lE['set'](bg, bg, bg, bg),
                this['clamp'](lD, lE);
            },
            'clampLength': function(bf, bg) {
                var bh = this['length']();
                return this['divideScalar'](bh || 0x1)['multiplyScalar'](Math['max'](bf, Math['min'](bg, bh)));
            },
            'floor': function() {
                return this['x'] = Math['floor'](this['x']),
                this['y'] = Math['floor'](this['y']),
                this['z'] = Math['floor'](this['z']),
                this['w'] = Math['floor'](this['w']),
                this;
            },
            'ceil': function() {
                return this['x'] = Math['ceil'](this['x']),
                this['y'] = Math['ceil'](this['y']),
                this['z'] = Math['ceil'](this['z']),
                this['w'] = Math['ceil'](this['w']),
                this;
            },
            'round': function() {
                return this['x'] = Math['round'](this['x']),
                this['y'] = Math['round'](this['y']),
                this['z'] = Math['round'](this['z']),
                this['w'] = Math['round'](this['w']),
                this;
            },
            'roundToZero': function() {
                return this['x'] = this['x'] < 0x0 ? Math['ceil'](this['x']) : Math['floor'](this['x']),
                this['y'] = this['y'] < 0x0 ? Math['ceil'](this['y']) : Math['floor'](this['y']),
                this['z'] = this['z'] < 0x0 ? Math['ceil'](this['z']) : Math['floor'](this['z']),
                this['w'] = this['w'] < 0x0 ? Math['ceil'](this['w']) : Math['floor'](this['w']),
                this;
            },
            'negate': function() {
                return this['x'] = -this['x'],
                this['y'] = -this['y'],
                this['z'] = -this['z'],
                this['w'] = -this['w'],
                this;
            },
            'dot': function(bf) {
                return this['x'] * bf['x'] + this['y'] * bf['y'] + this['z'] * bf['z'] + this['w'] * bf['w'];
            },
            'lengthSq': function() {
                return this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w'];
            },
            'length': function() {
                return Math['sqrt'](this['x'] * this['x'] + this['y'] * this['y'] + this['z'] * this['z'] + this['w'] * this['w']);
            },
            'manhattanLength': function() {
                return Math['abs'](this['x']) + Math['abs'](this['y']) + Math['abs'](this['z']) + Math['abs'](this['w']);
            },
            'normalize': function() {
                return this['divideScalar'](this['length']() || 0x1);
            },
            'setLength': function(bf) {
                return this['normalize']()['multiplyScalar'](bf);
            },
            'lerp': function(bf, bg) {
                return this['x'] += (bf['x'] - this['x']) * bg,
                this['y'] += (bf['y'] - this['y']) * bg,
                this['z'] += (bf['z'] - this['z']) * bg,
                this['w'] += (bf['w'] - this['w']) * bg,
                this;
            },
            'lerpVectors': function(bf, bg, bh) {
                return this['subVectors'](bg, bf)['multiplyScalar'](bh)['add'](bf);
            },
            'equals': function(bf) {
                return bf['x'] === this['x'] && bf['y'] === this['y'] && bf['z'] === this['z'] && bf['w'] === this['w'];
            },
            'fromArray': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['x'] = bf[bg],
                this['y'] = bf[bg + 0x1],
                this['z'] = bf[bg + 0x2],
                this['w'] = bf[bg + 0x3],
                this;
            },
            'toArray': function(bf, bg) {
                return void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0),
                bf[bg] = this['x'],
                bf[bg + 0x1] = this['y'],
                bf[bg + 0x2] = this['z'],
                bf[bg + 0x3] = this['w'],
                bf;
            },
            'fromBufferAttribute': function(bf, bg, bh) {
                return void 0x0 !== bh && console['warn']('THREE.Vector4:\x20offset\x20has\x20been\x20removed\x20from\x20.fromBufferAttribute().'),
                this['x'] = bf['getX'](bg),
                this['y'] = bf['getY'](bg),
                this['z'] = bf['getZ'](bg),
                this['w'] = bf['getW'](bg),
                this;
            }
        }),
        mc['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': mc,
            'isWebGLRenderTarget': !0x0,
            'setSize': function(bf, bg) {
                this['width'] === bf && this['height'] === bg || (this['width'] = bf,
                this['height'] = bg,
                this['dispose']()),
                this['viewport']['set'](0x0, 0x0, bf, bg),
                this['scissor']['set'](0x0, 0x0, bf, bg);
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['width'] = bf['width'],
                this['height'] = bf['height'],
                this['viewport']['copy'](bf['viewport']),
                this['texture'] = bf['texture']['clone'](),
                this['depthBuffer'] = bf['depthBuffer'],
                this['stencilBuffer'] = bf['stencilBuffer'],
                this['depthTexture'] = bf['depthTexture'],
                this;
            },
            'dispose': function() {
                this['dispatchEvent']({
                    'type': 'dispose'
                });
            }
        }),
        mg['prototype'] = Object['assign'](Object['create'](mc['prototype']), {
            'constructor': mg,
            'isWebGLMultisampleRenderTarget': !0x0,
            'copy': function(bf) {
                return mc['prototype']['copy']['call'](this, bf),
                this['samples'] = bf['samples'],
                this;
            }
        }),
        mk['prototype'] = Object['create'](mc['prototype']),
        mk['prototype']['constructor'] = mk,
        mk['prototype']['isWebGLRenderTargetCube'] = !0x0,
        mo['prototype'] = Object['create'](lW['prototype']),
        mo['prototype']['constructor'] = mo,
        mo['prototype']['isDataTexture'] = !0x0,
        Object['assign'](mB['prototype'], {
            'isBox3': !0x0,
            'set': function(bf, bg) {
                return this['min']['copy'](bf),
                this['max']['copy'](bg),
                this;
            },
            'setFromArray': function(bf) {
                for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['length']; bI < bJ; bI += 0x3) {
                    var bK = bf[bI]
                      , bL = bf[bI + 0x1]
                      , bM = bf[bI + 0x2];
                    bK < bg && (bg = bK),
                    bL < bh && (bh = bL),
                    bM < bi && (bi = bM),
                    bK > bF && (bF = bK),
                    bL > bG && (bG = bL),
                    bM > bH && (bH = bM);
                }
                return this['min']['set'](bg, bh, bi),
                this['max']['set'](bF, bG, bH),
                this;
            },
            'setFromBufferAttribute': function(bf) {
                for (var bg = 0x1 / 0x0, bh = 0x1 / 0x0, bi = 0x1 / 0x0, bF = -0x1 / 0x0, bG = -0x1 / 0x0, bH = -0x1 / 0x0, bI = 0x0, bJ = bf['count']; bI < bJ; bI++) {
                    var bK = bf['getX'](bI)
                      , bL = bf['getY'](bI)
                      , bM = bf['getZ'](bI);
                    bK < bg && (bg = bK),
                    bL < bh && (bh = bL),
                    bM < bi && (bi = bM),
                    bK > bF && (bF = bK),
                    bL > bG && (bG = bL),
                    bM > bH && (bH = bM);
                }
                return this['min']['set'](bg, bh, bi),
                this['max']['set'](bF, bG, bH),
                this;
            },
            'setFromPoints': function(bf) {
                this['makeEmpty']();
                for (var bg = 0x0, bh = bf['length']; bg < bh; bg++)
                    this['expandByPoint'](bf[bg]);
                return this;
            },
            'setFromCenterAndSize': function() {
                var bf = new eK();
                return function(bg, bh) {
                    var bi = bf['copy'](bh)['multiplyScalar'](0.5);
                    return this['min']['copy'](bg)['sub'](bi),
                    this['max']['copy'](bg)['add'](bi),
                    this;
                }
                ;
            }(),
            'setFromObject': function(bf) {
                return this['makeEmpty'](),
                this['expandByObject'](bf);
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['min']['copy'](bf['min']),
                this['max']['copy'](bf['max']),
                this;
            },
            'makeEmpty': function() {
                return this['min']['x'] = this['min']['y'] = this['min']['z'] = 0x1 / 0x0,
                this['max']['x'] = this['max']['y'] = this['max']['z'] = -0x1 / 0x0,
                this;
            },
            'isEmpty': function() {
                return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'] || this['max']['z'] < this['min']['z'];
            },
            'getCenter': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getCenter()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
            },
            'getSize': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Box3:\x20.getSize()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                this['isEmpty']() ? bf['set'](0x0, 0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
            },
            'expandByPoint': function(bf) {
                return this['min']['min'](bf),
                this['max']['max'](bf),
                this;
            },
            'expandByVector': function(bf) {
                return this['min']['sub'](bf),
                this['max']['add'](bf),
                this;
            },
            'expandByScalar': function(bf) {
                return this['min']['addScalar'](-bf),
                this['max']['addScalar'](bf),
                this;
            },
            'expandByObject': function() {
                var bf, bg, bh, bi = new eK();
                function bF(bF) {
                    var bG = bF['geometry'];
                    if (void 0x0 !== bG)
                        if (bG['isGeometry']) {
                            var bH = bG['vertices'];
                            for (bg = 0x0,
                            bh = bH['length']; bg < bh; bg++)
                                bi['copy'](bH[bg]),
                                bi['applyMatrix4'](bF['matrixWorld']),
                                bf['expandByPoint'](bi);
                        } else if (bG['isBufferGeometry']) {
                            var bI = bG['attributes']['position'];
                            if (void 0x0 !== bI)
                                for (bg = 0x0,
                                bh = bI['count']; bg < bh; bg++)
                                    bi['fromBufferAttribute'](bI, bg)['applyMatrix4'](bF['matrixWorld']),
                                    bf['expandByPoint'](bi);
                        }
                }
                return function(bg) {
                    return bf = this,
                    bg['updateMatrixWorld'](!0x0),
                    bg['traverse'](bF),
                    this;
                }
                ;
            }(),
            'containsPoint': function(bf) {
                return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y'] || bf['z'] < this['min']['z'] || bf['z'] > this['max']['z']);
            },
            'containsBox': function(bf) {
                return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'] && this['min']['z'] <= bf['min']['z'] && bf['max']['z'] <= this['max']['z'];
            },
            'getParameter': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.getParameter()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']), (bf['z'] - this['min']['z']) / (this['max']['z'] - this['min']['z']));
            },
            'intersectsBox': function(bf) {
                return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y'] || bf['max']['z'] < this['min']['z'] || bf['min']['z'] > this['max']['z']);
            },
            'intersectsSphere': (lG = new eK(),
            function(bf) {
                return this['clampPoint'](bf['center'], lG),
                lG['distanceToSquared'](bf['center']) <= bf['radius'] * bf['radius'];
            }
            ),
            'intersectsPlane': function(bf) {
                var bg, bh;
                return bf['normal']['x'] > 0x0 ? (bg = bf['normal']['x'] * this['min']['x'],
                bh = bf['normal']['x'] * this['max']['x']) : (bg = bf['normal']['x'] * this['max']['x'],
                bh = bf['normal']['x'] * this['min']['x']),
                bf['normal']['y'] > 0x0 ? (bg += bf['normal']['y'] * this['min']['y'],
                bh += bf['normal']['y'] * this['max']['y']) : (bg += bf['normal']['y'] * this['max']['y'],
                bh += bf['normal']['y'] * this['min']['y']),
                bf['normal']['z'] > 0x0 ? (bg += bf['normal']['z'] * this['min']['z'],
                bh += bf['normal']['z'] * this['max']['z']) : (bg += bf['normal']['z'] * this['max']['z'],
                bh += bf['normal']['z'] * this['min']['z']),
                bg <= -bf['constant'] && bh >= -bf['constant'];
            },
            'intersectsTriangle': function() {
                var bf = new eK()
                  , bg = new eK()
                  , bh = new eK()
                  , bi = new eK()
                  , bF = new eK()
                  , bG = new eK()
                  , bH = new eK()
                  , bI = new eK()
                  , bJ = new eK()
                  , bK = new eK();
                function bL(bi) {
                    var bF, bG;
                    for (bF = 0x0,
                    bG = bi['length'] - 0x3; bF <= bG; bF += 0x3) {
                        bH['fromArray'](bi, bF);
                        var bI = bJ['x'] * Math['abs'](bH['x']) + bJ['y'] * Math['abs'](bH['y']) + bJ['z'] * Math['abs'](bH['z'])
                          , bK = bf['dot'](bH)
                          , bL = bg['dot'](bH)
                          , bM = bh['dot'](bH);
                        if (Math['max'](-Math['max'](bK, bL, bM), Math['min'](bK, bL, bM)) > bI)
                            return !0x1;
                    }
                    return !0x0;
                }
                return function(bH) {
                    if (this['isEmpty']())
                        return !0x1;
                    this['getCenter'](bI),
                    bJ['subVectors'](this['max'], bI),
                    bf['subVectors'](bH['a'], bI),
                    bg['subVectors'](bH['b'], bI),
                    bh['subVectors'](bH['c'], bI),
                    bi['subVectors'](bg, bf),
                    bF['subVectors'](bh, bg),
                    bG['subVectors'](bf, bh);
                    var bM = [0x0, -bi['z'], bi['y'], 0x0, -bF['z'], bF['y'], 0x0, -bG['z'], bG['y'], bi['z'], 0x0, -bi['x'], bF['z'], 0x0, -bF['x'], bG['z'], 0x0, -bG['x'], -bi['y'], bi['x'], 0x0, -bF['y'], bF['x'], 0x0, -bG['y'], bG['x'], 0x0];
                    return !!bL(bM) && (!!bL(bM = [0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1]) && (bK['crossVectors'](bi, bF),
                    bL(bM = [bK['x'], bK['y'], bK['z']])));
                }
                ;
            }(),
            'clampPoint': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Box3:\x20.clampPoint()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                bg['copy'](bf)['clamp'](this['min'], this['max']);
            },
            'distanceToPoint': function() {
                var bf = new eK();
                return function(bg) {
                    return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
                }
                ;
            }(),
            'getBoundingSphere': function() {
                var bf = new eK();
                return function(bg) {
                    return void 0x0 === bg && console['error']('THREE.Box3:\x20.getBoundingSphere()\x20target\x20is\x20now\x20required'),
                    this['getCenter'](bg['center']),
                    bg['radius'] = 0.5 * this['getSize'](bf)['length'](),
                    bg;
                }
                ;
            }(),
            'intersect': function(bf) {
                return this['min']['max'](bf['min']),
                this['max']['min'](bf['max']),
                this['isEmpty']() && this['makeEmpty'](),
                this;
            },
            'union': function(bf) {
                return this['min']['min'](bf['min']),
                this['max']['max'](bf['max']),
                this;
            },
            'applyMatrix4': (lF = [new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK(), new eK()],
            function(bf) {
                return this['isEmpty']() ? this : (lF[0x0]['set'](this['min']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf),
                lF[0x1]['set'](this['min']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf),
                lF[0x2]['set'](this['min']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf),
                lF[0x3]['set'](this['min']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf),
                lF[0x4]['set'](this['max']['x'], this['min']['y'], this['min']['z'])['applyMatrix4'](bf),
                lF[0x5]['set'](this['max']['x'], this['min']['y'], this['max']['z'])['applyMatrix4'](bf),
                lF[0x6]['set'](this['max']['x'], this['max']['y'], this['min']['z'])['applyMatrix4'](bf),
                lF[0x7]['set'](this['max']['x'], this['max']['y'], this['max']['z'])['applyMatrix4'](bf),
                this['setFromPoints'](lF),
                this);
            }
            ),
            'translate': function(bf) {
                return this['min']['add'](bf),
                this['max']['add'](bf),
                this;
            },
            'equals': function(bf) {
                return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
            }
        }),
        Object['assign'](mE['prototype'], {
            'set': function(bf, bg) {
                return this['center']['copy'](bf),
                this['radius'] = bg,
                this;
            },
            'setFromPoints': (lH = new mB(),
            function(bf, bg) {
                var bh = this['center'];
                void 0x0 !== bg ? bh['copy'](bg) : lH['setFromPoints'](bf)['getCenter'](bh);
                for (var bi = 0x0, bF = 0x0, bG = bf['length']; bF < bG; bF++)
                    bi = Math['max'](bi, bh['distanceToSquared'](bf[bF]));
                return this['radius'] = Math['sqrt'](bi),
                this;
            }
            ),
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['center']['copy'](bf['center']),
                this['radius'] = bf['radius'],
                this;
            },
            'empty': function() {
                return this['radius'] <= 0x0;
            },
            'containsPoint': function(bf) {
                return bf['distanceToSquared'](this['center']) <= this['radius'] * this['radius'];
            },
            'distanceToPoint': function(bf) {
                return bf['distanceTo'](this['center']) - this['radius'];
            },
            'intersectsSphere': function(bf) {
                var bg = this['radius'] + bf['radius'];
                return bf['center']['distanceToSquared'](this['center']) <= bg * bg;
            },
            'intersectsBox': function(bf) {
                return bf['intersectsSphere'](this);
            },
            'intersectsPlane': function(bf) {
                return Math['abs'](bf['distanceToPoint'](this['center'])) <= this['radius'];
            },
            'clampPoint': function(bf, bg) {
                var bh = this['center']['distanceToSquared'](bf);
                return void 0x0 === bg && (console['warn']('THREE.Sphere:\x20.clampPoint()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                bg['copy'](bf),
                bh > this['radius'] * this['radius'] && (bg['sub'](this['center'])['normalize'](),
                bg['multiplyScalar'](this['radius'])['add'](this['center'])),
                bg;
            },
            'getBoundingBox': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Sphere:\x20.getBoundingBox()\x20target\x20is\x20now\x20required'),
                bf = new mB()),
                bf['set'](this['center'], this['center']),
                bf['expandByScalar'](this['radius']),
                bf;
            },
            'applyMatrix4': function(bf) {
                return this['center']['applyMatrix4'](bf),
                this['radius'] = this['radius'] * bf['getMaxScaleOnAxis'](),
                this;
            },
            'translate': function(bf) {
                return this['center']['add'](bf),
                this;
            },
            'equals': function(bf) {
                return bf['center']['equals'](this['center']) && bf['radius'] === this['radius'];
            }
        }),
        Object['assign'](mH['prototype'], {
            'set': function(bf, bg) {
                return this['normal']['copy'](bf),
                this['constant'] = bg,
                this;
            },
            'setComponents': function(bf, bg, bh, bi) {
                return this['normal']['set'](bf, bg, bh),
                this['constant'] = bi,
                this;
            },
            'setFromNormalAndCoplanarPoint': function(bf, bg) {
                return this['normal']['copy'](bf),
                this['constant'] = -bg['dot'](this['normal']),
                this;
            },
            'setFromCoplanarPoints': function() {
                var bf = new eK()
                  , bg = new eK();
                return function(bh, bi, bF) {
                    var bG = bf['subVectors'](bF, bi)['cross'](bg['subVectors'](bh, bi))['normalize']();
                    return this['setFromNormalAndCoplanarPoint'](bG, bh),
                    this;
                }
                ;
            }(),
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['normal']['copy'](bf['normal']),
                this['constant'] = bf['constant'],
                this;
            },
            'normalize': function() {
                var bf = 0x1 / this['normal']['length']();
                return this['normal']['multiplyScalar'](bf),
                this['constant'] *= bf,
                this;
            },
            'negate': function() {
                return this['constant'] *= -0x1,
                this['normal']['negate'](),
                this;
            },
            'distanceToPoint': function(bf) {
                return this['normal']['dot'](bf) + this['constant'];
            },
            'distanceToSphere': function(bf) {
                return this['distanceToPoint'](bf['center']) - bf['radius'];
            },
            'projectPoint': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Plane:\x20.projectPoint()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                bg['copy'](this['normal'])['multiplyScalar'](-this['distanceToPoint'](bf))['add'](bf);
            },
            'intersectLine': function() {
                var bf = new eK();
                return function(bg, bh) {
                    void 0x0 === bh && (console['warn']('THREE.Plane:\x20.intersectLine()\x20target\x20is\x20now\x20required'),
                    bh = new eK());
                    var bi = bg['delta'](bf)
                      , bF = this['normal']['dot'](bi);
                    if (0x0 === bF)
                        return 0x0 === this['distanceToPoint'](bg['start']) ? bh['copy'](bg['start']) : void 0x0;
                    var bG = -(bg['start']['dot'](this['normal']) + this['constant']) / bF;
                    return bG < 0x0 || bG > 0x1 ? void 0x0 : bh['copy'](bi)['multiplyScalar'](bG)['add'](bg['start']);
                }
                ;
            }(),
            'intersectsLine': function(bf) {
                var bg = this['distanceToPoint'](bf['start'])
                  , bh = this['distanceToPoint'](bf['end']);
                return bg < 0x0 && bh > 0x0 || bh < 0x0 && bg > 0x0;
            },
            'intersectsBox': function(bf) {
                return bf['intersectsPlane'](this);
            },
            'intersectsSphere': function(bf) {
                return bf['intersectsPlane'](this);
            },
            'coplanarPoint': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Plane:\x20.coplanarPoint()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                bf['copy'](this['normal'])['multiplyScalar'](-this['constant']);
            },
            'applyMatrix4': function() {
                var bf = new eK()
                  , bg = new eO();
                return function(bh, bi) {
                    var bF = bi || bg['getNormalMatrix'](bh)
                      , bG = this['coplanarPoint'](bf)['applyMatrix4'](bh)
                      , bH = this['normal']['applyMatrix3'](bF)['normalize']();
                    return this['constant'] = -bG['dot'](bH),
                    this;
                }
                ;
            }(),
            'translate': function(bf) {
                return this['constant'] -= bf['dot'](this['normal']),
                this;
            },
            'equals': function(bf) {
                return bf['normal']['equals'](this['normal']) && bf['constant'] === this['constant'];
            }
        }),
        Object['assign'](mK['prototype'], {
            'set': function(bf, bg, bh, bi, bF, bG) {
                var bH = this['planes'];
                return bH[0x0]['copy'](bf),
                bH[0x1]['copy'](bg),
                bH[0x2]['copy'](bh),
                bH[0x3]['copy'](bi),
                bH[0x4]['copy'](bF),
                bH[0x5]['copy'](bG),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++)
                    bg[bh]['copy'](bf['planes'][bh]);
                return this;
            },
            'setFromMatrix': function(bf) {
                var bg = this['planes']
                  , bh = bf['elements']
                  , bi = bh[0x0]
                  , bF = bh[0x1]
                  , bG = bh[0x2]
                  , bH = bh[0x3]
                  , bI = bh[0x4]
                  , bJ = bh[0x5]
                  , bK = bh[0x6]
                  , bL = bh[0x7]
                  , bM = bh[0x8]
                  , bN = bh[0x9]
                  , bO = bh[0xa]
                  , bP = bh[0xb]
                  , bQ = bh[0xc]
                  , bR = bh[0xd]
                  , bS = bh[0xe]
                  , bT = bh[0xf];
                return bg[0x0]['setComponents'](bH - bi, bL - bI, bP - bM, bT - bQ)['normalize'](),
                bg[0x1]['setComponents'](bH + bi, bL + bI, bP + bM, bT + bQ)['normalize'](),
                bg[0x2]['setComponents'](bH + bF, bL + bJ, bP + bN, bT + bR)['normalize'](),
                bg[0x3]['setComponents'](bH - bF, bL - bJ, bP - bN, bT - bR)['normalize'](),
                bg[0x4]['setComponents'](bH - bG, bL - bK, bP - bO, bT - bS)['normalize'](),
                bg[0x5]['setComponents'](bH + bG, bL + bK, bP + bO, bT + bS)['normalize'](),
                this;
            },
            'intersectsObject': (lJ = new mE(),
            function(bf) {
                var bg = bf['geometry'];
                return null === bg['boundingSphere'] && bg['computeBoundingSphere'](),
                lJ['copy'](bg['boundingSphere'])['applyMatrix4'](bf['matrixWorld']),
                this['intersectsSphere'](lJ);
            }
            ),
            'intersectsSprite': function() {
                var bf = new mE();
                return function(bg) {
                    return bf['center']['set'](0x0, 0x0, 0x0),
                    bf['radius'] = 0.7071067811865476,
                    bf['applyMatrix4'](bg['matrixWorld']),
                    this['intersectsSphere'](bf);
                }
                ;
            }(),
            'intersectsSphere': function(bf) {
                for (var bg = this['planes'], bh = bf['center'], bi = -bf['radius'], bF = 0x0; bF < 0x6; bF++) {
                    if (bg[bF]['distanceToPoint'](bh) < bi)
                        return !0x1;
                }
                return !0x0;
            },
            'intersectsBox': (lI = new eK(),
            function(bf) {
                for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++) {
                    var bi = bg[bh];
                    if (lI['x'] = bi['normal']['x'] > 0x0 ? bf['max']['x'] : bf['min']['x'],
                    lI['y'] = bi['normal']['y'] > 0x0 ? bf['max']['y'] : bf['min']['y'],
                    lI['z'] = bi['normal']['z'] > 0x0 ? bf['max']['z'] : bf['min']['z'],
                    bi['distanceToPoint'](lI) < 0x0)
                        return !0x1;
                }
                return !0x0;
            }
            ),
            'containsPoint': function(bf) {
                for (var bg = this['planes'], bh = 0x0; bh < 0x6; bh++)
                    if (bg[bh]['distanceToPoint'](bf) < 0x0)
                        return !0x1;
                return !0x0;
            }
        }),
        Object['assign'](mR['prototype'], {
            'isMatrix4': !0x0,
            'set': function(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM, bN, bO, bP, bQ) {
                var bR = this['elements'];
                return bR[0x0] = bf,
                bR[0x4] = bg,
                bR[0x8] = bh,
                bR[0xc] = bi,
                bR[0x1] = bF,
                bR[0x5] = bG,
                bR[0x9] = bH,
                bR[0xd] = bI,
                bR[0x2] = bJ,
                bR[0x6] = bK,
                bR[0xa] = bL,
                bR[0xe] = bM,
                bR[0x3] = bN,
                bR[0x7] = bO,
                bR[0xb] = bP,
                bR[0xf] = bQ,
                this;
            },
            'identity': function() {
                return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'clone': function() {
                return new mR()['fromArray'](this['elements']);
            },
            'copy': function(bf) {
                var bg = this['elements']
                  , bh = bf['elements'];
                return bg[0x0] = bh[0x0],
                bg[0x1] = bh[0x1],
                bg[0x2] = bh[0x2],
                bg[0x3] = bh[0x3],
                bg[0x4] = bh[0x4],
                bg[0x5] = bh[0x5],
                bg[0x6] = bh[0x6],
                bg[0x7] = bh[0x7],
                bg[0x8] = bh[0x8],
                bg[0x9] = bh[0x9],
                bg[0xa] = bh[0xa],
                bg[0xb] = bh[0xb],
                bg[0xc] = bh[0xc],
                bg[0xd] = bh[0xd],
                bg[0xe] = bh[0xe],
                bg[0xf] = bh[0xf],
                this;
            },
            'copyPosition': function(bf) {
                var bg = this['elements']
                  , bh = bf['elements'];
                return bg[0xc] = bh[0xc],
                bg[0xd] = bh[0xd],
                bg[0xe] = bh[0xe],
                this;
            },
            'extractBasis': function(bf, bg, bh) {
                return bf['setFromMatrixColumn'](this, 0x0),
                bg['setFromMatrixColumn'](this, 0x1),
                bh['setFromMatrixColumn'](this, 0x2),
                this;
            },
            'makeBasis': function(bf, bg, bh) {
                return this['set'](bf['x'], bg['x'], bh['x'], 0x0, bf['y'], bg['y'], bh['y'], 0x0, bf['z'], bg['z'], bh['z'], 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'extractRotation': function() {
                var bf = new eK();
                return function(bg) {
                    var bh = this['elements']
                      , bi = bg['elements']
                      , bF = 0x1 / bf['setFromMatrixColumn'](bg, 0x0)['length']()
                      , bG = 0x1 / bf['setFromMatrixColumn'](bg, 0x1)['length']()
                      , bH = 0x1 / bf['setFromMatrixColumn'](bg, 0x2)['length']();
                    return bh[0x0] = bi[0x0] * bF,
                    bh[0x1] = bi[0x1] * bF,
                    bh[0x2] = bi[0x2] * bF,
                    bh[0x3] = 0x0,
                    bh[0x4] = bi[0x4] * bG,
                    bh[0x5] = bi[0x5] * bG,
                    bh[0x6] = bi[0x6] * bG,
                    bh[0x7] = 0x0,
                    bh[0x8] = bi[0x8] * bH,
                    bh[0x9] = bi[0x9] * bH,
                    bh[0xa] = bi[0xa] * bH,
                    bh[0xb] = 0x0,
                    bh[0xc] = 0x0,
                    bh[0xd] = 0x0,
                    bh[0xe] = 0x0,
                    bh[0xf] = 0x1,
                    this;
                }
                ;
            }(),
            'makeRotationFromEuler': function(bf) {
                bf && bf['isEuler'] || console['error']('THREE.Matrix4:\x20.makeRotationFromEuler()\x20now\x20expects\x20a\x20Euler\x20rotation\x20rather\x20than\x20a\x20Vector3\x20and\x20order.');
                var bg = this['elements']
                  , bh = bf['x']
                  , bi = bf['y']
                  , bF = bf['z']
                  , bG = Math['cos'](bh)
                  , bH = Math['sin'](bh)
                  , bI = Math['cos'](bi)
                  , bJ = Math['sin'](bi)
                  , bK = Math['cos'](bF)
                  , bL = Math['sin'](bF);
                if ('XYZ' === bf['order']) {
                    var bM = bG * bK
                      , bN = bG * bL
                      , bO = bH * bK
                      , bP = bH * bL;
                    bg[0x0] = bI * bK,
                    bg[0x4] = -bI * bL,
                    bg[0x8] = bJ,
                    bg[0x1] = bN + bO * bJ,
                    bg[0x5] = bM - bP * bJ,
                    bg[0x9] = -bH * bI,
                    bg[0x2] = bP - bM * bJ,
                    bg[0x6] = bO + bN * bJ,
                    bg[0xa] = bG * bI;
                } else if ('YXZ' === bf['order']) {
                    var bQ = bI * bK
                      , bR = bI * bL
                      , bS = bJ * bK
                      , bT = bJ * bL;
                    bg[0x0] = bQ + bT * bH,
                    bg[0x4] = bS * bH - bR,
                    bg[0x8] = bG * bJ,
                    bg[0x1] = bG * bL,
                    bg[0x5] = bG * bK,
                    bg[0x9] = -bH,
                    bg[0x2] = bR * bH - bS,
                    bg[0x6] = bT + bQ * bH,
                    bg[0xa] = bG * bI;
                } else if ('ZXY' === bf['order']) {
                    bQ = bI * bK,
                    bR = bI * bL,
                    bS = bJ * bK,
                    bT = bJ * bL;
                    bg[0x0] = bQ - bT * bH,
                    bg[0x4] = -bG * bL,
                    bg[0x8] = bS + bR * bH,
                    bg[0x1] = bR + bS * bH,
                    bg[0x5] = bG * bK,
                    bg[0x9] = bT - bQ * bH,
                    bg[0x2] = -bG * bJ,
                    bg[0x6] = bH,
                    bg[0xa] = bG * bI;
                } else if ('ZYX' === bf['order']) {
                    bM = bG * bK,
                    bN = bG * bL,
                    bO = bH * bK,
                    bP = bH * bL;
                    bg[0x0] = bI * bK,
                    bg[0x4] = bO * bJ - bN,
                    bg[0x8] = bM * bJ + bP,
                    bg[0x1] = bI * bL,
                    bg[0x5] = bP * bJ + bM,
                    bg[0x9] = bN * bJ - bO,
                    bg[0x2] = -bJ,
                    bg[0x6] = bH * bI,
                    bg[0xa] = bG * bI;
                } else if ('YZX' === bf['order']) {
                    var bU = bG * bI
                      , bV = bG * bJ
                      , bW = bH * bI
                      , bX = bH * bJ;
                    bg[0x0] = bI * bK,
                    bg[0x4] = bX - bU * bL,
                    bg[0x8] = bW * bL + bV,
                    bg[0x1] = bL,
                    bg[0x5] = bG * bK,
                    bg[0x9] = -bH * bK,
                    bg[0x2] = -bJ * bK,
                    bg[0x6] = bV * bL + bW,
                    bg[0xa] = bU - bX * bL;
                } else if ('XZY' === bf['order']) {
                    bU = bG * bI,
                    bV = bG * bJ,
                    bW = bH * bI,
                    bX = bH * bJ;
                    bg[0x0] = bI * bK,
                    bg[0x4] = -bL,
                    bg[0x8] = bJ * bK,
                    bg[0x1] = bU * bL + bX,
                    bg[0x5] = bG * bK,
                    bg[0x9] = bV * bL - bW,
                    bg[0x2] = bW * bL - bV,
                    bg[0x6] = bH * bK,
                    bg[0xa] = bX * bL + bU;
                }
                return bg[0x3] = 0x0,
                bg[0x7] = 0x0,
                bg[0xb] = 0x0,
                bg[0xc] = 0x0,
                bg[0xd] = 0x0,
                bg[0xe] = 0x0,
                bg[0xf] = 0x1,
                this;
            },
            'makeRotationFromQuaternion': (lP = new eK(0x0,0x0,0x0),
            lQ = new eK(0x1,0x1,0x1),
            function(bf) {
                return this['compose'](lP, bf, lQ);
            }
            ),
            'lookAt': (lM = new eK(),
            lN = new eK(),
            lO = new eK(),
            function(bf, bg, bh) {
                var bi = this['elements'];
                return lO['subVectors'](bf, bg),
                0x0 === lO['lengthSq']() && (lO['z'] = 0x1),
                lO['normalize'](),
                lM['crossVectors'](bh, lO),
                0x0 === lM['lengthSq']() && (0x1 === Math['abs'](bh['z']) ? lO['x'] += 0.0001 : lO['z'] += 0.0001,
                lO['normalize'](),
                lM['crossVectors'](bh, lO)),
                lM['normalize'](),
                lN['crossVectors'](lO, lM),
                bi[0x0] = lM['x'],
                bi[0x4] = lN['x'],
                bi[0x8] = lO['x'],
                bi[0x1] = lM['y'],
                bi[0x5] = lN['y'],
                bi[0x9] = lO['y'],
                bi[0x2] = lM['z'],
                bi[0x6] = lN['z'],
                bi[0xa] = lO['z'],
                this;
            }
            ),
            'multiply': function(bf, bg) {
                return void 0x0 !== bg ? (console['warn']('THREE.Matrix4:\x20.multiply()\x20now\x20only\x20accepts\x20one\x20argument.\x20Use\x20.multiplyMatrices(\x20a,\x20b\x20)\x20instead.'),
                this['multiplyMatrices'](bf, bg)) : this['multiplyMatrices'](this, bf);
            },
            'premultiply': function(bf) {
                return this['multiplyMatrices'](bf, this);
            },
            'multiplyMatrices': function(bf, bg) {
                var bh = bf['elements']
                  , bi = bg['elements']
                  , bF = this['elements']
                  , bG = bh[0x0]
                  , bH = bh[0x4]
                  , bI = bh[0x8]
                  , bJ = bh[0xc]
                  , bK = bh[0x1]
                  , bL = bh[0x5]
                  , bM = bh[0x9]
                  , bN = bh[0xd]
                  , bO = bh[0x2]
                  , bP = bh[0x6]
                  , bQ = bh[0xa]
                  , bR = bh[0xe]
                  , bS = bh[0x3]
                  , bT = bh[0x7]
                  , bU = bh[0xb]
                  , bV = bh[0xf]
                  , bW = bi[0x0]
                  , bX = bi[0x4]
                  , bY = bi[0x8]
                  , bZ = bi[0xc]
                  , c0 = bi[0x1]
                  , c1 = bi[0x5]
                  , c2 = bi[0x9]
                  , c3 = bi[0xd]
                  , c4 = bi[0x2]
                  , c5 = bi[0x6]
                  , c6 = bi[0xa]
                  , c7 = bi[0xe]
                  , c8 = bi[0x3]
                  , c9 = bi[0x7]
                  , ca = bi[0xb]
                  , cb = bi[0xf];
                return bF[0x0] = bG * bW + bH * c0 + bI * c4 + bJ * c8,
                bF[0x4] = bG * bX + bH * c1 + bI * c5 + bJ * c9,
                bF[0x8] = bG * bY + bH * c2 + bI * c6 + bJ * ca,
                bF[0xc] = bG * bZ + bH * c3 + bI * c7 + bJ * cb,
                bF[0x1] = bK * bW + bL * c0 + bM * c4 + bN * c8,
                bF[0x5] = bK * bX + bL * c1 + bM * c5 + bN * c9,
                bF[0x9] = bK * bY + bL * c2 + bM * c6 + bN * ca,
                bF[0xd] = bK * bZ + bL * c3 + bM * c7 + bN * cb,
                bF[0x2] = bO * bW + bP * c0 + bQ * c4 + bR * c8,
                bF[0x6] = bO * bX + bP * c1 + bQ * c5 + bR * c9,
                bF[0xa] = bO * bY + bP * c2 + bQ * c6 + bR * ca,
                bF[0xe] = bO * bZ + bP * c3 + bQ * c7 + bR * cb,
                bF[0x3] = bS * bW + bT * c0 + bU * c4 + bV * c8,
                bF[0x7] = bS * bX + bT * c1 + bU * c5 + bV * c9,
                bF[0xb] = bS * bY + bT * c2 + bU * c6 + bV * ca,
                bF[0xf] = bS * bZ + bT * c3 + bU * c7 + bV * cb,
                this;
            },
            'multiplyScalar': function(bf) {
                var bg = this['elements'];
                return bg[0x0] *= bf,
                bg[0x4] *= bf,
                bg[0x8] *= bf,
                bg[0xc] *= bf,
                bg[0x1] *= bf,
                bg[0x5] *= bf,
                bg[0x9] *= bf,
                bg[0xd] *= bf,
                bg[0x2] *= bf,
                bg[0x6] *= bf,
                bg[0xa] *= bf,
                bg[0xe] *= bf,
                bg[0x3] *= bf,
                bg[0x7] *= bf,
                bg[0xb] *= bf,
                bg[0xf] *= bf,
                this;
            },
            'applyToBufferAttribute': function() {
                var bf = new eK();
                return function(bg) {
                    for (var bh = 0x0, bi = bg['count']; bh < bi; bh++)
                        bf['x'] = bg['getX'](bh),
                        bf['y'] = bg['getY'](bh),
                        bf['z'] = bg['getZ'](bh),
                        bf['applyMatrix4'](this),
                        bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                    return bg;
                }
                ;
            }(),
            'determinant': function() {
                var bf = this['elements']
                  , bg = bf[0x0]
                  , bh = bf[0x4]
                  , bi = bf[0x8]
                  , bF = bf[0xc]
                  , bG = bf[0x1]
                  , bH = bf[0x5]
                  , bI = bf[0x9]
                  , bJ = bf[0xd]
                  , bK = bf[0x2]
                  , bL = bf[0x6]
                  , bM = bf[0xa]
                  , bN = bf[0xe];
                return bf[0x3] * (+bF * bI * bL - bi * bJ * bL - bF * bH * bM + bh * bJ * bM + bi * bH * bN - bh * bI * bN) + bf[0x7] * (+bg * bI * bN - bg * bJ * bM + bF * bG * bM - bi * bG * bN + bi * bJ * bK - bF * bI * bK) + bf[0xb] * (+bg * bJ * bL - bg * bH * bN - bF * bG * bL + bh * bG * bN + bF * bH * bK - bh * bJ * bK) + bf[0xf] * (-bi * bH * bK - bg * bI * bL + bg * bH * bM + bi * bG * bL - bh * bG * bM + bh * bI * bK);
            },
            'transpose': function() {
                var bf, bg = this['elements'];
                return bf = bg[0x1],
                bg[0x1] = bg[0x4],
                bg[0x4] = bf,
                bf = bg[0x2],
                bg[0x2] = bg[0x8],
                bg[0x8] = bf,
                bf = bg[0x6],
                bg[0x6] = bg[0x9],
                bg[0x9] = bf,
                bf = bg[0x3],
                bg[0x3] = bg[0xc],
                bg[0xc] = bf,
                bf = bg[0x7],
                bg[0x7] = bg[0xd],
                bg[0xd] = bf,
                bf = bg[0xb],
                bg[0xb] = bg[0xe],
                bg[0xe] = bf,
                this;
            },
            'setPosition': function(bf, bg, bh) {
                var bi = this['elements'];
                return bf['isVector3'] ? (bi[0xc] = bf['x'],
                bi[0xd] = bf['y'],
                bi[0xe] = bf['z']) : (bi[0xc] = bf,
                bi[0xd] = bg,
                bi[0xe] = bh),
                this;
            },
            'getInverse': function(bf, bg) {
                var bh = this['elements']
                  , bi = bf['elements']
                  , bF = bi[0x0]
                  , bG = bi[0x1]
                  , bH = bi[0x2]
                  , bI = bi[0x3]
                  , bJ = bi[0x4]
                  , bK = bi[0x5]
                  , bL = bi[0x6]
                  , bM = bi[0x7]
                  , bN = bi[0x8]
                  , bO = bi[0x9]
                  , bP = bi[0xa]
                  , bQ = bi[0xb]
                  , bR = bi[0xc]
                  , bS = bi[0xd]
                  , bT = bi[0xe]
                  , bU = bi[0xf]
                  , bV = bO * bT * bM - bS * bP * bM + bS * bL * bQ - bK * bT * bQ - bO * bL * bU + bK * bP * bU
                  , bW = bR * bP * bM - bN * bT * bM - bR * bL * bQ + bJ * bT * bQ + bN * bL * bU - bJ * bP * bU
                  , bX = bN * bS * bM - bR * bO * bM + bR * bK * bQ - bJ * bS * bQ - bN * bK * bU + bJ * bO * bU
                  , bY = bR * bO * bL - bN * bS * bL - bR * bK * bP + bJ * bS * bP + bN * bK * bT - bJ * bO * bT
                  , bZ = bF * bV + bG * bW + bH * bX + bI * bY;
                if (0x0 === bZ) {
                    var c0 = 'THREE.Matrix4:\x20.getInverse()\x20can\x27t\x20invert\x20matrix,\x20determinant\x20is\x200';
                    if (!0x0 === bg)
                        throw new Error(c0);
                    return console['warn'](c0),
                    this['identity']();
                }
                var c1 = 0x1 / bZ;
                return bh[0x0] = bV * c1,
                bh[0x1] = (bS * bP * bI - bO * bT * bI - bS * bH * bQ + bG * bT * bQ + bO * bH * bU - bG * bP * bU) * c1,
                bh[0x2] = (bK * bT * bI - bS * bL * bI + bS * bH * bM - bG * bT * bM - bK * bH * bU + bG * bL * bU) * c1,
                bh[0x3] = (bO * bL * bI - bK * bP * bI - bO * bH * bM + bG * bP * bM + bK * bH * bQ - bG * bL * bQ) * c1,
                bh[0x4] = bW * c1,
                bh[0x5] = (bN * bT * bI - bR * bP * bI + bR * bH * bQ - bF * bT * bQ - bN * bH * bU + bF * bP * bU) * c1,
                bh[0x6] = (bR * bL * bI - bJ * bT * bI - bR * bH * bM + bF * bT * bM + bJ * bH * bU - bF * bL * bU) * c1,
                bh[0x7] = (bJ * bP * bI - bN * bL * bI + bN * bH * bM - bF * bP * bM - bJ * bH * bQ + bF * bL * bQ) * c1,
                bh[0x8] = bX * c1,
                bh[0x9] = (bR * bO * bI - bN * bS * bI - bR * bG * bQ + bF * bS * bQ + bN * bG * bU - bF * bO * bU) * c1,
                bh[0xa] = (bJ * bS * bI - bR * bK * bI + bR * bG * bM - bF * bS * bM - bJ * bG * bU + bF * bK * bU) * c1,
                bh[0xb] = (bN * bK * bI - bJ * bO * bI - bN * bG * bM + bF * bO * bM + bJ * bG * bQ - bF * bK * bQ) * c1,
                bh[0xc] = bY * c1,
                bh[0xd] = (bN * bS * bH - bR * bO * bH + bR * bG * bP - bF * bS * bP - bN * bG * bT + bF * bO * bT) * c1,
                bh[0xe] = (bR * bK * bH - bJ * bS * bH - bR * bG * bL + bF * bS * bL + bJ * bG * bT - bF * bK * bT) * c1,
                bh[0xf] = (bJ * bO * bH - bN * bK * bH + bN * bG * bL - bF * bO * bL - bJ * bG * bP + bF * bK * bP) * c1,
                this;
            },
            'scale': function(bf) {
                var bg = this['elements']
                  , bh = bf['x']
                  , bi = bf['y']
                  , bF = bf['z'];
                return bg[0x0] *= bh,
                bg[0x4] *= bi,
                bg[0x8] *= bF,
                bg[0x1] *= bh,
                bg[0x5] *= bi,
                bg[0x9] *= bF,
                bg[0x2] *= bh,
                bg[0x6] *= bi,
                bg[0xa] *= bF,
                bg[0x3] *= bh,
                bg[0x7] *= bi,
                bg[0xb] *= bF,
                this;
            },
            'getMaxScaleOnAxis': function() {
                var bf = this['elements']
                  , bg = bf[0x0] * bf[0x0] + bf[0x1] * bf[0x1] + bf[0x2] * bf[0x2]
                  , bh = bf[0x4] * bf[0x4] + bf[0x5] * bf[0x5] + bf[0x6] * bf[0x6]
                  , bi = bf[0x8] * bf[0x8] + bf[0x9] * bf[0x9] + bf[0xa] * bf[0xa];
                return Math['sqrt'](Math['max'](bg, bh, bi));
            },
            'makeTranslation': function(bf, bg, bh) {
                return this['set'](0x1, 0x0, 0x0, bf, 0x0, 0x1, 0x0, bg, 0x0, 0x0, 0x1, bh, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'makeRotationX': function(bf) {
                var bg = Math['cos'](bf)
                  , bh = Math['sin'](bf);
                return this['set'](0x1, 0x0, 0x0, 0x0, 0x0, bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'makeRotationY': function(bf) {
                var bg = Math['cos'](bf)
                  , bh = Math['sin'](bf);
                return this['set'](bg, 0x0, bh, 0x0, 0x0, 0x1, 0x0, 0x0, -bh, 0x0, bg, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'makeRotationZ': function(bf) {
                var bg = Math['cos'](bf)
                  , bh = Math['sin'](bf);
                return this['set'](bg, -bh, 0x0, 0x0, bh, bg, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'makeRotationAxis': function(bf, bg) {
                var bh = Math['cos'](bg)
                  , bi = Math['sin'](bg)
                  , bF = 0x1 - bh
                  , bG = bf['x']
                  , bH = bf['y']
                  , bI = bf['z']
                  , bJ = bF * bG
                  , bK = bF * bH;
                return this['set'](bJ * bG + bh, bJ * bH - bi * bI, bJ * bI + bi * bH, 0x0, bJ * bH + bi * bI, bK * bH + bh, bK * bI - bi * bG, 0x0, bJ * bI - bi * bH, bK * bI + bi * bG, bF * bI * bI + bh, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'makeScale': function(bf, bg, bh) {
                return this['set'](bf, 0x0, 0x0, 0x0, 0x0, bg, 0x0, 0x0, 0x0, 0x0, bh, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'makeShear': function(bf, bg, bh) {
                return this['set'](0x1, bg, bh, 0x0, bf, 0x1, bh, 0x0, bf, bg, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1),
                this;
            },
            'compose': function(bf, bg, bh) {
                var bi = this['elements']
                  , bF = bg['_x']
                  , bG = bg['_y']
                  , bH = bg['_z']
                  , bI = bg['_w']
                  , bJ = bF + bF
                  , bK = bG + bG
                  , bL = bH + bH
                  , bM = bF * bJ
                  , bN = bF * bK
                  , bO = bF * bL
                  , bP = bG * bK
                  , bQ = bG * bL
                  , bR = bH * bL
                  , bS = bI * bJ
                  , bT = bI * bK
                  , bU = bI * bL
                  , bV = bh['x']
                  , bW = bh['y']
                  , bX = bh['z'];
                return bi[0x0] = (0x1 - (bP + bR)) * bV,
                bi[0x1] = (bN + bU) * bV,
                bi[0x2] = (bO - bT) * bV,
                bi[0x3] = 0x0,
                bi[0x4] = (bN - bU) * bW,
                bi[0x5] = (0x1 - (bM + bR)) * bW,
                bi[0x6] = (bQ + bS) * bW,
                bi[0x7] = 0x0,
                bi[0x8] = (bO + bT) * bX,
                bi[0x9] = (bQ - bS) * bX,
                bi[0xa] = (0x1 - (bM + bP)) * bX,
                bi[0xb] = 0x0,
                bi[0xc] = bf['x'],
                bi[0xd] = bf['y'],
                bi[0xe] = bf['z'],
                bi[0xf] = 0x1,
                this;
            },
            'decompose': (lK = new eK(),
            lL = new mR(),
            function(bf, bg, bh) {
                var bi = this['elements']
                  , bF = lK['set'](bi[0x0], bi[0x1], bi[0x2])['length']()
                  , bG = lK['set'](bi[0x4], bi[0x5], bi[0x6])['length']()
                  , bH = lK['set'](bi[0x8], bi[0x9], bi[0xa])['length']();
                this['determinant']() < 0x0 && (bF = -bF),
                bf['x'] = bi[0xc],
                bf['y'] = bi[0xd],
                bf['z'] = bi[0xe],
                lL['copy'](this);
                var bI = 0x1 / bF
                  , bJ = 0x1 / bG
                  , bK = 0x1 / bH;
                return lL['elements'][0x0] *= bI,
                lL['elements'][0x1] *= bI,
                lL['elements'][0x2] *= bI,
                lL['elements'][0x4] *= bJ,
                lL['elements'][0x5] *= bJ,
                lL['elements'][0x6] *= bJ,
                lL['elements'][0x8] *= bK,
                lL['elements'][0x9] *= bK,
                lL['elements'][0xa] *= bK,
                bg['setFromRotationMatrix'](lL),
                bh['x'] = bF,
                bh['y'] = bG,
                bh['z'] = bH,
                this;
            }
            ),
            'makePerspective': function(bf, bg, bh, bi, bF, bG) {
                void 0x0 === bG && console['warn']('THREE.Matrix4:\x20.makePerspective()\x20has\x20been\x20redefined\x20and\x20has\x20a\x20new\x20signature.\x20Please\x20check\x20the\x20docs.');
                var bH = this['elements']
                  , bI = 0x2 * bF / (bg - bf)
                  , bJ = 0x2 * bF / (bh - bi)
                  , bK = (bg + bf) / (bg - bf)
                  , bL = (bh + bi) / (bh - bi)
                  , bM = -(bG + bF) / (bG - bF)
                  , bN = -0x2 * bG * bF / (bG - bF);
                return bH[0x0] = bI,
                bH[0x4] = 0x0,
                bH[0x8] = bK,
                bH[0xc] = 0x0,
                bH[0x1] = 0x0,
                bH[0x5] = bJ,
                bH[0x9] = bL,
                bH[0xd] = 0x0,
                bH[0x2] = 0x0,
                bH[0x6] = 0x0,
                bH[0xa] = bM,
                bH[0xe] = bN,
                bH[0x3] = 0x0,
                bH[0x7] = 0x0,
                bH[0xb] = -0x1,
                bH[0xf] = 0x0,
                this;
            },
            'makeOrthographic': function(bf, bg, bh, bi, bF, bG) {
                var bH = this['elements']
                  , bI = 0x1 / (bg - bf)
                  , bJ = 0x1 / (bh - bi)
                  , bK = 0x1 / (bG - bF)
                  , bL = (bg + bf) * bI
                  , bM = (bh + bi) * bJ
                  , bN = (bG + bF) * bK;
                return bH[0x0] = 0x2 * bI,
                bH[0x4] = 0x0,
                bH[0x8] = 0x0,
                bH[0xc] = -bL,
                bH[0x1] = 0x0,
                bH[0x5] = 0x2 * bJ,
                bH[0x9] = 0x0,
                bH[0xd] = -bM,
                bH[0x2] = 0x0,
                bH[0x6] = 0x0,
                bH[0xa] = -0x2 * bK,
                bH[0xe] = -bN,
                bH[0x3] = 0x0,
                bH[0x7] = 0x0,
                bH[0xb] = 0x0,
                bH[0xf] = 0x1,
                this;
            },
            'equals': function(bf) {
                for (var bg = this['elements'], bh = bf['elements'], bi = 0x0; bi < 0x10; bi++)
                    if (bg[bi] !== bh[bi])
                        return !0x1;
                return !0x0;
            },
            'fromArray': function(bf, bg) {
                void 0x0 === bg && (bg = 0x0);
                for (var bh = 0x0; bh < 0x10; bh++)
                    this['elements'][bh] = bf[bh + bg];
                return this;
            },
            'toArray': function(bf, bg) {
                void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0);
                var bh = this['elements'];
                return bf[bg] = bh[0x0],
                bf[bg + 0x1] = bh[0x1],
                bf[bg + 0x2] = bh[0x2],
                bf[bg + 0x3] = bh[0x3],
                bf[bg + 0x4] = bh[0x4],
                bf[bg + 0x5] = bh[0x5],
                bf[bg + 0x6] = bh[0x6],
                bf[bg + 0x7] = bh[0x7],
                bf[bg + 0x8] = bh[0x8],
                bf[bg + 0x9] = bh[0x9],
                bf[bg + 0xa] = bh[0xa],
                bf[bg + 0xb] = bh[0xb],
                bf[bg + 0xc] = bh[0xc],
                bf[bg + 0xd] = bh[0xd],
                bf[bg + 0xe] = bh[0xe],
                bf[bg + 0xf] = bh[0xf],
                bf;
            }
        });
        var vP = {
            'alphamap_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09diffuseColor.a\x20*=\x20texture2D(\x20alphaMap,\x20vUv\x20).g;\x0a#endif',
            'alphamap_pars_fragment': '#ifdef\x20USE_ALPHAMAP\x0a\x09uniform\x20sampler2D\x20alphaMap;\x0a#endif',
            'alphatest_fragment': '#ifdef\x20ALPHATEST\x0a\x09if\x20(\x20diffuseColor.a\x20<\x20ALPHATEST\x20)\x20discard;\x0a#endif',
            'aomap_fragment': '#ifdef\x20USE_AOMAP\x0a\x09float\x20ambientOcclusion\x20=\x20(\x20texture2D(\x20aoMap,\x20vUv2\x20).r\x20-\x201.0\x20)\x20*\x20aoMapIntensity\x20+\x201.0;\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a#endif',
            'aomap_pars_fragment': '#ifdef\x20USE_AOMAP\x0a\x09uniform\x20sampler2D\x20aoMap;\x0a\x09uniform\x20float\x20aoMapIntensity;\x0a#endif',
            'begin_vertex': 'vec3\x20transformed\x20=\x20vec3(\x20position\x20);',
            'beginnormal_vertex': 'vec3\x20objectNormal\x20=\x20vec3(\x20normal\x20);\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20objectTangent\x20=\x20vec3(\x20tangent.xyz\x20);\x0a#endif',
            'bsdfs': 'vec2\x20integrateSpecularBRDF(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x09const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x09vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x09float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x09return\x20vec2(\x20-1.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a}\x0afloat\x20punctualLightIntensityToIrradianceFactor(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a#if\x20defined\x20(\x20PHYSICALLY_CORRECT_LIGHTS\x20)\x0a\x09float\x20distanceFalloff\x20=\x201.0\x20/\x20max(\x20pow(\x20lightDistance,\x20decayExponent\x20),\x200.01\x20);\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20)\x20{\x0a\x09\x09distanceFalloff\x20*=\x20pow2(\x20saturate(\x201.0\x20-\x20pow4(\x20lightDistance\x20/\x20cutoffDistance\x20)\x20)\x20);\x0a\x09}\x0a\x09return\x20distanceFalloff;\x0a#else\x0a\x09if(\x20cutoffDistance\x20>\x200.0\x20&&\x20decayExponent\x20>\x200.0\x20)\x20{\x0a\x09\x09return\x20pow(\x20saturate(\x20-lightDistance\x20/\x20cutoffDistance\x20+\x201.0\x20),\x20decayExponent\x20);\x0a\x09}\x0a\x09return\x201.0;\x0a#endif\x0a}\x0avec3\x20BRDF_Diffuse_Lambert(\x20const\x20in\x20vec3\x20diffuseColor\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20diffuseColor;\x0a}\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20dotLH\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotLH\x20-\x206.98316\x20)\x20*\x20dotLH\x20);\x0a\x09return\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x20fresnel\x20+\x20specularColor;\x0a}\x0avec3\x20F_Schlick_RoughnessDependent(\x20const\x20in\x20vec3\x20F0,\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20fresnel\x20=\x20exp2(\x20(\x20-5.55473\x20*\x20dotNV\x20-\x206.98316\x20)\x20*\x20dotNV\x20);\x0a\x09vec3\x20Fr\x20=\x20max(\x20vec3(\x201.0\x20-\x20roughness\x20),\x20F0\x20)\x20-\x20F0;\x0a\x09return\x20Fr\x20*\x20fresnel\x20+\x20F0;\x0a}\x0afloat\x20G_GGX_Smith(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gl\x20=\x20dotNL\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09float\x20gv\x20=\x20dotNV\x20+\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09return\x201.0\x20/\x20(\x20gl\x20*\x20gv\x20);\x0a}\x0afloat\x20G_GGX_SmithCorrelated(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNL,\x20const\x20in\x20float\x20dotNV\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20gv\x20=\x20dotNL\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNV\x20)\x20);\x0a\x09float\x20gl\x20=\x20dotNV\x20*\x20sqrt(\x20a2\x20+\x20(\x201.0\x20-\x20a2\x20)\x20*\x20pow2(\x20dotNL\x20)\x20);\x0a\x09return\x200.5\x20/\x20max(\x20gv\x20+\x20gl,\x20EPSILON\x20);\x0a}\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x09float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x0a\x09return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20alpha\x20=\x20pow2(\x20roughness\x20);\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20incidentLight.direction\x20)\x20);\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_GGX_SmithCorrelated(\x20alpha,\x20dotNL,\x20dotNV\x20);\x0a\x09float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0avec2\x20LTC_Uv(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09const\x20float\x20LUT_SIZE\x20\x20=\x2064.0;\x0a\x09const\x20float\x20LUT_SCALE\x20=\x20(\x20LUT_SIZE\x20-\x201.0\x20)\x20/\x20LUT_SIZE;\x0a\x09const\x20float\x20LUT_BIAS\x20\x20=\x200.5\x20/\x20LUT_SIZE;\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20N,\x20V\x20)\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20roughness,\x20sqrt(\x201.0\x20-\x20dotNV\x20)\x20);\x0a\x09uv\x20=\x20uv\x20*\x20LUT_SCALE\x20+\x20LUT_BIAS;\x0a\x09return\x20uv;\x0a}\x0afloat\x20LTC_ClippedSphereFormFactor(\x20const\x20in\x20vec3\x20f\x20)\x20{\x0a\x09float\x20l\x20=\x20length(\x20f\x20);\x0a\x09return\x20max(\x20(\x20l\x20*\x20l\x20+\x20f.z\x20)\x20/\x20(\x20l\x20+\x201.0\x20),\x200.0\x20);\x0a}\x0avec3\x20LTC_EdgeVectorFormFactor(\x20const\x20in\x20vec3\x20v1,\x20const\x20in\x20vec3\x20v2\x20)\x20{\x0a\x09float\x20x\x20=\x20dot(\x20v1,\x20v2\x20);\x0a\x09float\x20y\x20=\x20abs(\x20x\x20);\x0a\x09float\x20a\x20=\x200.8543985\x20+\x20(\x200.4965155\x20+\x200.0145206\x20*\x20y\x20)\x20*\x20y;\x0a\x09float\x20b\x20=\x203.4175940\x20+\x20(\x204.1616724\x20+\x20y\x20)\x20*\x20y;\x0a\x09float\x20v\x20=\x20a\x20/\x20b;\x0a\x09float\x20theta_sintheta\x20=\x20(\x20x\x20>\x200.0\x20)\x20?\x20v\x20:\x200.5\x20*\x20inversesqrt(\x20max(\x201.0\x20-\x20x\x20*\x20x,\x201e-7\x20)\x20)\x20-\x20v;\x0a\x09return\x20cross(\x20v1,\x20v2\x20)\x20*\x20theta_sintheta;\x0a}\x0avec3\x20LTC_Evaluate(\x20const\x20in\x20vec3\x20N,\x20const\x20in\x20vec3\x20V,\x20const\x20in\x20vec3\x20P,\x20const\x20in\x20mat3\x20mInv,\x20const\x20in\x20vec3\x20rectCoords[\x204\x20]\x20)\x20{\x0a\x09vec3\x20v1\x20=\x20rectCoords[\x201\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20v2\x20=\x20rectCoords[\x203\x20]\x20-\x20rectCoords[\x200\x20];\x0a\x09vec3\x20lightNormal\x20=\x20cross(\x20v1,\x20v2\x20);\x0a\x09if(\x20dot(\x20lightNormal,\x20P\x20-\x20rectCoords[\x200\x20]\x20)\x20<\x200.0\x20)\x20return\x20vec3(\x200.0\x20);\x0a\x09vec3\x20T1,\x20T2;\x0a\x09T1\x20=\x20normalize(\x20V\x20-\x20N\x20*\x20dot(\x20V,\x20N\x20)\x20);\x0a\x09T2\x20=\x20-\x20cross(\x20N,\x20T1\x20);\x0a\x09mat3\x20mat\x20=\x20mInv\x20*\x20transposeMat3(\x20mat3(\x20T1,\x20T2,\x20N\x20)\x20);\x0a\x09vec3\x20coords[\x204\x20];\x0a\x09coords[\x200\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x200\x20]\x20-\x20P\x20);\x0a\x09coords[\x201\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x201\x20]\x20-\x20P\x20);\x0a\x09coords[\x202\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x202\x20]\x20-\x20P\x20);\x0a\x09coords[\x203\x20]\x20=\x20mat\x20*\x20(\x20rectCoords[\x203\x20]\x20-\x20P\x20);\x0a\x09coords[\x200\x20]\x20=\x20normalize(\x20coords[\x200\x20]\x20);\x0a\x09coords[\x201\x20]\x20=\x20normalize(\x20coords[\x201\x20]\x20);\x0a\x09coords[\x202\x20]\x20=\x20normalize(\x20coords[\x202\x20]\x20);\x0a\x09coords[\x203\x20]\x20=\x20normalize(\x20coords[\x203\x20]\x20);\x0a\x09vec3\x20vectorFormFactor\x20=\x20vec3(\x200.0\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x200\x20],\x20coords[\x201\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x201\x20],\x20coords[\x202\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x202\x20],\x20coords[\x203\x20]\x20);\x0a\x09vectorFormFactor\x20+=\x20LTC_EdgeVectorFormFactor(\x20coords[\x203\x20],\x20coords[\x200\x20]\x20);\x0a\x09float\x20result\x20=\x20LTC_ClippedSphereFormFactor(\x20vectorFormFactor\x20);\x0a\x09return\x20vec3(\x20result\x20);\x0a}\x0avec3\x20BRDF_Specular_GGX_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09return\x20specularColor\x20*\x20brdf.x\x20+\x20brdf.y;\x0a}\x0avoid\x20BRDF_Specular_Multiscattering_Environment(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick_RoughnessDependent(\x20specularColor,\x20dotNV,\x20roughness\x20);\x0a\x09vec2\x20brdf\x20=\x20integrateSpecularBRDF(\x20dotNV,\x20roughness\x20);\x0a\x09vec3\x20FssEss\x20=\x20F\x20*\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ess\x20=\x20brdf.x\x20+\x20brdf.y;\x0a\x09float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x09vec3\x20Favg\x20=\x20specularColor\x20+\x20(\x201.0\x20-\x20specularColor\x20)\x20*\x200.047619;\x09vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x09singleScatter\x20+=\x20FssEss;\x0a\x09multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a}\x0afloat\x20G_BlinnPhong_Implicit(\x20)\x20{\x0a\x09return\x200.25;\x0a}\x0afloat\x20D_BlinnPhong(\x20const\x20in\x20float\x20shininess,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x09return\x20RECIPROCAL_PI\x20*\x20(\x20shininess\x20*\x200.5\x20+\x201.0\x20)\x20*\x20pow(\x20dotNH,\x20shininess\x20);\x0a}\x0avec3\x20BRDF_Specular_BlinnPhong(\x20const\x20in\x20IncidentLight\x20incidentLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20shininess\x20)\x20{\x0a\x09vec3\x20halfDir\x20=\x20normalize(\x20incidentLight.direction\x20+\x20geometry.viewDir\x20);\x0a\x09float\x20dotNH\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20halfDir\x20)\x20);\x0a\x09float\x20dotLH\x20=\x20saturate(\x20dot(\x20incidentLight.direction,\x20halfDir\x20)\x20);\x0a\x09vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20dotLH\x20);\x0a\x09float\x20G\x20=\x20G_BlinnPhong_Implicit(\x20);\x0a\x09float\x20D\x20=\x20D_BlinnPhong(\x20shininess,\x20dotNH\x20);\x0a\x09return\x20F\x20*\x20(\x20G\x20*\x20D\x20);\x0a}\x0afloat\x20GGXRoughnessToBlinnExponent(\x20const\x20in\x20float\x20ggxRoughness\x20)\x20{\x0a\x09return\x20(\x202.0\x20/\x20pow2(\x20ggxRoughness\x20+\x200.0001\x20)\x20-\x202.0\x20);\x0a}\x0afloat\x20BlinnExponentToGGXRoughness(\x20const\x20in\x20float\x20blinnExponent\x20)\x20{\x0a\x09return\x20sqrt(\x202.0\x20/\x20(\x20blinnExponent\x20+\x202.0\x20)\x20);\x0a}',
            'bumpmap_pars_fragment': '#ifdef\x20USE_BUMPMAP\x0a\x09uniform\x20sampler2D\x20bumpMap;\x0a\x09uniform\x20float\x20bumpScale;\x0a\x09vec2\x20dHdxy_fwd()\x20{\x0a\x09\x09vec2\x20dSTdx\x20=\x20dFdx(\x20vUv\x20);\x0a\x09\x09vec2\x20dSTdy\x20=\x20dFdy(\x20vUv\x20);\x0a\x09\x09float\x20Hll\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20).x;\x0a\x09\x09float\x20dBx\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdx\x20).x\x20-\x20Hll;\x0a\x09\x09float\x20dBy\x20=\x20bumpScale\x20*\x20texture2D(\x20bumpMap,\x20vUv\x20+\x20dSTdy\x20).x\x20-\x20Hll;\x0a\x09\x09return\x20vec2(\x20dBx,\x20dBy\x20);\x0a\x09}\x0a\x09vec3\x20perturbNormalArb(\x20vec3\x20surf_pos,\x20vec3\x20surf_norm,\x20vec2\x20dHdxy\x20)\x20{\x0a\x09\x09vec3\x20vSigmaX\x20=\x20vec3(\x20dFdx(\x20surf_pos.x\x20),\x20dFdx(\x20surf_pos.y\x20),\x20dFdx(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vSigmaY\x20=\x20vec3(\x20dFdy(\x20surf_pos.x\x20),\x20dFdy(\x20surf_pos.y\x20),\x20dFdy(\x20surf_pos.z\x20)\x20);\x0a\x09\x09vec3\x20vN\x20=\x20surf_norm;\x0a\x09\x09vec3\x20R1\x20=\x20cross(\x20vSigmaY,\x20vN\x20);\x0a\x09\x09vec3\x20R2\x20=\x20cross(\x20vN,\x20vSigmaX\x20);\x0a\x09\x09float\x20fDet\x20=\x20dot(\x20vSigmaX,\x20R1\x20);\x0a\x09\x09fDet\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09vec3\x20vGrad\x20=\x20sign(\x20fDet\x20)\x20*\x20(\x20dHdxy.x\x20*\x20R1\x20+\x20dHdxy.y\x20*\x20R2\x20);\x0a\x09\x09return\x20normalize(\x20abs(\x20fDet\x20)\x20*\x20surf_norm\x20-\x20vGrad\x20);\x0a\x09}\x0a#endif',
            'clipping_planes_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09vec4\x20plane;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20UNION_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09if\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20discard;\x0a\x09}\x0a\x09#if\x20UNION_CLIPPING_PLANES\x20<\x20NUM_CLIPPING_PLANES\x0a\x09\x09bool\x20clipped\x20=\x20true;\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x20UNION_CLIPPING_PLANES;\x20i\x20<\x20NUM_CLIPPING_PLANES;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09plane\x20=\x20clippingPlanes[\x20i\x20];\x0a\x09\x09\x09clipped\x20=\x20(\x20dot(\x20vViewPosition,\x20plane.xyz\x20)\x20>\x20plane.w\x20)\x20&&\x20clipped;\x0a\x09\x09}\x0a\x09\x09if\x20(\x20clipped\x20)\x20discard;\x0a\x09#endif\x0a#endif',
            'clipping_planes_pars_fragment': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09\x09varying\x20vec3\x20vViewPosition;\x0a\x09#endif\x0a\x09uniform\x20vec4\x20clippingPlanes[\x20NUM_CLIPPING_PLANES\x20];\x0a#endif',
            'clipping_planes_pars_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif',
            'clipping_planes_vertex': '#if\x20NUM_CLIPPING_PLANES\x20>\x200\x20&&\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20!\x20defined(\x20PHONG\x20)\x20&&\x20!\x20defined(\x20MATCAP\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif',
            'color_fragment': '#ifdef\x20USE_COLOR\x0a\x09diffuseColor.rgb\x20*=\x20vColor;\x0a#endif',
            'color_pars_fragment': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
            'color_pars_vertex': '#ifdef\x20USE_COLOR\x0a\x09varying\x20vec3\x20vColor;\x0a#endif',
            'color_vertex': '#ifdef\x20USE_COLOR\x0a\x09vColor.xyz\x20=\x20color.xyz;\x0a#endif',
            'common': '#define\x20PI\x203.14159265359\x0a#define\x20PI2\x206.28318530718\x0a#define\x20PI_HALF\x201.5707963267949\x0a#define\x20RECIPROCAL_PI\x200.31830988618\x0a#define\x20RECIPROCAL_PI2\x200.15915494\x0a#define\x20LOG2\x201.442695\x0a#define\x20EPSILON\x201e-6\x0a#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#define\x20whiteCompliment(a)\x20(\x201.0\x20-\x20saturate(\x20a\x20)\x20)\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x;\x20}\x0afloat\x20pow3(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x*x*x;\x20}\x0afloat\x20pow4(\x20const\x20in\x20float\x20x\x20)\x20{\x20float\x20x2\x20=\x20x*x;\x20return\x20x2*x2;\x20}\x0afloat\x20average(\x20const\x20in\x20vec3\x20color\x20)\x20{\x20return\x20dot(\x20color,\x20vec3(\x200.3333\x20)\x20);\x20}\x0ahighp\x20float\x20rand(\x20const\x20in\x20vec2\x20uv\x20)\x20{\x0a\x09const\x20highp\x20float\x20a\x20=\x2012.9898,\x20b\x20=\x2078.233,\x20c\x20=\x2043758.5453;\x0a\x09highp\x20float\x20dt\x20=\x20dot(\x20uv.xy,\x20vec2(\x20a,b\x20)\x20),\x20sn\x20=\x20mod(\x20dt,\x20PI\x20);\x0a\x09return\x20fract(sin(sn)\x20*\x20c);\x0a}\x0astruct\x20IncidentLight\x20{\x0a\x09vec3\x20color;\x0a\x09vec3\x20direction;\x0a\x09bool\x20visible;\x0a};\x0astruct\x20ReflectedLight\x20{\x0a\x09vec3\x20directDiffuse;\x0a\x09vec3\x20directSpecular;\x0a\x09vec3\x20indirectDiffuse;\x0a\x09vec3\x20indirectSpecular;\x0a};\x0astruct\x20GeometricContext\x20{\x0a\x09vec3\x20position;\x0a\x09vec3\x20normal;\x0a\x09vec3\x20viewDir;\x0a};\x0avec3\x20transformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20matrix\x20*\x20vec4(\x20dir,\x200.0\x20)\x20).xyz\x20);\x0a}\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir,\x20in\x20mat4\x20matrix\x20)\x20{\x0a\x09return\x20normalize(\x20(\x20vec4(\x20dir,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);\x0a}\x0avec3\x20projectOnPlane(in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09float\x20distance\x20=\x20dot(\x20planeNormal,\x20point\x20-\x20pointOnPlane\x20);\x0a\x09return\x20-\x20distance\x20*\x20planeNormal\x20+\x20point;\x0a}\x0afloat\x20sideOfPlane(\x20in\x20vec3\x20point,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20sign(\x20dot(\x20point\x20-\x20pointOnPlane,\x20planeNormal\x20)\x20);\x0a}\x0avec3\x20linePlaneIntersect(\x20in\x20vec3\x20pointOnLine,\x20in\x20vec3\x20lineDirection,\x20in\x20vec3\x20pointOnPlane,\x20in\x20vec3\x20planeNormal\x20)\x20{\x0a\x09return\x20lineDirection\x20*\x20(\x20dot(\x20planeNormal,\x20pointOnPlane\x20-\x20pointOnLine\x20)\x20/\x20dot(\x20planeNormal,\x20lineDirection\x20)\x20)\x20+\x20pointOnLine;\x0a}\x0amat3\x20transposeMat3(\x20const\x20in\x20mat3\x20m\x20)\x20{\x0a\x09mat3\x20tmp;\x0a\x09tmp[\x200\x20]\x20=\x20vec3(\x20m[\x200\x20].x,\x20m[\x201\x20].x,\x20m[\x202\x20].x\x20);\x0a\x09tmp[\x201\x20]\x20=\x20vec3(\x20m[\x200\x20].y,\x20m[\x201\x20].y,\x20m[\x202\x20].y\x20);\x0a\x09tmp[\x202\x20]\x20=\x20vec3(\x20m[\x200\x20].z,\x20m[\x201\x20].z,\x20m[\x202\x20].z\x20);\x0a\x09return\x20tmp;\x0a}\x0afloat\x20linearToRelativeLuminance(\x20const\x20in\x20vec3\x20color\x20)\x20{\x0a\x09vec3\x20weights\x20=\x20vec3(\x200.2126,\x200.7152,\x200.0722\x20);\x0a\x09return\x20dot(\x20weights,\x20color.rgb\x20);\x0a}',
            'cube_uv_reflection_fragment': '#ifdef\x20ENVMAP_TYPE_CUBE_UV\x0a#define\x20cubeUV_textureSize\x20(1024.0)\x0aint\x20getFaceFromDirection(vec3\x20direction)\x20{\x0a\x09vec3\x20absDirection\x20=\x20abs(direction);\x0a\x09int\x20face\x20=\x20-1;\x0a\x09if(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x09\x09if(absDirection.x\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200\x20:\x203;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09if(absDirection.z\x20>\x20absDirection.y\x20)\x0a\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202\x20:\x205;\x0a\x09\x09else\x0a\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201\x20:\x204;\x0a\x09}\x0a\x09return\x20face;\x0a}\x0a#define\x20cubeUV_maxLods1\x20\x20(log2(cubeUV_textureSize*0.25)\x20-\x201.0)\x0a#define\x20cubeUV_rangeClamp\x20(exp2((6.0\x20-\x201.0)\x20*\x202.0))\x0avec2\x20MipLevelInfo(\x20vec3\x20vec,\x20float\x20roughnessLevel,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20scale\x20=\x20exp2(cubeUV_maxLods1\x20-\x20roughnessLevel);\x0a\x09float\x20dxRoughness\x20=\x20dFdx(roughness);\x0a\x09float\x20dyRoughness\x20=\x20dFdy(roughness);\x0a\x09vec3\x20dx\x20=\x20dFdx(\x20vec\x20*\x20scale\x20*\x20dxRoughness\x20);\x0a\x09vec3\x20dy\x20=\x20dFdy(\x20vec\x20*\x20scale\x20*\x20dyRoughness\x20);\x0a\x09float\x20d\x20=\x20max(\x20dot(\x20dx,\x20dx\x20),\x20dot(\x20dy,\x20dy\x20)\x20);\x0a\x09d\x20=\x20clamp(d,\x201.0,\x20cubeUV_rangeClamp);\x0a\x09float\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x09return\x20vec2(floor(mipLevel),\x20fract(mipLevel));\x0a}\x0a#define\x20cubeUV_maxLods2\x20(log2(cubeUV_textureSize*0.25)\x20-\x202.0)\x0a#define\x20cubeUV_rcpTextureSize\x20(1.0\x20/\x20cubeUV_textureSize)\x0avec2\x20getCubeUV(vec3\x20direction,\x20float\x20roughnessLevel,\x20float\x20mipLevel)\x20{\x0a\x09mipLevel\x20=\x20roughnessLevel\x20>\x20cubeUV_maxLods2\x20-\x203.0\x20?\x200.0\x20:\x20mipLevel;\x0a\x09float\x20a\x20=\x2016.0\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20exp2_packed\x20=\x20exp2(\x20vec2(\x20roughnessLevel,\x20mipLevel\x20)\x20);\x0a\x09vec2\x20rcp_exp2_packed\x20=\x20vec2(\x201.0\x20)\x20/\x20exp2_packed;\x0a\x09float\x20powScale\x20=\x20exp2_packed.x\x20*\x20exp2_packed.y;\x0a\x09float\x20scale\x20=\x20rcp_exp2_packed.x\x20*\x20rcp_exp2_packed.y\x20*\x200.25;\x0a\x09float\x20mipOffset\x20=\x200.75*(1.0\x20-\x20rcp_exp2_packed.y)\x20*\x20rcp_exp2_packed.x;\x0a\x09bool\x20bRes\x20=\x20mipLevel\x20==\x200.0;\x0a\x09scale\x20=\x20\x20bRes\x20&&\x20(scale\x20<\x20a)\x20?\x20a\x20:\x20scale;\x0a\x09vec3\x20r;\x0a\x09vec2\x20offset;\x0a\x09int\x20face\x20=\x20getFaceFromDirection(direction);\x0a\x09float\x20rcpPowScale\x20=\x201.0\x20/\x20powScale;\x0a\x09if(\x20face\x20==\x200)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20-direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x201)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x202)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.75\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x20a\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x203)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.x,\x20direction.z,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(0.0+mipOffset,0.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20if(\x20face\x20==\x204)\x20{\x0a\x09\x09r\x20=\x20vec3(direction.y,\x20direction.x,\x20-direction.z);\x0a\x09\x09offset\x20=\x20vec2(scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09else\x20{\x0a\x09\x09r\x20=\x20vec3(direction.z,\x20-direction.x,\x20direction.y);\x0a\x09\x09offset\x20=\x20vec2(2.0*scale+mipOffset,\x200.5\x20*\x20rcpPowScale);\x0a\x09\x09offset.y\x20=\x20bRes\x20&&\x20(offset.y\x20<\x202.0*a)\x20?\x200.0\x20:\x20offset.y;\x0a\x09}\x0a\x09r\x20=\x20normalize(r);\x0a\x09float\x20texelOffset\x20=\x200.5\x20*\x20cubeUV_rcpTextureSize;\x0a\x09vec2\x20s\x20=\x20(\x20r.yz\x20/\x20abs(\x20r.x\x20)\x20+\x20vec2(\x201.0\x20)\x20)\x20*\x200.5;\x0a\x09vec2\x20base\x20=\x20offset\x20+\x20vec2(\x20texelOffset\x20);\x0a\x09return\x20base\x20+\x20s\x20*\x20(\x20scale\x20-\x202.0\x20*\x20texelOffset\x20);\x0a}\x0a#define\x20cubeUV_maxLods3\x20(log2(cubeUV_textureSize*0.25)\x20-\x203.0)\x0avec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20reflectedDirection,\x20float\x20roughness\x20)\x20{\x0a\x09float\x20roughnessVal\x20=\x20roughness*\x20cubeUV_maxLods3;\x0a\x09float\x20r1\x20=\x20floor(roughnessVal);\x0a\x09float\x20r2\x20=\x20r1\x20+\x201.0;\x0a\x09float\x20t\x20=\x20fract(roughnessVal);\x0a\x09vec2\x20mipInfo\x20=\x20MipLevelInfo(reflectedDirection,\x20r1,\x20roughness);\x0a\x09float\x20s\x20=\x20mipInfo.y;\x0a\x09float\x20level0\x20=\x20mipInfo.x;\x0a\x09float\x20level1\x20=\x20level0\x20+\x201.0;\x0a\x09level1\x20=\x20level1\x20>\x205.0\x20?\x205.0\x20:\x20level1;\x0a\x09level0\x20+=\x20min(\x20floor(\x20s\x20+\x200.5\x20),\x205.0\x20);\x0a\x09vec2\x20uv_10\x20=\x20getCubeUV(reflectedDirection,\x20r1,\x20level0);\x0a\x09vec4\x20color10\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_10));\x0a\x09vec2\x20uv_20\x20=\x20getCubeUV(reflectedDirection,\x20r2,\x20level0);\x0a\x09vec4\x20color20\x20=\x20envMapTexelToLinear(texture2D(envMap,\x20uv_20));\x0a\x09vec4\x20result\x20=\x20mix(color10,\x20color20,\x20t);\x0a\x09return\x20vec4(result.rgb,\x201.0);\x0a}\x0a#endif',
            'defaultnormal_vertex': 'vec3\x20transformedNormal\x20=\x20normalMatrix\x20*\x20objectNormal;\x0a#ifdef\x20FLIP_SIDED\x0a\x09transformedNormal\x20=\x20-\x20transformedNormal;\x0a#endif\x0a#ifdef\x20USE_TANGENT\x0a\x09vec3\x20transformedTangent\x20=\x20normalMatrix\x20*\x20objectTangent;\x0a\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09transformedTangent\x20=\x20-\x20transformedTangent;\x0a\x09#endif\x0a#endif',
            'displacementmap_pars_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09uniform\x20sampler2D\x20displacementMap;\x0a\x09uniform\x20float\x20displacementScale;\x0a\x09uniform\x20float\x20displacementBias;\x0a#endif',
            'displacementmap_vertex': '#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09transformed\x20+=\x20normalize(\x20objectNormal\x20)\x20*\x20(\x20texture2D(\x20displacementMap,\x20uv\x20).x\x20*\x20displacementScale\x20+\x20displacementBias\x20);\x0a#endif',
            'emissivemap_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09vec4\x20emissiveColor\x20=\x20texture2D(\x20emissiveMap,\x20vUv\x20);\x0a\x09emissiveColor.rgb\x20=\x20emissiveMapTexelToLinear(\x20emissiveColor\x20).rgb;\x0a\x09totalEmissiveRadiance\x20*=\x20emissiveColor.rgb;\x0a#endif',
            'emissivemap_pars_fragment': '#ifdef\x20USE_EMISSIVEMAP\x0a\x09uniform\x20sampler2D\x20emissiveMap;\x0a#endif',
            'encodings_fragment': 'gl_FragColor\x20=\x20linearToOutputTexel(\x20gl_FragColor\x20);',
            'encodings_pars_fragment': '\x0avec4\x20LinearToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20value;\x0a}\x0avec4\x20GammaToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearToGamma(\x20in\x20vec4\x20value,\x20in\x20float\x20gammaFactor\x20)\x20{\x0a\x09return\x20vec4(\x20pow(\x20value.rgb,\x20vec3(\x201.0\x20/\x20gammaFactor\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20sRGBToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb\x20*\x200.9478672986\x20+\x20vec3(\x200.0521327014\x20),\x20vec3(\x202.4\x20)\x20),\x20value.rgb\x20*\x200.0773993808,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.04045\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20LinearTosRGB(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20mix(\x20pow(\x20value.rgb,\x20vec3(\x200.41666\x20)\x20)\x20*\x201.055\x20-\x20vec3(\x200.055\x20),\x20value.rgb\x20*\x2012.92,\x20vec3(\x20lessThanEqual(\x20value.rgb,\x20vec3(\x200.0031308\x20)\x20)\x20)\x20),\x20value.a\x20);\x0a}\x0avec4\x20RGBEToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20exp2(\x20value.a\x20*\x20255.0\x20-\x20128.0\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBE(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20maxComponent\x20=\x20max(\x20max(\x20value.r,\x20value.g\x20),\x20value.b\x20);\x0a\x09float\x20fExp\x20=\x20clamp(\x20ceil(\x20log2(\x20maxComponent\x20)\x20),\x20-128.0,\x20127.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20exp2(\x20fExp\x20),\x20(\x20fExp\x20+\x20128.0\x20)\x20/\x20255.0\x20);\x0a}\x0avec4\x20RGBMToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20value.a\x20*\x20maxRange,\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBM(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20M\x20=\x20clamp(\x20maxRGB\x20/\x20maxRange,\x200.0,\x201.0\x20);\x0a\x09M\x20=\x20ceil(\x20M\x20*\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vec4(\x20value.rgb\x20/\x20(\x20M\x20*\x20maxRange\x20),\x20M\x20);\x0a}\x0avec4\x20RGBDToLinear(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20(\x20maxRange\x20/\x20255.0\x20)\x20/\x20value.a\x20),\x201.0\x20);\x0a}\x0avec4\x20LinearToRGBD(\x20in\x20vec4\x20value,\x20in\x20float\x20maxRange\x20)\x20{\x0a\x09float\x20maxRGB\x20=\x20max(\x20value.r,\x20max(\x20value.g,\x20value.b\x20)\x20);\x0a\x09float\x20D\x20=\x20max(\x20maxRange\x20/\x20maxRGB,\x201.0\x20);\x0a\x09D\x20=\x20min(\x20floor(\x20D\x20)\x20/\x20255.0,\x201.0\x20);\x0a\x09return\x20vec4(\x20value.rgb\x20*\x20(\x20D\x20*\x20(\x20255.0\x20/\x20maxRange\x20)\x20),\x20D\x20);\x0a}\x0aconst\x20mat3\x20cLogLuvM\x20=\x20mat3(\x200.2209,\x200.3390,\x200.4184,\x200.1138,\x200.6780,\x200.7319,\x200.0102,\x200.1130,\x200.2969\x20);\x0avec4\x20LinearToLogLuv(\x20in\x20vec4\x20value\x20)\x20\x20{\x0a\x09vec3\x20Xp_Y_XYZp\x20=\x20cLogLuvM\x20*\x20value.rgb;\x0a\x09Xp_Y_XYZp\x20=\x20max(\x20Xp_Y_XYZp,\x20vec3(\x201e-6,\x201e-6,\x201e-6\x20)\x20);\x0a\x09vec4\x20vResult;\x0a\x09vResult.xy\x20=\x20Xp_Y_XYZp.xy\x20/\x20Xp_Y_XYZp.z;\x0a\x09float\x20Le\x20=\x202.0\x20*\x20log2(Xp_Y_XYZp.y)\x20+\x20127.0;\x0a\x09vResult.w\x20=\x20fract(\x20Le\x20);\x0a\x09vResult.z\x20=\x20(\x20Le\x20-\x20(\x20floor(\x20vResult.w\x20*\x20255.0\x20)\x20)\x20/\x20255.0\x20)\x20/\x20255.0;\x0a\x09return\x20vResult;\x0a}\x0aconst\x20mat3\x20cLogLuvInverseM\x20=\x20mat3(\x206.0014,\x20-2.7008,\x20-1.7996,\x20-1.3320,\x203.1029,\x20-5.7721,\x200.3008,\x20-1.0882,\x205.6268\x20);\x0avec4\x20LogLuvToLinear(\x20in\x20vec4\x20value\x20)\x20{\x0a\x09float\x20Le\x20=\x20value.z\x20*\x20255.0\x20+\x20value.w;\x0a\x09vec3\x20Xp_Y_XYZp;\x0a\x09Xp_Y_XYZp.y\x20=\x20exp2(\x20(\x20Le\x20-\x20127.0\x20)\x20/\x202.0\x20);\x0a\x09Xp_Y_XYZp.z\x20=\x20Xp_Y_XYZp.y\x20/\x20value.y;\x0a\x09Xp_Y_XYZp.x\x20=\x20value.x\x20*\x20Xp_Y_XYZp.z;\x0a\x09vec3\x20vRGB\x20=\x20cLogLuvInverseM\x20*\x20Xp_Y_XYZp.rgb;\x0a\x09return\x20vec4(\x20max(\x20vRGB,\x200.0\x20),\x201.0\x20);\x0a}',
            'envmap_fragment': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20vWorldPosition\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#else\x0a\x09\x09vec3\x20reflectVec\x20=\x20vReflect;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09vec4\x20envColor\x20=\x20textureCube(\x20envMap,\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20)\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09vec2\x20sampleUV;\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20sampleUV\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09reflectVec\x20=\x20normalize(\x20reflectVec\x20);\x0a\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,\x200.0,\x201.0\x20)\x20);\x0a\x09\x09vec4\x20envColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5\x20);\x0a\x09#else\x0a\x09\x09vec4\x20envColor\x20=\x20vec4(\x200.0\x20);\x0a\x09#endif\x0a\x09envColor\x20=\x20envMapTexelToLinear(\x20envColor\x20);\x0a\x09#ifdef\x20ENVMAP_BLENDING_MULTIPLY\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20outgoingLight\x20*\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_MIX\x20)\x0a\x09\x09outgoingLight\x20=\x20mix(\x20outgoingLight,\x20envColor.xyz,\x20specularStrength\x20*\x20reflectivity\x20);\x0a\x09#elif\x20defined(\x20ENVMAP_BLENDING_ADD\x20)\x0a\x09\x09outgoingLight\x20+=\x20envColor.xyz\x20*\x20specularStrength\x20*\x20reflectivity;\x0a\x09#endif\x0a#endif',
            'envmap_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09uniform\x20float\x20reflectivity;\x0a\x09uniform\x20float\x20envMapIntensity;\x0a#endif\x0a#ifdef\x20USE_ENVMAP\x0a\x09#if\x20!\x20defined(\x20PHYSICAL\x20)\x20&&\x20(\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#endif\x0a\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09uniform\x20samplerCube\x20envMap;\x0a\x09#else\x0a\x09\x09uniform\x20sampler2D\x20envMap;\x0a\x09#endif\x0a\x09uniform\x20float\x20flipEnvMap;\x0a\x09uniform\x20int\x20maxMipLevel;\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x20||\x20defined(\x20PHYSICAL\x20)\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09#endif\x0a#endif',
            'envmap_pars_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09varying\x20vec3\x20vWorldPosition;\x0a\x09#else\x0a\x09\x09varying\x20vec3\x20vReflect;\x0a\x09\x09uniform\x20float\x20refractionRatio;\x0a\x09#endif\x0a#endif',
            'envmap_physical_pars_fragment': '#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x0a\x09vec3\x20getLightProbeIndirectIrradiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryVec,\x20float(\x20maxMIPLevel\x20)\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20worldNormal.x,\x20worldNormal.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryVec,\x201.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20vec4(\x200.0\x20);\x0a\x09\x09#endif\x0a\x09\x09return\x20PI\x20*\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a\x09float\x20getSpecularMIPLevel(\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09float\x20maxMIPLevelScalar\x20=\x20float(\x20maxMIPLevel\x20);\x0a\x09\x09float\x20desiredMIPLevel\x20=\x20maxMIPLevelScalar\x20+\x200.79248\x20-\x200.5\x20*\x20log2(\x20pow2(\x20blinnShininessExponent\x20)\x20+\x201.0\x20);\x0a\x09\x09return\x20clamp(\x20desiredMIPLevel,\x200.0,\x20maxMIPLevelScalar\x20);\x0a\x09}\x0a\x09vec3\x20getLightProbeIndirectRadiance(\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20float\x20blinnShininessExponent,\x20const\x20in\x20int\x20maxMIPLevel\x20)\x20{\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20reflect(\x20-geometry.viewDir,\x20geometry.normal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vec3\x20reflectVec\x20=\x20refract(\x20-geometry.viewDir,\x20geometry.normal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09\x09reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec,\x20viewMatrix\x20);\x0a\x09\x09float\x20specularMIPLevel\x20=\x20getSpecularMIPLevel(\x20blinnShininessExponent,\x20maxMIPLevel\x20);\x0a\x09\x09#ifdef\x20ENVMAP_TYPE_CUBE\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeLodEXT(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCube(\x20envMap,\x20queryReflectVec,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09\x09vec3\x20queryReflectVec\x20=\x20vec3(\x20flipEnvMap\x20*\x20reflectVec.x,\x20reflectVec.yz\x20);\x0a\x09\x09\x09vec4\x20envMapColor\x20=\x20textureCubeUV(\x20envMap,\x20queryReflectVec,\x20BlinnExponentToGGXRoughness(blinnShininessExponent\x20));\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_EQUIREC\x20)\x0a\x09\x09\x09vec2\x20sampleUV;\x0a\x09\x09\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20reflectVec.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09\x09\x09sampleUV.x\x20=\x20atan(\x20reflectVec.z,\x20reflectVec.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20sampleUV,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#elif\x20defined(\x20ENVMAP_TYPE_SPHERE\x20)\x0a\x09\x09\x09vec3\x20reflectView\x20=\x20normalize(\x20(\x20viewMatrix\x20*\x20vec4(\x20reflectVec,\x200.0\x20)\x20).xyz\x20+\x20vec3(\x200.0,0.0,1.0\x20)\x20);\x0a\x09\x09\x09#ifdef\x20TEXTURE_LOD_EXT\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2DLodEXT(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#else\x0a\x09\x09\x09\x09vec4\x20envMapColor\x20=\x20texture2D(\x20envMap,\x20reflectView.xy\x20*\x200.5\x20+\x200.5,\x20specularMIPLevel\x20);\x0a\x09\x09\x09#endif\x0a\x09\x09\x09envMapColor.rgb\x20=\x20envMapTexelToLinear(\x20envMapColor\x20).rgb;\x0a\x09\x09#endif\x0a\x09\x09return\x20envMapColor.rgb\x20*\x20envMapIntensity;\x0a\x09}\x0a#endif',
            'envmap_vertex': '#ifdef\x20USE_ENVMAP\x0a\x09#if\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20PHONG\x20)\x0a\x09\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a\x09#else\x0a\x09\x09vec3\x20cameraToVertex\x20=\x20normalize(\x20worldPosition.xyz\x20-\x20cameraPosition\x20);\x0a\x09\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20transformedNormal,\x20viewMatrix\x20);\x0a\x09\x09#ifdef\x20ENVMAP_MODE_REFLECTION\x0a\x09\x09\x09vReflect\x20=\x20reflect(\x20cameraToVertex,\x20worldNormal\x20);\x0a\x09\x09#else\x0a\x09\x09\x09vReflect\x20=\x20refract(\x20cameraToVertex,\x20worldNormal,\x20refractionRatio\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
            'fog_vertex': '#ifdef\x20USE_FOG\x0a\x09fogDepth\x20=\x20-mvPosition.z;\x0a#endif',
            'fog_pars_vertex': '#ifdef\x20USE_FOG\x0a\x09varying\x20float\x20fogDepth;\x0a#endif',
            'fog_fragment': '#ifdef\x20USE_FOG\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09float\x20fogFactor\x20=\x20whiteCompliment(\x20exp2(\x20-\x20fogDensity\x20*\x20fogDensity\x20*\x20fogDepth\x20*\x20fogDepth\x20*\x20LOG2\x20)\x20);\x0a\x09#else\x0a\x09\x09float\x20fogFactor\x20=\x20smoothstep(\x20fogNear,\x20fogFar,\x20fogDepth\x20);\x0a\x09#endif\x0a\x09gl_FragColor.rgb\x20=\x20mix(\x20gl_FragColor.rgb,\x20fogColor,\x20fogFactor\x20);\x0a#endif',
            'fog_pars_fragment': '#ifdef\x20USE_FOG\x0a\x09uniform\x20vec3\x20fogColor;\x0a\x09varying\x20float\x20fogDepth;\x0a\x09#ifdef\x20FOG_EXP2\x0a\x09\x09uniform\x20float\x20fogDensity;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20fogNear;\x0a\x09\x09uniform\x20float\x20fogFar;\x0a\x09#endif\x0a#endif',
            'gradientmap_pars_fragment': '#ifdef\x20TOON\x0a\x09uniform\x20sampler2D\x20gradientMap;\x0a\x09vec3\x20getGradientIrradiance(\x20vec3\x20normal,\x20vec3\x20lightDirection\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20normal,\x20lightDirection\x20);\x0a\x09\x09vec2\x20coord\x20=\x20vec2(\x20dotNL\x20*\x200.5\x20+\x200.5,\x200.0\x20);\x0a\x09\x09#ifdef\x20USE_GRADIENTMAP\x0a\x09\x09\x09return\x20texture2D(\x20gradientMap,\x20coord\x20).rgb;\x0a\x09\x09#else\x0a\x09\x09\x09return\x20(\x20coord.x\x20<\x200.7\x20)\x20?\x20vec3(\x200.7\x20)\x20:\x20vec3(\x201.0\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
            'lightmap_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20PI\x20*\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a#endif',
            'lightmap_pars_fragment': '#ifdef\x20USE_LIGHTMAP\x0a\x09uniform\x20sampler2D\x20lightMap;\x0a\x09uniform\x20float\x20lightMapIntensity;\x0a#endif',
            'lights_lambert_vertex': 'vec3\x20diffuse\x20=\x20vec3(\x201.0\x20);\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20mvPosition.xyz;\x0ageometry.normal\x20=\x20normalize(\x20transformedNormal\x20);\x0ageometry.viewDir\x20=\x20normalize(\x20-mvPosition.xyz\x20);\x0aGeometricContext\x20backGeometry;\x0abackGeometry.position\x20=\x20geometry.position;\x0abackGeometry.normal\x20=\x20-geometry.normal;\x0abackGeometry.viewDir\x20=\x20geometry.viewDir;\x0avLightFront\x20=\x20vec3(\x200.0\x20);\x0avIndirectFront\x20=\x20vec3(\x200.0\x20);\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09vLightBack\x20=\x20vec3(\x200.0\x20);\x0a\x09vIndirectBack\x20=\x20vec3(\x200.0\x20);\x0a#endif\x0aIncidentLight\x20directLight;\x0afloat\x20dotNL;\x0avec3\x20directLightColor_Diffuse;\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLights[\x20i\x20],\x20geometry,\x20directLight\x20);\x0a\x09\x09dotNL\x20=\x20dot(\x20geometry.normal,\x20directLight.direction\x20);\x0a\x09\x09directLightColor_Diffuse\x20=\x20PI\x20*\x20directLight.color;\x0a\x09\x09vLightFront\x20+=\x20saturate(\x20dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vLightBack\x20+=\x20saturate(\x20-dotNL\x20)\x20*\x20directLightColor_Diffuse;\x0a\x09\x09#endif\x0a\x09}\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vIndirectFront\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09vIndirectBack\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20backGeometry\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
            'lights_pars_begin': 'uniform\x20vec3\x20ambientLightColor;\x0auniform\x20vec3\x20lightProbe[\x209\x20];\x0avec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{\x0a\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;\x0a\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;\x0a\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;\x0a\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;\x0a\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);\x0a\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;\x0a\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);\x0a\x09return\x20result;\x0a}\x0avec3\x20getLightProbeIrradiance(\x20const\x20in\x20vec3\x20lightProbe[\x209\x20],\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20geometry.normal,\x20viewMatrix\x20);\x0a\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20lightProbe\x20);\x0a\x09return\x20irradiance;\x0a}\x0avec3\x20getAmbientLightIrradiance(\x20const\x20in\x20vec3\x20ambientLightColor\x20)\x20{\x0a\x09vec3\x20irradiance\x20=\x20ambientLightColor;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09return\x20irradiance;\x0a}\x0a#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09struct\x20DirectionalLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20DirectionalLight\x20directionalLights[\x20NUM_DIR_LIGHTS\x20];\x0a\x09void\x20getDirectionalDirectLightIrradiance(\x20const\x20in\x20DirectionalLight\x20directionalLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09directLight.color\x20=\x20directionalLight.color;\x0a\x09\x09directLight.direction\x20=\x20directionalLight.direction;\x0a\x09\x09directLight.visible\x20=\x20true;\x0a\x09}\x0a#endif\x0a#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09struct\x20PointLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09\x09float\x20shadowCameraNear;\x0a\x09\x09float\x20shadowCameraFar;\x0a\x09};\x0a\x09uniform\x20PointLight\x20pointLights[\x20NUM_POINT_LIGHTS\x20];\x0a\x09void\x20getPointDirectLightIrradiance(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09directLight.color\x20=\x20pointLight.color;\x0a\x09\x09directLight.color\x20*=\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x09\x09directLight.visible\x20=\x20(\x20directLight.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a\x09}\x0a#endif\x0a#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09struct\x20SpotLight\x20{\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20color;\x0a\x09\x09float\x20distance;\x0a\x09\x09float\x20decay;\x0a\x09\x09float\x20coneCos;\x0a\x09\x09float\x20penumbraCos;\x0a\x09\x09int\x20shadow;\x0a\x09\x09float\x20shadowBias;\x0a\x09\x09float\x20shadowRadius;\x0a\x09\x09vec2\x20shadowMapSize;\x0a\x09};\x0a\x09uniform\x20SpotLight\x20spotLights[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09void\x20getSpotDirectLightIrradiance(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20\x20)\x20{\x0a\x09\x09vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometry.position;\x0a\x09\x09directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x09\x09float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x09\x09float\x20angleCos\x20=\x20dot(\x20directLight.direction,\x20spotLight.direction\x20);\x0a\x09\x09if\x20(\x20angleCos\x20>\x20spotLight.coneCos\x20)\x20{\x0a\x09\x09\x09float\x20spotEffect\x20=\x20smoothstep(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x09\x09\x09directLight.color\x20=\x20spotLight.color;\x0a\x09\x09\x09directLight.color\x20*=\x20spotEffect\x20*\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20true;\x0a\x09\x09}\x20else\x20{\x0a\x09\x09\x09directLight.color\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09\x09directLight.visible\x20=\x20false;\x0a\x09\x09}\x0a\x09}\x0a#endif\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09struct\x20RectAreaLight\x20{\x0a\x09\x09vec3\x20color;\x0a\x09\x09vec3\x20position;\x0a\x09\x09vec3\x20halfWidth;\x0a\x09\x09vec3\x20halfHeight;\x0a\x09};\x0a\x09uniform\x20sampler2D\x20ltc_1;\x09uniform\x20sampler2D\x20ltc_2;\x0a\x09uniform\x20RectAreaLight\x20rectAreaLights[\x20NUM_RECT_AREA_LIGHTS\x20];\x0a#endif\x0a#if\x20NUM_HEMI_LIGHTS\x20>\x200\x0a\x09struct\x20HemisphereLight\x20{\x0a\x09\x09vec3\x20direction;\x0a\x09\x09vec3\x20skyColor;\x0a\x09\x09vec3\x20groundColor;\x0a\x09};\x0a\x09uniform\x20HemisphereLight\x20hemisphereLights[\x20NUM_HEMI_LIGHTS\x20];\x0a\x09vec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x09\x09float\x20dotNL\x20=\x20dot(\x20geometry.normal,\x20hemiLight.direction\x20);\x0a\x09\x09float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x09\x09vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09irradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09return\x20irradiance;\x0a\x09}\x0a#endif',
            'lights_phong_fragment': 'BlinnPhongMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb;\x0amaterial.specularColor\x20=\x20specular;\x0amaterial.specularShininess\x20=\x20shininess;\x0amaterial.specularStrength\x20=\x20specularStrength;',
            'lights_phong_pars_fragment': 'varying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0astruct\x20BlinnPhongMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09vec3\x09specularColor;\x0a\x09float\x09specularShininess;\x0a\x09float\x09specularStrength;\x0a};\x0avoid\x20RE_Direct_BlinnPhong(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifdef\x20TOON\x0a\x09\x09vec3\x20irradiance\x20=\x20getGradientIrradiance(\x20geometry.normal,\x20directLight.direction\x20)\x20*\x20directLight.color;\x0a\x09#else\x0a\x09\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#endif\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_Specular_BlinnPhong(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularShininess\x20)\x20*\x20material.specularStrength;\x0a}\x0avoid\x20RE_IndirectDiffuse_BlinnPhong(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20BlinnPhongMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_BlinnPhong\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_BlinnPhong\x0a#define\x20Material_LightProbeLOD(\x20material\x20)\x09(0)',
            'lights_physical_fragment': 'PhysicalMaterial\x20material;\x0amaterial.diffuseColor\x20=\x20diffuseColor.rgb\x20*\x20(\x201.0\x20-\x20metalnessFactor\x20);\x0amaterial.specularRoughness\x20=\x20clamp(\x20roughnessFactor,\x200.04,\x201.0\x20);\x0a#ifdef\x20STANDARD\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a#else\x0a\x09material.specularColor\x20=\x20mix(\x20vec3(\x20MAXIMUM_SPECULAR_COEFFICIENT\x20*\x20pow2(\x20reflectivity\x20)\x20),\x20diffuseColor.rgb,\x20metalnessFactor\x20);\x0a\x09material.clearCoat\x20=\x20saturate(\x20clearCoat\x20);\x09material.clearCoatRoughness\x20=\x20clamp(\x20clearCoatRoughness,\x200.04,\x201.0\x20);\x0a#endif',
            'lights_physical_pars_fragment': 'struct\x20PhysicalMaterial\x20{\x0a\x09vec3\x09diffuseColor;\x0a\x09float\x09specularRoughness;\x0a\x09vec3\x09specularColor;\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoat;\x0a\x09\x09float\x20clearCoatRoughness;\x0a\x09#endif\x0a};\x0a#define\x20MAXIMUM_SPECULAR_COEFFICIENT\x200.16\x0a#define\x20DEFAULT_SPECULAR_COEFFICIENT\x200.04\x0afloat\x20clearCoatDHRApprox(\x20const\x20in\x20float\x20roughness,\x20const\x20in\x20float\x20dotNL\x20)\x20{\x0a\x09return\x20DEFAULT_SPECULAR_COEFFICIENT\x20+\x20(\x201.0\x20-\x20DEFAULT_SPECULAR_COEFFICIENT\x20)\x20*\x20(\x20pow(\x201.0\x20-\x20dotNL,\x205.0\x20)\x20*\x20pow(\x201.0\x20-\x20roughness,\x202.0\x20)\x20);\x0a}\x0a#if\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x0a\x09void\x20RE_Direct_RectArea_Physical(\x20const\x20in\x20RectAreaLight\x20rectAreaLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09\x09vec3\x20normal\x20=\x20geometry.normal;\x0a\x09\x09vec3\x20viewDir\x20=\x20geometry.viewDir;\x0a\x09\x09vec3\x20position\x20=\x20geometry.position;\x0a\x09\x09vec3\x20lightPos\x20=\x20rectAreaLight.position;\x0a\x09\x09vec3\x20halfWidth\x20=\x20rectAreaLight.halfWidth;\x0a\x09\x09vec3\x20halfHeight\x20=\x20rectAreaLight.halfHeight;\x0a\x09\x09vec3\x20lightColor\x20=\x20rectAreaLight.color;\x0a\x09\x09float\x20roughness\x20=\x20material.specularRoughness;\x0a\x09\x09vec3\x20rectCoords[\x204\x20];\x0a\x09\x09rectCoords[\x200\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20-\x20halfHeight;\x09\x09rectCoords[\x201\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20-\x20halfHeight;\x0a\x09\x09rectCoords[\x202\x20]\x20=\x20lightPos\x20-\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09rectCoords[\x203\x20]\x20=\x20lightPos\x20+\x20halfWidth\x20+\x20halfHeight;\x0a\x09\x09vec2\x20uv\x20=\x20LTC_Uv(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x09\x09vec4\x20t1\x20=\x20texture2D(\x20ltc_1,\x20uv\x20);\x0a\x09\x09vec4\x20t2\x20=\x20texture2D(\x20ltc_2,\x20uv\x20);\x0a\x09\x09mat3\x20mInv\x20=\x20mat3(\x0a\x09\x09\x09vec3(\x20t1.x,\x200,\x20t1.y\x20),\x0a\x09\x09\x09vec3(\x20\x20\x20\x200,\x201,\x20\x20\x20\x200\x20),\x0a\x09\x09\x09vec3(\x20t1.z,\x200,\x20t1.w\x20)\x0a\x09\x09);\x0a\x09\x09vec3\x20fresnel\x20=\x20(\x20material.specularColor\x20*\x20t2.x\x20+\x20(\x20vec3(\x201.0\x20)\x20-\x20material.specularColor\x20)\x20*\x20t2.y\x20);\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20lightColor\x20*\x20fresnel\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mInv,\x20rectCoords\x20);\x0a\x09\x09reflectedLight.directDiffuse\x20+=\x20lightColor\x20*\x20material.diffuseColor\x20*\x20LTC_Evaluate(\x20normal,\x20viewDir,\x20position,\x20mat3(\x201.0\x20),\x20rectCoords\x20);\x0a\x09}\x0a#endif\x0avoid\x20RE_Direct_Physical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x09vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09irradiance\x20*=\x20PI;\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09reflectedLight.directSpecular\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09reflectedLight.directDiffuse\x20+=\x20(\x201.0\x20-\x20clearCoatDHR\x20)\x20*\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX(\x20directLight,\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x09#ifndef\x20ENVMAP_TYPE_CUBE_UV\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20BRDF_Diffuse_Lambert(\x20material.diffuseColor\x20);\x0a\x09#endif\x0a}\x0avoid\x20RE_IndirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20vec3\x20clearCoatRadiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight)\x20{\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09float\x20dotNV\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20geometry.viewDir\x20)\x20);\x0a\x09\x09float\x20dotNL\x20=\x20dotNV;\x0a\x09\x09float\x20clearCoatDHR\x20=\x20material.clearCoat\x20*\x20clearCoatDHRApprox(\x20material.clearCoatRoughness,\x20dotNL\x20);\x0a\x09#else\x0a\x09\x09float\x20clearCoatDHR\x20=\x200.0;\x0a\x09#endif\x0a\x09float\x20clearCoatInv\x20=\x201.0\x20-\x20clearCoatDHR;\x0a\x09#if\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x09\x09vec3\x20cosineWeightedIrradiance\x20=\x20irradiance\x20*\x20RECIPROCAL_PI;\x0a\x09\x09BRDF_Specular_Multiscattering_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x09\x09vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20(\x20singleScattering\x20+\x20multiScattering\x20)\x20);\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20singleScattering;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatInv\x20*\x20radiance\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20material.specularColor,\x20material.specularRoughness\x20);\x0a\x09#endif\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09reflectedLight.indirectSpecular\x20+=\x20clearCoatRadiance\x20*\x20material.clearCoat\x20*\x20BRDF_Specular_GGX_Environment(\x20geometry,\x20vec3(\x20DEFAULT_SPECULAR_COEFFICIENT\x20),\x20material.clearCoatRoughness\x20);\x0a\x09#endif\x0a}\x0a#define\x20RE_Direct\x09\x09\x09\x09RE_Direct_Physical\x0a#define\x20RE_Direct_RectArea\x09\x09RE_Direct_RectArea_Physical\x0a#define\x20RE_IndirectDiffuse\x09\x09RE_IndirectDiffuse_Physical\x0a#define\x20RE_IndirectSpecular\x09\x09RE_IndirectSpecular_Physical\x0a#define\x20Material_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.specularRoughness\x20)\x0a#define\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20)\x20\x20\x20GGXRoughnessToBlinnExponent(\x20material.clearCoatRoughness\x20)\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x09return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a}',
            'lights_fragment_begin': '\x0aGeometricContext\x20geometry;\x0ageometry.position\x20=\x20-\x20vViewPosition;\x0ageometry.normal\x20=\x20normal;\x0ageometry.viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0aIncidentLight\x20directLight;\x0a#if\x20(\x20NUM_POINT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20pointLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_SPOT_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20spotLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_DIR_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct\x20)\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09getDirectionalDirectLightIrradiance(\x20directionalLight,\x20geometry,\x20directLight\x20);\x0a\x09\x09#ifdef\x20USE_SHADOWMAP\x0a\x09\x09directLight.color\x20*=\x20all(\x20bvec2(\x20directionalLight.shadow,\x20directLight.visible\x20)\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09\x09#endif\x0a\x09\x09RE_Direct(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20(\x20NUM_RECT_AREA_LIGHTS\x20>\x200\x20)\x20&&\x20defined(\x20RE_Direct_RectArea\x20)\x0a\x09RectAreaLight\x20rectAreaLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_RECT_AREA_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09rectAreaLight\x20=\x20rectAreaLights[\x20i\x20];\x0a\x09\x09RE_Direct_RectArea(\x20rectAreaLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a\x09}\x0a#endif\x0a#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09vec3\x20irradiance\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09irradiance\x20+=\x20getLightProbeIrradiance(\x20lightProbe,\x20geometry\x20);\x0a\x09#if\x20(\x20NUM_HEMI_LIGHTS\x20>\x200\x20)\x0a\x09\x09#pragma\x20unroll_loop\x0a\x09\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_HEMI_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09\x09irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemisphereLights[\x20i\x20],\x20geometry\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09vec3\x20radiance\x20=\x20vec3(\x200.0\x20);\x0a\x09vec3\x20clearCoatRadiance\x20=\x20vec3(\x200.0\x20);\x0a#endif',
            'lights_fragment_maps': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09vec3\x20lightMapIrradiance\x20=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09\x09#ifndef\x20PHYSICALLY_CORRECT_LIGHTS\x0a\x09\x09\x09lightMapIrradiance\x20*=\x20PI;\x0a\x09\x09#endif\x0a\x09\x09irradiance\x20+=\x20lightMapIrradiance;\x0a\x09#endif\x0a\x09#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20PHYSICAL\x20)\x20&&\x20defined(\x20ENVMAP_TYPE_CUBE_UV\x20)\x0a\x09\x09irradiance\x20+=\x20getLightProbeIndirectIrradiance(\x20geometry,\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif\x0a#if\x20defined(\x20USE_ENVMAP\x20)\x20&&\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09radiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#ifndef\x20STANDARD\x0a\x09\x09clearCoatRadiance\x20+=\x20getLightProbeIndirectRadiance(\x20geometry,\x20Material_ClearCoat_BlinnShininessExponent(\x20material\x20),\x20maxMipLevel\x20);\x0a\x09#endif\x0a#endif',
            'lights_fragment_end': '#if\x20defined(\x20RE_IndirectDiffuse\x20)\x0a\x09RE_IndirectDiffuse(\x20irradiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif\x0a#if\x20defined(\x20RE_IndirectSpecular\x20)\x0a\x09RE_IndirectSpecular(\x20radiance,\x20irradiance,\x20clearCoatRadiance,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a#endif',
            'logdepthbuf_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09gl_FragDepthEXT\x20=\x20log2(\x20vFragDepth\x20)\x20*\x20logDepthBufFC\x20*\x200.5;\x0a#endif',
            'logdepthbuf_pars_fragment': '#if\x20defined(\x20USE_LOGDEPTHBUF\x20)\x20&&\x20defined(\x20USE_LOGDEPTHBUF_EXT\x20)\x0a\x09uniform\x20float\x20logDepthBufFC;\x0a\x09varying\x20float\x20vFragDepth;\x0a#endif',
            'logdepthbuf_pars_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09varying\x20float\x20vFragDepth;\x0a\x09#else\x0a\x09\x09uniform\x20float\x20logDepthBufFC;\x0a\x09#endif\x0a#endif',
            'logdepthbuf_vertex': '#ifdef\x20USE_LOGDEPTHBUF\x0a\x09#ifdef\x20USE_LOGDEPTHBUF_EXT\x0a\x09\x09vFragDepth\x20=\x201.0\x20+\x20gl_Position.w;\x0a\x09#else\x0a\x09\x09gl_Position.z\x20=\x20log2(\x20max(\x20EPSILON,\x20gl_Position.w\x20+\x201.0\x20)\x20)\x20*\x20logDepthBufFC\x20-\x201.0;\x0a\x09\x09gl_Position.z\x20*=\x20gl_Position.w;\x0a\x09#endif\x0a#endif',
            'map_fragment': '#ifdef\x20USE_MAP\x0a\x09vec4\x20texelColor\x20=\x20texture2D(\x20map,\x20vUv\x20);\x0a\x09texelColor\x20=\x20mapTexelToLinear(\x20texelColor\x20);\x0a\x09diffuseColor\x20*=\x20texelColor;\x0a#endif',
            'map_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
            'map_particle_fragment': '#ifdef\x20USE_MAP\x0a\x09vec2\x20uv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20gl_PointCoord.x,\x201.0\x20-\x20gl_PointCoord.y,\x201\x20)\x20).xy;\x0a\x09vec4\x20mapTexel\x20=\x20texture2D(\x20map,\x20uv\x20);\x0a\x09diffuseColor\x20*=\x20mapTexelToLinear(\x20mapTexel\x20);\x0a#endif',
            'map_particle_pars_fragment': '#ifdef\x20USE_MAP\x0a\x09uniform\x20mat3\x20uvTransform;\x0a\x09uniform\x20sampler2D\x20map;\x0a#endif',
            'metalnessmap_fragment': 'float\x20metalnessFactor\x20=\x20metalness;\x0a#ifdef\x20USE_METALNESSMAP\x0a\x09vec4\x20texelMetalness\x20=\x20texture2D(\x20metalnessMap,\x20vUv\x20);\x0a\x09metalnessFactor\x20*=\x20texelMetalness.b;\x0a#endif',
            'metalnessmap_pars_fragment': '#ifdef\x20USE_METALNESSMAP\x0a\x09uniform\x20sampler2D\x20metalnessMap;\x0a#endif',
            'morphnormal_vertex': '#ifdef\x20USE_MORPHNORMALS\x0a\x09objectNormal\x20+=\x20(\x20morphNormal0\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal1\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal2\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09objectNormal\x20+=\x20(\x20morphNormal3\x20-\x20normal\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a#endif',
            'morphtarget_pars_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09uniform\x20float\x20morphTargetInfluences[\x208\x20];\x0a\x09#else\x0a\x09uniform\x20float\x20morphTargetInfluences[\x204\x20];\x0a\x09#endif\x0a#endif',
            'morphtarget_vertex': '#ifdef\x20USE_MORPHTARGETS\x0a\x09transformed\x20+=\x20(\x20morphTarget0\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x200\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget1\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x201\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget2\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x202\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget3\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x203\x20];\x0a\x09#ifndef\x20USE_MORPHNORMALS\x0a\x09transformed\x20+=\x20(\x20morphTarget4\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x204\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget5\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x205\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget6\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x206\x20];\x0a\x09transformed\x20+=\x20(\x20morphTarget7\x20-\x20position\x20)\x20*\x20morphTargetInfluences[\x207\x20];\x0a\x09#endif\x0a#endif',
            'normal_fragment_begin': '#ifdef\x20FLAT_SHADED\x0a\x09vec3\x20fdx\x20=\x20vec3(\x20dFdx(\x20vViewPosition.x\x20),\x20dFdx(\x20vViewPosition.y\x20),\x20dFdx(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20fdy\x20=\x20vec3(\x20dFdy(\x20vViewPosition.x\x20),\x20dFdy(\x20vViewPosition.y\x20),\x20dFdy(\x20vViewPosition.z\x20)\x20);\x0a\x09vec3\x20normal\x20=\x20normalize(\x20cross(\x20fdx,\x20fdy\x20)\x20);\x0a#else\x0a\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09#endif\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vec3\x20tangent\x20=\x20normalize(\x20vTangent\x20);\x0a\x09\x09vec3\x20bitangent\x20=\x20normalize(\x20vBitangent\x20);\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09tangent\x20=\x20tangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09bitangent\x20=\x20bitangent\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#endif',
            'normal_fragment_maps': '#ifdef\x20USE_NORMALMAP\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09normal\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09#ifdef\x20FLIP_SIDED\x0a\x09\x09\x09normal\x20=\x20-\x20normal;\x0a\x09\x09#endif\x0a\x09\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09\x09normal\x20=\x20normal\x20*\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09#endif\x0a\x09\x09normal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);\x0a\x09#else\x0a\x09\x09#ifdef\x20USE_TANGENT\x0a\x09\x09\x09mat3\x20vTBN\x20=\x20mat3(\x20tangent,\x20bitangent,\x20normal\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20=\x20normalScale\x20*\x20mapN.xy;\x0a\x09\x09\x09normal\x20=\x20normalize(\x20vTBN\x20*\x20mapN\x20);\x0a\x09\x09#else\x0a\x09\x09\x09normal\x20=\x20perturbNormal2Arb(\x20-vViewPosition,\x20normal\x20);\x0a\x09\x09#endif\x0a\x09#endif\x0a#elif\x20defined(\x20USE_BUMPMAP\x20)\x0a\x09normal\x20=\x20perturbNormalArb(\x20-vViewPosition,\x20normal,\x20dHdxy_fwd()\x20);\x0a#endif',
            'normalmap_pars_fragment': '#ifdef\x20USE_NORMALMAP\x0a\x09uniform\x20sampler2D\x20normalMap;\x0a\x09uniform\x20vec2\x20normalScale;\x0a\x09#ifdef\x20OBJECTSPACE_NORMALMAP\x0a\x09\x09uniform\x20mat3\x20normalMatrix;\x0a\x09#else\x0a\x09\x09vec3\x20perturbNormal2Arb(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm\x20)\x20{\x0a\x09\x09\x09vec3\x20q0\x20=\x20vec3(\x20dFdx(\x20eye_pos.x\x20),\x20dFdx(\x20eye_pos.y\x20),\x20dFdx(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec3\x20q1\x20=\x20vec3(\x20dFdy(\x20eye_pos.x\x20),\x20dFdy(\x20eye_pos.y\x20),\x20dFdy(\x20eye_pos.z\x20)\x20);\x0a\x09\x09\x09vec2\x20st0\x20=\x20dFdx(\x20vUv.st\x20);\x0a\x09\x09\x09vec2\x20st1\x20=\x20dFdy(\x20vUv.st\x20);\x0a\x09\x09\x09float\x20scale\x20=\x20sign(\x20st1.t\x20*\x20st0.s\x20-\x20st0.t\x20*\x20st1.s\x20);\x0a\x09\x09\x09vec3\x20S\x20=\x20normalize(\x20(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20T\x20=\x20normalize(\x20(\x20-\x20q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20)\x20*\x20scale\x20);\x0a\x09\x09\x09vec3\x20N\x20=\x20normalize(\x20surf_norm\x20);\x0a\x09\x09\x09mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x09\x09\x09vec3\x20mapN\x20=\x20texture2D(\x20normalMap,\x20vUv\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x09\x09\x09mapN.xy\x20*=\x20normalScale;\x0a\x09\x09\x09mapN.xy\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x09\x09\x09return\x20normalize(\x20tsn\x20*\x20mapN\x20);\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
            'packing': 'vec3\x20packNormalToRGB(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a\x09return\x20normalize(\x20normal\x20)\x20*\x200.5\x20+\x200.5;\x0a}\x0avec3\x20unpackRGBToNormal(\x20const\x20in\x20vec3\x20rgb\x20)\x20{\x0a\x09return\x202.0\x20*\x20rgb.xyz\x20-\x201.0;\x0a}\x0aconst\x20float\x20PackUpscale\x20=\x20256.\x20/\x20255.;const\x20float\x20UnpackDownscale\x20=\x20255.\x20/\x20256.;\x0aconst\x20vec3\x20PackFactors\x20=\x20vec3(\x20256.\x20*\x20256.\x20*\x20256.,\x20256.\x20*\x20256.,\x20\x20256.\x20);\x0aconst\x20vec4\x20UnpackFactors\x20=\x20UnpackDownscale\x20/\x20vec4(\x20PackFactors,\x201.\x20);\x0aconst\x20float\x20ShiftRight8\x20=\x201.\x20/\x20256.;\x0avec4\x20packDepthToRGBA(\x20const\x20in\x20float\x20v\x20)\x20{\x0a\x09vec4\x20r\x20=\x20vec4(\x20fract(\x20v\x20*\x20PackFactors\x20),\x20v\x20);\x0a\x09r.yzw\x20-=\x20r.xyz\x20*\x20ShiftRight8;\x09return\x20r\x20*\x20PackUpscale;\x0a}\x0afloat\x20unpackRGBAToDepth(\x20const\x20in\x20vec4\x20v\x20)\x20{\x0a\x09return\x20dot(\x20v,\x20UnpackFactors\x20);\x0a}\x0afloat\x20viewZToOrthographicDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20viewZ\x20+\x20near\x20)\x20/\x20(\x20near\x20-\x20far\x20);\x0a}\x0afloat\x20orthographicDepthToViewZ(\x20const\x20in\x20float\x20linearClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20linearClipZ\x20*\x20(\x20near\x20-\x20far\x20)\x20-\x20near;\x0a}\x0afloat\x20viewZToPerspectiveDepth(\x20const\x20in\x20float\x20viewZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20((\x20near\x20+\x20viewZ\x20)\x20*\x20far\x20)\x20/\x20((\x20far\x20-\x20near\x20)\x20*\x20viewZ\x20);\x0a}\x0afloat\x20perspectiveDepthToViewZ(\x20const\x20in\x20float\x20invClipZ,\x20const\x20in\x20float\x20near,\x20const\x20in\x20float\x20far\x20)\x20{\x0a\x09return\x20(\x20near\x20*\x20far\x20)\x20/\x20(\x20(\x20far\x20-\x20near\x20)\x20*\x20invClipZ\x20-\x20far\x20);\x0a}',
            'premultiplied_alpha_fragment': '#ifdef\x20PREMULTIPLIED_ALPHA\x0a\x09gl_FragColor.rgb\x20*=\x20gl_FragColor.a;\x0a#endif',
            'project_vertex': 'vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0agl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;',
            'dithering_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20dithering(\x20gl_FragColor.rgb\x20);\x0a#endif',
            'dithering_pars_fragment': '#if\x20defined(\x20DITHERING\x20)\x0a\x09vec3\x20dithering(\x20vec3\x20color\x20)\x20{\x0a\x09\x09float\x20grid_position\x20=\x20rand(\x20gl_FragCoord.xy\x20);\x0a\x09\x09vec3\x20dither_shift_RGB\x20=\x20vec3(\x200.25\x20/\x20255.0,\x20-0.25\x20/\x20255.0,\x200.25\x20/\x20255.0\x20);\x0a\x09\x09dither_shift_RGB\x20=\x20mix(\x202.0\x20*\x20dither_shift_RGB,\x20-2.0\x20*\x20dither_shift_RGB,\x20grid_position\x20);\x0a\x09\x09return\x20color\x20+\x20dither_shift_RGB;\x0a\x09}\x0a#endif',
            'roughnessmap_fragment': 'float\x20roughnessFactor\x20=\x20roughness;\x0a#ifdef\x20USE_ROUGHNESSMAP\x0a\x09vec4\x20texelRoughness\x20=\x20texture2D(\x20roughnessMap,\x20vUv\x20);\x0a\x09roughnessFactor\x20*=\x20texelRoughness.g;\x0a#endif',
            'roughnessmap_pars_fragment': '#ifdef\x20USE_ROUGHNESSMAP\x0a\x09uniform\x20sampler2D\x20roughnessMap;\x0a#endif',
            'shadowmap_pars_fragment': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20directionalShadowMap[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20spotShadowMap[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20sampler2D\x20pointShadowMap[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a\x09float\x20texture2DCompare(\x20sampler2D\x20depths,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09return\x20step(\x20compare,\x20unpackRGBAToDepth(\x20texture2D(\x20depths,\x20uv\x20)\x20)\x20);\x0a\x09}\x0a\x09float\x20texture2DShadowLerp(\x20sampler2D\x20depths,\x20vec2\x20size,\x20vec2\x20uv,\x20float\x20compare\x20)\x20{\x0a\x09\x09const\x20vec2\x20offset\x20=\x20vec2(\x200.0,\x201.0\x20);\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20size;\x0a\x09\x09vec2\x20centroidUV\x20=\x20floor(\x20uv\x20*\x20size\x20+\x200.5\x20)\x20/\x20size;\x0a\x09\x09float\x20lb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xx,\x20compare\x20);\x0a\x09\x09float\x20lt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.xy,\x20compare\x20);\x0a\x09\x09float\x20rb\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yx,\x20compare\x20);\x0a\x09\x09float\x20rt\x20=\x20texture2DCompare(\x20depths,\x20centroidUV\x20+\x20texelSize\x20*\x20offset.yy,\x20compare\x20);\x0a\x09\x09vec2\x20f\x20=\x20fract(\x20uv\x20*\x20size\x20+\x200.5\x20);\x0a\x09\x09float\x20a\x20=\x20mix(\x20lb,\x20lt,\x20f.y\x20);\x0a\x09\x09float\x20b\x20=\x20mix(\x20rb,\x20rt,\x20f.y\x20);\x0a\x09\x09float\x20c\x20=\x20mix(\x20a,\x20b,\x20f.x\x20);\x0a\x09\x09return\x20c;\x0a\x09}\x0a\x09float\x20getShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord\x20)\x20{\x0a\x09\x09float\x20shadow\x20=\x201.0;\x0a\x09\x09shadowCoord.xyz\x20/=\x20shadowCoord.w;\x0a\x09\x09shadowCoord.z\x20+=\x20shadowBias;\x0a\x09\x09bvec4\x20inFrustumVec\x20=\x20bvec4\x20(\x20shadowCoord.x\x20>=\x200.0,\x20shadowCoord.x\x20<=\x201.0,\x20shadowCoord.y\x20>=\x200.0,\x20shadowCoord.y\x20<=\x201.0\x20);\x0a\x09\x09bool\x20inFrustum\x20=\x20all(\x20inFrustumVec\x20);\x0a\x09\x09bvec2\x20frustumTestVec\x20=\x20bvec2(\x20inFrustum,\x20shadowCoord.z\x20<=\x201.0\x20);\x0a\x09\x09bool\x20frustumTest\x20=\x20all(\x20frustumTestVec\x20);\x0a\x09\x09if\x20(\x20frustumTest\x20)\x20{\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#elif\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20shadowMapSize;\x0a\x09\x09\x09float\x20dx0\x20=\x20-\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy0\x20=\x20-\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dx1\x20=\x20+\x20texelSize.x\x20*\x20shadowRadius;\x0a\x09\x09\x09float\x20dy1\x20=\x20+\x20texelSize.y\x20*\x20shadowRadius;\x0a\x09\x09\x09shadow\x20=\x20(\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy,\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x200.0\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x200.0,\x20dy1\x20),\x20shadowCoord.z\x20)\x20+\x0a\x09\x09\x09\x09texture2DShadowLerp(\x20shadowMap,\x20shadowMapSize,\x20shadowCoord.xy\x20+\x20vec2(\x20dx1,\x20dy1\x20),\x20shadowCoord.z\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09shadow\x20=\x20texture2DCompare(\x20shadowMap,\x20shadowCoord.xy,\x20shadowCoord.z\x20);\x0a\x09\x09#endif\x0a\x09\x09}\x0a\x09\x09return\x20shadow;\x0a\x09}\x0a\x09vec2\x20cubeToUV(\x20vec3\x20v,\x20float\x20texelSizeY\x20)\x20{\x0a\x09\x09vec3\x20absV\x20=\x20abs(\x20v\x20);\x0a\x09\x09float\x20scaleToCube\x20=\x201.0\x20/\x20max(\x20absV.x,\x20max(\x20absV.y,\x20absV.z\x20)\x20);\x0a\x09\x09absV\x20*=\x20scaleToCube;\x0a\x09\x09v\x20*=\x20scaleToCube\x20*\x20(\x201.0\x20-\x202.0\x20*\x20texelSizeY\x20);\x0a\x09\x09vec2\x20planar\x20=\x20v.xy;\x0a\x09\x09float\x20almostATexel\x20=\x201.5\x20*\x20texelSizeY;\x0a\x09\x09float\x20almostOne\x20=\x201.0\x20-\x20almostATexel;\x0a\x09\x09if\x20(\x20absV.z\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09if\x20(\x20v.z\x20>\x200.0\x20)\x0a\x09\x09\x09\x09planar.x\x20=\x204.0\x20-\x20v.x;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.x\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signX\x20=\x20sign(\x20v.x\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.z\x20*\x20signX\x20+\x202.0\x20*\x20signX;\x0a\x09\x09}\x20else\x20if\x20(\x20absV.y\x20>=\x20almostOne\x20)\x20{\x0a\x09\x09\x09float\x20signY\x20=\x20sign(\x20v.y\x20);\x0a\x09\x09\x09planar.x\x20=\x20v.x\x20+\x202.0\x20*\x20signY\x20+\x202.0;\x0a\x09\x09\x09planar.y\x20=\x20v.z\x20*\x20signY\x20-\x202.0;\x0a\x09\x09}\x0a\x09\x09return\x20vec2(\x200.125,\x200.25\x20)\x20*\x20planar\x20+\x20vec2(\x200.375,\x200.75\x20);\x0a\x09}\x0a\x09float\x20getPointShadow(\x20sampler2D\x20shadowMap,\x20vec2\x20shadowMapSize,\x20float\x20shadowBias,\x20float\x20shadowRadius,\x20vec4\x20shadowCoord,\x20float\x20shadowCameraNear,\x20float\x20shadowCameraFar\x20)\x20{\x0a\x09\x09vec2\x20texelSize\x20=\x20vec2(\x201.0\x20)\x20/\x20(\x20shadowMapSize\x20*\x20vec2(\x204.0,\x202.0\x20)\x20);\x0a\x09\x09vec3\x20lightToPosition\x20=\x20shadowCoord.xyz;\x0a\x09\x09float\x20dp\x20=\x20(\x20length(\x20lightToPosition\x20)\x20-\x20shadowCameraNear\x20)\x20/\x20(\x20shadowCameraFar\x20-\x20shadowCameraNear\x20);\x09\x09dp\x20+=\x20shadowBias;\x0a\x09\x09vec3\x20bd3D\x20=\x20normalize(\x20lightToPosition\x20);\x0a\x09\x09#if\x20defined(\x20SHADOWMAP_TYPE_PCF\x20)\x20||\x20defined(\x20SHADOWMAP_TYPE_PCF_SOFT\x20)\x0a\x09\x09\x09vec2\x20offset\x20=\x20vec2(\x20-\x201,\x201\x20)\x20*\x20shadowRadius\x20*\x20texelSize.y;\x0a\x09\x09\x09return\x20(\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yyx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxy,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.xxx,\x20texelSize.y\x20),\x20dp\x20)\x20+\x0a\x09\x09\x09\x09texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D\x20+\x20offset.yxx,\x20texelSize.y\x20),\x20dp\x20)\x0a\x09\x09\x09)\x20*\x20(\x201.0\x20/\x209.0\x20);\x0a\x09\x09#else\x0a\x09\x09\x09return\x20texture2DCompare(\x20shadowMap,\x20cubeToUV(\x20bd3D,\x20texelSize.y\x20),\x20dp\x20);\x0a\x09\x09#endif\x0a\x09}\x0a#endif',
            'shadowmap_pars_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20directionalShadowMatrix[\x20NUM_DIR_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vDirectionalShadowCoord[\x20NUM_DIR_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20spotShadowMatrix[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vSpotShadowCoord[\x20NUM_SPOT_LIGHTS\x20];\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09\x09uniform\x20mat4\x20pointShadowMatrix[\x20NUM_POINT_LIGHTS\x20];\x0a\x09\x09varying\x20vec4\x20vPointShadowCoord[\x20NUM_POINT_LIGHTS\x20];\x0a\x09#endif\x0a#endif',
            'shadowmap_vertex': '#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vDirectionalShadowCoord[\x20i\x20]\x20=\x20directionalShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vSpotShadowCoord[\x20i\x20]\x20=\x20spotShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09vPointShadowCoord[\x20i\x20]\x20=\x20pointShadowMatrix[\x20i\x20]\x20*\x20worldPosition;\x0a\x09}\x0a\x09#endif\x0a#endif',
            'shadowmask_pars_fragment': 'float\x20getShadowMask()\x20{\x0a\x09float\x20shadow\x20=\x201.0;\x0a\x09#ifdef\x20USE_SHADOWMAP\x0a\x09#if\x20NUM_DIR_LIGHTS\x20>\x200\x0a\x09DirectionalLight\x20directionalLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_DIR_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09directionalLight\x20=\x20directionalLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20directionalLight.shadow\x20)\x20?\x20getShadow(\x20directionalShadowMap[\x20i\x20],\x20directionalLight.shadowMapSize,\x20directionalLight.shadowBias,\x20directionalLight.shadowRadius,\x20vDirectionalShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_SPOT_LIGHTS\x20>\x200\x0a\x09SpotLight\x20spotLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_SPOT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09spotLight\x20=\x20spotLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20spotLight.shadow\x20)\x20?\x20getShadow(\x20spotShadowMap[\x20i\x20],\x20spotLight.shadowMapSize,\x20spotLight.shadowBias,\x20spotLight.shadowRadius,\x20vSpotShadowCoord[\x20i\x20]\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#if\x20NUM_POINT_LIGHTS\x20>\x200\x0a\x09PointLight\x20pointLight;\x0a\x09#pragma\x20unroll_loop\x0a\x09for\x20(\x20int\x20i\x20=\x200;\x20i\x20<\x20NUM_POINT_LIGHTS;\x20i\x20++\x20)\x20{\x0a\x09\x09pointLight\x20=\x20pointLights[\x20i\x20];\x0a\x09\x09shadow\x20*=\x20bool(\x20pointLight.shadow\x20)\x20?\x20getPointShadow(\x20pointShadowMap[\x20i\x20],\x20pointLight.shadowMapSize,\x20pointLight.shadowBias,\x20pointLight.shadowRadius,\x20vPointShadowCoord[\x20i\x20],\x20pointLight.shadowCameraNear,\x20pointLight.shadowCameraFar\x20)\x20:\x201.0;\x0a\x09}\x0a\x09#endif\x0a\x09#endif\x0a\x09return\x20shadow;\x0a}',
            'skinbase_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20boneMatX\x20=\x20getBoneMatrix(\x20skinIndex.x\x20);\x0a\x09mat4\x20boneMatY\x20=\x20getBoneMatrix(\x20skinIndex.y\x20);\x0a\x09mat4\x20boneMatZ\x20=\x20getBoneMatrix(\x20skinIndex.z\x20);\x0a\x09mat4\x20boneMatW\x20=\x20getBoneMatrix(\x20skinIndex.w\x20);\x0a#endif',
            'skinning_pars_vertex': '#ifdef\x20USE_SKINNING\x0a\x09uniform\x20mat4\x20bindMatrix;\x0a\x09uniform\x20mat4\x20bindMatrixInverse;\x0a\x09#ifdef\x20BONE_TEXTURE\x0a\x09\x09uniform\x20sampler2D\x20boneTexture;\x0a\x09\x09uniform\x20int\x20boneTextureSize;\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09float\x20j\x20=\x20i\x20*\x204.0;\x0a\x09\x09\x09float\x20x\x20=\x20mod(\x20j,\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20y\x20=\x20floor(\x20j\x20/\x20float(\x20boneTextureSize\x20)\x20);\x0a\x09\x09\x09float\x20dx\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09float\x20dy\x20=\x201.0\x20/\x20float(\x20boneTextureSize\x20);\x0a\x09\x09\x09y\x20=\x20dy\x20*\x20(\x20y\x20+\x200.5\x20);\x0a\x09\x09\x09vec4\x20v1\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x200.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v2\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x201.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v3\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x202.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09vec4\x20v4\x20=\x20texture2D(\x20boneTexture,\x20vec2(\x20dx\x20*\x20(\x20x\x20+\x203.5\x20),\x20y\x20)\x20);\x0a\x09\x09\x09mat4\x20bone\x20=\x20mat4(\x20v1,\x20v2,\x20v3,\x20v4\x20);\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#else\x0a\x09\x09uniform\x20mat4\x20boneMatrices[\x20MAX_BONES\x20];\x0a\x09\x09mat4\x20getBoneMatrix(\x20const\x20in\x20float\x20i\x20)\x20{\x0a\x09\x09\x09mat4\x20bone\x20=\x20boneMatrices[\x20int(i)\x20];\x0a\x09\x09\x09return\x20bone;\x0a\x09\x09}\x0a\x09#endif\x0a#endif',
            'skinning_vertex': '#ifdef\x20USE_SKINNING\x0a\x09vec4\x20skinVertex\x20=\x20bindMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a\x09vec4\x20skinned\x20=\x20vec4(\x200.0\x20);\x0a\x09skinned\x20+=\x20boneMatX\x20*\x20skinVertex\x20*\x20skinWeight.x;\x0a\x09skinned\x20+=\x20boneMatY\x20*\x20skinVertex\x20*\x20skinWeight.y;\x0a\x09skinned\x20+=\x20boneMatZ\x20*\x20skinVertex\x20*\x20skinWeight.z;\x0a\x09skinned\x20+=\x20boneMatW\x20*\x20skinVertex\x20*\x20skinWeight.w;\x0a\x09transformed\x20=\x20(\x20bindMatrixInverse\x20*\x20skinned\x20).xyz;\x0a#endif',
            'skinnormal_vertex': '#ifdef\x20USE_SKINNING\x0a\x09mat4\x20skinMatrix\x20=\x20mat4(\x200.0\x20);\x0a\x09skinMatrix\x20+=\x20skinWeight.x\x20*\x20boneMatX;\x0a\x09skinMatrix\x20+=\x20skinWeight.y\x20*\x20boneMatY;\x0a\x09skinMatrix\x20+=\x20skinWeight.z\x20*\x20boneMatZ;\x0a\x09skinMatrix\x20+=\x20skinWeight.w\x20*\x20boneMatW;\x0a\x09skinMatrix\x20\x20=\x20bindMatrixInverse\x20*\x20skinMatrix\x20*\x20bindMatrix;\x0a\x09objectNormal\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectNormal,\x200.0\x20)\x20).xyz;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09objectTangent\x20=\x20vec4(\x20skinMatrix\x20*\x20vec4(\x20objectTangent,\x200.0\x20)\x20).xyz;\x0a\x09#endif\x0a#endif',
            'specularmap_fragment': 'float\x20specularStrength;\x0a#ifdef\x20USE_SPECULARMAP\x0a\x09vec4\x20texelSpecular\x20=\x20texture2D(\x20specularMap,\x20vUv\x20);\x0a\x09specularStrength\x20=\x20texelSpecular.r;\x0a#else\x0a\x09specularStrength\x20=\x201.0;\x0a#endif',
            'specularmap_pars_fragment': '#ifdef\x20USE_SPECULARMAP\x0a\x09uniform\x20sampler2D\x20specularMap;\x0a#endif',
            'tonemapping_fragment': '#if\x20defined(\x20TONE_MAPPING\x20)\x0a\x09gl_FragColor.rgb\x20=\x20toneMapping(\x20gl_FragColor.rgb\x20);\x0a#endif',
            'tonemapping_pars_fragment': '#ifndef\x20saturate\x0a\x09#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0a#endif\x0auniform\x20float\x20toneMappingExposure;\x0auniform\x20float\x20toneMappingWhitePoint;\x0avec3\x20LinearToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09return\x20toneMappingExposure\x20*\x20color;\x0a}\x0avec3\x20ReinhardToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20color\x20/\x20(\x20vec3(\x201.0\x20)\x20+\x20color\x20)\x20);\x0a}\x0a#define\x20Uncharted2Helper(\x20x\x20)\x20max(\x20(\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.10\x20*\x200.50\x20)\x20+\x200.20\x20*\x200.02\x20)\x20/\x20(\x20x\x20*\x20(\x200.15\x20*\x20x\x20+\x200.50\x20)\x20+\x200.20\x20*\x200.30\x20)\x20)\x20-\x200.02\x20/\x200.30,\x20vec3(\x200.0\x20)\x20)\x0avec3\x20Uncharted2ToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20Uncharted2Helper(\x20color\x20)\x20/\x20Uncharted2Helper(\x20vec3(\x20toneMappingWhitePoint\x20)\x20)\x20);\x0a}\x0avec3\x20OptimizedCineonToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09color\x20=\x20max(\x20vec3(\x200.0\x20),\x20color\x20-\x200.004\x20);\x0a\x09return\x20pow(\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x200.5\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x206.2\x20*\x20color\x20+\x201.7\x20)\x20+\x200.06\x20),\x20vec3(\x202.2\x20)\x20);\x0a}\x0avec3\x20ACESFilmicToneMapping(\x20vec3\x20color\x20)\x20{\x0a\x09color\x20*=\x20toneMappingExposure;\x0a\x09return\x20saturate(\x20(\x20color\x20*\x20(\x202.51\x20*\x20color\x20+\x200.03\x20)\x20)\x20/\x20(\x20color\x20*\x20(\x202.43\x20*\x20color\x20+\x200.59\x20)\x20+\x200.14\x20)\x20);\x0a}',
            'uv_pars_fragment': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a#endif',
            'uv_pars_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09varying\x20vec2\x20vUv;\x0a\x09uniform\x20mat3\x20uvTransform;\x0a#endif',
            'uv_vertex': '#if\x20defined(\x20USE_MAP\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20defined(\x20USE_NORMALMAP\x20)\x20||\x20defined(\x20USE_SPECULARMAP\x20)\x20||\x20defined(\x20USE_ALPHAMAP\x20)\x20||\x20defined(\x20USE_EMISSIVEMAP\x20)\x20||\x20defined(\x20USE_ROUGHNESSMAP\x20)\x20||\x20defined(\x20USE_METALNESSMAP\x20)\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a#endif',
            'uv2_pars_fragment': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
            'uv2_pars_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09attribute\x20vec2\x20uv2;\x0a\x09varying\x20vec2\x20vUv2;\x0a#endif',
            'uv2_vertex': '#if\x20defined(\x20USE_LIGHTMAP\x20)\x20||\x20defined(\x20USE_AOMAP\x20)\x0a\x09vUv2\x20=\x20uv2;\x0a#endif',
            'worldpos_vertex': '#if\x20defined(\x20USE_ENVMAP\x20)\x20||\x20defined(\x20DISTANCE\x20)\x20||\x20defined\x20(\x20USE_SHADOWMAP\x20)\x0a\x09vec4\x20worldPosition\x20=\x20modelMatrix\x20*\x20vec4(\x20transformed,\x201.0\x20);\x0a#endif',
            'background_frag': 'uniform\x20sampler2D\x20t2D;\x0avarying\x20vec2\x20vUv;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20t2D,\x20vUv\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
            'background_vert': 'varying\x20vec2\x20vUv;\x0auniform\x20mat3\x20uvTransform;\x0avoid\x20main()\x20{\x0a\x09vUv\x20=\x20(\x20uvTransform\x20*\x20vec3(\x20uv,\x201\x20)\x20).xy;\x0a\x09gl_Position\x20=\x20vec4(\x20position.xy,\x201.0,\x201.0\x20);\x0a}',
            'cube_frag': 'uniform\x20samplerCube\x20tCube;\x0auniform\x20float\x20tFlip;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vWorldDirection;\x0avoid\x20main()\x20{\x0a\x09vec4\x20texColor\x20=\x20textureCube(\x20tCube,\x20vec3(\x20tFlip\x20*\x20vWorldDirection.x,\x20vWorldDirection.yz\x20)\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09gl_FragColor.a\x20*=\x20opacity;\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
            'cube_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_Position.z\x20=\x20gl_Position.w;\x0a}',
            'depth_frag': '#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09uniform\x20float\x20opacity;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09diffuseColor.a\x20=\x20opacity;\x0a\x09#endif\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#if\x20DEPTH_PACKING\x20==\x203200\x0a\x09\x09gl_FragColor\x20=\x20vec4(\x20vec3(\x201.0\x20-\x20gl_FragCoord.z\x20),\x20opacity\x20);\x0a\x09#elif\x20DEPTH_PACKING\x20==\x203201\x0a\x09\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20gl_FragCoord.z\x20);\x0a\x09#endif\x0a}',
            'depth_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a}',
            'distanceRGBA_frag': '#define\x20DISTANCE\x0auniform\x20vec3\x20referencePosition;\x0auniform\x20float\x20nearDistance;\x0auniform\x20float\x20farDistance;\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main\x20()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09float\x20dist\x20=\x20length(\x20vWorldPosition\x20-\x20referencePosition\x20);\x0a\x09dist\x20=\x20(\x20dist\x20-\x20nearDistance\x20)\x20/\x20(\x20farDistance\x20-\x20nearDistance\x20);\x0a\x09dist\x20=\x20saturate(\x20dist\x20);\x0a\x09gl_FragColor\x20=\x20packDepthToRGBA(\x20dist\x20);\x0a}',
            'distanceRGBA_vert': '#define\x20DISTANCE\x0avarying\x20vec3\x20vWorldPosition;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_DISPLACEMENTMAP\x0a\x09\x09#include\x20<beginnormal_vertex>\x0a\x09\x09#include\x20<morphnormal_vertex>\x0a\x09\x09#include\x20<skinnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vWorldPosition\x20=\x20worldPosition.xyz;\x0a}',
            'equirect_frag': 'uniform\x20sampler2D\x20tEquirect;\x0avarying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vec3\x20direction\x20=\x20normalize(\x20vWorldDirection\x20);\x0a\x09vec2\x20sampleUV;\x0a\x09sampleUV.y\x20=\x20asin(\x20clamp(\x20direction.y,\x20-\x201.0,\x201.0\x20)\x20)\x20*\x20RECIPROCAL_PI\x20+\x200.5;\x0a\x09sampleUV.x\x20=\x20atan(\x20direction.z,\x20direction.x\x20)\x20*\x20RECIPROCAL_PI2\x20+\x200.5;\x0a\x09vec4\x20texColor\x20=\x20texture2D(\x20tEquirect,\x20sampleUV\x20);\x0a\x09gl_FragColor\x20=\x20mapTexelToLinear(\x20texColor\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a}',
            'equirect_vert': 'varying\x20vec3\x20vWorldDirection;\x0a#include\x20<common>\x0avoid\x20main()\x20{\x0a\x09vWorldDirection\x20=\x20transformDirection(\x20position,\x20modelMatrix\x20);\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a}',
            'linedashed_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20float\x20dashSize;\x0auniform\x20float\x20totalSize;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09if\x20(\x20mod(\x20vLineDistance,\x20totalSize\x20)\x20>\x20dashSize\x20)\x20{\x0a\x09\x09discard;\x0a\x09}\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
            'linedashed_vert': 'uniform\x20float\x20scale;\x0aattribute\x20float\x20lineDistance;\x0avarying\x20float\x20vLineDistance;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09vLineDistance\x20=\x20scale\x20*\x20lineDistance;\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'meshbasic_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09#ifdef\x20USE_LIGHTMAP\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20texture2D(\x20lightMap,\x20vUv2\x20).xyz\x20*\x20lightMapIntensity;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vec3(\x201.0\x20);\x0a\x09#endif\x0a\x09#include\x20<aomap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20diffuseColor.rgb;\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.indirectDiffuse;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
            'meshbasic_vert': '#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#ifdef\x20USE_ENVMAP\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'meshlambert_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x09#else\x0a\x09\x09reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x09#endif\x0a\x09#include\x20<lightmap_fragment>\x0a\x09reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x09#ifdef\x20DOUBLE_SIDED\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x09#else\x0a\x09\x09reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x09#endif\x0a\x09reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
            'meshlambert_vert': '#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x09varying\x20vec3\x20vLightBack;\x0a\x09varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<lights_lambert_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'meshmatcap_frag': '#define\x20MATCAP\x0auniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0auniform\x20sampler2D\x20matcap;\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09vec3\x20viewDir\x20=\x20normalize(\x20vViewPosition\x20);\x0a\x09vec3\x20x\x20=\x20normalize(\x20vec3(\x20viewDir.z,\x200.0,\x20-\x20viewDir.x\x20)\x20);\x0a\x09vec3\x20y\x20=\x20cross(\x20viewDir,\x20x\x20);\x0a\x09vec2\x20uv\x20=\x20vec2(\x20dot(\x20x,\x20normal\x20),\x20dot(\x20y,\x20normal\x20)\x20)\x20*\x200.495\x20+\x200.5;\x0a\x09#ifdef\x20USE_MATCAP\x0a\x09\x09vec4\x20matcapColor\x20=\x20texture2D(\x20matcap,\x20uv\x20);\x0a\x09\x09matcapColor\x20=\x20matcapTexelToLinear(\x20matcapColor\x20);\x0a\x09#else\x0a\x09\x09vec4\x20matcapColor\x20=\x20vec4(\x201.0\x20);\x0a\x09#endif\x0a\x09vec3\x20outgoingLight\x20=\x20diffuseColor.rgb\x20*\x20matcapColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
            'meshmatcap_vert': '#define\x20MATCAP\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a\x09#ifndef\x20FLAT_SHADED\x0a\x09\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a}',
            'meshphong_frag': '#define\x20PHONG\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20vec3\x20specular;\x0auniform\x20float\x20shininess;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<gradientmap_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_phong_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<specularmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<specularmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_phong_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09#include\x20<envmap_fragment>\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
            'meshphong_vert': '#define\x20PHONG\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<envmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<envmap_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'meshphysical_frag': '#define\x20PHYSICAL\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20roughness;\x0auniform\x20float\x20metalness;\x0auniform\x20float\x20opacity;\x0a#ifndef\x20STANDARD\x0a\x09uniform\x20float\x20clearCoat;\x0a\x09uniform\x20float\x20clearCoatRoughness;\x0a#endif\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<cube_uv_reflection_fragment>\x0a#include\x20<envmap_pars_fragment>\x0a#include\x20<envmap_physical_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<lights_physical_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<roughnessmap_pars_fragment>\x0a#include\x20<metalnessmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x09vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphamap_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09#include\x20<roughnessmap_fragment>\x0a\x09#include\x20<metalnessmap_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09#include\x20<emissivemap_fragment>\x0a\x09#include\x20<lights_physical_fragment>\x0a\x09#include\x20<lights_fragment_begin>\x0a\x09#include\x20<lights_fragment_maps>\x0a\x09#include\x20<lights_fragment_end>\x0a\x09#include\x20<aomap_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectSpecular\x20+\x20totalEmissiveRadiance;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<dithering_fragment>\x0a}',
            'meshphysical_vert': '#define\x20PHYSICAL\x0avarying\x20vec3\x20vViewPosition;\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<uv2_vertex>\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'normal_frag': '#define\x20NORMAL\x0auniform\x20float\x20opacity;\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<packing>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<bumpmap_pars_fragment>\x0a#include\x20<normalmap_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<normal_fragment_begin>\x0a\x09#include\x20<normal_fragment_maps>\x0a\x09gl_FragColor\x20=\x20vec4(\x20packNormalToRGB(\x20normal\x20),\x20opacity\x20);\x0a}',
            'normal_vert': '#define\x20NORMAL\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09varying\x20vec3\x20vViewPosition;\x0a#endif\x0a#ifndef\x20FLAT_SHADED\x0a\x09varying\x20vec3\x20vNormal;\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09varying\x20vec3\x20vTangent;\x0a\x09\x09varying\x20vec3\x20vBitangent;\x0a\x09#endif\x0a#endif\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<displacementmap_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<skinning_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09#include\x20<beginnormal_vertex>\x0a\x09#include\x20<morphnormal_vertex>\x0a\x09#include\x20<skinbase_vertex>\x0a\x09#include\x20<skinnormal_vertex>\x0a\x09#include\x20<defaultnormal_vertex>\x0a#ifndef\x20FLAT_SHADED\x0a\x09vNormal\x20=\x20normalize(\x20transformedNormal\x20);\x0a\x09#ifdef\x20USE_TANGENT\x0a\x09\x09vTangent\x20=\x20normalize(\x20transformedTangent\x20);\x0a\x09\x09vBitangent\x20=\x20normalize(\x20cross(\x20vNormal,\x20vTangent\x20)\x20*\x20tangent.w\x20);\x0a\x09#endif\x0a#endif\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<skinning_vertex>\x0a\x09#include\x20<displacementmap_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<logdepthbuf_vertex>\x0a#if\x20defined(\x20FLAT_SHADED\x20)\x20||\x20defined(\x20USE_BUMPMAP\x20)\x20||\x20(\x20defined(\x20USE_NORMALMAP\x20)\x20&&\x20!\x20defined(\x20OBJECTSPACE_NORMALMAP\x20)\x20)\x0a\x09vViewPosition\x20=\x20-\x20mvPosition.xyz;\x0a#endif\x0a}',
            'points_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<map_particle_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_particle_fragment>\x0a\x09#include\x20<color_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<premultiplied_alpha_fragment>\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
            'points_vert': 'uniform\x20float\x20size;\x0auniform\x20float\x20scale;\x0a#include\x20<common>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<morphtarget_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<color_vertex>\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<morphtarget_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09gl_PointSize\x20=\x20size;\x0a\x09#ifdef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20gl_PointSize\x20*=\x20(\x20scale\x20/\x20-\x20mvPosition.z\x20);\x0a\x09#endif\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'shadow_frag': 'uniform\x20vec3\x20color;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<packing>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x20color,\x20opacity\x20*\x20(\x201.0\x20-\x20getShadowMask()\x20)\x20);\x0a\x09#include\x20<fog_fragment>\x0a}',
            'shadow_vert': '#include\x20<fog_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<begin_vertex>\x0a\x09#include\x20<project_vertex>\x0a\x09#include\x20<worldpos_vertex>\x0a\x09#include\x20<shadowmap_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}',
            'sprite_frag': 'uniform\x20vec3\x20diffuse;\x0auniform\x20float\x20opacity;\x0a#include\x20<common>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<logdepthbuf_pars_fragment>\x0a#include\x20<clipping_planes_pars_fragment>\x0avoid\x20main()\x20{\x0a\x09#include\x20<clipping_planes_fragment>\x0a\x09vec3\x20outgoingLight\x20=\x20vec3(\x200.0\x20);\x0a\x09vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x09#include\x20<logdepthbuf_fragment>\x0a\x09#include\x20<map_fragment>\x0a\x09#include\x20<alphatest_fragment>\x0a\x09outgoingLight\x20=\x20diffuseColor.rgb;\x0a\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x09#include\x20<tonemapping_fragment>\x0a\x09#include\x20<encodings_fragment>\x0a\x09#include\x20<fog_fragment>\x0a}',
            'sprite_vert': 'uniform\x20float\x20rotation;\x0auniform\x20vec2\x20center;\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a#include\x20<logdepthbuf_pars_vertex>\x0a#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x09#include\x20<uv_vertex>\x0a\x09vec4\x20mvPosition\x20=\x20modelViewMatrix\x20*\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x09vec2\x20scale;\x0a\x09scale.x\x20=\x20length(\x20vec3(\x20modelMatrix[\x200\x20].x,\x20modelMatrix[\x200\x20].y,\x20modelMatrix[\x200\x20].z\x20)\x20);\x0a\x09scale.y\x20=\x20length(\x20vec3(\x20modelMatrix[\x201\x20].x,\x20modelMatrix[\x201\x20].y,\x20modelMatrix[\x201\x20].z\x20)\x20);\x0a\x09#ifndef\x20USE_SIZEATTENUATION\x0a\x09\x09bool\x20isPerspective\x20=\x20(\x20projectionMatrix[\x202\x20][\x203\x20]\x20==\x20-\x201.0\x20);\x0a\x09\x09if\x20(\x20isPerspective\x20)\x20scale\x20*=\x20-\x20mvPosition.z;\x0a\x09#endif\x0a\x09vec2\x20alignedPosition\x20=\x20(\x20position.xy\x20-\x20(\x20center\x20-\x20vec2(\x200.5\x20)\x20)\x20)\x20*\x20scale;\x0a\x09vec2\x20rotatedPosition;\x0a\x09rotatedPosition.x\x20=\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.x\x20-\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09rotatedPosition.y\x20=\x20sin(\x20rotation\x20)\x20*\x20alignedPosition.x\x20+\x20cos(\x20rotation\x20)\x20*\x20alignedPosition.y;\x0a\x09mvPosition.xy\x20+=\x20rotatedPosition;\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20mvPosition;\x0a\x09#include\x20<logdepthbuf_vertex>\x0a\x09#include\x20<clipping_planes_vertex>\x0a\x09#include\x20<fog_vertex>\x0a}'
        };
        function vQ(bf) {
            var bg = {};
            for (var bh in bf)
                for (var bi in bg[bh] = {},
                bf[bh]) {
                    var bF = bf[bh][bi];
                    bF && (bF['isColor'] || bF['isMatrix3'] || bF['isMatrix4'] || bF['isVector2'] || bF['isVector3'] || bF['isVector4'] || bF['isTexture']) ? bg[bh][bi] = bF['clone']() : Array['isArray'](bF) ? bg[bh][bi] = bF['slice']() : bg[bh][bi] = bF;
                }
            return bg;
        }
        function vW(bf) {
            for (var bg = {}, bh = 0x0; bh < bf['length']; bh++) {
                var bi = vQ(bf[bh]);
                for (var bF in bi)
                    bg[bF] = bi[bF];
            }
            return bg;
        }
        var w2, w3, w4, w5 = {
            'clone': vQ,
            'merge': vW
        }, w6 = {
            'aliceblue': 0xf0f8ff,
            'antiquewhite': 0xfaebd7,
            'aqua': 0xffff,
            'aquamarine': 0x7fffd4,
            'azure': 0xf0ffff,
            'beige': 0xf5f5dc,
            'bisque': 0xffe4c4,
            'black': 0x0,
            'blanchedalmond': 0xffebcd,
            'blue': 0xff,
            'blueviolet': 0x8a2be2,
            'brown': 0xa52a2a,
            'burlywood': 0xdeb887,
            'cadetblue': 0x5f9ea0,
            'chartreuse': 0x7fff00,
            'chocolate': 0xd2691e,
            'coral': 0xff7f50,
            'cornflowerblue': 0x6495ed,
            'cornsilk': 0xfff8dc,
            'crimson': 0xdc143c,
            'cyan': 0xffff,
            'darkblue': 0x8b,
            'darkcyan': 0x8b8b,
            'darkgoldenrod': 0xb8860b,
            'darkgray': 0xa9a9a9,
            'darkgreen': 0x6400,
            'darkgrey': 0xa9a9a9,
            'darkkhaki': 0xbdb76b,
            'darkmagenta': 0x8b008b,
            'darkolivegreen': 0x556b2f,
            'darkorange': 0xff8c00,
            'darkorchid': 0x9932cc,
            'darkred': 0x8b0000,
            'darksalmon': 0xe9967a,
            'darkseagreen': 0x8fbc8f,
            'darkslateblue': 0x483d8b,
            'darkslategray': 0x2f4f4f,
            'darkslategrey': 0x2f4f4f,
            'darkturquoise': 0xced1,
            'darkviolet': 0x9400d3,
            'deeppink': 0xff1493,
            'deepskyblue': 0xbfff,
            'dimgray': 0x696969,
            'dimgrey': 0x696969,
            'dodgerblue': 0x1e90ff,
            'firebrick': 0xb22222,
            'floralwhite': 0xfffaf0,
            'forestgreen': 0x228b22,
            'fuchsia': 0xff00ff,
            'gainsboro': 0xdcdcdc,
            'ghostwhite': 0xf8f8ff,
            'gold': 0xffd700,
            'goldenrod': 0xdaa520,
            'gray': 0x808080,
            'green': 0x8000,
            'greenyellow': 0xadff2f,
            'grey': 0x808080,
            'honeydew': 0xf0fff0,
            'hotpink': 0xff69b4,
            'indianred': 0xcd5c5c,
            'indigo': 0x4b0082,
            'ivory': 0xfffff0,
            'khaki': 0xf0e68c,
            'lavender': 0xe6e6fa,
            'lavenderblush': 0xfff0f5,
            'lawngreen': 0x7cfc00,
            'lemonchiffon': 0xfffacd,
            'lightblue': 0xadd8e6,
            'lightcoral': 0xf08080,
            'lightcyan': 0xe0ffff,
            'lightgoldenrodyellow': 0xfafad2,
            'lightgray': 0xd3d3d3,
            'lightgreen': 0x90ee90,
            'lightgrey': 0xd3d3d3,
            'lightpink': 0xffb6c1,
            'lightsalmon': 0xffa07a,
            'lightseagreen': 0x20b2aa,
            'lightskyblue': 0x87cefa,
            'lightslategray': 0x778899,
            'lightslategrey': 0x778899,
            'lightsteelblue': 0xb0c4de,
            'lightyellow': 0xffffe0,
            'lime': 0xff00,
            'limegreen': 0x32cd32,
            'linen': 0xfaf0e6,
            'magenta': 0xff00ff,
            'maroon': 0x800000,
            'mediumaquamarine': 0x66cdaa,
            'mediumblue': 0xcd,
            'mediumorchid': 0xba55d3,
            'mediumpurple': 0x9370db,
            'mediumseagreen': 0x3cb371,
            'mediumslateblue': 0x7b68ee,
            'mediumspringgreen': 0xfa9a,
            'mediumturquoise': 0x48d1cc,
            'mediumvioletred': 0xc71585,
            'midnightblue': 0x191970,
            'mintcream': 0xf5fffa,
            'mistyrose': 0xffe4e1,
            'moccasin': 0xffe4b5,
            'navajowhite': 0xffdead,
            'navy': 0x80,
            'oldlace': 0xfdf5e6,
            'olive': 0x808000,
            'olivedrab': 0x6b8e23,
            'orange': 0xffa500,
            'orangered': 0xff4500,
            'orchid': 0xda70d6,
            'palegoldenrod': 0xeee8aa,
            'palegreen': 0x98fb98,
            'paleturquoise': 0xafeeee,
            'palevioletred': 0xdb7093,
            'papayawhip': 0xffefd5,
            'peachpuff': 0xffdab9,
            'peru': 0xcd853f,
            'pink': 0xffc0cb,
            'plum': 0xdda0dd,
            'powderblue': 0xb0e0e6,
            'purple': 0x800080,
            'rebeccapurple': 0x663399,
            'red': 0xff0000,
            'rosybrown': 0xbc8f8f,
            'royalblue': 0x4169e1,
            'saddlebrown': 0x8b4513,
            'salmon': 0xfa8072,
            'sandybrown': 0xf4a460,
            'seagreen': 0x2e8b57,
            'seashell': 0xfff5ee,
            'sienna': 0xa0522d,
            'silver': 0xc0c0c0,
            'skyblue': 0x87ceeb,
            'slateblue': 0x6a5acd,
            'slategray': 0x708090,
            'slategrey': 0x708090,
            'snow': 0xfffafa,
            'springgreen': 0xff7f,
            'steelblue': 0x4682b4,
            'tan': 0xd2b48c,
            'teal': 0x8080,
            'thistle': 0xd8bfd8,
            'tomato': 0xff6347,
            'turquoise': 0x40e0d0,
            'violet': 0xee82ee,
            'wheat': 0xf5deb3,
            'white': 0xffffff,
            'whitesmoke': 0xf5f5f5,
            'yellow': 0xffff00,
            'yellowgreen': 0x9acd32
        };
        function w7(bf, bg, bh) {
            return void 0x0 === bg && void 0x0 === bh ? this['set'](bf) : this['setRGB'](bf, bg, bh);
        }
        Object['assign'](w7['prototype'], {
            'isColor': !0x0,
            'r': 0x1,
            'g': 0x1,
            'b': 0x1,
            'set': function(bf) {
                return bf && bf['isColor'] ? this['copy'](bf) : 'number' == typeof bf ? this['setHex'](bf) : 'string' == typeof bf && this['setStyle'](bf),
                this;
            },
            'setScalar': function(bf) {
                return this['r'] = bf,
                this['g'] = bf,
                this['b'] = bf,
                this;
            },
            'setHex': function(bf) {
                return bf = Math['floor'](bf),
                this['r'] = (bf >> 0x10 & 0xff) / 0xff,
                this['g'] = (bf >> 0x8 & 0xff) / 0xff,
                this['b'] = (0xff & bf) / 0xff,
                this;
            },
            'setRGB': function(bf, bg, bh) {
                return this['r'] = bf,
                this['g'] = bg,
                this['b'] = bh,
                this;
            },
            'setHSL': function() {
                function bf(bf, bg, bh) {
                    return bh < 0x0 && (bh += 0x1),
                    bh > 0x1 && (bh -= 0x1),
                    bh < 0x1 / 0x6 ? bf + 0x6 * (bg - bf) * bh : bh < 0.5 ? bg : bh < 0x2 / 0x3 ? bf + 0x6 * (bg - bf) * (0x2 / 0x3 - bh) : bf;
                }
                return function(bg, bh, bi) {
                    if (bg = e2['euclideanModulo'](bg, 0x1),
                    bh = e2['clamp'](bh, 0x0, 0x1),
                    bi = e2['clamp'](bi, 0x0, 0x1),
                    0x0 === bh)
                        this['r'] = this['g'] = this['b'] = bi;
                    else {
                        var bF = bi <= 0.5 ? bi * (0x1 + bh) : bi + bh - bi * bh
                          , bG = 0x2 * bi - bF;
                        this['r'] = bf(bG, bF, bg + 0x1 / 0x3),
                        this['g'] = bf(bG, bF, bg),
                        this['b'] = bf(bG, bF, bg - 0x1 / 0x3);
                    }
                    return this;
                }
                ;
            }(),
            'setStyle': function(bf) {
                function bg(bg) {
                    void 0x0 !== bg && parseFloat(bg) < 0x1 && console['warn']('THREE.Color:\x20Alpha\x20component\x20of\x20' + bf + '\x20will\x20be\x20ignored.');
                }
                var bh;
                if (bh = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/['exec'](bf)) {
                    var bi, bF = bh[0x1], bG = bh[0x2];
                    switch (bF) {
                    case 'rgb':
                    case 'rgba':
                        if (bi = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/['exec'](bG))
                            return this['r'] = Math['min'](0xff, parseInt(bi[0x1], 0xa)) / 0xff,
                            this['g'] = Math['min'](0xff, parseInt(bi[0x2], 0xa)) / 0xff,
                            this['b'] = Math['min'](0xff, parseInt(bi[0x3], 0xa)) / 0xff,
                            bg(bi[0x5]),
                            this;
                        if (bi = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/['exec'](bG))
                            return this['r'] = Math['min'](0x64, parseInt(bi[0x1], 0xa)) / 0x64,
                            this['g'] = Math['min'](0x64, parseInt(bi[0x2], 0xa)) / 0x64,
                            this['b'] = Math['min'](0x64, parseInt(bi[0x3], 0xa)) / 0x64,
                            bg(bi[0x5]),
                            this;
                        break;
                    case 'hsl':
                    case 'hsla':
                        if (bi = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/['exec'](bG)) {
                            var bH = parseFloat(bi[0x1]) / 0x168
                              , bI = parseInt(bi[0x2], 0xa) / 0x64
                              , bJ = parseInt(bi[0x3], 0xa) / 0x64;
                            return bg(bi[0x5]),
                            this['setHSL'](bH, bI, bJ);
                        }
                    }
                } else if (bh = /^\#([A-Fa-f0-9]+)$/['exec'](bf)) {
                    var bK, bL = (bK = bh[0x1])['length'];
                    if (0x3 === bL)
                        return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x0), 0x10) / 0xff,
                        this['g'] = parseInt(bK['charAt'](0x1) + bK['charAt'](0x1), 0x10) / 0xff,
                        this['b'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x2), 0x10) / 0xff,
                        this;
                    if (0x6 === bL)
                        return this['r'] = parseInt(bK['charAt'](0x0) + bK['charAt'](0x1), 0x10) / 0xff,
                        this['g'] = parseInt(bK['charAt'](0x2) + bK['charAt'](0x3), 0x10) / 0xff,
                        this['b'] = parseInt(bK['charAt'](0x4) + bK['charAt'](0x5), 0x10) / 0xff,
                        this;
                }
                bf && bf['length'] > 0x0 && (void 0x0 !== (bK = w6[bf]) ? this['setHex'](bK) : console['warn']('THREE.Color:\x20Unknown\x20color\x20' + bf));
                return this;
            },
            'clone': function() {
                return new this['constructor'](this['r'],this['g'],this['b']);
            },
            'copy': function(bf) {
                return this['r'] = bf['r'],
                this['g'] = bf['g'],
                this['b'] = bf['b'],
                this;
            },
            'copyGammaToLinear': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x2),
                this['r'] = Math['pow'](bf['r'], bg),
                this['g'] = Math['pow'](bf['g'], bg),
                this['b'] = Math['pow'](bf['b'], bg),
                this;
            },
            'copyLinearToGamma': function(bf, bg) {
                void 0x0 === bg && (bg = 0x2);
                var bh = bg > 0x0 ? 0x1 / bg : 0x1;
                return this['r'] = Math['pow'](bf['r'], bh),
                this['g'] = Math['pow'](bf['g'], bh),
                this['b'] = Math['pow'](bf['b'], bh),
                this;
            },
            'convertGammaToLinear': function(bf) {
                return this['copyGammaToLinear'](this, bf),
                this;
            },
            'convertLinearToGamma': function(bf) {
                return this['copyLinearToGamma'](this, bf),
                this;
            },
            'copySRGBToLinear': function() {
                function bf(bf) {
                    return bf < 0.04045 ? 0.0773993808 * bf : Math['pow'](0.9478672986 * bf + 0.0521327014, 2.4);
                }
                return function(bg) {
                    return this['r'] = bf(bg['r']),
                    this['g'] = bf(bg['g']),
                    this['b'] = bf(bg['b']),
                    this;
                }
                ;
            }(),
            'copyLinearToSRGB': function() {
                function bf(bf) {
                    return bf < 0.0031308 ? 12.92 * bf : 1.055 * Math['pow'](bf, 0.41666) - 0.055;
                }
                return function(bg) {
                    return this['r'] = bf(bg['r']),
                    this['g'] = bf(bg['g']),
                    this['b'] = bf(bg['b']),
                    this;
                }
                ;
            }(),
            'convertSRGBToLinear': function() {
                return this['copySRGBToLinear'](this),
                this;
            },
            'convertLinearToSRGB': function() {
                return this['copyLinearToSRGB'](this),
                this;
            },
            'getHex': function() {
                return 0xff * this['r'] << 0x10 ^ 0xff * this['g'] << 0x8 ^ 0xff * this['b'] << 0x0;
            },
            'getHexString': function() {
                return ('000000' + this['getHex']()['toString'](0x10))['slice'](-0x6);
            },
            'getHSL': function(bf) {
                void 0x0 === bf && (console['warn']('THREE.Color:\x20.getHSL()\x20target\x20is\x20now\x20required'),
                bf = {
                    'h': 0x0,
                    's': 0x0,
                    'l': 0x0
                });
                var bg, bh, bi = this['r'], bF = this['g'], bG = this['b'], bH = Math['max'](bi, bF, bG), bI = Math['min'](bi, bF, bG), bJ = (bI + bH) / 0x2;
                if (bI === bH)
                    bg = 0x0,
                    bh = 0x0;
                else {
                    var bK = bH - bI;
                    switch (bh = bJ <= 0.5 ? bK / (bH + bI) : bK / (0x2 - bH - bI),
                    bH) {
                    case bi:
                        bg = (bF - bG) / bK + (bF < bG ? 0x6 : 0x0);
                        break;
                    case bF:
                        bg = (bG - bi) / bK + 0x2;
                        break;
                    case bG:
                        bg = (bi - bF) / bK + 0x4;
                    }
                    bg /= 0x6;
                }
                return bf['h'] = bg,
                bf['s'] = bh,
                bf['l'] = bJ,
                bf;
            },
            'getStyle': function() {
                return 'rgb(' + (0xff * this['r'] | 0x0) + ',' + (0xff * this['g'] | 0x0) + ',' + (0xff * this['b'] | 0x0) + ')';
            },
            'offsetHSL': (w4 = {},
            function(bf, bg, bh) {
                return this['getHSL'](w4),
                w4['h'] += bf,
                w4['s'] += bg,
                w4['l'] += bh,
                this['setHSL'](w4['h'], w4['s'], w4['l']),
                this;
            }
            ),
            'add': function(bf) {
                return this['r'] += bf['r'],
                this['g'] += bf['g'],
                this['b'] += bf['b'],
                this;
            },
            'addColors': function(bf, bg) {
                return this['r'] = bf['r'] + bg['r'],
                this['g'] = bf['g'] + bg['g'],
                this['b'] = bf['b'] + bg['b'],
                this;
            },
            'addScalar': function(bf) {
                return this['r'] += bf,
                this['g'] += bf,
                this['b'] += bf,
                this;
            },
            'sub': function(bf) {
                return this['r'] = Math['max'](0x0, this['r'] - bf['r']),
                this['g'] = Math['max'](0x0, this['g'] - bf['g']),
                this['b'] = Math['max'](0x0, this['b'] - bf['b']),
                this;
            },
            'multiply': function(bf) {
                return this['r'] *= bf['r'],
                this['g'] *= bf['g'],
                this['b'] *= bf['b'],
                this;
            },
            'multiplyScalar': function(bf) {
                return this['r'] *= bf,
                this['g'] *= bf,
                this['b'] *= bf,
                this;
            },
            'lerp': function(bf, bg) {
                return this['r'] += (bf['r'] - this['r']) * bg,
                this['g'] += (bf['g'] - this['g']) * bg,
                this['b'] += (bf['b'] - this['b']) * bg,
                this;
            },
            'lerpHSL': (w2 = {
                'h': 0x0,
                's': 0x0,
                'l': 0x0
            },
            w3 = {
                'h': 0x0,
                's': 0x0,
                'l': 0x0
            },
            function(bf, bg) {
                this['getHSL'](w2),
                bf['getHSL'](w3);
                var bh = e2['lerp'](w2['h'], w3['h'], bg)
                  , bi = e2['lerp'](w2['s'], w3['s'], bg)
                  , bF = e2['lerp'](w2['l'], w3['l'], bg);
                return this['setHSL'](bh, bi, bF),
                this;
            }
            ),
            'equals': function(bf) {
                return bf['r'] === this['r'] && bf['g'] === this['g'] && bf['b'] === this['b'];
            },
            'fromArray': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['r'] = bf[bg],
                this['g'] = bf[bg + 0x1],
                this['b'] = bf[bg + 0x2],
                this;
            },
            'toArray': function(bf, bg) {
                return void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0),
                bf[bg] = this['r'],
                bf[bg + 0x1] = this['g'],
                bf[bg + 0x2] = this['b'],
                bf;
            },
            'toJSON': function() {
                return this['getHex']();
            }
        });
        var xm, xn = {
            'common': {
                'diffuse': {
                    'value': new w7(0xeeeeee)
                },
                'opacity': {
                    'value': 0x1
                },
                'map': {
                    'value': null
                },
                'uvTransform': {
                    'value': new eO()
                },
                'alphaMap': {
                    'value': null
                }
            },
            'specularmap': {
                'specularMap': {
                    'value': null
                }
            },
            'envmap': {
                'envMap': {
                    'value': null
                },
                'flipEnvMap': {
                    'value': -0x1
                },
                'reflectivity': {
                    'value': 0x1
                },
                'refractionRatio': {
                    'value': 0.98
                },
                'maxMipLevel': {
                    'value': 0x0
                }
            },
            'aomap': {
                'aoMap': {
                    'value': null
                },
                'aoMapIntensity': {
                    'value': 0x1
                }
            },
            'lightmap': {
                'lightMap': {
                    'value': null
                },
                'lightMapIntensity': {
                    'value': 0x1
                }
            },
            'emissivemap': {
                'emissiveMap': {
                    'value': null
                }
            },
            'bumpmap': {
                'bumpMap': {
                    'value': null
                },
                'bumpScale': {
                    'value': 0x1
                }
            },
            'normalmap': {
                'normalMap': {
                    'value': null
                },
                'normalScale': {
                    'value': new eC(0x1,0x1)
                }
            },
            'displacementmap': {
                'displacementMap': {
                    'value': null
                },
                'displacementScale': {
                    'value': 0x1
                },
                'displacementBias': {
                    'value': 0x0
                }
            },
            'roughnessmap': {
                'roughnessMap': {
                    'value': null
                }
            },
            'metalnessmap': {
                'metalnessMap': {
                    'value': null
                }
            },
            'gradientmap': {
                'gradientMap': {
                    'value': null
                }
            },
            'fog': {
                'fogDensity': {
                    'value': 0.00025
                },
                'fogNear': {
                    'value': 0x1
                },
                'fogFar': {
                    'value': 0x7d0
                },
                'fogColor': {
                    'value': new w7(0xffffff)
                }
            },
            'lights': {
                'ambientLightColor': {
                    'value': []
                },
                'lightProbe': {
                    'value': []
                },
                'directionalLights': {
                    'value': [],
                    'properties': {
                        'direction': {},
                        'color': {},
                        'shadow': {},
                        'shadowBias': {},
                        'shadowRadius': {},
                        'shadowMapSize': {}
                    }
                },
                'directionalShadowMap': {
                    'value': []
                },
                'directionalShadowMatrix': {
                    'value': []
                },
                'spotLights': {
                    'value': [],
                    'properties': {
                        'color': {},
                        'position': {},
                        'direction': {},
                        'distance': {},
                        'coneCos': {},
                        'penumbraCos': {},
                        'decay': {},
                        'shadow': {},
                        'shadowBias': {},
                        'shadowRadius': {},
                        'shadowMapSize': {}
                    }
                },
                'spotShadowMap': {
                    'value': []
                },
                'spotShadowMatrix': {
                    'value': []
                },
                'pointLights': {
                    'value': [],
                    'properties': {
                        'color': {},
                        'position': {},
                        'decay': {},
                        'distance': {},
                        'shadow': {},
                        'shadowBias': {},
                        'shadowRadius': {},
                        'shadowMapSize': {},
                        'shadowCameraNear': {},
                        'shadowCameraFar': {}
                    }
                },
                'pointShadowMap': {
                    'value': []
                },
                'pointShadowMatrix': {
                    'value': []
                },
                'hemisphereLights': {
                    'value': [],
                    'properties': {
                        'direction': {},
                        'skyColor': {},
                        'groundColor': {}
                    }
                },
                'rectAreaLights': {
                    'value': [],
                    'properties': {
                        'color': {},
                        'position': {},
                        'width': {},
                        'height': {}
                    }
                }
            },
            'points': {
                'diffuse': {
                    'value': new w7(0xeeeeee)
                },
                'opacity': {
                    'value': 0x1
                },
                'size': {
                    'value': 0x1
                },
                'scale': {
                    'value': 0x1
                },
                'map': {
                    'value': null
                },
                'uvTransform': {
                    'value': new eO()
                }
            },
            'sprite': {
                'diffuse': {
                    'value': new w7(0xeeeeee)
                },
                'opacity': {
                    'value': 0x1
                },
                'center': {
                    'value': new eC(0.5,0.5)
                },
                'rotation': {
                    'value': 0x0
                },
                'map': {
                    'value': null
                },
                'uvTransform': {
                    'value': new eO()
                }
            }
        }, xo = {
            'basic': {
                'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['fog']]),
                'vertexShader': vP['meshbasic_vert'],
                'fragmentShader': vP['meshbasic_frag']
            },
            'lambert': {
                'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['fog'], xn['lights'], {
                    'emissive': {
                        'value': new w7(0x0)
                    }
                }]),
                'vertexShader': vP['meshlambert_vert'],
                'fragmentShader': vP['meshlambert_frag']
            },
            'phong': {
                'uniforms': vW([xn['common'], xn['specularmap'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['gradientmap'], xn['fog'], xn['lights'], {
                    'emissive': {
                        'value': new w7(0x0)
                    },
                    'specular': {
                        'value': new w7(0x111111)
                    },
                    'shininess': {
                        'value': 0x1e
                    }
                }]),
                'vertexShader': vP['meshphong_vert'],
                'fragmentShader': vP['meshphong_frag']
            },
            'standard': {
                'uniforms': vW([xn['common'], xn['envmap'], xn['aomap'], xn['lightmap'], xn['emissivemap'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['roughnessmap'], xn['metalnessmap'], xn['fog'], xn['lights'], {
                    'emissive': {
                        'value': new w7(0x0)
                    },
                    'roughness': {
                        'value': 0.5
                    },
                    'metalness': {
                        'value': 0.5
                    },
                    'envMapIntensity': {
                        'value': 0x1
                    }
                }]),
                'vertexShader': vP['meshphysical_vert'],
                'fragmentShader': vP['meshphysical_frag']
            },
            'matcap': {
                'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], xn['fog'], {
                    'matcap': {
                        'value': null
                    }
                }]),
                'vertexShader': vP['meshmatcap_vert'],
                'fragmentShader': vP['meshmatcap_frag']
            },
            'points': {
                'uniforms': vW([xn['points'], xn['fog']]),
                'vertexShader': vP['points_vert'],
                'fragmentShader': vP['points_frag']
            },
            'dashed': {
                'uniforms': vW([xn['common'], xn['fog'], {
                    'scale': {
                        'value': 0x1
                    },
                    'dashSize': {
                        'value': 0x1
                    },
                    'totalSize': {
                        'value': 0x2
                    }
                }]),
                'vertexShader': vP['linedashed_vert'],
                'fragmentShader': vP['linedashed_frag']
            },
            'depth': {
                'uniforms': vW([xn['common'], xn['displacementmap']]),
                'vertexShader': vP['depth_vert'],
                'fragmentShader': vP['depth_frag']
            },
            'normal': {
                'uniforms': vW([xn['common'], xn['bumpmap'], xn['normalmap'], xn['displacementmap'], {
                    'opacity': {
                        'value': 0x1
                    }
                }]),
                'vertexShader': vP['normal_vert'],
                'fragmentShader': vP['normal_frag']
            },
            'sprite': {
                'uniforms': vW([xn['sprite'], xn['fog']]),
                'vertexShader': vP['sprite_vert'],
                'fragmentShader': vP['sprite_frag']
            },
            'background': {
                'uniforms': {
                    'uvTransform': {
                        'value': new eO()
                    },
                    't2D': {
                        'value': null
                    }
                },
                'vertexShader': vP['background_vert'],
                'fragmentShader': vP['background_frag']
            },
            'cube': {
                'uniforms': {
                    'tCube': {
                        'value': null
                    },
                    'tFlip': {
                        'value': -0x1
                    },
                    'opacity': {
                        'value': 0x1
                    }
                },
                'vertexShader': vP['cube_vert'],
                'fragmentShader': vP['cube_frag']
            },
            'equirect': {
                'uniforms': {
                    'tEquirect': {
                        'value': null
                    }
                },
                'vertexShader': vP['equirect_vert'],
                'fragmentShader': vP['equirect_frag']
            },
            'distanceRGBA': {
                'uniforms': vW([xn['common'], xn['displacementmap'], {
                    'referencePosition': {
                        'value': new eK()
                    },
                    'nearDistance': {
                        'value': 0x1
                    },
                    'farDistance': {
                        'value': 0x3e8
                    }
                }]),
                'vertexShader': vP['distanceRGBA_vert'],
                'fragmentShader': vP['distanceRGBA_frag']
            },
            'shadow': {
                'uniforms': vW([xn['lights'], xn['fog'], {
                    'color': {
                        'value': new w7(0x0)
                    },
                    'opacity': {
                        'value': 0x1
                    }
                }]),
                'vertexShader': vP['shadow_vert'],
                'fragmentShader': vP['shadow_frag']
            }
        };
        function xp() {
            var bf = null
              , bg = !0x1
              , bh = null;
            function bi(bF, bG) {
                !0x1 !== bg && (bh(bF, bG),
                bf['requestAnimationFrame'](bi));
            }
            return {
                'start': function() {
                    !0x0 !== bg && null !== bh && (bf['requestAnimationFrame'](bi),
                    bg = !0x0);
                },
                'stop': function() {
                    bg = !0x1;
                },
                'setAnimationLoop': function(bf) {
                    bh = bf;
                },
                'setContext': function(bg) {
                    bf = bg;
                }
            };
        }
        function xy(bf) {
            var bg = new WeakMap();
            return {
                'get': function(bf) {
                    return bf['isInterleavedBufferAttribute'] && (bf = bf['data']),
                    bg['get'](bf);
                },
                'remove': function(bh) {
                    bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
                    var bi = bg['get'](bh);
                    bi && (bf['deleteBuffer'](bi['buffer']),
                    bg['delete'](bh));
                },
                'update': function(bh, bi) {
                    bh['isInterleavedBufferAttribute'] && (bh = bh['data']);
                    var bF = bg['get'](bh);
                    void 0x0 === bF ? bg['set'](bh, function(bg, bh) {
                        var bi = bg['array']
                          , bF = bg['dynamic'] ? 0x88e8 : 0x88e4
                          , bG = bf['createBuffer']();
                        bf['bindBuffer'](bh, bG),
                        bf['bufferData'](bh, bi, bF),
                        bg['onUploadCallback']();
                        var bH = 0x1406;
                        return bi instanceof Float32Array ? bH = 0x1406 : bi instanceof Float64Array ? console['warn']('THREE.WebGLAttributes:\x20Unsupported\x20data\x20buffer\x20format:\x20Float64Array.') : bi instanceof Uint16Array ? bH = 0x1403 : bi instanceof Int16Array ? bH = 0x1402 : bi instanceof Uint32Array ? bH = 0x1405 : bi instanceof Int32Array ? bH = 0x1404 : bi instanceof Int8Array ? bH = 0x1400 : bi instanceof Uint8Array && (bH = 0x1401),
                        {
                            'buffer': bG,
                            'type': bH,
                            'bytesPerElement': bi['BYTES_PER_ELEMENT'],
                            'version': bg['version']
                        };
                    }(bh, bi)) : bF['version'] < bh['version'] && (function(bg, bh, bi) {
                        var bF = bh['array']
                          , bG = bh['updateRange'];
                        bf['bindBuffer'](bi, bg),
                        !0x1 === bh['dynamic'] ? bf['bufferData'](bi, bF, 0x88e4) : -0x1 === bG['count'] ? bf['bufferSubData'](bi, 0x0, bF) : 0x0 === bG['count'] ? console['error']('THREE.WebGLObjects.updateBuffer:\x20dynamic\x20THREE.BufferAttribute\x20marked\x20as\x20needsUpdate\x20but\x20updateRange.count\x20is\x200,\x20ensure\x20you\x20are\x20using\x20set\x20methods\x20or\x20updating\x20manually.') : (bf['bufferSubData'](bi, bG['offset'] * bF['BYTES_PER_ELEMENT'], bF['subarray'](bG['offset'], bG['offset'] + bG['count'])),
                        bG['count'] = -0x1);
                    }(bF['buffer'], bh, bi),
                    bF['version'] = bh['version']);
                }
            };
        }
        function xS(bf, bg, bh, bi, bF, bG) {
            this['a'] = bf,
            this['b'] = bg,
            this['c'] = bh,
            this['normal'] = bi && bi['isVector3'] ? bi : new eK(),
            this['vertexNormals'] = Array['isArray'](bi) ? bi : [],
            this['color'] = bF && bF['isColor'] ? bF : new w7(),
            this['vertexColors'] = Array['isArray'](bF) ? bF : [],
            this['materialIndex'] = void 0x0 !== bG ? bG : 0x0;
        }
        function xZ(bf, bg, bh, bi) {
            this['_x'] = bf || 0x0,
            this['_y'] = bg || 0x0,
            this['_z'] = bh || 0x0,
            this['_order'] = bi || xZ['DefaultOrder'];
        }
        function y4() {
            this['mask'] = 0x1;
        }
        xo['physical'] = {
            'uniforms': vW([xo['standard']['uniforms'], {
                'clearCoat': {
                    'value': 0x0
                },
                'clearCoatRoughness': {
                    'value': 0x0
                }
            }]),
            'vertexShader': vP['meshphysical_vert'],
            'fragmentShader': vP['meshphysical_frag']
        },
        Object['assign'](xS['prototype'], {
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                this['a'] = bf['a'],
                this['b'] = bf['b'],
                this['c'] = bf['c'],
                this['normal']['copy'](bf['normal']),
                this['color']['copy'](bf['color']),
                this['materialIndex'] = bf['materialIndex'];
                for (var bg = 0x0, bh = bf['vertexNormals']['length']; bg < bh; bg++)
                    this['vertexNormals'][bg] = bf['vertexNormals'][bg]['clone']();
                for (bg = 0x0,
                bh = bf['vertexColors']['length']; bg < bh; bg++)
                    this['vertexColors'][bg] = bf['vertexColors'][bg]['clone']();
                return this;
            }
        }),
        xZ['RotationOrders'] = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'],
        xZ['DefaultOrder'] = 'XYZ',
        Object['defineProperties'](xZ['prototype'], {
            'x': {
                'get': function() {
                    return this['_x'];
                },
                'set': function(bf) {
                    this['_x'] = bf,
                    this['onChangeCallback']();
                }
            },
            'y': {
                'get': function() {
                    return this['_y'];
                },
                'set': function(bf) {
                    this['_y'] = bf,
                    this['onChangeCallback']();
                }
            },
            'z': {
                'get': function() {
                    return this['_z'];
                },
                'set': function(bf) {
                    this['_z'] = bf,
                    this['onChangeCallback']();
                }
            },
            'order': {
                'get': function() {
                    return this['_order'];
                },
                'set': function(bf) {
                    this['_order'] = bf,
                    this['onChangeCallback']();
                }
            }
        }),
        Object['assign'](xZ['prototype'], {
            'isEuler': !0x0,
            'set': function(bf, bg, bh, bi) {
                return this['_x'] = bf,
                this['_y'] = bg,
                this['_z'] = bh,
                this['_order'] = bi || this['_order'],
                this['onChangeCallback'](),
                this;
            },
            'clone': function() {
                return new this['constructor'](this['_x'],this['_y'],this['_z'],this['_order']);
            },
            'copy': function(bf) {
                return this['_x'] = bf['_x'],
                this['_y'] = bf['_y'],
                this['_z'] = bf['_z'],
                this['_order'] = bf['_order'],
                this['onChangeCallback'](),
                this;
            },
            'setFromRotationMatrix': function(bf, bg, bh) {
                var bi = e2['clamp']
                  , bF = bf['elements']
                  , bG = bF[0x0]
                  , bH = bF[0x4]
                  , bI = bF[0x8]
                  , bJ = bF[0x1]
                  , bK = bF[0x5]
                  , bL = bF[0x9]
                  , bM = bF[0x2]
                  , bN = bF[0x6]
                  , bO = bF[0xa];
                return 'XYZ' === (bg = bg || this['_order']) ? (this['_y'] = Math['asin'](bi(bI, -0x1, 0x1)),
                Math['abs'](bI) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bO),
                this['_z'] = Math['atan2'](-bH, bG)) : (this['_x'] = Math['atan2'](bN, bK),
                this['_z'] = 0x0)) : 'YXZ' === bg ? (this['_x'] = Math['asin'](-bi(bL, -0x1, 0x1)),
                Math['abs'](bL) < 0.99999 ? (this['_y'] = Math['atan2'](bI, bO),
                this['_z'] = Math['atan2'](bJ, bK)) : (this['_y'] = Math['atan2'](-bM, bG),
                this['_z'] = 0x0)) : 'ZXY' === bg ? (this['_x'] = Math['asin'](bi(bN, -0x1, 0x1)),
                Math['abs'](bN) < 0.99999 ? (this['_y'] = Math['atan2'](-bM, bO),
                this['_z'] = Math['atan2'](-bH, bK)) : (this['_y'] = 0x0,
                this['_z'] = Math['atan2'](bJ, bG))) : 'ZYX' === bg ? (this['_y'] = Math['asin'](-bi(bM, -0x1, 0x1)),
                Math['abs'](bM) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bO),
                this['_z'] = Math['atan2'](bJ, bG)) : (this['_x'] = 0x0,
                this['_z'] = Math['atan2'](-bH, bK))) : 'YZX' === bg ? (this['_z'] = Math['asin'](bi(bJ, -0x1, 0x1)),
                Math['abs'](bJ) < 0.99999 ? (this['_x'] = Math['atan2'](-bL, bK),
                this['_y'] = Math['atan2'](-bM, bG)) : (this['_x'] = 0x0,
                this['_y'] = Math['atan2'](bI, bO))) : 'XZY' === bg ? (this['_z'] = Math['asin'](-bi(bH, -0x1, 0x1)),
                Math['abs'](bH) < 0.99999 ? (this['_x'] = Math['atan2'](bN, bK),
                this['_y'] = Math['atan2'](bI, bG)) : (this['_x'] = Math['atan2'](-bL, bO),
                this['_y'] = 0x0)) : console['warn']('THREE.Euler:\x20.setFromRotationMatrix()\x20given\x20unsupported\x20order:\x20' + bg),
                this['_order'] = bg,
                !0x1 !== bh && this['onChangeCallback'](),
                this;
            },
            'setFromQuaternion': function() {
                var bf = new mR();
                return function(bg, bh, bi) {
                    return bf['makeRotationFromQuaternion'](bg),
                    this['setFromRotationMatrix'](bf, bh, bi);
                }
                ;
            }(),
            'setFromVector3': function(bf, bg) {
                return this['set'](bf['x'], bf['y'], bf['z'], bg || this['_order']);
            },
            'reorder': (xm = new eF(),
            function(bf) {
                return xm['setFromEuler'](this),
                this['setFromQuaternion'](xm, bf);
            }
            ),
            'equals': function(bf) {
                return bf['_x'] === this['_x'] && bf['_y'] === this['_y'] && bf['_z'] === this['_z'] && bf['_order'] === this['_order'];
            },
            'fromArray': function(bf) {
                return this['_x'] = bf[0x0],
                this['_y'] = bf[0x1],
                this['_z'] = bf[0x2],
                void 0x0 !== bf[0x3] && (this['_order'] = bf[0x3]),
                this['onChangeCallback'](),
                this;
            },
            'toArray': function(bf, bg) {
                return void 0x0 === bf && (bf = []),
                void 0x0 === bg && (bg = 0x0),
                bf[bg] = this['_x'],
                bf[bg + 0x1] = this['_y'],
                bf[bg + 0x2] = this['_z'],
                bf[bg + 0x3] = this['_order'],
                bf;
            },
            'toVector3': function(bf) {
                return bf ? bf['set'](this['_x'], this['_y'], this['_z']) : new eK(this['_x'],this['_y'],this['_z']);
            },
            'onChange': function(bf) {
                return this['onChangeCallback'] = bf,
                this;
            },
            'onChangeCallback': function() {}
        }),
        Object['assign'](y4['prototype'], {
            'set': function(bf) {
                this['mask'] = 0x1 << bf | 0x0;
            },
            'enable': function(bf) {
                this['mask'] |= 0x1 << bf | 0x0;
            },
            'toggle': function(bf) {
                this['mask'] ^= 0x1 << bf | 0x0;
            },
            'disable': function(bf) {
                this['mask'] &= ~(0x1 << bf | 0x0);
            },
            'test': function(bf) {
                return 0x0 != (this['mask'] & bf['mask']);
            }
        });
        var yN, yO, yP, yQ, yR, yS = 0x0;
        function yT() {
            Object['defineProperty'](this, 'id', {
                'value': yS++
            }),
            this['uuid'] = e2['generateUUID'](),
            this['name'] = '',
            this['type'] = 'Object3D',
            this['parent'] = null,
            this['children'] = [],
            this['up'] = yT['DefaultUp']['clone']();
            var bf = new eK()
              , bg = new xZ()
              , bh = new eF()
              , bi = new eK(0x1,0x1,0x1);
            bg['onChange'](function() {
                bh['setFromEuler'](bg, !0x1);
            }),
            bh['onChange'](function() {
                bg['setFromQuaternion'](bh, void 0x0, !0x1);
            }),
            Object['defineProperties'](this, {
                'position': {
                    'configurable': !0x0,
                    'enumerable': !0x0,
                    'value': bf
                },
                'rotation': {
                    'configurable': !0x0,
                    'enumerable': !0x0,
                    'value': bg
                },
                'quaternion': {
                    'configurable': !0x0,
                    'enumerable': !0x0,
                    'value': bh
                },
                'scale': {
                    'configurable': !0x0,
                    'enumerable': !0x0,
                    'value': bi
                },
                'modelViewMatrix': {
                    'value': new mR()
                },
                'normalMatrix': {
                    'value': new eO()
                }
            }),
            this['matrix'] = new mR(),
            this['matrixWorld'] = new mR(),
            this['matrixAutoUpdate'] = yT['DefaultMatrixAutoUpdate'],
            this['matrixWorldNeedsUpdate'] = !0x1,
            this['layers'] = new y4(),
            this['visible'] = !0x0,
            this['castShadow'] = !0x1,
            this['receiveShadow'] = !0x1,
            this['frustumCulled'] = !0x0,
            this['renderOrder'] = 0x0,
            this['userData'] = {};
        }
        yT['DefaultUp'] = new eK(0x0,0x1,0x0),
        yT['DefaultMatrixAutoUpdate'] = !0x0,
        yT['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': yT,
            'isObject3D': !0x0,
            'onBeforeRender': function() {},
            'onAfterRender': function() {},
            'applyMatrix': function(bf) {
                this['matrixAutoUpdate'] && this['updateMatrix'](),
                this['matrix']['premultiply'](bf),
                this['matrix']['decompose'](this['position'], this['quaternion'], this['scale']);
            },
            'applyQuaternion': function(bf) {
                return this['quaternion']['premultiply'](bf),
                this;
            },
            'setRotationFromAxisAngle': function(bf, bg) {
                this['quaternion']['setFromAxisAngle'](bf, bg);
            },
            'setRotationFromEuler': function(bf) {
                this['quaternion']['setFromEuler'](bf, !0x0);
            },
            'setRotationFromMatrix': function(bf) {
                this['quaternion']['setFromRotationMatrix'](bf);
            },
            'setRotationFromQuaternion': function(bf) {
                this['quaternion']['copy'](bf);
            },
            'rotateOnAxis': (yR = new eF(),
            function(bf, bg) {
                return yR['setFromAxisAngle'](bf, bg),
                this['quaternion']['multiply'](yR),
                this;
            }
            ),
            'rotateOnWorldAxis': function() {
                var bf = new eF();
                return function(bg, bh) {
                    return bf['setFromAxisAngle'](bg, bh),
                    this['quaternion']['premultiply'](bf),
                    this;
                }
                ;
            }(),
            'rotateX': function() {
                var bf = new eK(0x1,0x0,0x0);
                return function(bg) {
                    return this['rotateOnAxis'](bf, bg);
                }
                ;
            }(),
            'rotateY': function() {
                var bf = new eK(0x0,0x1,0x0);
                return function(bg) {
                    return this['rotateOnAxis'](bf, bg);
                }
                ;
            }(),
            'rotateZ': function() {
                var bf = new eK(0x0,0x0,0x1);
                return function(bg) {
                    return this['rotateOnAxis'](bf, bg);
                }
                ;
            }(),
            'translateOnAxis': function() {
                var bf = new eK();
                return function(bg, bh) {
                    return bf['copy'](bg)['applyQuaternion'](this['quaternion']),
                    this['position']['add'](bf['multiplyScalar'](bh)),
                    this;
                }
                ;
            }(),
            'translateX': function() {
                var bf = new eK(0x1,0x0,0x0);
                return function(bg) {
                    return this['translateOnAxis'](bf, bg);
                }
                ;
            }(),
            'translateY': function() {
                var bf = new eK(0x0,0x1,0x0);
                return function(bg) {
                    return this['translateOnAxis'](bf, bg);
                }
                ;
            }(),
            'translateZ': function() {
                var bf = new eK(0x0,0x0,0x1);
                return function(bg) {
                    return this['translateOnAxis'](bf, bg);
                }
                ;
            }(),
            'localToWorld': function(bf) {
                return bf['applyMatrix4'](this['matrixWorld']);
            },
            'worldToLocal': (yQ = new mR(),
            function(bf) {
                return bf['applyMatrix4'](yQ['getInverse'](this['matrixWorld']));
            }
            ),
            'lookAt': function() {
                var bf = new eF()
                  , bg = new mR()
                  , bh = new eK()
                  , bi = new eK();
                return function(bF, bG, bH) {
                    bF['isVector3'] ? bh['copy'](bF) : bh['set'](bF, bG, bH);
                    var bI = this['parent'];
                    this['updateWorldMatrix'](!0x0, !0x1),
                    bi['setFromMatrixPosition'](this['matrixWorld']),
                    this['isCamera'] || this['isLight'] ? bg['lookAt'](bi, bh, this['up']) : bg['lookAt'](bh, bi, this['up']),
                    this['quaternion']['setFromRotationMatrix'](bg),
                    bI && (bg['extractRotation'](bI['matrixWorld']),
                    bf['setFromRotationMatrix'](bg),
                    this['quaternion']['premultiply'](bf['inverse']()));
                }
                ;
            }(),
            'add': function(bf) {
                if (arguments['length'] > 0x1) {
                    for (var bg = 0x0; bg < arguments['length']; bg++)
                        this['add'](arguments[bg]);
                    return this;
                }
                return bf === this ? (console['error']('THREE.Object3D.add:\x20object\x20can\x27t\x20be\x20added\x20as\x20a\x20child\x20of\x20itself.', bf),
                this) : (bf && bf['isObject3D'] ? (null !== bf['parent'] && bf['parent']['remove'](bf),
                bf['parent'] = this,
                bf['dispatchEvent']({
                    'type': 'added'
                }),
                this['children']['push'](bf)) : console['error']('THREE.Object3D.add:\x20object\x20not\x20an\x20instance\x20of\x20THREE.Object3D.', bf),
                this);
            },
            'remove': function(bf) {
                if (arguments['length'] > 0x1) {
                    for (var bg = 0x0; bg < arguments['length']; bg++)
                        this['remove'](arguments[bg]);
                    return this;
                }
                var bh = this['children']['indexOf'](bf);
                return -0x1 !== bh && (bf['parent'] = null,
                bf['dispatchEvent']({
                    'type': 'removed'
                }),
                this['children']['splice'](bh, 0x1)),
                this;
            },
            'attach': (yP = new mR(),
            function(bf) {
                return this['updateWorldMatrix'](!0x0, !0x1),
                yP['getInverse'](this['matrixWorld']),
                null !== bf['parent'] && (bf['parent']['updateWorldMatrix'](!0x0, !0x1),
                yP['multiply'](bf['parent']['matrixWorld'])),
                bf['applyMatrix'](yP),
                bf['updateWorldMatrix'](!0x1, !0x1),
                this['add'](bf),
                this;
            }
            ),
            'getObjectById': function(bf) {
                return this['getObjectByProperty']('id', bf);
            },
            'getObjectByName': function(bf) {
                return this['getObjectByProperty']('name', bf);
            },
            'getObjectByProperty': function(bf, bg) {
                if (this[bf] === bg)
                    return this;
                for (var bh = 0x0, bi = this['children']['length']; bh < bi; bh++) {
                    var bF = this['children'][bh]['getObjectByProperty'](bf, bg);
                    if (void 0x0 !== bF)
                        return bF;
                }
            },
            'getWorldPosition': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldPosition()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                this['updateMatrixWorld'](!0x0),
                bf['setFromMatrixPosition'](this['matrixWorld']);
            },
            'getWorldQuaternion': (yN = new eK(),
            yO = new eK(),
            function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldQuaternion()\x20target\x20is\x20now\x20required'),
                bf = new eF()),
                this['updateMatrixWorld'](!0x0),
                this['matrixWorld']['decompose'](yN, bf, yO),
                bf;
            }
            ),
            'getWorldScale': function() {
                var bf = new eK()
                  , bg = new eF();
                return function(bh) {
                    return void 0x0 === bh && (console['warn']('THREE.Object3D:\x20.getWorldScale()\x20target\x20is\x20now\x20required'),
                    bh = new eK()),
                    this['updateMatrixWorld'](!0x0),
                    this['matrixWorld']['decompose'](bf, bg, bh),
                    bh;
                }
                ;
            }(),
            'getWorldDirection': function(bf) {
                void 0x0 === bf && (console['warn']('THREE.Object3D:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                this['updateMatrixWorld'](!0x0);
                var bg = this['matrixWorld']['elements'];
                return bf['set'](bg[0x8], bg[0x9], bg[0xa])['normalize']();
            },
            'raycast': function() {},
            'traverse': function(bf) {
                bf(this);
                for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++)
                    bg[bh]['traverse'](bf);
            },
            'traverseVisible': function(bf) {
                if (!0x1 !== this['visible']) {
                    bf(this);
                    for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++)
                        bg[bh]['traverseVisible'](bf);
                }
            },
            'traverseAncestors': function(bf) {
                var bg = this['parent'];
                null !== bg && (bf(bg),
                bg['traverseAncestors'](bf));
            },
            'updateMatrix': function() {
                this['matrix']['compose'](this['position'], this['quaternion'], this['scale']),
                this['matrixWorldNeedsUpdate'] = !0x0;
            },
            'updateMatrixWorld': function(bf) {
                this['matrixAutoUpdate'] && this['updateMatrix'](),
                (this['matrixWorldNeedsUpdate'] || bf) && (null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']),
                this['matrixWorldNeedsUpdate'] = !0x1,
                bf = !0x0);
                for (var bg = this['children'], bh = 0x0, bi = bg['length']; bh < bi; bh++)
                    bg[bh]['updateMatrixWorld'](bf);
            },
            'updateWorldMatrix': function(bf, bg) {
                var bh = this['parent'];
                if (!0x0 === bf && null !== bh && bh['updateWorldMatrix'](!0x0, !0x1),
                this['matrixAutoUpdate'] && this['updateMatrix'](),
                null === this['parent'] ? this['matrixWorld']['copy'](this['matrix']) : this['matrixWorld']['multiplyMatrices'](this['parent']['matrixWorld'], this['matrix']),
                !0x0 === bg)
                    for (var bi = this['children'], bF = 0x0, bG = bi['length']; bF < bG; bF++)
                        bi[bF]['updateWorldMatrix'](!0x1, !0x0);
            },
            'toJSON': function(bf) {
                var bg = void 0x0 === bf || 'string' == typeof bf
                  , bh = {};
                bg && (bf = {
                    'geometries': {},
                    'materials': {},
                    'textures': {},
                    'images': {},
                    'shapes': {}
                },
                bh['metadata'] = {
                    'version': 4.5,
                    'type': 'Object',
                    'generator': 'Object3D.toJSON'
                });
                var bi = {};
                function bF(bg, bh) {
                    return void 0x0 === bg[bh['uuid']] && (bg[bh['uuid']] = bh['toJSON'](bf)),
                    bh['uuid'];
                }
                if (bi['uuid'] = this['uuid'],
                bi['type'] = this['type'],
                '' !== this['name'] && (bi['name'] = this['name']),
                !0x0 === this['castShadow'] && (bi['castShadow'] = !0x0),
                !0x0 === this['receiveShadow'] && (bi['receiveShadow'] = !0x0),
                !0x1 === this['visible'] && (bi['visible'] = !0x1),
                !0x1 === this['frustumCulled'] && (bi['frustumCulled'] = !0x1),
                0x0 !== this['renderOrder'] && (bi['renderOrder'] = this['renderOrder']),
                '{}' !== JSON['stringify'](this['userData']) && (bi['userData'] = this['userData']),
                bi['layers'] = this['layers']['mask'],
                bi['matrix'] = this['matrix']['toArray'](),
                !0x1 === this['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = !0x1),
                this['isMesh'] && this['drawMode'] !== dN && (bi['drawMode'] = this['drawMode']),
                this['isMesh'] || this['isLine'] || this['isPoints']) {
                    bi['geometry'] = bF(bf['geometries'], this['geometry']);
                    var bG = this['geometry']['parameters'];
                    if (void 0x0 !== bG && void 0x0 !== bG['shapes']) {
                        var bH = bG['shapes'];
                        if (Array['isArray'](bH))
                            for (var bI = 0x0, bJ = bH['length']; bI < bJ; bI++) {
                                var bK = bH[bI];
                                bF(bf['shapes'], bK);
                            }
                        else
                            bF(bf['shapes'], bH);
                    }
                }
                if (void 0x0 !== this['material'])
                    if (Array['isArray'](this['material'])) {
                        var bL = [];
                        for (bI = 0x0,
                        bJ = this['material']['length']; bI < bJ; bI++)
                            bL['push'](bF(bf['materials'], this['material'][bI]));
                        bi['material'] = bL;
                    } else
                        bi['material'] = bF(bf['materials'], this['material']);
                if (this['children']['length'] > 0x0) {
                    bi['children'] = [];
                    for (bI = 0x0; bI < this['children']['length']; bI++)
                        bi['children']['push'](this['children'][bI]['toJSON'](bf)['object']);
                }
                if (bg) {
                    var bM = bQ(bf['geometries'])
                      , bN = bQ(bf['materials'])
                      , bO = bQ(bf['textures'])
                      , bP = bQ(bf['images']);
                    bH = bQ(bf['shapes']);
                    bM['length'] > 0x0 && (bh['geometries'] = bM),
                    bN['length'] > 0x0 && (bh['materials'] = bN),
                    bO['length'] > 0x0 && (bh['textures'] = bO),
                    bP['length'] > 0x0 && (bh['images'] = bP),
                    bH['length'] > 0x0 && (bh['shapes'] = bH);
                }
                return bh['object'] = bi,
                bh;
                function bQ(bf) {
                    var bg = [];
                    for (var bh in bf) {
                        var bi = bf[bh];
                        delete bi['metadata'],
                        bg['push'](bi);
                    }
                    return bg;
                }
            },
            'clone': function(bf) {
                return new this['constructor']()['copy'](this, bf);
            },
            'copy': function(bf, bg) {
                if (void 0x0 === bg && (bg = !0x0),
                this['name'] = bf['name'],
                this['up']['copy'](bf['up']),
                this['position']['copy'](bf['position']),
                this['quaternion']['copy'](bf['quaternion']),
                this['scale']['copy'](bf['scale']),
                this['matrix']['copy'](bf['matrix']),
                this['matrixWorld']['copy'](bf['matrixWorld']),
                this['matrixAutoUpdate'] = bf['matrixAutoUpdate'],
                this['matrixWorldNeedsUpdate'] = bf['matrixWorldNeedsUpdate'],
                this['layers']['mask'] = bf['layers']['mask'],
                this['visible'] = bf['visible'],
                this['castShadow'] = bf['castShadow'],
                this['receiveShadow'] = bf['receiveShadow'],
                this['frustumCulled'] = bf['frustumCulled'],
                this['renderOrder'] = bf['renderOrder'],
                this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])),
                !0x0 === bg)
                    for (var bh = 0x0; bh < bf['children']['length']; bh++) {
                        var bi = bf['children'][bh];
                        this['add'](bi['clone']());
                    }
                return this;
            }
        });
        var AE, AF, AG = 0x0;
        function AH() {
            Object['defineProperty'](this, 'id', {
                'value': AG += 0x2
            }),
            this['uuid'] = e2['generateUUID'](),
            this['name'] = '',
            this['type'] = 'Geometry',
            this['vertices'] = [],
            this['colors'] = [],
            this['faces'] = [],
            this['faceVertexUvs'] = [[]],
            this['morphTargets'] = [],
            this['morphNormals'] = [],
            this['skinWeights'] = [],
            this['skinIndices'] = [],
            this['lineDistances'] = [],
            this['boundingBox'] = null,
            this['boundingSphere'] = null,
            this['elementsNeedUpdate'] = !0x1,
            this['verticesNeedUpdate'] = !0x1,
            this['uvsNeedUpdate'] = !0x1,
            this['normalsNeedUpdate'] = !0x1,
            this['colorsNeedUpdate'] = !0x1,
            this['lineDistancesNeedUpdate'] = !0x1,
            this['groupsNeedUpdate'] = !0x1;
        }
        function AI(bf, bg, bh) {
            if (Array['isArray'](bf))
                throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
            this['name'] = '',
            this['array'] = bf,
            this['itemSize'] = bg,
            this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0,
            this['normalized'] = !0x0 === bh,
            this['dynamic'] = !0x1,
            this['updateRange'] = {
                'offset': 0x0,
                'count': -0x1
            },
            this['version'] = 0x0;
        }
        function AM(bf, bg, bh) {
            AI['call'](this, new Int8Array(bf), bg, bh);
        }
        function AQ(bf, bg, bh) {
            AI['call'](this, new Uint8Array(bf), bg, bh);
        }
        function AU(bf, bg, bh) {
            AI['call'](this, new Uint8ClampedArray(bf), bg, bh);
        }
        function AY(bf, bg, bh) {
            AI['call'](this, new Int16Array(bf), bg, bh);
        }
        function B2(bf, bg, bh) {
            AI['call'](this, new Uint16Array(bf), bg, bh);
        }
        function B6(bf, bg, bh) {
            AI['call'](this, new Int32Array(bf), bg, bh);
        }
        function Ba(bf, bg, bh) {
            AI['call'](this, new Uint32Array(bf), bg, bh);
        }
        function Be(bf, bg, bh) {
            AI['call'](this, new Float32Array(bf), bg, bh);
        }
        function Bi(bf, bg, bh) {
            AI['call'](this, new Float64Array(bf), bg, bh);
        }
        function Bm() {
            this['vertices'] = [],
            this['normals'] = [],
            this['colors'] = [],
            this['uvs'] = [],
            this['uvs2'] = [],
            this['groups'] = [],
            this['morphTargets'] = {},
            this['skinWeights'] = [],
            this['skinIndices'] = [],
            this['boundingBox'] = null,
            this['boundingSphere'] = null,
            this['verticesNeedUpdate'] = !0x1,
            this['normalsNeedUpdate'] = !0x1,
            this['colorsNeedUpdate'] = !0x1,
            this['uvsNeedUpdate'] = !0x1,
            this['groupsNeedUpdate'] = !0x1;
        }
        function Bn(bf) {
            if (0x0 === bf['length'])
                return -0x1 / 0x0;
            for (var bg = bf[0x0], bh = 0x1, bi = bf['length']; bh < bi; ++bh)
                bf[bh] > bg && (bg = bf[bh]);
            return bg;
        }
        AH['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': AH,
            'isGeometry': !0x0,
            'applyMatrix': function(bf) {
                for (var bg = new eO()['getNormalMatrix'](bf), bh = 0x0, bi = this['vertices']['length']; bh < bi; bh++) {
                    this['vertices'][bh]['applyMatrix4'](bf);
                }
                for (bh = 0x0,
                bi = this['faces']['length']; bh < bi; bh++) {
                    var bF = this['faces'][bh];
                    bF['normal']['applyMatrix3'](bg)['normalize']();
                    for (var bG = 0x0, bH = bF['vertexNormals']['length']; bG < bH; bG++)
                        bF['vertexNormals'][bG]['applyMatrix3'](bg)['normalize']();
                }
                return null !== this['boundingBox'] && this['computeBoundingBox'](),
                null !== this['boundingSphere'] && this['computeBoundingSphere'](),
                this['verticesNeedUpdate'] = !0x0,
                this['normalsNeedUpdate'] = !0x0,
                this;
            },
            'rotateX': function() {
                var bf = new mR();
                return function(bg) {
                    return bf['makeRotationX'](bg),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'rotateY': function() {
                var bf = new mR();
                return function(bg) {
                    return bf['makeRotationY'](bg),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'rotateZ': function() {
                var bf = new mR();
                return function(bg) {
                    return bf['makeRotationZ'](bg),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'translate': function() {
                var bf = new mR();
                return function(bg, bh, bi) {
                    return bf['makeTranslation'](bg, bh, bi),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'scale': function() {
                var bf = new mR();
                return function(bg, bh, bi) {
                    return bf['makeScale'](bg, bh, bi),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'lookAt': (AF = new yT(),
            function(bf) {
                AF['lookAt'](bf),
                AF['updateMatrix'](),
                this['applyMatrix'](AF['matrix']);
            }
            ),
            'fromBufferGeometry': function(bf) {
                var bg = this
                  , bh = null !== bf['index'] ? bf['index']['array'] : void 0x0
                  , bi = bf['attributes']
                  , bF = bi['position']['array']
                  , bG = void 0x0 !== bi['normal'] ? bi['normal']['array'] : void 0x0
                  , bH = void 0x0 !== bi['color'] ? bi['color']['array'] : void 0x0
                  , bI = void 0x0 !== bi['uv'] ? bi['uv']['array'] : void 0x0
                  , bJ = void 0x0 !== bi['uv2'] ? bi['uv2']['array'] : void 0x0;
                void 0x0 !== bJ && (this['faceVertexUvs'][0x1] = []);
                for (var bK = 0x0; bK < bF['length']; bK += 0x3)
                    bg['vertices']['push'](new eK()['fromArray'](bF, bK)),
                    void 0x0 !== bH && bg['colors']['push'](new w7()['fromArray'](bH, bK));
                function bL(bf, bh, bi, bF) {
                    var bK = void 0x0 === bH ? [] : [bg['colors'][bf]['clone'](), bg['colors'][bh]['clone'](), bg['colors'][bi]['clone']()]
                      , bL = new xS(bf,bh,bi,void 0x0 === bG ? [] : [new eK()['fromArray'](bG, 0x3 * bf), new eK()['fromArray'](bG, 0x3 * bh), new eK()['fromArray'](bG, 0x3 * bi)],bK,bF);
                    bg['faces']['push'](bL),
                    void 0x0 !== bI && bg['faceVertexUvs'][0x0]['push']([new eC()['fromArray'](bI, 0x2 * bf), new eC()['fromArray'](bI, 0x2 * bh), new eC()['fromArray'](bI, 0x2 * bi)]),
                    void 0x0 !== bJ && bg['faceVertexUvs'][0x1]['push']([new eC()['fromArray'](bJ, 0x2 * bf), new eC()['fromArray'](bJ, 0x2 * bh), new eC()['fromArray'](bJ, 0x2 * bi)]);
                }
                var bM = bf['groups'];
                if (bM['length'] > 0x0)
                    for (bK = 0x0; bK < bM['length']; bK++)
                        for (var bN = bM[bK], bO = bN['start'], bP = bO, bQ = bO + bN['count']; bP < bQ; bP += 0x3)
                            void 0x0 !== bh ? bL(bh[bP], bh[bP + 0x1], bh[bP + 0x2], bN['materialIndex']) : bL(bP, bP + 0x1, bP + 0x2, bN['materialIndex']);
                else if (void 0x0 !== bh)
                    for (bK = 0x0; bK < bh['length']; bK += 0x3)
                        bL(bh[bK], bh[bK + 0x1], bh[bK + 0x2]);
                else
                    for (bK = 0x0; bK < bF['length'] / 0x3; bK += 0x3)
                        bL(bK, bK + 0x1, bK + 0x2);
                return this['computeFaceNormals'](),
                null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()),
                null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()),
                this;
            },
            'center': (AE = new eK(),
            function() {
                return this['computeBoundingBox'](),
                this['boundingBox']['getCenter'](AE)['negate'](),
                this['translate'](AE['x'], AE['y'], AE['z']),
                this;
            }
            ),
            'normalize': function() {
                this['computeBoundingSphere']();
                var bf = this['boundingSphere']['center']
                  , bg = this['boundingSphere']['radius']
                  , bh = 0x0 === bg ? 0x1 : 0x1 / bg
                  , bi = new mR();
                return bi['set'](bh, 0x0, 0x0, -bh * bf['x'], 0x0, bh, 0x0, -bh * bf['y'], 0x0, 0x0, bh, -bh * bf['z'], 0x0, 0x0, 0x0, 0x1),
                this['applyMatrix'](bi),
                this;
            },
            'computeFaceNormals': function() {
                for (var bf = new eK(), bg = new eK(), bh = 0x0, bi = this['faces']['length']; bh < bi; bh++) {
                    var bF = this['faces'][bh]
                      , bG = this['vertices'][bF['a']]
                      , bH = this['vertices'][bF['b']]
                      , bI = this['vertices'][bF['c']];
                    bf['subVectors'](bI, bH),
                    bg['subVectors'](bG, bH),
                    bf['cross'](bg),
                    bf['normalize'](),
                    bF['normal']['copy'](bf);
                }
            },
            'computeVertexNormals': function(bf) {
                var bg, bh, bi, bF, bG, bH;
                for (void 0x0 === bf && (bf = !0x0),
                bH = new Array(this['vertices']['length']),
                bg = 0x0,
                bh = this['vertices']['length']; bg < bh; bg++)
                    bH[bg] = new eK();
                if (bf) {
                    var bI, bJ, bK, bL = new eK(), bM = new eK();
                    for (bi = 0x0,
                    bF = this['faces']['length']; bi < bF; bi++)
                        bG = this['faces'][bi],
                        bI = this['vertices'][bG['a']],
                        bJ = this['vertices'][bG['b']],
                        bK = this['vertices'][bG['c']],
                        bL['subVectors'](bK, bJ),
                        bM['subVectors'](bI, bJ),
                        bL['cross'](bM),
                        bH[bG['a']]['add'](bL),
                        bH[bG['b']]['add'](bL),
                        bH[bG['c']]['add'](bL);
                } else
                    for (this['computeFaceNormals'](),
                    bi = 0x0,
                    bF = this['faces']['length']; bi < bF; bi++)
                        bH[(bG = this['faces'][bi])['a']]['add'](bG['normal']),
                        bH[bG['b']]['add'](bG['normal']),
                        bH[bG['c']]['add'](bG['normal']);
                for (bg = 0x0,
                bh = this['vertices']['length']; bg < bh; bg++)
                    bH[bg]['normalize']();
                for (bi = 0x0,
                bF = this['faces']['length']; bi < bF; bi++) {
                    var bN = (bG = this['faces'][bi])['vertexNormals'];
                    0x3 === bN['length'] ? (bN[0x0]['copy'](bH[bG['a']]),
                    bN[0x1]['copy'](bH[bG['b']]),
                    bN[0x2]['copy'](bH[bG['c']])) : (bN[0x0] = bH[bG['a']]['clone'](),
                    bN[0x1] = bH[bG['b']]['clone'](),
                    bN[0x2] = bH[bG['c']]['clone']());
                }
                this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
            },
            'computeFlatVertexNormals': function() {
                var bf, bg, bh;
                for (this['computeFaceNormals'](),
                bf = 0x0,
                bg = this['faces']['length']; bf < bg; bf++) {
                    var bi = (bh = this['faces'][bf])['vertexNormals'];
                    0x3 === bi['length'] ? (bi[0x0]['copy'](bh['normal']),
                    bi[0x1]['copy'](bh['normal']),
                    bi[0x2]['copy'](bh['normal'])) : (bi[0x0] = bh['normal']['clone'](),
                    bi[0x1] = bh['normal']['clone'](),
                    bi[0x2] = bh['normal']['clone']());
                }
                this['faces']['length'] > 0x0 && (this['normalsNeedUpdate'] = !0x0);
            },
            'computeMorphNormals': function() {
                var bf, bg, bh, bi, bF;
                for (bh = 0x0,
                bi = this['faces']['length']; bh < bi; bh++)
                    for ((bF = this['faces'][bh])['__originalFaceNormal'] ? bF['__originalFaceNormal']['copy'](bF['normal']) : bF['__originalFaceNormal'] = bF['normal']['clone'](),
                    bF['__originalVertexNormals'] || (bF['__originalVertexNormals'] = []),
                    bf = 0x0,
                    bg = bF['vertexNormals']['length']; bf < bg; bf++)
                        bF['__originalVertexNormals'][bf] ? bF['__originalVertexNormals'][bf]['copy'](bF['vertexNormals'][bf]) : bF['__originalVertexNormals'][bf] = bF['vertexNormals'][bf]['clone']();
                var bG = new AH();
                for (bG['faces'] = this['faces'],
                bf = 0x0,
                bg = this['morphTargets']['length']; bf < bg; bf++) {
                    if (!this['morphNormals'][bf]) {
                        this['morphNormals'][bf] = {},
                        this['morphNormals'][bf]['faceNormals'] = [],
                        this['morphNormals'][bf]['vertexNormals'] = [];
                        var bH = this['morphNormals'][bf]['faceNormals']
                          , bI = this['morphNormals'][bf]['vertexNormals'];
                        for (bh = 0x0,
                        bi = this['faces']['length']; bh < bi; bh++)
                            bJ = new eK(),
                            bK = {
                                'a': new eK(),
                                'b': new eK(),
                                'c': new eK()
                            },
                            bH['push'](bJ),
                            bI['push'](bK);
                    }
                    var bJ, bK, bL = this['morphNormals'][bf];
                    for (bG['vertices'] = this['morphTargets'][bf]['vertices'],
                    bG['computeFaceNormals'](),
                    bG['computeVertexNormals'](),
                    bh = 0x0,
                    bi = this['faces']['length']; bh < bi; bh++)
                        bF = this['faces'][bh],
                        bJ = bL['faceNormals'][bh],
                        bK = bL['vertexNormals'][bh],
                        bJ['copy'](bF['normal']),
                        bK['a']['copy'](bF['vertexNormals'][0x0]),
                        bK['b']['copy'](bF['vertexNormals'][0x1]),
                        bK['c']['copy'](bF['vertexNormals'][0x2]);
                }
                for (bh = 0x0,
                bi = this['faces']['length']; bh < bi; bh++)
                    (bF = this['faces'][bh])['normal'] = bF['__originalFaceNormal'],
                    bF['vertexNormals'] = bF['__originalVertexNormals'];
            },
            'computeBoundingBox': function() {
                null === this['boundingBox'] && (this['boundingBox'] = new mB()),
                this['boundingBox']['setFromPoints'](this['vertices']);
            },
            'computeBoundingSphere': function() {
                null === this['boundingSphere'] && (this['boundingSphere'] = new mE()),
                this['boundingSphere']['setFromPoints'](this['vertices']);
            },
            'merge': function(bf, bg, bh) {
                if (bf && bf['isGeometry']) {
                    var bi, bF = this['vertices']['length'], bG = this['vertices'], bH = bf['vertices'], bI = this['faces'], bJ = bf['faces'], bK = this['faceVertexUvs'][0x0], bL = bf['faceVertexUvs'][0x0], bM = this['colors'], bN = bf['colors'];
                    void 0x0 === bh && (bh = 0x0),
                    void 0x0 !== bg && (bi = new eO()['getNormalMatrix'](bg));
                    for (var bO = 0x0, bP = bH['length']; bO < bP; bO++) {
                        var bQ = bH[bO]['clone']();
                        void 0x0 !== bg && bQ['applyMatrix4'](bg),
                        bG['push'](bQ);
                    }
                    for (bO = 0x0,
                    bP = bN['length']; bO < bP; bO++)
                        bM['push'](bN[bO]['clone']());
                    for (bO = 0x0,
                    bP = bJ['length']; bO < bP; bO++) {
                        var bR, bS, bT, bU = bJ[bO], bV = bU['vertexNormals'], bW = bU['vertexColors'];
                        (bR = new xS(bU['a'] + bF,bU['b'] + bF,bU['c'] + bF))['normal']['copy'](bU['normal']),
                        void 0x0 !== bi && bR['normal']['applyMatrix3'](bi)['normalize']();
                        for (var bX = 0x0, bY = bV['length']; bX < bY; bX++)
                            bS = bV[bX]['clone'](),
                            void 0x0 !== bi && bS['applyMatrix3'](bi)['normalize'](),
                            bR['vertexNormals']['push'](bS);
                        bR['color']['copy'](bU['color']);
                        for (bX = 0x0,
                        bY = bW['length']; bX < bY; bX++)
                            bT = bW[bX],
                            bR['vertexColors']['push'](bT['clone']());
                        bR['materialIndex'] = bU['materialIndex'] + bh,
                        bI['push'](bR);
                    }
                    for (bO = 0x0,
                    bP = bL['length']; bO < bP; bO++) {
                        var bZ = bL[bO]
                          , c0 = [];
                        if (void 0x0 !== bZ) {
                            for (bX = 0x0,
                            bY = bZ['length']; bX < bY; bX++)
                                c0['push'](bZ[bX]['clone']());
                            bK['push'](c0);
                        }
                    }
                } else
                    console['error']('THREE.Geometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.Geometry.', bf);
            },
            'mergeMesh': function(bf) {
                bf && bf['isMesh'] ? (bf['matrixAutoUpdate'] && bf['updateMatrix'](),
                this['merge'](bf['geometry'], bf['matrix'])) : console['error']('THREE.Geometry.mergeMesh():\x20mesh\x20not\x20an\x20instance\x20of\x20THREE.Mesh.', bf);
            },
            'mergeVertices': function() {
                var bf, bg, bh, bi, bF, bG, bH, bI, bJ = {}, bK = [], bL = [], bM = Math['pow'](0xa, 0x4);
                for (bh = 0x0,
                bi = this['vertices']['length']; bh < bi; bh++)
                    bf = this['vertices'][bh],
                    void 0x0 === bJ[bg = Math['round'](bf['x'] * bM) + '_' + Math['round'](bf['y'] * bM) + '_' + Math['round'](bf['z'] * bM)] ? (bJ[bg] = bh,
                    bK['push'](this['vertices'][bh]),
                    bL[bh] = bK['length'] - 0x1) : bL[bh] = bL[bJ[bg]];
                var bN = [];
                for (bh = 0x0,
                bi = this['faces']['length']; bh < bi; bh++) {
                    (bF = this['faces'][bh])['a'] = bL[bF['a']],
                    bF['b'] = bL[bF['b']],
                    bF['c'] = bL[bF['c']],
                    bG = [bF['a'], bF['b'], bF['c']];
                    for (var bO = 0x0; bO < 0x3; bO++)
                        if (bG[bO] === bG[(bO + 0x1) % 0x3]) {
                            bN['push'](bh);
                            break;
                        }
                }
                for (bh = bN['length'] - 0x1; bh >= 0x0; bh--) {
                    var bP = bN[bh];
                    for (this['faces']['splice'](bP, 0x1),
                    bH = 0x0,
                    bI = this['faceVertexUvs']['length']; bH < bI; bH++)
                        this['faceVertexUvs'][bH]['splice'](bP, 0x1);
                }
                var bQ = this['vertices']['length'] - bK['length'];
                return this['vertices'] = bK,
                bQ;
            },
            'setFromPoints': function(bf) {
                this['vertices'] = [];
                for (var bg = 0x0, bh = bf['length']; bg < bh; bg++) {
                    var bi = bf[bg];
                    this['vertices']['push'](new eK(bi['x'],bi['y'],bi['z'] || 0x0));
                }
                return this;
            },
            'sortFacesByMaterialIndex': function() {
                for (var bf = this['faces'], bg = bf['length'], bh = 0x0; bh < bg; bh++)
                    bf[bh]['_id'] = bh;
                bf['sort'](function(bf, bg) {
                    return bf['materialIndex'] - bg['materialIndex'];
                });
                var bi, bF, bG = this['faceVertexUvs'][0x0], bH = this['faceVertexUvs'][0x1];
                bG && bG['length'] === bg && (bi = []),
                bH && bH['length'] === bg && (bF = []);
                for (bh = 0x0; bh < bg; bh++) {
                    var bI = bf[bh]['_id'];
                    bi && bi['push'](bG[bI]),
                    bF && bF['push'](bH[bI]);
                }
                bi && (this['faceVertexUvs'][0x0] = bi),
                bF && (this['faceVertexUvs'][0x1] = bF);
            },
            'toJSON': function() {
                var bf = {
                    'metadata': {
                        'version': 4.5,
                        'type': 'Geometry',
                        'generator': 'Geometry.toJSON'
                    }
                };
                if (bf['uuid'] = this['uuid'],
                bf['type'] = this['type'],
                '' !== this['name'] && (bf['name'] = this['name']),
                void 0x0 !== this['parameters']) {
                    var bg = this['parameters'];
                    for (var bh in bg)
                        void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
                    return bf;
                }
                for (var bi = [], bF = 0x0; bF < this['vertices']['length']; bF++) {
                    var bG = this['vertices'][bF];
                    bi['push'](bG['x'], bG['y'], bG['z']);
                }
                var bH = []
                  , bI = []
                  , bJ = {}
                  , bK = []
                  , bL = {}
                  , bM = []
                  , bN = {};
                for (bF = 0x0; bF < this['faces']['length']; bF++) {
                    var bO = this['faces'][bF]
                      , bP = void 0x0 !== this['faceVertexUvs'][0x0][bF]
                      , bQ = bO['normal']['length']() > 0x0
                      , bR = bO['vertexNormals']['length'] > 0x0
                      , bS = 0x1 !== bO['color']['r'] || 0x1 !== bO['color']['g'] || 0x1 !== bO['color']['b']
                      , bT = bO['vertexColors']['length'] > 0x0
                      , bU = 0x0;
                    if (bU = bY(bU, 0x0, 0x0),
                    bU = bY(bU, 0x1, !0x0),
                    bU = bY(bU, 0x2, !0x1),
                    bU = bY(bU, 0x3, bP),
                    bU = bY(bU, 0x4, bQ),
                    bU = bY(bU, 0x5, bR),
                    bU = bY(bU, 0x6, bS),
                    bU = bY(bU, 0x7, bT),
                    bH['push'](bU),
                    bH['push'](bO['a'], bO['b'], bO['c']),
                    bH['push'](bO['materialIndex']),
                    bP) {
                        var bV = this['faceVertexUvs'][0x0][bF];
                        bH['push'](c1(bV[0x0]), c1(bV[0x1]), c1(bV[0x2]));
                    }
                    if (bQ && bH['push'](bZ(bO['normal'])),
                    bR) {
                        var bW = bO['vertexNormals'];
                        bH['push'](bZ(bW[0x0]), bZ(bW[0x1]), bZ(bW[0x2]));
                    }
                    if (bS && bH['push'](c0(bO['color'])),
                    bT) {
                        var bX = bO['vertexColors'];
                        bH['push'](c0(bX[0x0]), c0(bX[0x1]), c0(bX[0x2]));
                    }
                }
                function bY(bf, bg, bh) {
                    return bh ? bf | 0x1 << bg : bf & ~(0x1 << bg);
                }
                function bZ(bf) {
                    var bg = bf['x']['toString']() + bf['y']['toString']() + bf['z']['toString']();
                    return void 0x0 !== bJ[bg] ? bJ[bg] : (bJ[bg] = bI['length'] / 0x3,
                    bI['push'](bf['x'], bf['y'], bf['z']),
                    bJ[bg]);
                }
                function c0(bf) {
                    var bg = bf['r']['toString']() + bf['g']['toString']() + bf['b']['toString']();
                    return void 0x0 !== bL[bg] ? bL[bg] : (bL[bg] = bK['length'],
                    bK['push'](bf['getHex']()),
                    bL[bg]);
                }
                function c1(bf) {
                    var bg = bf['x']['toString']() + bf['y']['toString']();
                    return void 0x0 !== bN[bg] ? bN[bg] : (bN[bg] = bM['length'] / 0x2,
                    bM['push'](bf['x'], bf['y']),
                    bN[bg]);
                }
                return bf['data'] = {},
                bf['data']['vertices'] = bi,
                bf['data']['normals'] = bI,
                bK['length'] > 0x0 && (bf['data']['colors'] = bK),
                bM['length'] > 0x0 && (bf['data']['uvs'] = [bM]),
                bf['data']['faces'] = bH,
                bf;
            },
            'clone': function() {
                return new AH()['copy'](this);
            },
            'copy': function(bf) {
                var bg, bh, bi, bF, bG, bH;
                this['vertices'] = [],
                this['colors'] = [],
                this['faces'] = [],
                this['faceVertexUvs'] = [[]],
                this['morphTargets'] = [],
                this['morphNormals'] = [],
                this['skinWeights'] = [],
                this['skinIndices'] = [],
                this['lineDistances'] = [],
                this['boundingBox'] = null,
                this['boundingSphere'] = null,
                this['name'] = bf['name'];
                var bI = bf['vertices'];
                for (bg = 0x0,
                bh = bI['length']; bg < bh; bg++)
                    this['vertices']['push'](bI[bg]['clone']());
                var bJ = bf['colors'];
                for (bg = 0x0,
                bh = bJ['length']; bg < bh; bg++)
                    this['colors']['push'](bJ[bg]['clone']());
                var bK = bf['faces'];
                for (bg = 0x0,
                bh = bK['length']; bg < bh; bg++)
                    this['faces']['push'](bK[bg]['clone']());
                for (bg = 0x0,
                bh = bf['faceVertexUvs']['length']; bg < bh; bg++) {
                    var bL = bf['faceVertexUvs'][bg];
                    for (void 0x0 === this['faceVertexUvs'][bg] && (this['faceVertexUvs'][bg] = []),
                    bi = 0x0,
                    bF = bL['length']; bi < bF; bi++) {
                        var bM = bL[bi]
                          , bN = [];
                        for (bG = 0x0,
                        bH = bM['length']; bG < bH; bG++) {
                            var bO = bM[bG];
                            bN['push'](bO['clone']());
                        }
                        this['faceVertexUvs'][bg]['push'](bN);
                    }
                }
                var bP = bf['morphTargets'];
                for (bg = 0x0,
                bh = bP['length']; bg < bh; bg++) {
                    var bQ = {};
                    if (bQ['name'] = bP[bg]['name'],
                    void 0x0 !== bP[bg]['vertices'])
                        for (bQ['vertices'] = [],
                        bi = 0x0,
                        bF = bP[bg]['vertices']['length']; bi < bF; bi++)
                            bQ['vertices']['push'](bP[bg]['vertices'][bi]['clone']());
                    if (void 0x0 !== bP[bg]['normals'])
                        for (bQ['normals'] = [],
                        bi = 0x0,
                        bF = bP[bg]['normals']['length']; bi < bF; bi++)
                            bQ['normals']['push'](bP[bg]['normals'][bi]['clone']());
                    this['morphTargets']['push'](bQ);
                }
                var bR = bf['morphNormals'];
                for (bg = 0x0,
                bh = bR['length']; bg < bh; bg++) {
                    var bS = {};
                    if (void 0x0 !== bR[bg]['vertexNormals'])
                        for (bS['vertexNormals'] = [],
                        bi = 0x0,
                        bF = bR[bg]['vertexNormals']['length']; bi < bF; bi++) {
                            var bT = bR[bg]['vertexNormals'][bi]
                              , bU = {};
                            bU['a'] = bT['a']['clone'](),
                            bU['b'] = bT['b']['clone'](),
                            bU['c'] = bT['c']['clone'](),
                            bS['vertexNormals']['push'](bU);
                        }
                    if (void 0x0 !== bR[bg]['faceNormals'])
                        for (bS['faceNormals'] = [],
                        bi = 0x0,
                        bF = bR[bg]['faceNormals']['length']; bi < bF; bi++)
                            bS['faceNormals']['push'](bR[bg]['faceNormals'][bi]['clone']());
                    this['morphNormals']['push'](bS);
                }
                var bV = bf['skinWeights'];
                for (bg = 0x0,
                bh = bV['length']; bg < bh; bg++)
                    this['skinWeights']['push'](bV[bg]['clone']());
                var bW = bf['skinIndices'];
                for (bg = 0x0,
                bh = bW['length']; bg < bh; bg++)
                    this['skinIndices']['push'](bW[bg]['clone']());
                var bX = bf['lineDistances'];
                for (bg = 0x0,
                bh = bX['length']; bg < bh; bg++)
                    this['lineDistances']['push'](bX[bg]);
                var bY = bf['boundingBox'];
                null !== bY && (this['boundingBox'] = bY['clone']());
                var bZ = bf['boundingSphere'];
                return null !== bZ && (this['boundingSphere'] = bZ['clone']()),
                this['elementsNeedUpdate'] = bf['elementsNeedUpdate'],
                this['verticesNeedUpdate'] = bf['verticesNeedUpdate'],
                this['uvsNeedUpdate'] = bf['uvsNeedUpdate'],
                this['normalsNeedUpdate'] = bf['normalsNeedUpdate'],
                this['colorsNeedUpdate'] = bf['colorsNeedUpdate'],
                this['lineDistancesNeedUpdate'] = bf['lineDistancesNeedUpdate'],
                this['groupsNeedUpdate'] = bf['groupsNeedUpdate'],
                this;
            },
            'dispose': function() {
                this['dispatchEvent']({
                    'type': 'dispose'
                });
            }
        }),
        Object['defineProperty'](AI['prototype'], 'needsUpdate', {
            'set': function(bf) {
                !0x0 === bf && this['version']++;
            }
        }),
        Object['assign'](AI['prototype'], {
            'isBufferAttribute': !0x0,
            'onUploadCallback': function() {},
            'setArray': function(bf) {
                if (Array['isArray'](bf))
                    throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
                return this['count'] = void 0x0 !== bf ? bf['length'] / this['itemSize'] : 0x0,
                this['array'] = bf,
                this;
            },
            'setDynamic': function(bf) {
                return this['dynamic'] = bf,
                this;
            },
            'copy': function(bf) {
                return this['name'] = bf['name'],
                this['array'] = new bf['array']['constructor'](bf['array']),
                this['itemSize'] = bf['itemSize'],
                this['count'] = bf['count'],
                this['normalized'] = bf['normalized'],
                this['dynamic'] = bf['dynamic'],
                this;
            },
            'copyAt': function(bf, bg, bh) {
                bf *= this['itemSize'],
                bh *= bg['itemSize'];
                for (var bi = 0x0, bF = this['itemSize']; bi < bF; bi++)
                    this['array'][bf + bi] = bg['array'][bh + bi];
                return this;
            },
            'copyArray': function(bf) {
                return this['array']['set'](bf),
                this;
            },
            'copyColorsArray': function(bf) {
                for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                    var bG = bf[bi];
                    void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyColorsArray():\x20color\x20is\x20undefined', bi),
                    bG = new w7()),
                    bg[bh++] = bG['r'],
                    bg[bh++] = bG['g'],
                    bg[bh++] = bG['b'];
                }
                return this;
            },
            'copyVector2sArray': function(bf) {
                for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                    var bG = bf[bi];
                    void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector2sArray():\x20vector\x20is\x20undefined', bi),
                    bG = new eC()),
                    bg[bh++] = bG['x'],
                    bg[bh++] = bG['y'];
                }
                return this;
            },
            'copyVector3sArray': function(bf) {
                for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                    var bG = bf[bi];
                    void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector3sArray():\x20vector\x20is\x20undefined', bi),
                    bG = new eK()),
                    bg[bh++] = bG['x'],
                    bg[bh++] = bG['y'],
                    bg[bh++] = bG['z'];
                }
                return this;
            },
            'copyVector4sArray': function(bf) {
                for (var bg = this['array'], bh = 0x0, bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                    var bG = bf[bi];
                    void 0x0 === bG && (console['warn']('THREE.BufferAttribute.copyVector4sArray():\x20vector\x20is\x20undefined', bi),
                    bG = new m7()),
                    bg[bh++] = bG['x'],
                    bg[bh++] = bG['y'],
                    bg[bh++] = bG['z'],
                    bg[bh++] = bG['w'];
                }
                return this;
            },
            'set': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['array']['set'](bf, bg),
                this;
            },
            'getX': function(bf) {
                return this['array'][bf * this['itemSize']];
            },
            'setX': function(bf, bg) {
                return this['array'][bf * this['itemSize']] = bg,
                this;
            },
            'getY': function(bf) {
                return this['array'][bf * this['itemSize'] + 0x1];
            },
            'setY': function(bf, bg) {
                return this['array'][bf * this['itemSize'] + 0x1] = bg,
                this;
            },
            'getZ': function(bf) {
                return this['array'][bf * this['itemSize'] + 0x2];
            },
            'setZ': function(bf, bg) {
                return this['array'][bf * this['itemSize'] + 0x2] = bg,
                this;
            },
            'getW': function(bf) {
                return this['array'][bf * this['itemSize'] + 0x3];
            },
            'setW': function(bf, bg) {
                return this['array'][bf * this['itemSize'] + 0x3] = bg,
                this;
            },
            'setXY': function(bf, bg, bh) {
                return bf *= this['itemSize'],
                this['array'][bf + 0x0] = bg,
                this['array'][bf + 0x1] = bh,
                this;
            },
            'setXYZ': function(bf, bg, bh, bi) {
                return bf *= this['itemSize'],
                this['array'][bf + 0x0] = bg,
                this['array'][bf + 0x1] = bh,
                this['array'][bf + 0x2] = bi,
                this;
            },
            'setXYZW': function(bf, bg, bh, bi, bF) {
                return bf *= this['itemSize'],
                this['array'][bf + 0x0] = bg,
                this['array'][bf + 0x1] = bh,
                this['array'][bf + 0x2] = bi,
                this['array'][bf + 0x3] = bF,
                this;
            },
            'onUpload': function(bf) {
                return this['onUploadCallback'] = bf,
                this;
            },
            'clone': function() {
                return new this['constructor'](this['array'],this['itemSize'])['copy'](this);
            },
            'toJSON': function() {
                return {
                    'itemSize': this['itemSize'],
                    'type': this['array']['constructor']['name'],
                    'array': Array['prototype']['slice']['call'](this['array']),
                    'normalized': this['normalized']
                };
            }
        }),
        AM['prototype'] = Object['create'](AI['prototype']),
        AM['prototype']['constructor'] = AM,
        AQ['prototype'] = Object['create'](AI['prototype']),
        AQ['prototype']['constructor'] = AQ,
        AU['prototype'] = Object['create'](AI['prototype']),
        AU['prototype']['constructor'] = AU,
        AY['prototype'] = Object['create'](AI['prototype']),
        AY['prototype']['constructor'] = AY,
        B2['prototype'] = Object['create'](AI['prototype']),
        B2['prototype']['constructor'] = B2,
        B6['prototype'] = Object['create'](AI['prototype']),
        B6['prototype']['constructor'] = B6,
        Ba['prototype'] = Object['create'](AI['prototype']),
        Ba['prototype']['constructor'] = Ba,
        Be['prototype'] = Object['create'](AI['prototype']),
        Be['prototype']['constructor'] = Be,
        Bi['prototype'] = Object['create'](AI['prototype']),
        Bi['prototype']['constructor'] = Bi,
        Object['assign'](Bm['prototype'], {
            'computeGroups': function(bf) {
                for (var bg, bh = [], bi = void 0x0, bF = bf['faces'], bG = 0x0; bG < bF['length']; bG++) {
                    var bH = bF[bG];
                    bH['materialIndex'] !== bi && (bi = bH['materialIndex'],
                    void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'],
                    bh['push'](bg)),
                    bg = {
                        'start': 0x3 * bG,
                        'materialIndex': bi
                    });
                }
                void 0x0 !== bg && (bg['count'] = 0x3 * bG - bg['start'],
                bh['push'](bg)),
                this['groups'] = bh;
            },
            'fromGeometry': function(bf) {
                var bg, bh = bf['faces'], bi = bf['vertices'], bF = bf['faceVertexUvs'], bG = bF[0x0] && bF[0x0]['length'] > 0x0, bH = bF[0x1] && bF[0x1]['length'] > 0x0, bI = bf['morphTargets'], bJ = bI['length'];
                if (bJ > 0x0) {
                    bg = [];
                    for (var bK = 0x0; bK < bJ; bK++)
                        bg[bK] = {
                            'name': bI[bK]['name'],
                            'data': []
                        };
                    this['morphTargets']['position'] = bg;
                }
                var bL, bM = bf['morphNormals'], bN = bM['length'];
                if (bN > 0x0) {
                    bL = [];
                    for (bK = 0x0; bK < bN; bK++)
                        bL[bK] = {
                            'name': bM[bK]['name'],
                            'data': []
                        };
                    this['morphTargets']['normal'] = bL;
                }
                var bO = bf['skinIndices']
                  , bP = bf['skinWeights']
                  , bQ = bO['length'] === bi['length']
                  , bR = bP['length'] === bi['length'];
                bi['length'] > 0x0 && 0x0 === bh['length'] && console['error']('THREE.DirectGeometry:\x20Faceless\x20geometries\x20are\x20not\x20supported.');
                for (bK = 0x0; bK < bh['length']; bK++) {
                    var bS = bh[bK];
                    this['vertices']['push'](bi[bS['a']], bi[bS['b']], bi[bS['c']]);
                    var bT = bS['vertexNormals'];
                    if (0x3 === bT['length'])
                        this['normals']['push'](bT[0x0], bT[0x1], bT[0x2]);
                    else {
                        var bU = bS['normal'];
                        this['normals']['push'](bU, bU, bU);
                    }
                    var bV, bW = bS['vertexColors'];
                    if (0x3 === bW['length'])
                        this['colors']['push'](bW[0x0], bW[0x1], bW[0x2]);
                    else {
                        var bX = bS['color'];
                        this['colors']['push'](bX, bX, bX);
                    }
                    if (!0x0 === bG)
                        void 0x0 !== (bV = bF[0x0][bK]) ? this['uvs']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv\x20', bK),
                        this['uvs']['push'](new eC(), new eC(), new eC()));
                    if (!0x0 === bH)
                        void 0x0 !== (bV = bF[0x1][bK]) ? this['uvs2']['push'](bV[0x0], bV[0x1], bV[0x2]) : (console['warn']('THREE.DirectGeometry.fromGeometry():\x20Undefined\x20vertexUv2\x20', bK),
                        this['uvs2']['push'](new eC(), new eC(), new eC()));
                    for (var bY = 0x0; bY < bJ; bY++) {
                        var bZ = bI[bY]['vertices'];
                        bg[bY]['data']['push'](bZ[bS['a']], bZ[bS['b']], bZ[bS['c']]);
                    }
                    for (bY = 0x0; bY < bN; bY++) {
                        var c0 = bM[bY]['vertexNormals'][bK];
                        bL[bY]['data']['push'](c0['a'], c0['b'], c0['c']);
                    }
                    bQ && this['skinIndices']['push'](bO[bS['a']], bO[bS['b']], bO[bS['c']]),
                    bR && this['skinWeights']['push'](bP[bS['a']], bP[bS['b']], bP[bS['c']]);
                }
                return this['computeGroups'](bf),
                this['verticesNeedUpdate'] = bf['verticesNeedUpdate'],
                this['normalsNeedUpdate'] = bf['normalsNeedUpdate'],
                this['colorsNeedUpdate'] = bf['colorsNeedUpdate'],
                this['uvsNeedUpdate'] = bf['uvsNeedUpdate'],
                this['groupsNeedUpdate'] = bf['groupsNeedUpdate'],
                this;
            }
        });
        var Ge = 0x1;
        function Gf() {
            Object['defineProperty'](this, 'id', {
                'value': Ge += 0x2
            }),
            this['uuid'] = e2['generateUUID'](),
            this['name'] = '',
            this['type'] = 'BufferGeometry',
            this['index'] = null,
            this['attributes'] = {},
            this['morphAttributes'] = {},
            this['groups'] = [],
            this['boundingBox'] = null,
            this['boundingSphere'] = null,
            this['drawRange'] = {
                'start': 0x0,
                'count': 0x1 / 0x0
            },
            this['userData'] = {};
        }
        function Gg(bf, bg, bh, bi, bF, bG) {
            AH['call'](this),
            this['type'] = 'BoxGeometry',
            this['parameters'] = {
                'width': bf,
                'height': bg,
                'depth': bh,
                'widthSegments': bi,
                'heightSegments': bF,
                'depthSegments': bG
            },
            this['fromBufferGeometry'](new Gn(bf,bg,bh,bi,bF,bG)),
            this['mergeVertices']();
        }
        function Gn(bf, bg, bh, bi, bF, bG) {
            Gf['call'](this),
            this['type'] = 'BoxBufferGeometry',
            this['parameters'] = {
                'width': bf,
                'height': bg,
                'depth': bh,
                'widthSegments': bi,
                'heightSegments': bF,
                'depthSegments': bG
            };
            var bH = this;
            bf = bf || 0x1,
            bg = bg || 0x1,
            bh = bh || 0x1,
            bi = Math['floor'](bi) || 0x1,
            bF = Math['floor'](bF) || 0x1,
            bG = Math['floor'](bG) || 0x1;
            var bI = []
              , bJ = []
              , bK = []
              , bL = []
              , bM = 0x0
              , bN = 0x0;
            function bO(bf, bg, bh, bi, bF, bG, bO, bP, bQ, bR, bS) {
                var bT, bU, bV = bG / bQ, bW = bO / bR, bX = bG / 0x2, bY = bO / 0x2, bZ = bP / 0x2, c0 = bQ + 0x1, c1 = bR + 0x1, c2 = 0x0, c3 = 0x0, c4 = new eK();
                for (bU = 0x0; bU < c1; bU++) {
                    var c5 = bU * bW - bY;
                    for (bT = 0x0; bT < c0; bT++) {
                        var c6 = bT * bV - bX;
                        c4[bf] = c6 * bi,
                        c4[bg] = c5 * bF,
                        c4[bh] = bZ,
                        bJ['push'](c4['x'], c4['y'], c4['z']),
                        c4[bf] = 0x0,
                        c4[bg] = 0x0,
                        c4[bh] = bP > 0x0 ? 0x1 : -0x1,
                        bK['push'](c4['x'], c4['y'], c4['z']),
                        bL['push'](bT / bQ),
                        bL['push'](0x1 - bU / bR),
                        c2 += 0x1;
                    }
                }
                for (bU = 0x0; bU < bR; bU++)
                    for (bT = 0x0; bT < bQ; bT++) {
                        var c7 = bM + bT + c0 * bU
                          , c8 = bM + bT + c0 * (bU + 0x1)
                          , c9 = bM + (bT + 0x1) + c0 * (bU + 0x1)
                          , ca = bM + (bT + 0x1) + c0 * bU;
                        bI['push'](c7, c8, ca),
                        bI['push'](c8, c9, ca),
                        c3 += 0x6;
                    }
                bH['addGroup'](bN, c3, bS),
                bN += c3,
                bM += c2;
            }
            bO('z', 'y', 'x', -0x1, -0x1, bh, bg, bf, bG, bF, 0x0),
            bO('z', 'y', 'x', 0x1, -0x1, bh, bg, -bf, bG, bF, 0x1),
            bO('x', 'z', 'y', 0x1, 0x1, bf, bh, bg, bi, bG, 0x2),
            bO('x', 'z', 'y', 0x1, -0x1, bf, bh, -bg, bi, bG, 0x3),
            bO('x', 'y', 'z', 0x1, -0x1, bf, bg, bh, bi, bF, 0x4),
            bO('x', 'y', 'z', -0x1, -0x1, bf, bg, -bh, bi, bF, 0x5),
            this['setIndex'](bI),
            this['addAttribute']('position', new Be(bJ,0x3)),
            this['addAttribute']('normal', new Be(bK,0x3)),
            this['addAttribute']('uv', new Be(bL,0x2));
        }
        function H5(bf, bg, bh, bi) {
            AH['call'](this),
            this['type'] = 'PlaneGeometry',
            this['parameters'] = {
                'width': bf,
                'height': bg,
                'widthSegments': bh,
                'heightSegments': bi
            },
            this['fromBufferGeometry'](new Ha(bf,bg,bh,bi)),
            this['mergeVertices']();
        }
        function Ha(bf, bg, bh, bi) {
            Gf['call'](this),
            this['type'] = 'PlaneBufferGeometry',
            this['parameters'] = {
                'width': bf,
                'height': bg,
                'widthSegments': bh,
                'heightSegments': bi
            };
            var bF, bG, bH = (bf = bf || 0x1) / 0x2, bI = (bg = bg || 0x1) / 0x2, bJ = Math['floor'](bh) || 0x1, bK = Math['floor'](bi) || 0x1, bL = bJ + 0x1, bM = bK + 0x1, bN = bf / bJ, bO = bg / bK, bP = [], bQ = [], bR = [], bS = [];
            for (bG = 0x0; bG < bM; bG++) {
                var bT = bG * bO - bI;
                for (bF = 0x0; bF < bL; bF++) {
                    var bU = bF * bN - bH;
                    bQ['push'](bU, -bT, 0x0),
                    bR['push'](0x0, 0x0, 0x1),
                    bS['push'](bF / bJ),
                    bS['push'](0x1 - bG / bK);
                }
            }
            for (bG = 0x0; bG < bK; bG++)
                for (bF = 0x0; bF < bJ; bF++) {
                    var bV = bF + bL * bG
                      , bW = bF + bL * (bG + 0x1)
                      , bX = bF + 0x1 + bL * (bG + 0x1)
                      , bY = bF + 0x1 + bL * bG;
                    bP['push'](bV, bW, bY),
                    bP['push'](bW, bX, bY);
                }
            this['setIndex'](bP),
            this['addAttribute']('position', new Be(bQ,0x3)),
            this['addAttribute']('normal', new Be(bR,0x3)),
            this['addAttribute']('uv', new Be(bS,0x2));
        }
        Gf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': Gf,
            'isBufferGeometry': !0x0,
            'getIndex': function() {
                return this['index'];
            },
            'setIndex': function(bf) {
                Array['isArray'](bf) ? this['index'] = new ((Bn(bf)) > 0xffff ? Ba : B2)(bf,0x1) : this['index'] = bf;
            },
            'addAttribute': function(bf, bg) {
                return bg && bg['isBufferAttribute'] || bg && bg['isInterleavedBufferAttribute'] ? 'index' === bf ? (console['warn']('THREE.BufferGeometry.addAttribute:\x20Use\x20.setIndex()\x20for\x20index\x20attribute.'),
                this['setIndex'](bg),
                this) : (this['attributes'][bf] = bg,
                this) : (console['warn']('THREE.BufferGeometry:\x20.addAttribute()\x20now\x20expects\x20(\x20name,\x20attribute\x20).'),
                this['addAttribute'](bf, new AI(arguments[0x1],arguments[0x2])));
            },
            'getAttribute': function(bf) {
                return this['attributes'][bf];
            },
            'removeAttribute': function(bf) {
                return delete this['attributes'][bf],
                this;
            },
            'addGroup': function(bf, bg, bh) {
                this['groups']['push']({
                    'start': bf,
                    'count': bg,
                    'materialIndex': void 0x0 !== bh ? bh : 0x0
                });
            },
            'clearGroups': function() {
                this['groups'] = [];
            },
            'setDrawRange': function(bf, bg) {
                this['drawRange']['start'] = bf,
                this['drawRange']['count'] = bg;
            },
            'applyMatrix': function(bf) {
                var bg = this['attributes']['position'];
                void 0x0 !== bg && (bf['applyToBufferAttribute'](bg),
                bg['needsUpdate'] = !0x0);
                var bh = this['attributes']['normal'];
                void 0x0 !== bh && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bh),
                bh['needsUpdate'] = !0x0);
                var bi = this['attributes']['tangent'];
                void 0x0 !== bi && (new eO()['getNormalMatrix'](bf)['applyToBufferAttribute'](bi),
                bi['needsUpdate'] = !0x0);
                return null !== this['boundingBox'] && this['computeBoundingBox'](),
                null !== this['boundingSphere'] && this['computeBoundingSphere'](),
                this;
            },
            'rotateX': function() {
                var bf = new mR();
                return function(bg) {
                    return bf['makeRotationX'](bg),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'rotateY': function() {
                var bf = new mR();
                return function(bg) {
                    return bf['makeRotationY'](bg),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'rotateZ': function() {
                var bf = new mR();
                return function(bg) {
                    return bf['makeRotationZ'](bg),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'translate': function() {
                var bf = new mR();
                return function(bg, bh, bi) {
                    return bf['makeTranslation'](bg, bh, bi),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'scale': function() {
                var bf = new mR();
                return function(bg, bh, bi) {
                    return bf['makeScale'](bg, bh, bi),
                    this['applyMatrix'](bf),
                    this;
                }
                ;
            }(),
            'lookAt': function() {
                var bf = new yT();
                return function(bg) {
                    bf['lookAt'](bg),
                    bf['updateMatrix'](),
                    this['applyMatrix'](bf['matrix']);
                }
                ;
            }(),
            'center': function() {
                var bf = new eK();
                return function() {
                    return this['computeBoundingBox'](),
                    this['boundingBox']['getCenter'](bf)['negate'](),
                    this['translate'](bf['x'], bf['y'], bf['z']),
                    this;
                }
                ;
            }(),
            'setFromObject': function(bf) {
                var bg = bf['geometry'];
                if (bf['isPoints'] || bf['isLine']) {
                    var bh = new Be(0x3 * bg['vertices']['length'],0x3)
                      , bi = new Be(0x3 * bg['colors']['length'],0x3);
                    if (this['addAttribute']('position', bh['copyVector3sArray'](bg['vertices'])),
                    this['addAttribute']('color', bi['copyColorsArray'](bg['colors'])),
                    bg['lineDistances'] && bg['lineDistances']['length'] === bg['vertices']['length']) {
                        var bF = new Be(bg['lineDistances']['length'],0x1);
                        this['addAttribute']('lineDistance', bF['copyArray'](bg['lineDistances']));
                    }
                    null !== bg['boundingSphere'] && (this['boundingSphere'] = bg['boundingSphere']['clone']()),
                    null !== bg['boundingBox'] && (this['boundingBox'] = bg['boundingBox']['clone']());
                } else
                    bf['isMesh'] && bg && bg['isGeometry'] && this['fromGeometry'](bg);
                return this;
            },
            'setFromPoints': function(bf) {
                for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = bf[bh];
                    bg['push'](bF['x'], bF['y'], bF['z'] || 0x0);
                }
                return this['addAttribute']('position', new Be(bg,0x3)),
                this;
            },
            'updateFromObject': function(bf) {
                var bg, bh = bf['geometry'];
                if (bf['isMesh']) {
                    var bi = bh['__directGeometry'];
                    if (!0x0 === bh['elementsNeedUpdate'] && (bi = void 0x0,
                    bh['elementsNeedUpdate'] = !0x1),
                    void 0x0 === bi)
                        return this['fromGeometry'](bh);
                    bi['verticesNeedUpdate'] = bh['verticesNeedUpdate'],
                    bi['normalsNeedUpdate'] = bh['normalsNeedUpdate'],
                    bi['colorsNeedUpdate'] = bh['colorsNeedUpdate'],
                    bi['uvsNeedUpdate'] = bh['uvsNeedUpdate'],
                    bi['groupsNeedUpdate'] = bh['groupsNeedUpdate'],
                    bh['verticesNeedUpdate'] = !0x1,
                    bh['normalsNeedUpdate'] = !0x1,
                    bh['colorsNeedUpdate'] = !0x1,
                    bh['uvsNeedUpdate'] = !0x1,
                    bh['groupsNeedUpdate'] = !0x1,
                    bh = bi;
                }
                return !0x0 === bh['verticesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['position']) && (bg['copyVector3sArray'](bh['vertices']),
                bg['needsUpdate'] = !0x0),
                bh['verticesNeedUpdate'] = !0x1),
                !0x0 === bh['normalsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['normal']) && (bg['copyVector3sArray'](bh['normals']),
                bg['needsUpdate'] = !0x0),
                bh['normalsNeedUpdate'] = !0x1),
                !0x0 === bh['colorsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['color']) && (bg['copyColorsArray'](bh['colors']),
                bg['needsUpdate'] = !0x0),
                bh['colorsNeedUpdate'] = !0x1),
                bh['uvsNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['uv']) && (bg['copyVector2sArray'](bh['uvs']),
                bg['needsUpdate'] = !0x0),
                bh['uvsNeedUpdate'] = !0x1),
                bh['lineDistancesNeedUpdate'] && (void 0x0 !== (bg = this['attributes']['lineDistance']) && (bg['copyArray'](bh['lineDistances']),
                bg['needsUpdate'] = !0x0),
                bh['lineDistancesNeedUpdate'] = !0x1),
                bh['groupsNeedUpdate'] && (bh['computeGroups'](bf['geometry']),
                this['groups'] = bh['groups'],
                bh['groupsNeedUpdate'] = !0x1),
                this;
            },
            'fromGeometry': function(bf) {
                return bf['__directGeometry'] = new Bm()['fromGeometry'](bf),
                this['fromDirectGeometry'](bf['__directGeometry']);
            },
            'fromDirectGeometry': function(bf) {
                var bg = new Float32Array(0x3 * bf['vertices']['length']);
                if (this['addAttribute']('position', new AI(bg,0x3)['copyVector3sArray'](bf['vertices'])),
                bf['normals']['length'] > 0x0) {
                    var bh = new Float32Array(0x3 * bf['normals']['length']);
                    this['addAttribute']('normal', new AI(bh,0x3)['copyVector3sArray'](bf['normals']));
                }
                if (bf['colors']['length'] > 0x0) {
                    var bi = new Float32Array(0x3 * bf['colors']['length']);
                    this['addAttribute']('color', new AI(bi,0x3)['copyColorsArray'](bf['colors']));
                }
                if (bf['uvs']['length'] > 0x0) {
                    var bF = new Float32Array(0x2 * bf['uvs']['length']);
                    this['addAttribute']('uv', new AI(bF,0x2)['copyVector2sArray'](bf['uvs']));
                }
                if (bf['uvs2']['length'] > 0x0) {
                    var bG = new Float32Array(0x2 * bf['uvs2']['length']);
                    this['addAttribute']('uv2', new AI(bG,0x2)['copyVector2sArray'](bf['uvs2']));
                }
                for (var bH in this['groups'] = bf['groups'],
                bf['morphTargets']) {
                    for (var bI = [], bJ = bf['morphTargets'][bH], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                        var bM = bJ[bK]
                          , bN = new Be(0x3 * bM['data']['length'],0x3);
                        bN['name'] = bM['name'],
                        bI['push'](bN['copyVector3sArray'](bM['data']));
                    }
                    this['morphAttributes'][bH] = bI;
                }
                if (bf['skinIndices']['length'] > 0x0) {
                    var bO = new Be(0x4 * bf['skinIndices']['length'],0x4);
                    this['addAttribute']('skinIndex', bO['copyVector4sArray'](bf['skinIndices']));
                }
                if (bf['skinWeights']['length'] > 0x0) {
                    var bP = new Be(0x4 * bf['skinWeights']['length'],0x4);
                    this['addAttribute']('skinWeight', bP['copyVector4sArray'](bf['skinWeights']));
                }
                return null !== bf['boundingSphere'] && (this['boundingSphere'] = bf['boundingSphere']['clone']()),
                null !== bf['boundingBox'] && (this['boundingBox'] = bf['boundingBox']['clone']()),
                this;
            },
            'computeBoundingBox': function() {
                var bf = new mB();
                return function() {
                    null === this['boundingBox'] && (this['boundingBox'] = new mB());
                    var bg = this['attributes']['position']
                      , bh = this['morphAttributes']['position'];
                    if (void 0x0 !== bg) {
                        if (this['boundingBox']['setFromBufferAttribute'](bg),
                        bh)
                            for (var bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                                var bG = bh[bi];
                                bf['setFromBufferAttribute'](bG),
                                this['boundingBox']['expandByPoint'](bf['min']),
                                this['boundingBox']['expandByPoint'](bf['max']);
                            }
                    } else
                        this['boundingBox']['makeEmpty']();
                    (isNaN(this['boundingBox']['min']['x']) || isNaN(this['boundingBox']['min']['y']) || isNaN(this['boundingBox']['min']['z'])) && console['error']('THREE.BufferGeometry.computeBoundingBox:\x20Computed\x20min/max\x20have\x20NaN\x20values.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
                }
                ;
            }(),
            'computeBoundingSphere': function() {
                var bf = new mB()
                  , bg = new mB()
                  , bh = new eK();
                return function() {
                    null === this['boundingSphere'] && (this['boundingSphere'] = new mE());
                    var bi = this['attributes']['position']
                      , bF = this['morphAttributes']['position'];
                    if (bi) {
                        var bG = this['boundingSphere']['center'];
                        if (bf['setFromBufferAttribute'](bi),
                        bF)
                            for (var bH = 0x0, bI = bF['length']; bH < bI; bH++) {
                                var bJ = bF[bH];
                                bg['setFromBufferAttribute'](bJ),
                                bf['expandByPoint'](bg['min']),
                                bf['expandByPoint'](bg['max']);
                            }
                        bf['getCenter'](bG);
                        var bK = 0x0;
                        for (bH = 0x0,
                        bI = bi['count']; bH < bI; bH++)
                            bh['fromBufferAttribute'](bi, bH),
                            bK = Math['max'](bK, bG['distanceToSquared'](bh));
                        if (bF)
                            for (bH = 0x0,
                            bI = bF['length']; bH < bI; bH++)
                                for (var bL = 0x0, bM = (bJ = bF[bH])['count']; bL < bM; bL++)
                                    bh['fromBufferAttribute'](bJ, bL),
                                    bK = Math['max'](bK, bG['distanceToSquared'](bh));
                        this['boundingSphere']['radius'] = Math['sqrt'](bK),
                        isNaN(this['boundingSphere']['radius']) && console['error']('THREE.BufferGeometry.computeBoundingSphere():\x20Computed\x20radius\x20is\x20NaN.\x20The\x20\x22position\x22\x20attribute\x20is\x20likely\x20to\x20have\x20NaN\x20values.', this);
                    }
                }
                ;
            }(),
            'computeFaceNormals': function() {},
            'computeVertexNormals': function() {
                var bf = this['index']
                  , bg = this['attributes'];
                if (bg['position']) {
                    var bh = bg['position']['array'];
                    if (void 0x0 === bg['normal'])
                        this['addAttribute']('normal', new AI(new Float32Array(bh['length']),0x3));
                    else
                        for (var bi = bg['normal']['array'], bF = 0x0, bG = bi['length']; bF < bG; bF++)
                            bi[bF] = 0x0;
                    var bH, bI, bJ, bK = bg['normal']['array'], bL = new eK(), bM = new eK(), bN = new eK(), bO = new eK(), bP = new eK();
                    if (bf) {
                        var bQ = bf['array'];
                        for (bF = 0x0,
                        bG = bf['count']; bF < bG; bF += 0x3)
                            bH = 0x3 * bQ[bF + 0x0],
                            bI = 0x3 * bQ[bF + 0x1],
                            bJ = 0x3 * bQ[bF + 0x2],
                            bL['fromArray'](bh, bH),
                            bM['fromArray'](bh, bI),
                            bN['fromArray'](bh, bJ),
                            bO['subVectors'](bN, bM),
                            bP['subVectors'](bL, bM),
                            bO['cross'](bP),
                            bK[bH] += bO['x'],
                            bK[bH + 0x1] += bO['y'],
                            bK[bH + 0x2] += bO['z'],
                            bK[bI] += bO['x'],
                            bK[bI + 0x1] += bO['y'],
                            bK[bI + 0x2] += bO['z'],
                            bK[bJ] += bO['x'],
                            bK[bJ + 0x1] += bO['y'],
                            bK[bJ + 0x2] += bO['z'];
                    } else
                        for (bF = 0x0,
                        bG = bh['length']; bF < bG; bF += 0x9)
                            bL['fromArray'](bh, bF),
                            bM['fromArray'](bh, bF + 0x3),
                            bN['fromArray'](bh, bF + 0x6),
                            bO['subVectors'](bN, bM),
                            bP['subVectors'](bL, bM),
                            bO['cross'](bP),
                            bK[bF] = bO['x'],
                            bK[bF + 0x1] = bO['y'],
                            bK[bF + 0x2] = bO['z'],
                            bK[bF + 0x3] = bO['x'],
                            bK[bF + 0x4] = bO['y'],
                            bK[bF + 0x5] = bO['z'],
                            bK[bF + 0x6] = bO['x'],
                            bK[bF + 0x7] = bO['y'],
                            bK[bF + 0x8] = bO['z'];
                    this['normalizeNormals'](),
                    bg['normal']['needsUpdate'] = !0x0;
                }
            },
            'merge': function(bf, bg) {
                if (bf && bf['isBufferGeometry']) {
                    void 0x0 === bg && (bg = 0x0,
                    console['warn']('THREE.BufferGeometry.merge():\x20Overwriting\x20original\x20geometry,\x20starting\x20at\x20offset=0.\x20Use\x20BufferGeometryUtils.mergeBufferGeometries()\x20for\x20lossless\x20merge.'));
                    var bh = this['attributes'];
                    for (var bi in bh)
                        if (void 0x0 !== bf['attributes'][bi])
                            for (var bF = bh[bi]['array'], bG = bf['attributes'][bi], bH = bG['array'], bI = bG['itemSize'] * bg, bJ = Math['min'](bH['length'], bF['length'] - bI), bK = 0x0, bL = bI; bK < bJ; bK++,
                            bL++)
                                bF[bL] = bH[bK];
                    return this;
                }
                console['error']('THREE.BufferGeometry.merge():\x20geometry\x20not\x20an\x20instance\x20of\x20THREE.BufferGeometry.', bf);
            },
            'normalizeNormals': function() {
                var bf = new eK();
                return function() {
                    for (var bg = this['attributes']['normal'], bh = 0x0, bi = bg['count']; bh < bi; bh++)
                        bf['x'] = bg['getX'](bh),
                        bf['y'] = bg['getY'](bh),
                        bf['z'] = bg['getZ'](bh),
                        bf['normalize'](),
                        bg['setXYZ'](bh, bf['x'], bf['y'], bf['z']);
                }
                ;
            }(),
            'toNonIndexed': function() {
                function bf(bf, bg) {
                    for (var bh = bf['array'], bi = bf['itemSize'], bF = new bh['constructor'](bg['length'] * bi), bG = 0x0, bH = 0x0, bI = 0x0, bJ = bg['length']; bI < bJ; bI++) {
                        bG = bg[bI] * bi;
                        for (var bK = 0x0; bK < bi; bK++)
                            bF[bH++] = bh[bG++];
                    }
                    return new AI(bF,bi);
                }
                if (null === this['index'])
                    return console['warn']('THREE.BufferGeometry.toNonIndexed():\x20Geometry\x20is\x20already\x20non-indexed.'),
                    this;
                var bg = new Gf()
                  , bh = this['index']['array']
                  , bi = this['attributes'];
                for (var bF in bi) {
                    var bG = bf(bi[bF], bh);
                    bg['addAttribute'](bF, bG);
                }
                var bH = this['morphAttributes'];
                for (bF in bH) {
                    for (var bI = [], bJ = bH[bF], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                        bG = bf(bJ[bK], bh);
                        bI['push'](bG);
                    }
                    bg['morphAttributes'][bF] = bI;
                }
                for (var bM = this['groups'], bN = (bK = 0x0,
                bM['length']); bK < bN; bK++) {
                    var bO = bM[bK];
                    bg['addGroup'](bO['start'], bO['count'], bO['materialIndex']);
                }
                return bg;
            },
            'toJSON': function() {
                var bf = {
                    'metadata': {
                        'version': 4.5,
                        'type': 'BufferGeometry',
                        'generator': 'BufferGeometry.toJSON'
                    }
                };
                if (bf['uuid'] = this['uuid'],
                bf['type'] = this['type'],
                '' !== this['name'] && (bf['name'] = this['name']),
                Object['keys'](this['userData'])['length'] > 0x0 && (bf['userData'] = this['userData']),
                void 0x0 !== this['parameters']) {
                    var bg = this['parameters'];
                    for (var bh in bg)
                        void 0x0 !== bg[bh] && (bf[bh] = bg[bh]);
                    return bf;
                }
                bf['data'] = {
                    'attributes': {}
                };
                var bi = this['index'];
                null !== bi && (bf['data']['index'] = {
                    'type': bi['array']['constructor']['name'],
                    'array': Array['prototype']['slice']['call'](bi['array'])
                });
                var bF = this['attributes'];
                for (var bh in bF) {
                    var bG = (bN = bF[bh])['toJSON']();
                    '' !== bN['name'] && (bG['name'] = bN['name']),
                    bf['data']['attributes'][bh] = bG;
                }
                var bH = {}
                  , bI = !0x1;
                for (var bh in this['morphAttributes']) {
                    for (var bJ = this['morphAttributes'][bh], bK = [], bL = 0x0, bM = bJ['length']; bL < bM; bL++) {
                        var bN;
                        bG = (bN = bJ[bL])['toJSON']();
                        '' !== bN['name'] && (bG['name'] = bN['name']),
                        bK['push'](bG);
                    }
                    bK['length'] > 0x0 && (bH[bh] = bK,
                    bI = !0x0);
                }
                bI && (bf['data']['morphAttributes'] = bH);
                var bO = this['groups'];
                bO['length'] > 0x0 && (bf['data']['groups'] = JSON['parse'](JSON['stringify'](bO)));
                var bP = this['boundingSphere'];
                return null !== bP && (bf['data']['boundingSphere'] = {
                    'center': bP['center']['toArray'](),
                    'radius': bP['radius']
                }),
                bf;
            },
            'clone': function() {
                return new Gf()['copy'](this);
            },
            'copy': function(bf) {
                var bg, bh, bi;
                this['index'] = null,
                this['attributes'] = {},
                this['morphAttributes'] = {},
                this['groups'] = [],
                this['boundingBox'] = null,
                this['boundingSphere'] = null,
                this['name'] = bf['name'];
                var bF = bf['index'];
                null !== bF && this['setIndex'](bF['clone']());
                var bG = bf['attributes'];
                for (bg in bG) {
                    var bH = bG[bg];
                    this['addAttribute'](bg, bH['clone']());
                }
                var bI = bf['morphAttributes'];
                for (bg in bI) {
                    var bJ = []
                      , bK = bI[bg];
                    for (bh = 0x0,
                    bi = bK['length']; bh < bi; bh++)
                        bJ['push'](bK[bh]['clone']());
                    this['morphAttributes'][bg] = bJ;
                }
                var bL = bf['groups'];
                for (bh = 0x0,
                bi = bL['length']; bh < bi; bh++) {
                    var bM = bL[bh];
                    this['addGroup'](bM['start'], bM['count'], bM['materialIndex']);
                }
                var bN = bf['boundingBox'];
                null !== bN && (this['boundingBox'] = bN['clone']());
                var bO = bf['boundingSphere'];
                return null !== bO && (this['boundingSphere'] = bO['clone']()),
                this['drawRange']['start'] = bf['drawRange']['start'],
                this['drawRange']['count'] = bf['drawRange']['count'],
                this['userData'] = bf['userData'],
                this;
            },
            'dispose': function() {
                this['dispatchEvent']({
                    'type': 'dispose'
                });
            }
        }),
        Gg['prototype'] = Object['create'](AH['prototype']),
        Gg['prototype']['constructor'] = Gg,
        Gn['prototype'] = Object['create'](Gf['prototype']),
        Gn['prototype']['constructor'] = Gn,
        H5['prototype'] = Object['create'](AH['prototype']),
        H5['prototype']['constructor'] = H5,
        Ha['prototype'] = Object['create'](Gf['prototype']),
        Ha['prototype']['constructor'] = Ha;
        var Ke = 0x0;
        function Kf() {
            Object['defineProperty'](this, 'id', {
                'value': Ke++
            }),
            this['uuid'] = e2['generateUUID'](),
            this['name'] = '',
            this['type'] = 'Material',
            this['fog'] = !0x0,
            this['lights'] = !0x0,
            this['blending'] = c2,
            this['side'] = bT,
            this['flatShading'] = !0x1,
            this['vertexTangents'] = !0x1,
            this['vertexColors'] = bY,
            this['opacity'] = 0x1,
            this['transparent'] = !0x1,
            this['blendSrc'] = cg,
            this['blendDst'] = ch,
            this['blendEquation'] = c7,
            this['blendSrcAlpha'] = null,
            this['blendDstAlpha'] = null,
            this['blendEquationAlpha'] = null,
            this['depthFunc'] = cq,
            this['depthTest'] = !0x0,
            this['depthWrite'] = !0x0,
            this['clippingPlanes'] = null,
            this['clipIntersection'] = !0x1,
            this['clipShadows'] = !0x1,
            this['shadowSide'] = null,
            this['colorWrite'] = !0x0,
            this['precision'] = null,
            this['polygonOffset'] = !0x1,
            this['polygonOffsetFactor'] = 0x0,
            this['polygonOffsetUnits'] = 0x0,
            this['dithering'] = !0x1,
            this['alphaTest'] = 0x0,
            this['premultipliedAlpha'] = !0x1,
            this['visible'] = !0x0,
            this['userData'] = {},
            this['needsUpdate'] = !0x0;
        }
        Kf['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': Kf,
            'isMaterial': !0x0,
            'onBeforeCompile': function() {},
            'setValues': function(bf) {
                if (void 0x0 !== bf)
                    for (var bg in bf) {
                        var bh = bf[bg];
                        if (void 0x0 !== bh)
                            if ('shading' !== bg) {
                                var bi = this[bg];
                                void 0x0 !== bi ? bi && bi['isColor'] ? bi['set'](bh) : bi && bi['isVector3'] && bh && bh['isVector3'] ? bi['copy'](bh) : this[bg] = bh : console['warn']('THREE.' + this['type'] + ':\x20\x27' + bg + '\x27\x20is\x20not\x20a\x20property\x20of\x20this\x20material.');
                            } else
                                console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'),
                                this['flatShading'] = bh === bW;
                        else
                            console['warn']('THREE.Material:\x20\x27' + bg + '\x27\x20parameter\x20is\x20undefined.');
                    }
            },
            'toJSON': function(bf) {
                var bg = void 0x0 === bf || 'string' == typeof bf;
                bg && (bf = {
                    'textures': {},
                    'images': {}
                });
                var bh = {
                    'metadata': {
                        'version': 4.5,
                        'type': 'Material',
                        'generator': 'Material.toJSON'
                    }
                };
                function bi(bf) {
                    var bg = [];
                    for (var bh in bf) {
                        var bi = bf[bh];
                        delete bi['metadata'],
                        bg['push'](bi);
                    }
                    return bg;
                }
                if (bh['uuid'] = this['uuid'],
                bh['type'] = this['type'],
                '' !== this['name'] && (bh['name'] = this['name']),
                this['color'] && this['color']['isColor'] && (bh['color'] = this['color']['getHex']()),
                void 0x0 !== this['roughness'] && (bh['roughness'] = this['roughness']),
                void 0x0 !== this['metalness'] && (bh['metalness'] = this['metalness']),
                this['emissive'] && this['emissive']['isColor'] && (bh['emissive'] = this['emissive']['getHex']()),
                0x1 !== this['emissiveIntensity'] && (bh['emissiveIntensity'] = this['emissiveIntensity']),
                this['specular'] && this['specular']['isColor'] && (bh['specular'] = this['specular']['getHex']()),
                void 0x0 !== this['shininess'] && (bh['shininess'] = this['shininess']),
                void 0x0 !== this['clearCoat'] && (bh['clearCoat'] = this['clearCoat']),
                void 0x0 !== this['clearCoatRoughness'] && (bh['clearCoatRoughness'] = this['clearCoatRoughness']),
                this['map'] && this['map']['isTexture'] && (bh['map'] = this['map']['toJSON'](bf)['uuid']),
                this['matcap'] && this['matcap']['isTexture'] && (bh['matcap'] = this['matcap']['toJSON'](bf)['uuid']),
                this['alphaMap'] && this['alphaMap']['isTexture'] && (bh['alphaMap'] = this['alphaMap']['toJSON'](bf)['uuid']),
                this['lightMap'] && this['lightMap']['isTexture'] && (bh['lightMap'] = this['lightMap']['toJSON'](bf)['uuid']),
                this['aoMap'] && this['aoMap']['isTexture'] && (bh['aoMap'] = this['aoMap']['toJSON'](bf)['uuid'],
                bh['aoMapIntensity'] = this['aoMapIntensity']),
                this['bumpMap'] && this['bumpMap']['isTexture'] && (bh['bumpMap'] = this['bumpMap']['toJSON'](bf)['uuid'],
                bh['bumpScale'] = this['bumpScale']),
                this['normalMap'] && this['normalMap']['isTexture'] && (bh['normalMap'] = this['normalMap']['toJSON'](bf)['uuid'],
                bh['normalMapType'] = this['normalMapType'],
                bh['normalScale'] = this['normalScale']['toArray']()),
                this['displacementMap'] && this['displacementMap']['isTexture'] && (bh['displacementMap'] = this['displacementMap']['toJSON'](bf)['uuid'],
                bh['displacementScale'] = this['displacementScale'],
                bh['displacementBias'] = this['displacementBias']),
                this['roughnessMap'] && this['roughnessMap']['isTexture'] && (bh['roughnessMap'] = this['roughnessMap']['toJSON'](bf)['uuid']),
                this['metalnessMap'] && this['metalnessMap']['isTexture'] && (bh['metalnessMap'] = this['metalnessMap']['toJSON'](bf)['uuid']),
                this['emissiveMap'] && this['emissiveMap']['isTexture'] && (bh['emissiveMap'] = this['emissiveMap']['toJSON'](bf)['uuid']),
                this['specularMap'] && this['specularMap']['isTexture'] && (bh['specularMap'] = this['specularMap']['toJSON'](bf)['uuid']),
                this['envMap'] && this['envMap']['isTexture'] && (bh['envMap'] = this['envMap']['toJSON'](bf)['uuid'],
                bh['reflectivity'] = this['reflectivity'],
                void 0x0 !== this['combine'] && (bh['combine'] = this['combine']),
                void 0x0 !== this['envMapIntensity'] && (bh['envMapIntensity'] = this['envMapIntensity'])),
                this['gradientMap'] && this['gradientMap']['isTexture'] && (bh['gradientMap'] = this['gradientMap']['toJSON'](bf)['uuid']),
                void 0x0 !== this['size'] && (bh['size'] = this['size']),
                void 0x0 !== this['sizeAttenuation'] && (bh['sizeAttenuation'] = this['sizeAttenuation']),
                this['blending'] !== c2 && (bh['blending'] = this['blending']),
                !0x0 === this['flatShading'] && (bh['flatShading'] = this['flatShading']),
                this['side'] !== bT && (bh['side'] = this['side']),
                this['vertexColors'] !== bY && (bh['vertexColors'] = this['vertexColors']),
                this['opacity'] < 0x1 && (bh['opacity'] = this['opacity']),
                !0x0 === this['transparent'] && (bh['transparent'] = this['transparent']),
                bh['depthFunc'] = this['depthFunc'],
                bh['depthTest'] = this['depthTest'],
                bh['depthWrite'] = this['depthWrite'],
                0x0 !== this['rotation'] && (bh['rotation'] = this['rotation']),
                !0x0 === this['polygonOffset'] && (bh['polygonOffset'] = !0x0),
                0x0 !== this['polygonOffsetFactor'] && (bh['polygonOffsetFactor'] = this['polygonOffsetFactor']),
                0x0 !== this['polygonOffsetUnits'] && (bh['polygonOffsetUnits'] = this['polygonOffsetUnits']),
                0x1 !== this['linewidth'] && (bh['linewidth'] = this['linewidth']),
                void 0x0 !== this['dashSize'] && (bh['dashSize'] = this['dashSize']),
                void 0x0 !== this['gapSize'] && (bh['gapSize'] = this['gapSize']),
                void 0x0 !== this['scale'] && (bh['scale'] = this['scale']),
                !0x0 === this['dithering'] && (bh['dithering'] = !0x0),
                this['alphaTest'] > 0x0 && (bh['alphaTest'] = this['alphaTest']),
                !0x0 === this['premultipliedAlpha'] && (bh['premultipliedAlpha'] = this['premultipliedAlpha']),
                !0x0 === this['wireframe'] && (bh['wireframe'] = this['wireframe']),
                this['wireframeLinewidth'] > 0x1 && (bh['wireframeLinewidth'] = this['wireframeLinewidth']),
                'round' !== this['wireframeLinecap'] && (bh['wireframeLinecap'] = this['wireframeLinecap']),
                'round' !== this['wireframeLinejoin'] && (bh['wireframeLinejoin'] = this['wireframeLinejoin']),
                !0x0 === this['morphTargets'] && (bh['morphTargets'] = !0x0),
                !0x0 === this['skinning'] && (bh['skinning'] = !0x0),
                !0x1 === this['visible'] && (bh['visible'] = !0x1),
                '{}' !== JSON['stringify'](this['userData']) && (bh['userData'] = this['userData']),
                bg) {
                    var bF = bi(bf['textures'])
                      , bG = bi(bf['images']);
                    bF['length'] > 0x0 && (bh['textures'] = bF),
                    bG['length'] > 0x0 && (bh['images'] = bG);
                }
                return bh;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                this['name'] = bf['name'],
                this['fog'] = bf['fog'],
                this['lights'] = bf['lights'],
                this['blending'] = bf['blending'],
                this['side'] = bf['side'],
                this['flatShading'] = bf['flatShading'],
                this['vertexColors'] = bf['vertexColors'],
                this['opacity'] = bf['opacity'],
                this['transparent'] = bf['transparent'],
                this['blendSrc'] = bf['blendSrc'],
                this['blendDst'] = bf['blendDst'],
                this['blendEquation'] = bf['blendEquation'],
                this['blendSrcAlpha'] = bf['blendSrcAlpha'],
                this['blendDstAlpha'] = bf['blendDstAlpha'],
                this['blendEquationAlpha'] = bf['blendEquationAlpha'],
                this['depthFunc'] = bf['depthFunc'],
                this['depthTest'] = bf['depthTest'],
                this['depthWrite'] = bf['depthWrite'],
                this['colorWrite'] = bf['colorWrite'],
                this['precision'] = bf['precision'],
                this['polygonOffset'] = bf['polygonOffset'],
                this['polygonOffsetFactor'] = bf['polygonOffsetFactor'],
                this['polygonOffsetUnits'] = bf['polygonOffsetUnits'],
                this['dithering'] = bf['dithering'],
                this['alphaTest'] = bf['alphaTest'],
                this['premultipliedAlpha'] = bf['premultipliedAlpha'],
                this['visible'] = bf['visible'],
                this['userData'] = JSON['parse'](JSON['stringify'](bf['userData'])),
                this['clipShadows'] = bf['clipShadows'],
                this['clipIntersection'] = bf['clipIntersection'];
                var bg = bf['clippingPlanes']
                  , bh = null;
                if (null !== bg) {
                    var bi = bg['length'];
                    bh = new Array(bi);
                    for (var bF = 0x0; bF !== bi; ++bF)
                        bh[bF] = bg[bF]['clone']();
                }
                return this['clippingPlanes'] = bh,
                this['shadowSide'] = bf['shadowSide'],
                this;
            },
            'dispose': function() {
                this['dispatchEvent']({
                    'type': 'dispose'
                });
            }
        });
        var Kz, KA, KB, KC, KD, KE, KF, KG, KH, KI, KJ, KK, KL = 'void\x20main()\x20{\x0a\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);\x0a}', KM = 'void\x20main()\x20{\x0a\x09gl_FragColor\x20=\x20vec4(\x201.0,\x200.0,\x200.0,\x201.0\x20);\x0a}';
        function KN(bf) {
            Kf['call'](this),
            this['type'] = 'ShaderMaterial',
            this['defines'] = {},
            this['uniforms'] = {},
            this['vertexShader'] = KL,
            this['fragmentShader'] = KM,
            this['linewidth'] = 0x1,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['fog'] = !0x1,
            this['lights'] = !0x1,
            this['clipping'] = !0x1,
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['morphNormals'] = !0x1,
            this['extensions'] = {
                'derivatives': !0x1,
                'fragDepth': !0x1,
                'drawBuffers': !0x1,
                'shaderTextureLOD': !0x1
            },
            this['defaultAttributeValues'] = {
                'color': [0x1, 0x1, 0x1],
                'uv': [0x0, 0x0],
                'uv2': [0x0, 0x0]
            },
            this['index0AttributeName'] = void 0x0,
            this['uniformsNeedUpdate'] = !0x1,
            void 0x0 !== bf && (void 0x0 !== bf['attributes'] && console['error']('THREE.ShaderMaterial:\x20attributes\x20should\x20now\x20be\x20defined\x20in\x20THREE.BufferGeometry\x20instead.'),
            this['setValues'](bf));
        }
        function KP(bf, bg) {
            this['origin'] = void 0x0 !== bf ? bf : new eK(),
            this['direction'] = void 0x0 !== bg ? bg : new eK();
        }
        function KS(bf, bg, bh) {
            this['a'] = void 0x0 !== bf ? bf : new eK(),
            this['b'] = void 0x0 !== bg ? bg : new eK(),
            this['c'] = void 0x0 !== bh ? bh : new eK();
        }
        function KW(bf) {
            Kf['call'](this),
            this['type'] = 'MeshBasicMaterial',
            this['color'] = new w7(0xffffff),
            this['map'] = null,
            this['lightMap'] = null,
            this['lightMapIntensity'] = 0x1,
            this['aoMap'] = null,
            this['aoMapIntensity'] = 0x1,
            this['specularMap'] = null,
            this['alphaMap'] = null,
            this['envMap'] = null,
            this['combine'] = cv,
            this['reflectivity'] = 0x1,
            this['refractionRatio'] = 0.98,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['wireframeLinecap'] = 'round',
            this['wireframeLinejoin'] = 'round',
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['lights'] = !0x1,
            this['setValues'](bf);
        }
        function KY(bf, bg) {
            yT['call'](this),
            this['type'] = 'Mesh',
            this['geometry'] = void 0x0 !== bf ? bf : new Gf(),
            this['material'] = void 0x0 !== bg ? bg : new KW({
                'color': 0xffffff * Math['random']()
            }),
            this['drawMode'] = dN,
            this['updateMorphTargets']();
        }
        function L1(bf, bg, bh, bi) {
            var bF, bG, bH = new w7(0x0), bI = 0x0, bJ = null, bK = 0x0;
            function bL(bf, bh) {
                bg['buffers']['color']['setClear'](bf['r'], bf['g'], bf['b'], bh, bi);
            }
            return {
                'getClearColor': function() {
                    return bH;
                },
                'setClearColor': function(bf, bg) {
                    bH['set'](bf),
                    bL(bH, bI = void 0x0 !== bg ? bg : 0x1);
                },
                'getClearAlpha': function() {
                    return bI;
                },
                'setClearAlpha': function(bf) {
                    bL(bH, bI = bf);
                },
                'render': function(bg, bi, bM, bN) {
                    var bO = bi['background']
                      , bP = bf['vr']
                      , bQ = bP['getSession'] && bP['getSession']();
                    if (bQ && 'additive' === bQ['environmentBlendMode'] && (bO = null),
                    null === bO ? (bL(bH, bI),
                    bJ = null,
                    bK = 0x0) : bO && bO['isColor'] && (bL(bO, 0x1),
                    bN = !0x0,
                    bJ = null,
                    bK = 0x0),
                    (bf['autoClear'] || bN) && bf['clear'](bf['autoClearColor'], bf['autoClearDepth'], bf['autoClearStencil']),
                    bO && (bO['isCubeTexture'] || bO['isWebGLRenderTargetCube'])) {
                        void 0x0 === bG && ((bG = new KY(new Gn(0x1,0x1,0x1),new KN({
                            'type': 'BackgroundCubeMaterial',
                            'uniforms': vQ(xo['cube']['uniforms']),
                            'vertexShader': xo['cube']['vertexShader'],
                            'fragmentShader': xo['cube']['fragmentShader'],
                            'side': bU,
                            'depthTest': !0x1,
                            'depthWrite': !0x1,
                            'fog': !0x1
                        })))['geometry']['removeAttribute']('normal'),
                        bG['geometry']['removeAttribute']('uv'),
                        bG['onBeforeRender'] = function(bf, bg, bh) {
                            this['matrixWorld']['copyPosition'](bh['matrixWorld']);
                        }
                        ,
                        Object['defineProperty'](bG['material'], 'map', {
                            'get': function() {
                                return this['uniforms']['tCube']['value'];
                            }
                        }),
                        bh['update'](bG));
                        var bR = bO['isWebGLRenderTargetCube'] ? bO['texture'] : bO;
                        bG['material']['uniforms']['tCube']['value'] = bR,
                        bG['material']['uniforms']['tFlip']['value'] = bO['isWebGLRenderTargetCube'] ? 0x1 : -0x1,
                        bJ === bO && bK === bR['version'] || (bG['material']['needsUpdate'] = !0x0,
                        bJ = bO,
                        bK = bR['version']),
                        bg['unshift'](bG, bG['geometry'], bG['material'], 0x0, 0x0, null);
                    } else
                        bO && bO['isTexture'] && (void 0x0 === bF && ((bF = new KY(new Ha(0x2,0x2),new KN({
                            'type': 'BackgroundMaterial',
                            'uniforms': vQ(xo['background']['uniforms']),
                            'vertexShader': xo['background']['vertexShader'],
                            'fragmentShader': xo['background']['fragmentShader'],
                            'side': bT,
                            'depthTest': !0x1,
                            'depthWrite': !0x1,
                            'fog': !0x1
                        })))['geometry']['removeAttribute']('normal'),
                        Object['defineProperty'](bF['material'], 'map', {
                            'get': function() {
                                return this['uniforms']['t2D']['value'];
                            }
                        }),
                        bh['update'](bF)),
                        bF['material']['uniforms']['t2D']['value'] = bO,
                        !0x0 === bO['matrixAutoUpdate'] && bO['updateMatrix'](),
                        bF['material']['uniforms']['uvTransform']['value']['copy'](bO['matrix']),
                        bJ === bO && bK === bO['version'] || (bF['material']['needsUpdate'] = !0x0,
                        bJ = bO,
                        bK = bO['version']),
                        bg['unshift'](bF, bF['geometry'], bF['material'], 0x0, 0x0, null));
                }
            };
        }
        function Lt(bf, bg, bh, bi) {
            var bF;
            this['setMode'] = function(bf) {
                bF = bf;
            }
            ,
            this['render'] = function(bg, bi) {
                bf['drawArrays'](bF, bg, bi),
                bh['update'](bi, bF);
            }
            ,
            this['renderInstances'] = function(bG, bH, bI) {
                var bJ;
                if (bi['isWebGL2'])
                    bJ = bf;
                else if (null === (bJ = bg['get']('ANGLE_instanced_arrays')))
                    return void console['error']('THREE.WebGLBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
                bJ[bi['isWebGL2'] ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE'](bF, bH, bI, bG['maxInstancedCount']),
                bh['update'](bI, bF, bG['maxInstancedCount']);
            }
            ;
        }
        function LG(bf, bg, bh) {
            var bi;
            function bF(bg) {
                if ('highp' === bg) {
                    if (bf['getShaderPrecisionFormat'](0x8b31, 0x8df2)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df2)['precision'] > 0x0)
                        return 'highp';
                    bg = 'mediump';
                }
                return 'mediump' === bg && bf['getShaderPrecisionFormat'](0x8b31, 0x8df1)['precision'] > 0x0 && bf['getShaderPrecisionFormat'](0x8b30, 0x8df1)['precision'] > 0x0 ? 'mediump' : 'lowp';
            }
            var bG = 'undefined' != typeof WebGL2RenderingContext && bf instanceof WebGL2RenderingContext
              , bH = void 0x0 !== bh['precision'] ? bh['precision'] : 'highp'
              , bI = bF(bH);
            bI !== bH && (console['warn']('THREE.WebGLRenderer:', bH, 'not\x20supported,\x20using', bI, 'instead.'),
            bH = bI);
            var bJ = !0x0 === bh['logarithmicDepthBuffer']
              , bK = bf['getParameter'](0x8872)
              , bL = bf['getParameter'](0x8b4c)
              , bM = bf['getParameter'](0xd33)
              , bN = bf['getParameter'](0x851c)
              , bO = bf['getParameter'](0x8869)
              , bP = bf['getParameter'](0x8dfb)
              , bQ = bf['getParameter'](0x8dfc)
              , bR = bf['getParameter'](0x8dfd)
              , bS = bL > 0x0
              , bT = bG || !!bg['get']('OES_texture_float');
            return {
                'isWebGL2': bG,
                'getMaxAnisotropy': function() {
                    if (void 0x0 !== bi)
                        return bi;
                    var bh = bg['get']('EXT_texture_filter_anisotropic');
                    return bi = null !== bh ? bf['getParameter'](bh['MAX_TEXTURE_MAX_ANISOTROPY_EXT']) : 0x0;
                },
                'getMaxPrecision': bF,
                'precision': bH,
                'logarithmicDepthBuffer': bJ,
                'maxTextures': bK,
                'maxVertexTextures': bL,
                'maxTextureSize': bM,
                'maxCubemapSize': bN,
                'maxAttributes': bO,
                'maxVertexUniforms': bP,
                'maxVaryings': bQ,
                'maxFragmentUniforms': bR,
                'vertexTextures': bS,
                'floatFragmentTextures': bT,
                'floatVertexTextures': bS && bT,
                'maxSamples': bG ? bf['getParameter'](0x8d57) : 0x0
            };
        }
        function M2() {
            var bf = this
              , bg = null
              , bh = 0x0
              , bi = !0x1
              , bF = !0x1
              , bG = new mH()
              , bH = new eO()
              , bI = {
                'value': null,
                'needsUpdate': !0x1
            };
            function bJ() {
                bI['value'] !== bg && (bI['value'] = bg,
                bI['needsUpdate'] = bh > 0x0),
                bf['numPlanes'] = bh,
                bf['numIntersection'] = 0x0;
            }
            function bK(bg, bh, bi, bF) {
                var bJ = null !== bg ? bg['length'] : 0x0
                  , bK = null;
                if (0x0 !== bJ) {
                    if (bK = bI['value'],
                    !0x0 !== bF || null === bK) {
                        var bL = bi + 0x4 * bJ
                          , bM = bh['matrixWorldInverse'];
                        bH['getNormalMatrix'](bM),
                        (null === bK || bK['length'] < bL) && (bK = new Float32Array(bL));
                        for (var bN = 0x0, bO = bi; bN !== bJ; ++bN,
                        bO += 0x4)
                            bG['copy'](bg[bN])['applyMatrix4'](bM, bH),
                            bG['normal']['toArray'](bK, bO),
                            bK[bO + 0x3] = bG['constant'];
                    }
                    bI['value'] = bK,
                    bI['needsUpdate'] = !0x0;
                }
                return bf['numPlanes'] = bJ,
                bK;
            }
            this['uniform'] = bI,
            this['numPlanes'] = 0x0,
            this['numIntersection'] = 0x0,
            this['init'] = function(bf, bF, bG) {
                var bH = 0x0 !== bf['length'] || bF || 0x0 !== bh || bi;
                return bi = bF,
                bg = bK(bf, bG, 0x0),
                bh = bf['length'],
                bH;
            }
            ,
            this['beginShadows'] = function() {
                bF = !0x0,
                bK(null);
            }
            ,
            this['endShadows'] = function() {
                bF = !0x1,
                bJ();
            }
            ,
            this['setState'] = function(bf, bG, bH, bL, bM, bN) {
                if (!bi || null === bf || 0x0 === bf['length'] || bF && !bH)
                    bF ? bK(null) : bJ();
                else {
                    var bO = bF ? 0x0 : bh
                      , bP = 0x4 * bO
                      , bQ = bM['clippingState'] || null;
                    bI['value'] = bQ,
                    bQ = bK(bf, bL, bP, bN);
                    for (var bR = 0x0; bR !== bP; ++bR)
                        bQ[bR] = bg[bR];
                    bM['clippingState'] = bQ,
                    this['numIntersection'] = bG ? this['numPlanes'] : 0x0,
                    this['numPlanes'] += bO;
                }
            }
            ;
        }
        function MB(bf) {
            var bg = {};
            return {
                'get': function(bh) {
                    if (void 0x0 !== bg[bh])
                        return bg[bh];
                    var bi;
                    switch (bh) {
                    case 'WEBGL_depth_texture':
                        bi = bf['getExtension']('WEBGL_depth_texture') || bf['getExtension']('MOZ_WEBGL_depth_texture') || bf['getExtension']('WEBKIT_WEBGL_depth_texture');
                        break;
                    case 'EXT_texture_filter_anisotropic':
                        bi = bf['getExtension']('EXT_texture_filter_anisotropic') || bf['getExtension']('MOZ_EXT_texture_filter_anisotropic') || bf['getExtension']('WEBKIT_EXT_texture_filter_anisotropic');
                        break;
                    case 'WEBGL_compressed_texture_s3tc':
                        bi = bf['getExtension']('WEBGL_compressed_texture_s3tc') || bf['getExtension']('MOZ_WEBGL_compressed_texture_s3tc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_s3tc');
                        break;
                    case 'WEBGL_compressed_texture_pvrtc':
                        bi = bf['getExtension']('WEBGL_compressed_texture_pvrtc') || bf['getExtension']('WEBKIT_WEBGL_compressed_texture_pvrtc');
                        break;
                    default:
                        bi = bf['getExtension'](bh);
                    }
                    return null === bi && console['warn']('THREE.WebGLRenderer:\x20' + bh + '\x20extension\x20not\x20supported.'),
                    bg[bh] = bi,
                    bi;
                }
            };
        }
        function MG(bf, bg, bh) {
            var bi = {}
              , bF = {};
            function bG(bf) {
                var bH = bf['target']
                  , bI = bi[bH['id']];
                for (var bJ in null !== bI['index'] && bg['remove'](bI['index']),
                bI['attributes'])
                    bg['remove'](bI['attributes'][bJ]);
                bH['removeEventListener']('dispose', bG),
                delete bi[bH['id']];
                var bK = bF[bI['id']];
                bK && (bg['remove'](bK),
                delete bF[bI['id']]),
                bh['memory']['geometries']--;
            }
            return {
                'get': function(bf, bg) {
                    var bF = bi[bg['id']];
                    return bF || (bg['addEventListener']('dispose', bG),
                    bg['isBufferGeometry'] ? bF = bg : bg['isGeometry'] && (void 0x0 === bg['_bufferGeometry'] && (bg['_bufferGeometry'] = new Gf()['setFromObject'](bf)),
                    bF = bg['_bufferGeometry']),
                    bi[bg['id']] = bF,
                    bh['memory']['geometries']++,
                    bF);
                },
                'update': function(bf) {
                    var bh = bf['index']
                      , bi = bf['attributes'];
                    for (var bF in null !== bh && bg['update'](bh, 0x8893),
                    bi)
                        bg['update'](bi[bF], 0x8892);
                    var bG = bf['morphAttributes'];
                    for (var bF in bG)
                        for (var bH = bG[bF], bI = 0x0, bJ = bH['length']; bI < bJ; bI++)
                            bg['update'](bH[bI], 0x8892);
                },
                'getWireframeAttribute': function(bf) {
                    var bh = bF[bf['id']];
                    if (bh)
                        return bh;
                    var bi, bG = [], bH = bf['index'], bI = bf['attributes'];
                    if (null !== bH)
                        for (var bJ = 0x0, bK = (bi = bH['array'])['length']; bJ < bK; bJ += 0x3) {
                            var bL = bi[bJ + 0x0]
                              , bM = bi[bJ + 0x1]
                              , bN = bi[bJ + 0x2];
                            bG['push'](bL, bM, bM, bN, bN, bL);
                        }
                    else
                        for (bJ = 0x0,
                        bK = (bi = bI['position']['array'])['length'] / 0x3 - 0x1; bJ < bK; bJ += 0x3)
                            bL = bJ + 0x0,
                            bM = bJ + 0x1,
                            bN = bJ + 0x2,
                            bG['push'](bL, bM, bM, bN, bN, bL);
                    return bh = new ((Bn(bG)) > 0xffff ? Ba : B2)(bG,0x1),
                    bg['update'](bh, 0x8893),
                    bF[bf['id']] = bh,
                    bh;
                }
            };
        }
        function Nf(bf, bg, bh, bi) {
            var bF, bG, bH;
            this['setMode'] = function(bf) {
                bF = bf;
            }
            ,
            this['setIndex'] = function(bf) {
                bG = bf['type'],
                bH = bf['bytesPerElement'];
            }
            ,
            this['render'] = function(bg, bi) {
                bf['drawElements'](bF, bi, bG, bg * bH),
                bh['update'](bi, bF);
            }
            ,
            this['renderInstances'] = function(bI, bJ, bK) {
                var bL;
                if (bi['isWebGL2'])
                    bL = bf;
                else if (null === (bL = bg['get']('ANGLE_instanced_arrays')))
                    return void console['error']('THREE.WebGLIndexedBufferRenderer:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
                bL[bi['isWebGL2'] ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE'](bF, bK, bG, bJ * bH, bI['maxInstancedCount']),
                bh['update'](bK, bF, bI['maxInstancedCount']);
            }
            ;
        }
        function Nv(bf) {
            var bg = {
                'frame': 0x0,
                'calls': 0x0,
                'triangles': 0x0,
                'points': 0x0,
                'lines': 0x0
            };
            return {
                'memory': {
                    'geometries': 0x0,
                    'textures': 0x0
                },
                'render': bg,
                'programs': null,
                'autoReset': !0x0,
                'reset': function() {
                    bg['frame']++,
                    bg['calls'] = 0x0,
                    bg['triangles'] = 0x0,
                    bg['points'] = 0x0,
                    bg['lines'] = 0x0;
                },
                'update': function(bf, bh, bi) {
                    switch (bi = bi || 0x1,
                    bg['calls']++,
                    bh) {
                    case 0x4:
                        bg['triangles'] += bi * (bf / 0x3);
                        break;
                    case 0x5:
                    case 0x6:
                        bg['triangles'] += bi * (bf - 0x2);
                        break;
                    case 0x1:
                        bg['lines'] += bi * (bf / 0x2);
                        break;
                    case 0x3:
                        bg['lines'] += bi * (bf - 0x1);
                        break;
                    case 0x2:
                        bg['lines'] += bi * bf;
                        break;
                    case 0x0:
                        bg['points'] += bi * bf;
                        break;
                    default:
                        console['error']('THREE.WebGLInfo:\x20Unknown\x20draw\x20mode:', bh);
                    }
                }
            };
        }
        function NB(bf, bg) {
            return Math['abs'](bg[0x1]) - Math['abs'](bf[0x1]);
        }
        function NE(bf) {
            var bg = {}
              , bh = new Float32Array(0x8);
            return {
                'update': function(bi, bF, bG, bH) {
                    var bI = bi['morphTargetInfluences']
                      , bJ = bI['length']
                      , bK = bg[bF['id']];
                    if (void 0x0 === bK) {
                        bK = [];
                        for (var bL = 0x0; bL < bJ; bL++)
                            bK[bL] = [bL, 0x0];
                        bg[bF['id']] = bK;
                    }
                    var bM = bG['morphTargets'] && bF['morphAttributes']['position']
                      , bN = bG['morphNormals'] && bF['morphAttributes']['normal'];
                    for (bL = 0x0; bL < bJ; bL++)
                        0x0 !== (bO = bK[bL])[0x1] && (bM && bF['removeAttribute']('morphTarget' + bL),
                        bN && bF['removeAttribute']('morphNormal' + bL));
                    for (bL = 0x0; bL < bJ; bL++)
                        (bO = bK[bL])[0x0] = bL,
                        bO[0x1] = bI[bL];
                    for (bK['sort'](NB),
                    bL = 0x0; bL < 0x8; bL++) {
                        var bO;
                        if (bO = bK[bL]) {
                            var bP = bO[0x0]
                              , bQ = bO[0x1];
                            if (bQ) {
                                bM && bF['addAttribute']('morphTarget' + bL, bM[bP]),
                                bN && bF['addAttribute']('morphNormal' + bL, bN[bP]),
                                bh[bL] = bQ;
                                continue;
                            }
                        }
                        bh[bL] = 0x0;
                    }
                    bH['getUniforms']()['setValue'](bf, 'morphTargetInfluences', bh);
                }
            };
        }
        function NV(bf, bg) {
            var bh = {};
            return {
                'update': function(bi) {
                    var bF = bg['render']['frame']
                      , bG = bi['geometry']
                      , bH = bf['get'](bi, bG);
                    return bh[bH['id']] !== bF && (bG['isGeometry'] && bH['updateFromObject'](bi),
                    bf['update'](bH),
                    bh[bH['id']] = bF),
                    bH;
                },
                'dispose': function() {
                    bh = {};
                }
            };
        }
        function O3(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
            bf = void 0x0 !== bf ? bf : [],
            bg = void 0x0 !== bg ? bg : cF,
            bH = void 0x0 !== bH ? bH : d8,
            lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK),
            this['flipY'] = !0x1;
        }
        function Oe(bf, bg, bh, bi) {
            lW['call'](this, null),
            this['image'] = {
                'data': bf,
                'width': bg,
                'height': bh,
                'depth': bi
            },
            this['magFilter'] = cP,
            this['minFilter'] = cP,
            this['wrapR'] = cN,
            this['generateMipmaps'] = !0x1,
            this['flipY'] = !0x1;
        }
        function Oj(bf, bg, bh, bi) {
            lW['call'](this, null),
            this['image'] = {
                'data': bf,
                'width': bg,
                'height': bh,
                'depth': bi
            },
            this['magFilter'] = cP,
            this['minFilter'] = cP,
            this['wrapR'] = cN,
            this['generateMipmaps'] = !0x1,
            this['flipY'] = !0x1;
        }
        KN['prototype'] = Object['create'](Kf['prototype']),
        KN['prototype']['constructor'] = KN,
        KN['prototype']['isShaderMaterial'] = !0x0,
        KN['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['fragmentShader'] = bf['fragmentShader'],
            this['vertexShader'] = bf['vertexShader'],
            this['uniforms'] = vQ(bf['uniforms']),
            this['defines'] = Object['assign']({}, bf['defines']),
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this['lights'] = bf['lights'],
            this['clipping'] = bf['clipping'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['morphNormals'] = bf['morphNormals'],
            this['extensions'] = bf['extensions'],
            this;
        }
        ,
        KN['prototype']['toJSON'] = function(bf) {
            var bg = Kf['prototype']['toJSON']['call'](this, bf);
            for (var bh in bg['uniforms'] = {},
            this['uniforms']) {
                var bi = this['uniforms'][bh]['value'];
                bi && bi['isTexture'] ? bg['uniforms'][bh] = {
                    'type': 't',
                    'value': bi['toJSON'](bf)['uuid']
                } : bi && bi['isColor'] ? bg['uniforms'][bh] = {
                    'type': 'c',
                    'value': bi['getHex']()
                } : bi && bi['isVector2'] ? bg['uniforms'][bh] = {
                    'type': 'v2',
                    'value': bi['toArray']()
                } : bi && bi['isVector3'] ? bg['uniforms'][bh] = {
                    'type': 'v3',
                    'value': bi['toArray']()
                } : bi && bi['isVector4'] ? bg['uniforms'][bh] = {
                    'type': 'v4',
                    'value': bi['toArray']()
                } : bi && bi['isMatrix3'] ? bg['uniforms'][bh] = {
                    'type': 'm3',
                    'value': bi['toArray']()
                } : bi && bi['isMatrix4'] ? bg['uniforms'][bh] = {
                    'type': 'm4',
                    'value': bi['toArray']()
                } : bg['uniforms'][bh] = {
                    'value': bi
                };
            }
            Object['keys'](this['defines'])['length'] > 0x0 && (bg['defines'] = this['defines']),
            bg['vertexShader'] = this['vertexShader'],
            bg['fragmentShader'] = this['fragmentShader'];
            var bF = {};
            for (var bG in this['extensions'])
                !0x0 === this['extensions'][bG] && (bF[bG] = !0x0);
            return Object['keys'](bF)['length'] > 0x0 && (bg['extensions'] = bF),
            bg;
        }
        ,
        Object['assign'](KP['prototype'], {
            'set': function(bf, bg) {
                return this['origin']['copy'](bf),
                this['direction']['copy'](bg),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['origin']['copy'](bf['origin']),
                this['direction']['copy'](bf['direction']),
                this;
            },
            'at': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Ray:\x20.at()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                bg['copy'](this['direction'])['multiplyScalar'](bf)['add'](this['origin']);
            },
            'lookAt': function(bf) {
                return this['direction']['copy'](bf)['sub'](this['origin'])['normalize'](),
                this;
            },
            'recast': function() {
                var bf = new eK();
                return function(bg) {
                    return this['origin']['copy'](this['at'](bg, bf)),
                    this;
                }
                ;
            }(),
            'closestPointToPoint': function(bf, bg) {
                void 0x0 === bg && (console['warn']('THREE.Ray:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                bg['subVectors'](bf, this['origin']);
                var bh = bg['dot'](this['direction']);
                return bh < 0x0 ? bg['copy'](this['origin']) : bg['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']);
            },
            'distanceToPoint': function(bf) {
                return Math['sqrt'](this['distanceSqToPoint'](bf));
            },
            'distanceSqToPoint': function() {
                var bf = new eK();
                return function(bg) {
                    var bh = bf['subVectors'](bg, this['origin'])['dot'](this['direction']);
                    return bh < 0x0 ? this['origin']['distanceToSquared'](bg) : (bf['copy'](this['direction'])['multiplyScalar'](bh)['add'](this['origin']),
                    bf['distanceToSquared'](bg));
                }
                ;
            }(),
            'distanceSqToSegment': (KA = new eK(),
            KB = new eK(),
            KC = new eK(),
            function(bf, bg, bh, bi) {
                KA['copy'](bf)['add'](bg)['multiplyScalar'](0.5),
                KB['copy'](bg)['sub'](bf)['normalize'](),
                KC['copy'](this['origin'])['sub'](KA);
                var bF, bG, bH, bI, bJ = 0.5 * bf['distanceTo'](bg), bK = -this['direction']['dot'](KB), bL = KC['dot'](this['direction']), bM = -KC['dot'](KB), bN = KC['lengthSq'](), bO = Math['abs'](0x1 - bK * bK);
                if (bO > 0x0)
                    if (bG = bK * bL - bM,
                    bI = bJ * bO,
                    (bF = bK * bM - bL) >= 0x0)
                        if (bG >= -bI)
                            if (bG <= bI) {
                                var bP = 0x1 / bO;
                                bH = (bF *= bP) * (bF + bK * (bG *= bP) + 0x2 * bL) + bG * (bK * bF + bG + 0x2 * bM) + bN;
                            } else
                                bG = bJ,
                                bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
                        else
                            bG = -bJ,
                            bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
                    else
                        bG <= -bI ? bH = -(bF = Math['max'](0x0, -(-bK * bJ + bL))) * bF + (bG = bF > 0x0 ? -bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN : bG <= bI ? (bF = 0x0,
                        bH = (bG = Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN) : bH = -(bF = Math['max'](0x0, -(bK * bJ + bL))) * bF + (bG = bF > 0x0 ? bJ : Math['min'](Math['max'](-bJ, -bM), bJ)) * (bG + 0x2 * bM) + bN;
                else
                    bG = bK > 0x0 ? -bJ : bJ,
                    bH = -(bF = Math['max'](0x0, -(bK * bG + bL))) * bF + bG * (bG + 0x2 * bM) + bN;
                return bh && bh['copy'](this['direction'])['multiplyScalar'](bF)['add'](this['origin']),
                bi && bi['copy'](KB)['multiplyScalar'](bG)['add'](KA),
                bH;
            }
            ),
            'intersectSphere': function() {
                var bf = new eK();
                return function(bg, bh) {
                    bf['subVectors'](bg['center'], this['origin']);
                    var bi = bf['dot'](this['direction'])
                      , bF = bf['dot'](bf) - bi * bi
                      , bG = bg['radius'] * bg['radius'];
                    if (bF > bG)
                        return null;
                    var bH = Math['sqrt'](bG - bF)
                      , bI = bi - bH
                      , bJ = bi + bH;
                    return bI < 0x0 && bJ < 0x0 ? null : bI < 0x0 ? this['at'](bJ, bh) : this['at'](bI, bh);
                }
                ;
            }(),
            'intersectsSphere': function(bf) {
                return this['distanceSqToPoint'](bf['center']) <= bf['radius'] * bf['radius'];
            },
            'distanceToPlane': function(bf) {
                var bg = bf['normal']['dot'](this['direction']);
                if (0x0 === bg)
                    return 0x0 === bf['distanceToPoint'](this['origin']) ? 0x0 : null;
                var bh = -(this['origin']['dot'](bf['normal']) + bf['constant']) / bg;
                return bh >= 0x0 ? bh : null;
            },
            'intersectPlane': function(bf, bg) {
                var bh = this['distanceToPlane'](bf);
                return null === bh ? null : this['at'](bh, bg);
            },
            'intersectsPlane': function(bf) {
                var bg = bf['distanceToPoint'](this['origin']);
                return 0x0 === bg || bf['normal']['dot'](this['direction']) * bg < 0x0;
            },
            'intersectBox': function(bf, bg) {
                var bh, bi, bF, bG, bH, bI, bJ = 0x1 / this['direction']['x'], bK = 0x1 / this['direction']['y'], bL = 0x1 / this['direction']['z'], bM = this['origin'];
                return bJ >= 0x0 ? (bh = (bf['min']['x'] - bM['x']) * bJ,
                bi = (bf['max']['x'] - bM['x']) * bJ) : (bh = (bf['max']['x'] - bM['x']) * bJ,
                bi = (bf['min']['x'] - bM['x']) * bJ),
                bK >= 0x0 ? (bF = (bf['min']['y'] - bM['y']) * bK,
                bG = (bf['max']['y'] - bM['y']) * bK) : (bF = (bf['max']['y'] - bM['y']) * bK,
                bG = (bf['min']['y'] - bM['y']) * bK),
                bh > bG || bF > bi ? null : ((bF > bh || bh != bh) && (bh = bF),
                (bG < bi || bi != bi) && (bi = bG),
                bL >= 0x0 ? (bH = (bf['min']['z'] - bM['z']) * bL,
                bI = (bf['max']['z'] - bM['z']) * bL) : (bH = (bf['max']['z'] - bM['z']) * bL,
                bI = (bf['min']['z'] - bM['z']) * bL),
                bh > bI || bH > bi ? null : ((bH > bh || bh != bh) && (bh = bH),
                (bI < bi || bi != bi) && (bi = bI),
                bi < 0x0 ? null : this['at'](bh >= 0x0 ? bh : bi, bg)));
            },
            'intersectsBox': (Kz = new eK(),
            function(bf) {
                return null !== this['intersectBox'](bf, Kz);
            }
            ),
            'intersectTriangle': function() {
                var bf = new eK()
                  , bg = new eK()
                  , bh = new eK()
                  , bi = new eK();
                return function(bF, bG, bH, bI, bJ) {
                    bg['subVectors'](bG, bF),
                    bh['subVectors'](bH, bF),
                    bi['crossVectors'](bg, bh);
                    var bK, bL = this['direction']['dot'](bi);
                    if (bL > 0x0) {
                        if (bI)
                            return null;
                        bK = 0x1;
                    } else {
                        if (!(bL < 0x0))
                            return null;
                        bK = -0x1,
                        bL = -bL;
                    }
                    bf['subVectors'](this['origin'], bF);
                    var bM = bK * this['direction']['dot'](bh['crossVectors'](bf, bh));
                    if (bM < 0x0)
                        return null;
                    var bN = bK * this['direction']['dot'](bg['cross'](bf));
                    if (bN < 0x0)
                        return null;
                    if (bM + bN > bL)
                        return null;
                    var bO = -bK * bf['dot'](bi);
                    return bO < 0x0 ? null : this['at'](bO / bL, bJ);
                }
                ;
            }(),
            'applyMatrix4': function(bf) {
                return this['origin']['applyMatrix4'](bf),
                this['direction']['transformDirection'](bf),
                this;
            },
            'equals': function(bf) {
                return bf['origin']['equals'](this['origin']) && bf['direction']['equals'](this['direction']);
            }
        }),
        Object['assign'](KS, {
            'getNormal': (KE = new eK(),
            function(bf, bg, bh, bi) {
                void 0x0 === bi && (console['warn']('THREE.Triangle:\x20.getNormal()\x20target\x20is\x20now\x20required'),
                bi = new eK()),
                bi['subVectors'](bh, bg),
                KE['subVectors'](bf, bg),
                bi['cross'](KE);
                var bF = bi['lengthSq']();
                return bF > 0x0 ? bi['multiplyScalar'](0x1 / Math['sqrt'](bF)) : bi['set'](0x0, 0x0, 0x0);
            }
            ),
            'getBarycoord': function() {
                var bf = new eK()
                  , bg = new eK()
                  , bh = new eK();
                return function(bi, bF, bG, bH, bI) {
                    bf['subVectors'](bH, bF),
                    bg['subVectors'](bG, bF),
                    bh['subVectors'](bi, bF);
                    var bJ = bf['dot'](bf)
                      , bK = bf['dot'](bg)
                      , bL = bf['dot'](bh)
                      , bM = bg['dot'](bg)
                      , bN = bg['dot'](bh)
                      , bO = bJ * bM - bK * bK;
                    if (void 0x0 === bI && (console['warn']('THREE.Triangle:\x20.getBarycoord()\x20target\x20is\x20now\x20required'),
                    bI = new eK()),
                    0x0 === bO)
                        return bI['set'](-0x2, -0x1, -0x1);
                    var bP = 0x1 / bO
                      , bQ = (bM * bL - bK * bN) * bP
                      , bR = (bJ * bN - bK * bL) * bP;
                    return bI['set'](0x1 - bQ - bR, bR, bQ);
                }
                ;
            }(),
            'containsPoint': function() {
                var bf = new eK();
                return function(bg, bh, bi, bF) {
                    return KS['getBarycoord'](bg, bh, bi, bF, bf),
                    bf['x'] >= 0x0 && bf['y'] >= 0x0 && bf['x'] + bf['y'] <= 0x1;
                }
                ;
            }(),
            'getUV': (KD = new eK(),
            function(bf, bg, bh, bi, bF, bG, bH, bI) {
                return this['getBarycoord'](bf, bg, bh, bi, KD),
                bI['set'](0x0, 0x0),
                bI['addScaledVector'](bF, KD['x']),
                bI['addScaledVector'](bG, KD['y']),
                bI['addScaledVector'](bH, KD['z']),
                bI;
            }
            ),
            'isFrontFacing': function() {
                var bf = new eK()
                  , bg = new eK();
                return function(bh, bi, bF, bG) {
                    return bf['subVectors'](bF, bi),
                    bg['subVectors'](bh, bi),
                    bf['cross'](bg)['dot'](bG) < 0x0;
                }
                ;
            }()
        }),
        Object['assign'](KS['prototype'], {
            'set': function(bf, bg, bh) {
                return this['a']['copy'](bf),
                this['b']['copy'](bg),
                this['c']['copy'](bh),
                this;
            },
            'setFromPointsAndIndices': function(bf, bg, bh, bi) {
                return this['a']['copy'](bf[bg]),
                this['b']['copy'](bf[bh]),
                this['c']['copy'](bf[bi]),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['a']['copy'](bf['a']),
                this['b']['copy'](bf['b']),
                this['c']['copy'](bf['c']),
                this;
            },
            'getArea': function() {
                var bf = new eK()
                  , bg = new eK();
                return function() {
                    return bf['subVectors'](this['c'], this['b']),
                    bg['subVectors'](this['a'], this['b']),
                    0.5 * bf['cross'](bg)['length']();
                }
                ;
            }(),
            'getMidpoint': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getMidpoint()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                bf['addVectors'](this['a'], this['b'])['add'](this['c'])['multiplyScalar'](0x1 / 0x3);
            },
            'getNormal': function(bf) {
                return KS['getNormal'](this['a'], this['b'], this['c'], bf);
            },
            'getPlane': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Triangle:\x20.getPlane()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                bf['setFromCoplanarPoints'](this['a'], this['b'], this['c']);
            },
            'getBarycoord': function(bf, bg) {
                return KS['getBarycoord'](bf, this['a'], this['b'], this['c'], bg);
            },
            'getUV': function(bf, bg, bh, bi, bF) {
                return KS['getUV'](bf, this['a'], this['b'], this['c'], bg, bh, bi, bF);
            },
            'containsPoint': function(bf) {
                return KS['containsPoint'](bf, this['a'], this['b'], this['c']);
            },
            'isFrontFacing': function(bf) {
                return KS['isFrontFacing'](this['a'], this['b'], this['c'], bf);
            },
            'intersectsBox': function(bf) {
                return bf['intersectsTriangle'](this);
            },
            'closestPointToPoint': (KF = new eK(),
            KG = new eK(),
            KH = new eK(),
            KI = new eK(),
            KJ = new eK(),
            KK = new eK(),
            function(bf, bg) {
                void 0x0 === bg && (console['warn']('THREE.Triangle:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'),
                bg = new eK());
                var bh, bi, bF = this['a'], bG = this['b'], bH = this['c'];
                KF['subVectors'](bG, bF),
                KG['subVectors'](bH, bF),
                KI['subVectors'](bf, bF);
                var bI = KF['dot'](KI)
                  , bJ = KG['dot'](KI);
                if (bI <= 0x0 && bJ <= 0x0)
                    return bg['copy'](bF);
                KJ['subVectors'](bf, bG);
                var bK = KF['dot'](KJ)
                  , bL = KG['dot'](KJ);
                if (bK >= 0x0 && bL <= bK)
                    return bg['copy'](bG);
                var bM = bI * bL - bK * bJ;
                if (bM <= 0x0 && bI >= 0x0 && bK <= 0x0)
                    return bh = bI / (bI - bK),
                    bg['copy'](bF)['addScaledVector'](KF, bh);
                KK['subVectors'](bf, bH);
                var bN = KF['dot'](KK)
                  , bO = KG['dot'](KK);
                if (bO >= 0x0 && bN <= bO)
                    return bg['copy'](bH);
                var bP = bN * bJ - bI * bO;
                if (bP <= 0x0 && bJ >= 0x0 && bO <= 0x0)
                    return bi = bJ / (bJ - bO),
                    bg['copy'](bF)['addScaledVector'](KG, bi);
                var bQ = bK * bO - bN * bL;
                if (bQ <= 0x0 && bL - bK >= 0x0 && bN - bO >= 0x0)
                    return KH['subVectors'](bH, bG),
                    bi = (bL - bK) / (bL - bK + (bN - bO)),
                    bg['copy'](bG)['addScaledVector'](KH, bi);
                var bR = 0x1 / (bQ + bP + bM);
                return bh = bP * bR,
                bi = bM * bR,
                bg['copy'](bF)['addScaledVector'](KF, bh)['addScaledVector'](KG, bi);
            }
            ),
            'equals': function(bf) {
                return bf['a']['equals'](this['a']) && bf['b']['equals'](this['b']) && bf['c']['equals'](this['c']);
            }
        }),
        KW['prototype'] = Object['create'](Kf['prototype']),
        KW['prototype']['constructor'] = KW,
        KW['prototype']['isMeshBasicMaterial'] = !0x0,
        KW['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['map'] = bf['map'],
            this['lightMap'] = bf['lightMap'],
            this['lightMapIntensity'] = bf['lightMapIntensity'],
            this['aoMap'] = bf['aoMap'],
            this['aoMapIntensity'] = bf['aoMapIntensity'],
            this['specularMap'] = bf['specularMap'],
            this['alphaMap'] = bf['alphaMap'],
            this['envMap'] = bf['envMap'],
            this['combine'] = bf['combine'],
            this['reflectivity'] = bf['reflectivity'],
            this['refractionRatio'] = bf['refractionRatio'],
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this['wireframeLinecap'] = bf['wireframeLinecap'],
            this['wireframeLinejoin'] = bf['wireframeLinejoin'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this;
        }
        ,
        KY['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': KY,
            'isMesh': !0x0,
            'setDrawMode': function(bf) {
                this['drawMode'] = bf;
            },
            'copy': function(bf) {
                return yT['prototype']['copy']['call'](this, bf),
                this['drawMode'] = bf['drawMode'],
                void 0x0 !== bf['morphTargetInfluences'] && (this['morphTargetInfluences'] = bf['morphTargetInfluences']['slice']()),
                void 0x0 !== bf['morphTargetDictionary'] && (this['morphTargetDictionary'] = Object['assign']({}, bf['morphTargetDictionary'])),
                this;
            },
            'updateMorphTargets': function() {
                var bf, bg, bh, bi = this['geometry'];
                if (bi['isBufferGeometry']) {
                    var bF = bi['morphAttributes']
                      , bG = Object['keys'](bF);
                    if (bG['length'] > 0x0) {
                        var bH = bF[bG[0x0]];
                        if (void 0x0 !== bH)
                            for (this['morphTargetInfluences'] = [],
                            this['morphTargetDictionary'] = {},
                            bf = 0x0,
                            bg = bH['length']; bf < bg; bf++)
                                bh = bH[bf]['name'] || String(bf),
                                this['morphTargetInfluences']['push'](0x0),
                                this['morphTargetDictionary'][bh] = bf;
                    }
                } else {
                    var bI = bi['morphTargets'];
                    void 0x0 !== bI && bI['length'] > 0x0 && console['error']('THREE.Mesh.updateMorphTargets()\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.');
                }
            },
            'raycast': function() {
                var bf = new mR()
                  , bg = new KP()
                  , bh = new mE()
                  , bi = new eK()
                  , bF = new eK()
                  , bG = new eK()
                  , bH = new eK()
                  , bI = new eK()
                  , bJ = new eK()
                  , bK = new eK()
                  , bL = new eK()
                  , bM = new eK()
                  , bN = new eC()
                  , bO = new eC()
                  , bP = new eC()
                  , bQ = new eK()
                  , bR = new eK();
                function bS(bf, bg, bh, bi, bF, bG, bH, bI) {
                    if (null === (bg['side'] === bU ? bi['intersectTriangle'](bH, bG, bF, !0x0, bI) : bi['intersectTriangle'](bF, bG, bH, bg['side'] !== bV, bI)))
                        return null;
                    bR['copy'](bI),
                    bR['applyMatrix4'](bf['matrixWorld']);
                    var bJ = bh['ray']['origin']['distanceTo'](bR);
                    return bJ < bh['near'] || bJ > bh['far'] ? null : {
                        'distance': bJ,
                        'point': bR['clone'](),
                        'object': bf
                    };
                }
                function bT(bf, bg, bh, bR, bT, bU, bV, bW, bX, bY) {
                    bi['fromBufferAttribute'](bT, bW),
                    bF['fromBufferAttribute'](bT, bX),
                    bG['fromBufferAttribute'](bT, bY);
                    var bZ = bf['morphTargetInfluences'];
                    if (bg['morphTargets'] && bU && bZ) {
                        bK['set'](0x0, 0x0, 0x0),
                        bL['set'](0x0, 0x0, 0x0),
                        bM['set'](0x0, 0x0, 0x0);
                        for (var c0 = 0x0, c1 = bU['length']; c0 < c1; c0++) {
                            var c2 = bZ[c0]
                              , c3 = bU[c0];
                            0x0 !== c2 && (bH['fromBufferAttribute'](c3, bW),
                            bI['fromBufferAttribute'](c3, bX),
                            bJ['fromBufferAttribute'](c3, bY),
                            bK['addScaledVector'](bH['sub'](bi), c2),
                            bL['addScaledVector'](bI['sub'](bF), c2),
                            bM['addScaledVector'](bJ['sub'](bG), c2));
                        }
                        bi['add'](bK),
                        bF['add'](bL),
                        bG['add'](bM);
                    }
                    var c4 = bS(bf, bg, bh, bR, bi, bF, bG, bQ);
                    if (c4) {
                        bV && (bN['fromBufferAttribute'](bV, bW),
                        bO['fromBufferAttribute'](bV, bX),
                        bP['fromBufferAttribute'](bV, bY),
                        c4['uv'] = KS['getUV'](bQ, bi, bF, bG, bN, bO, bP, new eC()));
                        var c5 = new xS(bW,bX,bY);
                        KS['getNormal'](bi, bF, bG, c5['normal']),
                        c4['face'] = c5;
                    }
                    return c4;
                }
                return function(bi, bF) {
                    var bG, bH = this['geometry'], bI = this['material'], bJ = this['matrixWorld'];
                    if (void 0x0 !== bI && (null === bH['boundingSphere'] && bH['computeBoundingSphere'](),
                    bh['copy'](bH['boundingSphere']),
                    bh['applyMatrix4'](bJ),
                    !0x1 !== bi['ray']['intersectsSphere'](bh) && (bf['getInverse'](bJ),
                    bg['copy'](bi['ray'])['applyMatrix4'](bf),
                    null === bH['boundingBox'] || !0x1 !== bg['intersectsBox'](bH['boundingBox']))))
                        if (bH['isBufferGeometry']) {
                            var bK, bL, bM, bR, bU, bV, bW, bX, bY, bZ = bH['index'], c0 = bH['attributes']['position'], c1 = bH['morphAttributes']['position'], c2 = bH['attributes']['uv'], c3 = bH['groups'], c4 = bH['drawRange'];
                            if (null !== bZ)
                                if (Array['isArray'](bI))
                                    for (bR = 0x0,
                                    bV = c3['length']; bR < bV; bR++)
                                        for (bY = bI[(bX = c3[bR])['materialIndex']],
                                        bU = Math['max'](bX['start'], c4['start']),
                                        bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3)
                                            bK = bZ['getX'](bU),
                                            bL = bZ['getX'](bU + 0x1),
                                            bM = bZ['getX'](bU + 0x2),
                                            (bG = bT(this, bY, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bU / 0x3),
                                            bG['face']['materialIndex'] = bX['materialIndex'],
                                            bF['push'](bG));
                                else
                                    for (bR = Math['max'](0x0, c4['start']),
                                    bV = Math['min'](bZ['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3)
                                        bK = bZ['getX'](bR),
                                        bL = bZ['getX'](bR + 0x1),
                                        bM = bZ['getX'](bR + 0x2),
                                        (bG = bT(this, bI, bi, bg, c0, c1, c2, bK, bL, bM)) && (bG['faceIndex'] = Math['floor'](bR / 0x3),
                                        bF['push'](bG));
                            else if (void 0x0 !== c0)
                                if (Array['isArray'](bI))
                                    for (bR = 0x0,
                                    bV = c3['length']; bR < bV; bR++)
                                        for (bY = bI[(bX = c3[bR])['materialIndex']],
                                        bU = Math['max'](bX['start'], c4['start']),
                                        bW = Math['min'](bX['start'] + bX['count'], c4['start'] + c4['count']); bU < bW; bU += 0x3)
                                            (bG = bT(this, bY, bi, bg, c0, c1, c2, bK = bU, bL = bU + 0x1, bM = bU + 0x2)) && (bG['faceIndex'] = Math['floor'](bU / 0x3),
                                            bG['face']['materialIndex'] = bX['materialIndex'],
                                            bF['push'](bG));
                                else
                                    for (bR = Math['max'](0x0, c4['start']),
                                    bV = Math['min'](c0['count'], c4['start'] + c4['count']); bR < bV; bR += 0x3)
                                        (bG = bT(this, bI, bi, bg, c0, c1, c2, bK = bR, bL = bR + 0x1, bM = bR + 0x2)) && (bG['faceIndex'] = Math['floor'](bR / 0x3),
                                        bF['push'](bG));
                        } else if (bH['isGeometry']) {
                            var c5, c6, c7, c8, c9 = Array['isArray'](bI), ca = bH['vertices'], cb = bH['faces'], cc = bH['faceVertexUvs'][0x0];
                            cc['length'] > 0x0 && (c8 = cc);
                            for (var cd = 0x0, ce = cb['length']; cd < ce; cd++) {
                                var cf = cb[cd]
                                  , cg = c9 ? bI[cf['materialIndex']] : bI;
                                if (void 0x0 !== cg && (c5 = ca[cf['a']],
                                c6 = ca[cf['b']],
                                c7 = ca[cf['c']],
                                bG = bS(this, cg, bi, bg, c5, c6, c7, bQ))) {
                                    if (c8 && c8[cd]) {
                                        var ch = c8[cd];
                                        bN['copy'](ch[0x0]),
                                        bO['copy'](ch[0x1]),
                                        bP['copy'](ch[0x2]),
                                        bG['uv'] = KS['getUV'](bQ, c5, c6, c7, bN, bO, bP, new eC());
                                    }
                                    bG['face'] = cf,
                                    bG['faceIndex'] = cd,
                                    bF['push'](bG);
                                }
                            }
                        }
                }
                ;
            }(),
            'clone': function() {
                return new this['constructor'](this['geometry'],this['material'])['copy'](this);
            }
        }),
        O3['prototype'] = Object['create'](lW['prototype']),
        O3['prototype']['constructor'] = O3,
        O3['prototype']['isCubeTexture'] = !0x0,
        Object['defineProperty'](O3['prototype'], 'images', {
            'get': function() {
                return this['image'];
            },
            'set': function(bf) {
                this['image'] = bf;
            }
        }),
        Oe['prototype'] = Object['create'](lW['prototype']),
        Oe['prototype']['constructor'] = Oe,
        Oe['prototype']['isDataTexture2DArray'] = !0x0,
        Oj['prototype'] = Object['create'](lW['prototype']),
        Oj['prototype']['constructor'] = Oj,
        Oj['prototype']['isDataTexture3D'] = !0x0;
        var Sx = new lW()
          , Sy = new Oe()
          , Sz = new Oj()
          , SA = new O3()
          , SB = []
          , SC = []
          , SD = new Float32Array(0x10)
          , SE = new Float32Array(0x9)
          , SF = new Float32Array(0x4);
        function SG(bf, bg, bh) {
            var bi = bf[0x0];
            if (bi <= 0x0 || bi > 0x0)
                return bf;
            var bF = bg * bh
              , bG = SB[bF];
            if (void 0x0 === bG && (bG = new Float32Array(bF),
            SB[bF] = bG),
            0x0 !== bg) {
                bi['toArray'](bG, 0x0);
                for (var bH = 0x1, bI = 0x0; bH !== bg; ++bH)
                    bI += bh,
                    bf[bH]['toArray'](bG, bI);
            }
            return bG;
        }
        function SP(bf, bg) {
            if (bf['length'] !== bg['length'])
                return !0x1;
            for (var bh = 0x0, bi = bf['length']; bh < bi; bh++)
                if (bf[bh] !== bg[bh])
                    return !0x1;
            return !0x0;
        }
        function SU(bf, bg) {
            for (var bh = 0x0, bi = bg['length']; bh < bi; bh++)
                bf[bh] = bg[bh];
        }
        function SZ(bf, bg) {
            var bh = SC[bg];
            void 0x0 === bh && (bh = new Int32Array(bg),
            SC[bg] = bh);
            for (var bi = 0x0; bi !== bg; ++bi)
                bh[bi] = bf['allocateTextureUnit']();
            return bh;
        }
        function T4(bf, bg) {
            var bh = this['cache'];
            bh[0x0] !== bg && (bf['uniform1f'](this['addr'], bg),
            bh[0x0] = bg);
        }
        function T8(bf, bg) {
            var bh = this['cache'];
            if (void 0x0 !== bg['x'])
                bh[0x0] === bg['x'] && bh[0x1] === bg['y'] || (bf['uniform2f'](this['addr'], bg['x'], bg['y']),
                bh[0x0] = bg['x'],
                bh[0x1] = bg['y']);
            else {
                if (SP(bh, bg))
                    return;
                bf['uniform2fv'](this['addr'], bg),
                SU(bh, bg);
            }
        }
        function Tc(bf, bg) {
            var bh = this['cache'];
            if (void 0x0 !== bg['x'])
                bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] || (bf['uniform3f'](this['addr'], bg['x'], bg['y'], bg['z']),
                bh[0x0] = bg['x'],
                bh[0x1] = bg['y'],
                bh[0x2] = bg['z']);
            else if (void 0x0 !== bg['r'])
                bh[0x0] === bg['r'] && bh[0x1] === bg['g'] && bh[0x2] === bg['b'] || (bf['uniform3f'](this['addr'], bg['r'], bg['g'], bg['b']),
                bh[0x0] = bg['r'],
                bh[0x1] = bg['g'],
                bh[0x2] = bg['b']);
            else {
                if (SP(bh, bg))
                    return;
                bf['uniform3fv'](this['addr'], bg),
                SU(bh, bg);
            }
        }
        function Tg(bf, bg) {
            var bh = this['cache'];
            if (void 0x0 !== bg['x'])
                bh[0x0] === bg['x'] && bh[0x1] === bg['y'] && bh[0x2] === bg['z'] && bh[0x3] === bg['w'] || (bf['uniform4f'](this['addr'], bg['x'], bg['y'], bg['z'], bg['w']),
                bh[0x0] = bg['x'],
                bh[0x1] = bg['y'],
                bh[0x2] = bg['z'],
                bh[0x3] = bg['w']);
            else {
                if (SP(bh, bg))
                    return;
                bf['uniform4fv'](this['addr'], bg),
                SU(bh, bg);
            }
        }
        function Tk(bf, bg) {
            var bh = this['cache']
              , bi = bg['elements'];
            if (void 0x0 === bi) {
                if (SP(bh, bg))
                    return;
                bf['uniformMatrix2fv'](this['addr'], !0x1, bg),
                SU(bh, bg);
            } else {
                if (SP(bh, bi))
                    return;
                SF['set'](bi),
                bf['uniformMatrix2fv'](this['addr'], !0x1, SF),
                SU(bh, bi);
            }
        }
        function Tp(bf, bg) {
            var bh = this['cache']
              , bi = bg['elements'];
            if (void 0x0 === bi) {
                if (SP(bh, bg))
                    return;
                bf['uniformMatrix3fv'](this['addr'], !0x1, bg),
                SU(bh, bg);
            } else {
                if (SP(bh, bi))
                    return;
                SE['set'](bi),
                bf['uniformMatrix3fv'](this['addr'], !0x1, SE),
                SU(bh, bi);
            }
        }
        function Tu(bf, bg) {
            var bh = this['cache']
              , bi = bg['elements'];
            if (void 0x0 === bi) {
                if (SP(bh, bg))
                    return;
                bf['uniformMatrix4fv'](this['addr'], !0x1, bg),
                SU(bh, bg);
            } else {
                if (SP(bh, bi))
                    return;
                SD['set'](bi),
                bf['uniformMatrix4fv'](this['addr'], !0x1, SD),
                SU(bh, bi);
            }
        }
        function Tz(bf, bg, bh) {
            var bi = this['cache']
              , bF = bh['allocateTextureUnit']();
            bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
            bi[0x0] = bF),
            bh['safeSetTexture2D'](bg || Sx, bF);
        }
        function TF(bf, bg, bh) {
            var bi = this['cache']
              , bF = bh['allocateTextureUnit']();
            bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
            bi[0x0] = bF),
            bh['setTexture2DArray'](bg || Sy, bF);
        }
        function TL(bf, bg, bh) {
            var bi = this['cache']
              , bF = bh['allocateTextureUnit']();
            bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
            bi[0x0] = bF),
            bh['setTexture3D'](bg || Sz, bF);
        }
        function TR(bf, bg, bh) {
            var bi = this['cache']
              , bF = bh['allocateTextureUnit']();
            bi[0x0] !== bF && (bf['uniform1i'](this['addr'], bF),
            bi[0x0] = bF),
            bh['safeSetTextureCube'](bg || SA, bF);
        }
        function TX(bf, bg) {
            var bh = this['cache'];
            bh[0x0] !== bg && (bf['uniform1i'](this['addr'], bg),
            bh[0x0] = bg);
        }
        function U1(bf, bg) {
            var bh = this['cache'];
            SP(bh, bg) || (bf['uniform2iv'](this['addr'], bg),
            SU(bh, bg));
        }
        function U5(bf, bg) {
            var bh = this['cache'];
            SP(bh, bg) || (bf['uniform3iv'](this['addr'], bg),
            SU(bh, bg));
        }
        function U9(bf, bg) {
            var bh = this['cache'];
            SP(bh, bg) || (bf['uniform4iv'](this['addr'], bg),
            SU(bh, bg));
        }
        function Ud(bf, bg) {
            bf['uniform1fv'](this['addr'], bg);
        }
        function Ug(bf, bg) {
            bf['uniform1iv'](this['addr'], bg);
        }
        function Uj(bf, bg) {
            bf['uniform2iv'](this['addr'], bg);
        }
        function Um(bf, bg) {
            bf['uniform3iv'](this['addr'], bg);
        }
        function Up(bf, bg) {
            bf['uniform4iv'](this['addr'], bg);
        }
        function Us(bf, bg) {
            var bh = SG(bg, this['size'], 0x2);
            bf['uniform2fv'](this['addr'], bh);
        }
        function Uw(bf, bg) {
            var bh = SG(bg, this['size'], 0x3);
            bf['uniform3fv'](this['addr'], bh);
        }
        function UA(bf, bg) {
            var bh = SG(bg, this['size'], 0x4);
            bf['uniform4fv'](this['addr'], bh);
        }
        function UE(bf, bg) {
            var bh = SG(bg, this['size'], 0x4);
            bf['uniformMatrix2fv'](this['addr'], !0x1, bh);
        }
        function UI(bf, bg) {
            var bh = SG(bg, this['size'], 0x9);
            bf['uniformMatrix3fv'](this['addr'], !0x1, bh);
        }
        function UM(bf, bg) {
            var bh = SG(bg, this['size'], 0x10);
            bf['uniformMatrix4fv'](this['addr'], !0x1, bh);
        }
        function UQ(bf, bg, bh) {
            var bi = bg['length']
              , bF = SZ(bh, bi);
            bf['uniform1iv'](this['addr'], bF);
            for (var bG = 0x0; bG !== bi; ++bG)
                bh['safeSetTexture2D'](bg[bG] || Sx, bF[bG]);
        }
        function UX(bf, bg, bh) {
            var bi = bg['length']
              , bF = SZ(bh, bi);
            bf['uniform1iv'](this['addr'], bF);
            for (var bG = 0x0; bG !== bi; ++bG)
                bh['safeSetTextureCube'](bg[bG] || SA, bF[bG]);
        }
        function V4(bf, bg, bh) {
            this['id'] = bf,
            this['addr'] = bh,
            this['cache'] = [],
            this['setValue'] = function(bf) {
                switch (bf) {
                case 0x1406:
                    return T4;
                case 0x8b50:
                    return T8;
                case 0x8b51:
                    return Tc;
                case 0x8b52:
                    return Tg;
                case 0x8b5a:
                    return Tk;
                case 0x8b5b:
                    return Tp;
                case 0x8b5c:
                    return Tu;
                case 0x8b5e:
                case 0x8d66:
                    return Tz;
                case 0x8b5f:
                    return TL;
                case 0x8b60:
                    return TR;
                case 0x8dc1:
                    return TF;
                case 0x1404:
                case 0x8b56:
                    return TX;
                case 0x8b53:
                case 0x8b57:
                    return U1;
                case 0x8b54:
                case 0x8b58:
                    return U5;
                case 0x8b55:
                case 0x8b59:
                    return U9;
                }
            }(bg['type']);
        }
        function V9(bf, bg, bh) {
            this['id'] = bf,
            this['addr'] = bh,
            this['cache'] = [],
            this['size'] = bg['size'],
            this['setValue'] = function(bf) {
                switch (bf) {
                case 0x1406:
                    return Ud;
                case 0x8b50:
                    return Us;
                case 0x8b51:
                    return Uw;
                case 0x8b52:
                    return UA;
                case 0x8b5a:
                    return UE;
                case 0x8b5b:
                    return UI;
                case 0x8b5c:
                    return UM;
                case 0x8b5e:
                    return UQ;
                case 0x8b60:
                    return UX;
                case 0x1404:
                case 0x8b56:
                    return Ug;
                case 0x8b53:
                case 0x8b57:
                    return Uj;
                case 0x8b54:
                case 0x8b58:
                    return Um;
                case 0x8b55:
                case 0x8b59:
                    return Up;
                }
            }(bg['type']);
        }
        function Ve(bf) {
            this['id'] = bf,
            this['seq'] = [],
            this['map'] = {};
        }
        V9['prototype']['updateCache'] = function(bf) {
            var bg = this['cache'];
            bf instanceof Float32Array && bg['length'] !== bf['length'] && (this['cache'] = new Float32Array(bf['length'])),
            SU(bg, bf);
        }
        ,
        Ve['prototype']['setValue'] = function(bf, bg, bh) {
            for (var bi = this['seq'], bF = 0x0, bG = bi['length']; bF !== bG; ++bF) {
                var bH = bi[bF];
                bH['setValue'](bf, bg[bH['id']], bh);
            }
        }
        ;
        var Vp = /([\w\d_]+)(\])?(\[|\.)?/g;
        function Vq(bf, bg) {
            bf['seq']['push'](bg),
            bf['map'][bg['id']] = bg;
        }
        function Vt(bf, bg, bh) {
            var bi = bf['name']
              , bF = bi['length'];
            for (Vp['lastIndex'] = 0x0; ; ) {
                var bG = Vp['exec'](bi)
                  , bH = Vp['lastIndex']
                  , bI = bG[0x1]
                  , bJ = ']' === bG[0x2]
                  , bK = bG[0x3];
                if (bJ && (bI |= 0x0),
                void 0x0 === bK || '[' === bK && bH + 0x2 === bF) {
                    Vq(bh, void 0x0 === bK ? new V4(bI,bf,bg) : new V9(bI,bf,bg));
                    break;
                }
                var bL = bh['map'][bI];
                void 0x0 === bL && Vq(bh, bL = new Ve(bI)),
                bh = bL;
            }
        }
        function VF(bf, bg) {
            this['seq'] = [],
            this['map'] = {};
            for (var bh = bf['getProgramParameter'](bg, 0x8b86), bi = 0x0; bi < bh; ++bi) {
                var bF = bf['getActiveUniform'](bg, bi);
                Vt(bF, bf['getUniformLocation'](bg, bF['name']), this);
            }
        }
        function VL(bf, bg, bh, bi) {
            var bF = bf['createShader'](bg);
            return bf['shaderSource'](bF, bh),
            bf['compileShader'](bF),
            !0x0 === bi && (!0x1 === bf['getShaderParameter'](bF, 0x8b81) && console['error']('THREE.WebGLShader:\x20Shader\x20couldn\x27t\x20compile.'),
            '' !== bf['getShaderInfoLog'](bF) && console['warn']('THREE.WebGLShader:\x20gl.getShaderInfoLog()', 0x8b31 === bg ? 'vertex' : 'fragment', bf['getShaderInfoLog'](bF), function(bf) {
                for (var bg = bf['split']('\x0a'), bh = 0x0; bh < bg['length']; bh++)
                    bg[bh] = bh + 0x1 + ':\x20' + bg[bh];
                return bg['join']('\x0a');
            }(bh))),
            bF;
        }
        VF['prototype']['setValue'] = function(bf, bg, bh, bi) {
            var bF = this['map'][bg];
            void 0x0 !== bF && bF['setValue'](bf, bh, bi);
        }
        ,
        VF['prototype']['setOptional'] = function(bf, bg, bh) {
            var bi = bg[bh];
            void 0x0 !== bi && this['setValue'](bf, bh, bi);
        }
        ,
        VF['upload'] = function(bf, bg, bh, bi) {
            for (var bF = 0x0, bG = bg['length']; bF !== bG; ++bF) {
                var bH = bg[bF]
                  , bI = bh[bH['id']];
                !0x1 !== bI['needsUpdate'] && bH['setValue'](bf, bI['value'], bi);
            }
        }
        ,
        VF['seqWithValue'] = function(bf, bg) {
            for (var bh = [], bi = 0x0, bF = bf['length']; bi !== bF; ++bi) {
                var bG = bf[bi];
                bG['id']in bg && bh['push'](bG);
            }
            return bh;
        }
        ;
        var Wh = 0x0;
        function Wi(bf) {
            switch (bf) {
            case dQ:
                return ['Linear', '(\x20value\x20)'];
            case dR:
                return ['sRGB', '(\x20value\x20)'];
            case dT:
                return ['RGBE', '(\x20value\x20)'];
            case dV:
                return ['RGBM', '(\x20value,\x207.0\x20)'];
            case dW:
                return ['RGBM', '(\x20value,\x2016.0\x20)'];
            case dX:
                return ['RGBD', '(\x20value,\x20256.0\x20)'];
            case dS:
                return ['Gamma', '(\x20value,\x20float(\x20GAMMA_FACTOR\x20)\x20)'];
            default:
                throw new Error('unsupported\x20encoding:\x20' + bf);
            }
        }
        function Wk(bf, bg) {
            var bh = Wi(bg);
            return 'vec4\x20' + bf + '(\x20vec4\x20value\x20)\x20{\x20return\x20' + bh[0x0] + 'ToLinear' + bh[0x1] + ';\x20}';
        }
        function Wo(bf, bg) {
            var bh;
            switch (bg) {
            case cz:
                bh = 'Linear';
                break;
            case cA:
                bh = 'Reinhard';
                break;
            case cB:
                bh = 'Uncharted2';
                break;
            case cC:
                bh = 'OptimizedCineon';
                break;
            case cD:
                bh = 'ACESFilmic';
                break;
            default:
                throw new Error('unsupported\x20toneMapping:\x20' + bg);
            }
            return 'vec3\x20' + bf + '(\x20vec3\x20color\x20)\x20{\x20return\x20' + bh + 'ToneMapping(\x20color\x20);\x20}';
        }
        function Ws(bf) {
            return '' !== bf;
        }
        function Wu(bf, bg) {
            return bf['replace'](/NUM_DIR_LIGHTS/g, bg['numDirLights'])['replace'](/NUM_SPOT_LIGHTS/g, bg['numSpotLights'])['replace'](/NUM_RECT_AREA_LIGHTS/g, bg['numRectAreaLights'])['replace'](/NUM_POINT_LIGHTS/g, bg['numPointLights'])['replace'](/NUM_HEMI_LIGHTS/g, bg['numHemiLights']);
        }
        function Wx(bf, bg) {
            return bf['replace'](/NUM_CLIPPING_PLANES/g, bg['numClippingPlanes'])['replace'](/UNION_CLIPPING_PLANES/g, bg['numClippingPlanes'] - bg['numClipIntersection']);
        }
        function WA(bf) {
            return bf['replace'](/^[ \t]*#include +<([\w\d.\/]+)>/gm, function(bf, bg) {
                var bh = vP[bg];
                if (void 0x0 === bh)
                    throw new Error('Can\x20not\x20resolve\x20#include\x20<' + bg + '>');
                return WA(bh);
            });
        }
        function WF(bf) {
            return bf['replace'](/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function(bf, bg, bh, bi) {
                for (var bF = '', bG = parseInt(bg); bG < parseInt(bh); bG++)
                    bF += bi['replace'](/\[ i \]/g, '[\x20' + bG + '\x20]');
                return bF;
            });
        }
        function WN(bf, bg, bh, bi, bF, bG, bH, bI) {
            var bJ = bf['context']
              , bK = bi['defines']
              , bL = bF['vertexShader']
              , bM = bF['fragmentShader']
              , bN = 'SHADOWMAP_TYPE_BASIC';
            bG['shadowMapType'] === bR ? bN = 'SHADOWMAP_TYPE_PCF' : bG['shadowMapType'] === bS && (bN = 'SHADOWMAP_TYPE_PCF_SOFT');
            var bO = 'ENVMAP_TYPE_CUBE'
              , bP = 'ENVMAP_MODE_REFLECTION'
              , bQ = 'ENVMAP_BLENDING_MULTIPLY';
            if (bG['envMap']) {
                switch (bi['envMap']['mapping']) {
                case cF:
                case cG:
                    bO = 'ENVMAP_TYPE_CUBE';
                    break;
                case cK:
                case cL:
                    bO = 'ENVMAP_TYPE_CUBE_UV';
                    break;
                case cH:
                case cI:
                    bO = 'ENVMAP_TYPE_EQUIREC';
                    break;
                case cJ:
                    bO = 'ENVMAP_TYPE_SPHERE';
                }
                switch (bi['envMap']['mapping']) {
                case cG:
                case cI:
                    bP = 'ENVMAP_MODE_REFRACTION';
                }
                switch (bi['combine']) {
                case cv:
                    bQ = 'ENVMAP_BLENDING_MULTIPLY';
                    break;
                case cw:
                    bQ = 'ENVMAP_BLENDING_MIX';
                    break;
                case cx:
                    bQ = 'ENVMAP_BLENDING_ADD';
                }
            }
            var bT, bU, bV, bW, bX, bY = bf['gammaFactor'] > 0x0 ? bf['gammaFactor'] : 0x1, bZ = bH['isWebGL2'] ? '' : function(bf, bg, bh) {
                return [(bf = bf || {})['derivatives'] || bg['envMapCubeUV'] || bg['bumpMap'] || bg['normalMap'] && !bg['objectSpaceNormalMap'] || bg['flatShading'] ? '#extension\x20GL_OES_standard_derivatives\x20:\x20enable' : '', (bf['fragDepth'] || bg['logarithmicDepthBuffer']) && bh['get']('EXT_frag_depth') ? '#extension\x20GL_EXT_frag_depth\x20:\x20enable' : '', bf['drawBuffers'] && bh['get']('WEBGL_draw_buffers') ? '#extension\x20GL_EXT_draw_buffers\x20:\x20require' : '', (bf['shaderTextureLOD'] || bg['envMap']) && bh['get']('EXT_shader_texture_lod') ? '#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable' : '']['filter'](Ws)['join']('\x0a');
            }(bi['extensions'], bG, bg), c0 = function(bf) {
                var bg = [];
                for (var bh in bf) {
                    var bi = bf[bh];
                    !0x1 !== bi && bg['push']('#define\x20' + bh + '\x20' + bi);
                }
                return bg['join']('\x0a');
            }(bK), c1 = bJ['createProgram']();
            if (bi['isRawShaderMaterial'] ? ((bT = [c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bT += '\x0a'),
            (bU = [bZ, c0]['filter'](Ws)['join']('\x0a'))['length'] > 0x0 && (bU += '\x0a')) : (bT = ['precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['supportsVertexTextures'] ? '#define\x20VERTEX_TEXTURES' : '', '#define\x20GAMMA_FACTOR\x20' + bY, '#define\x20MAX_BONES\x20' + bG['maxBones'], bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bP : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['displacementMap'] && bG['supportsVertexTextures'] ? '#define\x20USE_DISPLACEMENTMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['skinning'] ? '#define\x20USE_SKINNING' : '', bG['useVertexTexture'] ? '#define\x20BONE_TEXTURE' : '', bG['morphTargets'] ? '#define\x20USE_MORPHTARGETS' : '', bG['morphNormals'] && !0x1 === bG['flatShading'] ? '#define\x20USE_MORPHNORMALS' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['sizeAttenuation'] ? '#define\x20USE_SIZEATTENUATION' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', 'uniform\x20mat4\x20modelMatrix;', 'uniform\x20mat4\x20modelViewMatrix;', 'uniform\x20mat4\x20projectionMatrix;', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20mat3\x20normalMatrix;', 'uniform\x20vec3\x20cameraPosition;', 'attribute\x20vec3\x20position;', 'attribute\x20vec3\x20normal;', 'attribute\x20vec2\x20uv;', '#ifdef\x20USE_TANGENT', '\x09attribute\x20vec4\x20tangent;', '#endif', '#ifdef\x20USE_COLOR', '\x09attribute\x20vec3\x20color;', '#endif', '#ifdef\x20USE_MORPHTARGETS', '\x09attribute\x20vec3\x20morphTarget0;', '\x09attribute\x20vec3\x20morphTarget1;', '\x09attribute\x20vec3\x20morphTarget2;', '\x09attribute\x20vec3\x20morphTarget3;', '\x09#ifdef\x20USE_MORPHNORMALS', '\x09\x09attribute\x20vec3\x20morphNormal0;', '\x09\x09attribute\x20vec3\x20morphNormal1;', '\x09\x09attribute\x20vec3\x20morphNormal2;', '\x09\x09attribute\x20vec3\x20morphNormal3;', '\x09#else', '\x09\x09attribute\x20vec3\x20morphTarget4;', '\x09\x09attribute\x20vec3\x20morphTarget5;', '\x09\x09attribute\x20vec3\x20morphTarget6;', '\x09\x09attribute\x20vec3\x20morphTarget7;', '\x09#endif', '#endif', '#ifdef\x20USE_SKINNING', '\x09attribute\x20vec4\x20skinIndex;', '\x09attribute\x20vec4\x20skinWeight;', '#endif', '\x0a']['filter'](Ws)['join']('\x0a'),
            bU = [bZ, 'precision\x20' + bG['precision'] + '\x20float;', 'precision\x20' + bG['precision'] + '\x20int;', '#define\x20SHADER_NAME\x20' + bF['name'], c0, bG['alphaTest'] ? '#define\x20ALPHATEST\x20' + bG['alphaTest'] + (bG['alphaTest'] % 0x1 ? '' : '.0') : '', '#define\x20GAMMA_FACTOR\x20' + bY, bG['useFog'] && bG['fog'] ? '#define\x20USE_FOG' : '', bG['useFog'] && bG['fogExp'] ? '#define\x20FOG_EXP2' : '', bG['map'] ? '#define\x20USE_MAP' : '', bG['matcap'] ? '#define\x20USE_MATCAP' : '', bG['envMap'] ? '#define\x20USE_ENVMAP' : '', bG['envMap'] ? '#define\x20' + bO : '', bG['envMap'] ? '#define\x20' + bP : '', bG['envMap'] ? '#define\x20' + bQ : '', bG['lightMap'] ? '#define\x20USE_LIGHTMAP' : '', bG['aoMap'] ? '#define\x20USE_AOMAP' : '', bG['emissiveMap'] ? '#define\x20USE_EMISSIVEMAP' : '', bG['bumpMap'] ? '#define\x20USE_BUMPMAP' : '', bG['normalMap'] ? '#define\x20USE_NORMALMAP' : '', bG['normalMap'] && bG['objectSpaceNormalMap'] ? '#define\x20OBJECTSPACE_NORMALMAP' : '', bG['specularMap'] ? '#define\x20USE_SPECULARMAP' : '', bG['roughnessMap'] ? '#define\x20USE_ROUGHNESSMAP' : '', bG['metalnessMap'] ? '#define\x20USE_METALNESSMAP' : '', bG['alphaMap'] ? '#define\x20USE_ALPHAMAP' : '', bG['vertexTangents'] ? '#define\x20USE_TANGENT' : '', bG['vertexColors'] ? '#define\x20USE_COLOR' : '', bG['gradientMap'] ? '#define\x20USE_GRADIENTMAP' : '', bG['flatShading'] ? '#define\x20FLAT_SHADED' : '', bG['doubleSided'] ? '#define\x20DOUBLE_SIDED' : '', bG['flipSided'] ? '#define\x20FLIP_SIDED' : '', bG['shadowMapEnabled'] ? '#define\x20USE_SHADOWMAP' : '', bG['shadowMapEnabled'] ? '#define\x20' + bN : '', bG['premultipliedAlpha'] ? '#define\x20PREMULTIPLIED_ALPHA' : '', bG['physicallyCorrectLights'] ? '#define\x20PHYSICALLY_CORRECT_LIGHTS' : '', bG['logarithmicDepthBuffer'] ? '#define\x20USE_LOGDEPTHBUF' : '', bG['logarithmicDepthBuffer'] && (bH['isWebGL2'] || bg['get']('EXT_frag_depth')) ? '#define\x20USE_LOGDEPTHBUF_EXT' : '', bG['envMap'] && (bH['isWebGL2'] || bg['get']('EXT_shader_texture_lod')) ? '#define\x20TEXTURE_LOD_EXT' : '', 'uniform\x20mat4\x20viewMatrix;', 'uniform\x20vec3\x20cameraPosition;', bG['toneMapping'] !== cy ? '#define\x20TONE_MAPPING' : '', bG['toneMapping'] !== cy ? vP['tonemapping_pars_fragment'] : '', bG['toneMapping'] !== cy ? Wo('toneMapping', bG['toneMapping']) : '', bG['dithering'] ? '#define\x20DITHERING' : '', bG['outputEncoding'] || bG['mapEncoding'] || bG['matcapEncoding'] || bG['envMapEncoding'] || bG['emissiveMapEncoding'] ? vP['encodings_pars_fragment'] : '', bG['mapEncoding'] ? Wk('mapTexelToLinear', bG['mapEncoding']) : '', bG['matcapEncoding'] ? Wk('matcapTexelToLinear', bG['matcapEncoding']) : '', bG['envMapEncoding'] ? Wk('envMapTexelToLinear', bG['envMapEncoding']) : '', bG['emissiveMapEncoding'] ? Wk('emissiveMapTexelToLinear', bG['emissiveMapEncoding']) : '', bG['outputEncoding'] ? (bV = 'linearToOutputTexel',
            bW = bG['outputEncoding'],
            bX = Wi(bW),
            'vec4\x20' + bV + '(\x20vec4\x20value\x20)\x20{\x20return\x20LinearTo' + bX[0x0] + bX[0x1] + ';\x20}') : '', bG['depthPacking'] ? '#define\x20DEPTH_PACKING\x20' + bi['depthPacking'] : '', '\x0a']['filter'](Ws)['join']('\x0a')),
            bL = Wx(bL = Wu(bL = WA(bL), bG), bG),
            bM = Wx(bM = Wu(bM = WA(bM), bG), bG),
            bL = WF(bL),
            bM = WF(bM),
            bH['isWebGL2'] && !bi['isRawShaderMaterial']) {
                var c2 = !0x1
                  , c3 = /^\s*#version\s+300\s+es\s*\n/;
                bi['isShaderMaterial'] && null !== bL['match'](c3) && null !== bM['match'](c3) && (c2 = !0x0,
                bL = bL['replace'](c3, ''),
                bM = bM['replace'](c3, '')),
                bT = ['#version\x20300\x20es\x0a', '#define\x20attribute\x20in', '#define\x20varying\x20out', '#define\x20texture2D\x20texture']['join']('\x0a') + '\x0a' + bT,
                bU = ['#version\x20300\x20es\x0a', '#define\x20varying\x20in', c2 ? '' : 'out\x20highp\x20vec4\x20pc_fragColor;', c2 ? '' : '#define\x20gl_FragColor\x20pc_fragColor', '#define\x20gl_FragDepthEXT\x20gl_FragDepth', '#define\x20texture2D\x20texture', '#define\x20textureCube\x20texture', '#define\x20texture2DProj\x20textureProj', '#define\x20texture2DLodEXT\x20textureLod', '#define\x20texture2DProjLodEXT\x20textureProjLod', '#define\x20textureCubeLodEXT\x20textureLod', '#define\x20texture2DGradEXT\x20textureGrad', '#define\x20texture2DProjGradEXT\x20textureProjGrad', '#define\x20textureCubeGradEXT\x20textureGrad']['join']('\x0a') + '\x0a' + bU;
            }
            var c4, c5, c6 = bU + bM, c7 = VL(bJ, 0x8b31, bT + bL, bf['debug']['checkShaderErrors']), c8 = VL(bJ, 0x8b30, c6, bf['debug']['checkShaderErrors']);
            if (bJ['attachShader'](c1, c7),
            bJ['attachShader'](c1, c8),
            void 0x0 !== bi['index0AttributeName'] ? bJ['bindAttribLocation'](c1, 0x0, bi['index0AttributeName']) : !0x0 === bG['morphTargets'] && bJ['bindAttribLocation'](c1, 0x0, 'position'),
            bJ['linkProgram'](c1),
            bf['debug']['checkShaderErrors']) {
                var c9 = bJ['getProgramInfoLog'](c1)['trim']()
                  , ca = bJ['getShaderInfoLog'](c7)['trim']()
                  , cb = bJ['getShaderInfoLog'](c8)['trim']()
                  , cc = !0x0
                  , cd = !0x0;
                !0x1 === bJ['getProgramParameter'](c1, 0x8b82) ? (cc = !0x1,
                console['error']('THREE.WebGLProgram:\x20shader\x20error:\x20', bJ['getError'](), '35715', bJ['getProgramParameter'](c1, 0x8b83), 'gl.getProgramInfoLog', c9, ca, cb)) : '' !== c9 ? console['warn']('THREE.WebGLProgram:\x20gl.getProgramInfoLog()', c9) : '' !== ca && '' !== cb || (cd = !0x1),
                cd && (this['diagnostics'] = {
                    'runnable': cc,
                    'material': bi,
                    'programLog': c9,
                    'vertexShader': {
                        'log': ca,
                        'prefix': bT
                    },
                    'fragmentShader': {
                        'log': cb,
                        'prefix': bU
                    }
                });
            }
            return bJ['deleteShader'](c7),
            bJ['deleteShader'](c8),
            this['getUniforms'] = function() {
                return void 0x0 === c4 && (c4 = new VF(bJ,c1,bI)),
                c4;
            }
            ,
            this['getAttributes'] = function() {
                return void 0x0 === c5 && (c5 = function(bf, bg) {
                    for (var bh = {}, bi = bf['getProgramParameter'](bg, 0x8b89), bF = 0x0; bF < bi; bF++) {
                        var bG = bf['getActiveAttrib'](bg, bF)['name'];
                        bh[bG] = bf['getAttribLocation'](bg, bG);
                    }
                    return bh;
                }(bJ, c1)),
                c5;
            }
            ,
            this['destroy'] = function() {
                bJ['deleteProgram'](c1),
                this['program'] = void 0x0;
            }
            ,
            Object['defineProperties'](this, {
                'uniforms': {
                    'get': function() {
                        return console['warn']('THREE.WebGLProgram:\x20.uniforms\x20is\x20now\x20.getUniforms().'),
                        this['getUniforms']();
                    }
                },
                'attributes': {
                    'get': function() {
                        return console['warn']('THREE.WebGLProgram:\x20.attributes\x20is\x20now\x20.getAttributes().'),
                        this['getAttributes']();
                    }
                }
            }),
            this['name'] = bF['name'],
            this['id'] = Wh++,
            this['code'] = bh,
            this['usedTimes'] = 0x1,
            this['program'] = c1,
            this['vertexShader'] = c7,
            this['fragmentShader'] = c8,
            this;
        }
        function XC(bf, bg, bh, bi) {
            var bF = []
              , bG = {
                'MeshDepthMaterial': 'depth',
                'MeshDistanceMaterial': 'distanceRGBA',
                'MeshNormalMaterial': 'normal',
                'MeshBasicMaterial': 'basic',
                'MeshLambertMaterial': 'lambert',
                'MeshPhongMaterial': 'phong',
                'MeshToonMaterial': 'phong',
                'MeshStandardMaterial': 'physical',
                'MeshPhysicalMaterial': 'physical',
                'MeshMatcapMaterial': 'matcap',
                'LineBasicMaterial': 'basic',
                'LineDashedMaterial': 'dashed',
                'PointsMaterial': 'points',
                'ShadowMaterial': 'shadow',
                'SpriteMaterial': 'sprite'
            }
              , bH = ['precision', 'supportsVertexTextures', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'lightMap', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'fog', 'useFog', 'fogExp', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering'];
            function bI(bf, bg) {
                var bh;
                return bf ? bf['isTexture'] ? bh = bf['encoding'] : bf['isWebGLRenderTarget'] && (console['warn']('THREE.WebGLPrograms.getTextureEncodingFromMap:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'),
                bh = bf['texture']['encoding']) : bh = dQ,
                bh === dQ && bg && (bh = dS),
                bh;
            }
            this['getParameters'] = function(bg, bi, bF, bH, bJ, bK, bL) {
                var bM = bG[bg['type']]
                  , bN = bL['isSkinnedMesh'] ? function(bf) {
                    var bg = bf['skeleton']['bones'];
                    if (bh['floatVertexTextures'])
                        return 0x400;
                    var bi = bh['maxVertexUniforms']
                      , bF = Math['floor']((bi - 0x14) / 0x4)
                      , bG = Math['min'](bF, bg['length']);
                    return bG < bg['length'] ? (console['warn']('THREE.WebGLRenderer:\x20Skeleton\x20has\x20' + bg['length'] + '\x20bones.\x20This\x20GPU\x20supports\x20' + bG + '.'),
                    0x0) : bG;
                }(bL) : 0x0
                  , bO = bh['precision'];
                null !== bg['precision'] && (bO = bh['getMaxPrecision'](bg['precision'])) !== bg['precision'] && console['warn']('THREE.WebGLProgram.getParameters:', bg['precision'], 'not\x20supported,\x20using', bO, 'instead.');
                var bP = bf['getRenderTarget']();
                return {
                    'shaderID': bM,
                    'precision': bO,
                    'supportsVertexTextures': bh['vertexTextures'],
                    'outputEncoding': bI(bP ? bP['texture'] : null, bf['gammaOutput']),
                    'map': !!bg['map'],
                    'mapEncoding': bI(bg['map'], bf['gammaInput']),
                    'matcap': !!bg['matcap'],
                    'matcapEncoding': bI(bg['matcap'], bf['gammaInput']),
                    'envMap': !!bg['envMap'],
                    'envMapMode': bg['envMap'] && bg['envMap']['mapping'],
                    'envMapEncoding': bI(bg['envMap'], bf['gammaInput']),
                    'envMapCubeUV': !!bg['envMap'] && (bg['envMap']['mapping'] === cK || bg['envMap']['mapping'] === cL),
                    'lightMap': !!bg['lightMap'],
                    'aoMap': !!bg['aoMap'],
                    'emissiveMap': !!bg['emissiveMap'],
                    'emissiveMapEncoding': bI(bg['emissiveMap'], bf['gammaInput']),
                    'bumpMap': !!bg['bumpMap'],
                    'normalMap': !!bg['normalMap'],
                    'objectSpaceNormalMap': bg['normalMapType'] === e1,
                    'displacementMap': !!bg['displacementMap'],
                    'roughnessMap': !!bg['roughnessMap'],
                    'metalnessMap': !!bg['metalnessMap'],
                    'specularMap': !!bg['specularMap'],
                    'alphaMap': !!bg['alphaMap'],
                    'gradientMap': !!bg['gradientMap'],
                    'combine': bg['combine'],
                    'vertexTangents': bg['normalMap'] && bg['vertexTangents'],
                    'vertexColors': bg['vertexColors'],
                    'fog': !!bH,
                    'useFog': bg['fog'],
                    'fogExp': bH && bH['isFogExp2'],
                    'flatShading': bg['flatShading'],
                    'sizeAttenuation': bg['sizeAttenuation'],
                    'logarithmicDepthBuffer': bh['logarithmicDepthBuffer'],
                    'skinning': bg['skinning'] && bN > 0x0,
                    'maxBones': bN,
                    'useVertexTexture': bh['floatVertexTextures'],
                    'morphTargets': bg['morphTargets'],
                    'morphNormals': bg['morphNormals'],
                    'maxMorphTargets': bf['maxMorphTargets'],
                    'maxMorphNormals': bf['maxMorphNormals'],
                    'numDirLights': bi['directional']['length'],
                    'numPointLights': bi['point']['length'],
                    'numSpotLights': bi['spot']['length'],
                    'numRectAreaLights': bi['rectArea']['length'],
                    'numHemiLights': bi['hemi']['length'],
                    'numClippingPlanes': bJ,
                    'numClipIntersection': bK,
                    'dithering': bg['dithering'],
                    'shadowMapEnabled': bf['shadowMap']['enabled'] && bL['receiveShadow'] && bF['length'] > 0x0,
                    'shadowMapType': bf['shadowMap']['type'],
                    'toneMapping': bf['toneMapping'],
                    'physicallyCorrectLights': bf['physicallyCorrectLights'],
                    'premultipliedAlpha': bg['premultipliedAlpha'],
                    'alphaTest': bg['alphaTest'],
                    'doubleSided': bg['side'] === bV,
                    'flipSided': bg['side'] === bU,
                    'depthPacking': void 0x0 !== bg['depthPacking'] && bg['depthPacking']
                };
            }
            ,
            this['getProgramCode'] = function(bg, bh) {
                var bi = [];
                if (bh['shaderID'] ? bi['push'](bh['shaderID']) : (bi['push'](bg['fragmentShader']),
                bi['push'](bg['vertexShader'])),
                void 0x0 !== bg['defines'])
                    for (var bF in bg['defines'])
                        bi['push'](bF),
                        bi['push'](bg['defines'][bF]);
                for (var bG = 0x0; bG < bH['length']; bG++)
                    bi['push'](bh[bH[bG]]);
                return bi['push'](bg['onBeforeCompile']['toString']()),
                bi['push'](bf['gammaOutput']),
                bi['push'](bf['gammaFactor']),
                bi['join']();
            }
            ,
            this['acquireProgram'] = function(bG, bH, bI, bJ) {
                for (var bK, bL = 0x0, bM = bF['length']; bL < bM; bL++) {
                    var bN = bF[bL];
                    if (bN['code'] === bJ) {
                        ++(bK = bN)['usedTimes'];
                        break;
                    }
                }
                return void 0x0 === bK && (bK = new WN(bf,bg,bJ,bG,bH,bI,bh,bi),
                bF['push'](bK)),
                bK;
            }
            ,
            this['releaseProgram'] = function(bf) {
                if (0x0 == --bf['usedTimes']) {
                    var bg = bF['indexOf'](bf);
                    bF[bg] = bF[bF['length'] - 0x1],
                    bF['pop'](),
                    bf['destroy']();
                }
            }
            ,
            this['programs'] = bF;
        }
        function Yj() {
            var bf = new WeakMap();
            return {
                'get': function(bg) {
                    var bh = bf['get'](bg);
                    return void 0x0 === bh && (bh = {},
                    bf['set'](bg, bh)),
                    bh;
                },
                'remove': function(bg) {
                    bf['delete'](bg);
                },
                'update': function(bg, bh, bi) {
                    bf['get'](bg)[bh] = bi;
                },
                'dispose': function() {
                    bf = new WeakMap();
                }
            };
        }
        function Yr(bf, bg) {
            return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['program'] !== bg['program'] ? bf['program']['id'] - bg['program']['id'] : bf['material']['id'] !== bg['material']['id'] ? bf['material']['id'] - bg['material']['id'] : bf['z'] !== bg['z'] ? bf['z'] - bg['z'] : bf['id'] - bg['id'];
        }
        function Yu(bf, bg) {
            return bf['groupOrder'] !== bg['groupOrder'] ? bf['groupOrder'] - bg['groupOrder'] : bf['renderOrder'] !== bg['renderOrder'] ? bf['renderOrder'] - bg['renderOrder'] : bf['z'] !== bg['z'] ? bg['z'] - bf['z'] : bf['id'] - bg['id'];
        }
        function Yx() {
            var bf = []
              , bg = 0x0
              , bh = []
              , bi = []
              , bF = {
                'id': -0x1
            };
            function bG(bh, bi, bG, bH, bI, bJ) {
                var bK = bf[bg];
                return void 0x0 === bK ? (bK = {
                    'id': bh['id'],
                    'object': bh,
                    'geometry': bi,
                    'material': bG,
                    'program': bG['program'] || bF,
                    'groupOrder': bH,
                    'renderOrder': bh['renderOrder'],
                    'z': bI,
                    'group': bJ
                },
                bf[bg] = bK) : (bK['id'] = bh['id'],
                bK['object'] = bh,
                bK['geometry'] = bi,
                bK['material'] = bG,
                bK['program'] = bG['program'] || bF,
                bK['groupOrder'] = bH,
                bK['renderOrder'] = bh['renderOrder'],
                bK['z'] = bI,
                bK['group'] = bJ),
                bg++,
                bK;
            }
            return {
                'opaque': bh,
                'transparent': bi,
                'init': function() {
                    bg = 0x0,
                    bh['length'] = 0x0,
                    bi['length'] = 0x0;
                },
                'push': function(bf, bg, bF, bH, bI, bJ) {
                    var bK = bG(bf, bg, bF, bH, bI, bJ);
                    (!0x0 === bF['transparent'] ? bi : bh)['push'](bK);
                },
                'unshift': function(bf, bg, bF, bH, bI, bJ) {
                    var bK = bG(bf, bg, bF, bH, bI, bJ);
                    (!0x0 === bF['transparent'] ? bi : bh)['unshift'](bK);
                },
                'sort': function() {
                    bh['length'] > 0x1 && bh['sort'](Yr),
                    bi['length'] > 0x1 && bi['sort'](Yu);
                }
            };
        }
        function YZ() {
            var bf = {};
            function bg(bh) {
                var bi = bh['target'];
                bi['removeEventListener']('dispose', bg),
                delete bf[bi['id']];
            }
            return {
                'get': function(bh, bi) {
                    var bF, bG = bf[bh['id']];
                    return void 0x0 === bG ? (bF = new Yx(),
                    bf[bh['id']] = {},
                    bf[bh['id']][bi['id']] = bF,
                    bh['addEventListener']('dispose', bg)) : void 0x0 === (bF = bG[bi['id']]) && (bF = new Yx(),
                    bG[bi['id']] = bF),
                    bF;
                },
                'dispose': function() {
                    bf = {};
                }
            };
        }
        function Z8() {
            var bf = {};
            return {
                'get': function(bg) {
                    if (void 0x0 !== bf[bg['id']])
                        return bf[bg['id']];
                    var bh;
                    switch (bg['type']) {
                    case 'DirectionalLight':
                        bh = {
                            'direction': new eK(),
                            'color': new w7(),
                            'shadow': !0x1,
                            'shadowBias': 0x0,
                            'shadowRadius': 0x1,
                            'shadowMapSize': new eC()
                        };
                        break;
                    case 'SpotLight':
                        bh = {
                            'position': new eK(),
                            'direction': new eK(),
                            'color': new w7(),
                            'distance': 0x0,
                            'coneCos': 0x0,
                            'penumbraCos': 0x0,
                            'decay': 0x0,
                            'shadow': !0x1,
                            'shadowBias': 0x0,
                            'shadowRadius': 0x1,
                            'shadowMapSize': new eC()
                        };
                        break;
                    case 'PointLight':
                        bh = {
                            'position': new eK(),
                            'color': new w7(),
                            'distance': 0x0,
                            'decay': 0x0,
                            'shadow': !0x1,
                            'shadowBias': 0x0,
                            'shadowRadius': 0x1,
                            'shadowMapSize': new eC(),
                            'shadowCameraNear': 0x1,
                            'shadowCameraFar': 0x3e8
                        };
                        break;
                    case 'HemisphereLight':
                        bh = {
                            'direction': new eK(),
                            'skyColor': new w7(),
                            'groundColor': new w7()
                        };
                        break;
                    case 'RectAreaLight':
                        bh = {
                            'color': new w7(),
                            'position': new eK(),
                            'halfWidth': new eK(),
                            'halfHeight': new eK()
                        };
                    }
                    return bf[bg['id']] = bh,
                    bh;
                }
            };
        }
        var Zc = 0x0;
        function Zd() {
            for (var bf = new Z8(), bg = {
                'id': Zc++,
                'hash': {
                    'stateID': -0x1,
                    'directionalLength': -0x1,
                    'pointLength': -0x1,
                    'spotLength': -0x1,
                    'rectAreaLength': -0x1,
                    'hemiLength': -0x1,
                    'shadowsLength': -0x1
                },
                'ambient': [0x0, 0x0, 0x0],
                'probe': [],
                'directional': [],
                'directionalShadowMap': [],
                'directionalShadowMatrix': [],
                'spot': [],
                'spotShadowMap': [],
                'spotShadowMatrix': [],
                'rectArea': [],
                'point': [],
                'pointShadowMap': [],
                'pointShadowMatrix': [],
                'hemi': []
            }, bh = 0x0; bh < 0x9; bh++)
                bg['probe']['push'](new eK());
            var bi = new eK()
              , bF = new mR()
              , bG = new mR();
            return {
                'setup': function(bh, bH, bI) {
                    for (var bJ = 0x0, bK = 0x0, bL = 0x0, bM = 0x0; bM < 0x9; bM++)
                        bg['probe'][bM]['set'](0x0, 0x0, 0x0);
                    for (var bN = 0x0, bO = 0x0, bP = 0x0, bQ = 0x0, bR = 0x0, bS = bI['matrixWorldInverse'], bT = (bM = 0x0,
                    bh['length']); bM < bT; bM++) {
                        var bU = bh[bM]
                          , bV = bU['color']
                          , bW = bU['intensity']
                          , bX = bU['distance']
                          , bY = bU['shadow'] && bU['shadow']['map'] ? bU['shadow']['map']['texture'] : null;
                        if (bU['isAmbientLight'])
                            bJ += bV['r'] * bW,
                            bK += bV['g'] * bW,
                            bL += bV['b'] * bW;
                        else if (bU['isLightProbe'])
                            for (var bZ = 0x0; bZ < 0x9; bZ++)
                                bg['probe'][bZ]['addScaledVector'](bU['sh']['coefficients'][bZ], bW);
                        else if (bU['isDirectionalLight']) {
                            if ((c1 = bf['get'](bU))['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']),
                            c1['direction']['setFromMatrixPosition'](bU['matrixWorld']),
                            bi['setFromMatrixPosition'](bU['target']['matrixWorld']),
                            c1['direction']['sub'](bi),
                            c1['direction']['transformDirection'](bS),
                            c1['shadow'] = bU['castShadow'],
                            bU['castShadow']) {
                                var c0 = bU['shadow'];
                                c1['shadowBias'] = c0['bias'],
                                c1['shadowRadius'] = c0['radius'],
                                c1['shadowMapSize'] = c0['mapSize'];
                            }
                            bg['directionalShadowMap'][bN] = bY,
                            bg['directionalShadowMatrix'][bN] = bU['shadow']['matrix'],
                            bg['directional'][bN] = c1,
                            bN++;
                        } else if (bU['isSpotLight'])
                            (c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']),
                            c1['position']['applyMatrix4'](bS),
                            c1['color']['copy'](bV)['multiplyScalar'](bW),
                            c1['distance'] = bX,
                            c1['direction']['setFromMatrixPosition'](bU['matrixWorld']),
                            bi['setFromMatrixPosition'](bU['target']['matrixWorld']),
                            c1['direction']['sub'](bi),
                            c1['direction']['transformDirection'](bS),
                            c1['coneCos'] = Math['cos'](bU['angle']),
                            c1['penumbraCos'] = Math['cos'](bU['angle'] * (0x1 - bU['penumbra'])),
                            c1['decay'] = bU['decay'],
                            c1['shadow'] = bU['castShadow'],
                            bU['castShadow'] && (c0 = bU['shadow'],
                            c1['shadowBias'] = c0['bias'],
                            c1['shadowRadius'] = c0['radius'],
                            c1['shadowMapSize'] = c0['mapSize']),
                            bg['spotShadowMap'][bP] = bY,
                            bg['spotShadowMatrix'][bP] = bU['shadow']['matrix'],
                            bg['spot'][bP] = c1,
                            bP++;
                        else if (bU['isRectAreaLight'])
                            (c1 = bf['get'](bU))['color']['copy'](bV)['multiplyScalar'](bW),
                            c1['position']['setFromMatrixPosition'](bU['matrixWorld']),
                            c1['position']['applyMatrix4'](bS),
                            bG['identity'](),
                            bF['copy'](bU['matrixWorld']),
                            bF['premultiply'](bS),
                            bG['extractRotation'](bF),
                            c1['halfWidth']['set'](0.5 * bU['width'], 0x0, 0x0),
                            c1['halfHeight']['set'](0x0, 0.5 * bU['height'], 0x0),
                            c1['halfWidth']['applyMatrix4'](bG),
                            c1['halfHeight']['applyMatrix4'](bG),
                            bg['rectArea'][bQ] = c1,
                            bQ++;
                        else if (bU['isPointLight'])
                            (c1 = bf['get'](bU))['position']['setFromMatrixPosition'](bU['matrixWorld']),
                            c1['position']['applyMatrix4'](bS),
                            c1['color']['copy'](bU['color'])['multiplyScalar'](bU['intensity']),
                            c1['distance'] = bU['distance'],
                            c1['decay'] = bU['decay'],
                            c1['shadow'] = bU['castShadow'],
                            bU['castShadow'] && (c0 = bU['shadow'],
                            c1['shadowBias'] = c0['bias'],
                            c1['shadowRadius'] = c0['radius'],
                            c1['shadowMapSize'] = c0['mapSize'],
                            c1['shadowCameraNear'] = c0['camera']['near'],
                            c1['shadowCameraFar'] = c0['camera']['far']),
                            bg['pointShadowMap'][bO] = bY,
                            bg['pointShadowMatrix'][bO] = bU['shadow']['matrix'],
                            bg['point'][bO] = c1,
                            bO++;
                        else if (bU['isHemisphereLight']) {
                            var c1;
                            (c1 = bf['get'](bU))['direction']['setFromMatrixPosition'](bU['matrixWorld']),
                            c1['direction']['transformDirection'](bS),
                            c1['direction']['normalize'](),
                            c1['skyColor']['copy'](bU['color'])['multiplyScalar'](bW),
                            c1['groundColor']['copy'](bU['groundColor'])['multiplyScalar'](bW),
                            bg['hemi'][bR] = c1,
                            bR++;
                        }
                    }
                    bg['ambient'][0x0] = bJ,
                    bg['ambient'][0x1] = bK,
                    bg['ambient'][0x2] = bL,
                    bg['directional']['length'] = bN,
                    bg['spot']['length'] = bP,
                    bg['rectArea']['length'] = bQ,
                    bg['point']['length'] = bO,
                    bg['hemi']['length'] = bR,
                    bg['hash']['stateID'] = bg['id'],
                    bg['hash']['directionalLength'] = bN,
                    bg['hash']['pointLength'] = bO,
                    bg['hash']['spotLength'] = bP,
                    bg['hash']['rectAreaLength'] = bQ,
                    bg['hash']['hemiLength'] = bR,
                    bg['hash']['shadowsLength'] = bH['length'];
                },
                'state': bg
            };
        }
        function ZG() {
            var bf = new Zd()
              , bg = []
              , bh = [];
            return {
                'init': function() {
                    bg['length'] = 0x0,
                    bh['length'] = 0x0;
                },
                'state': {
                    'lightsArray': bg,
                    'shadowsArray': bh,
                    'lights': bf
                },
                'setupLights': function(bi) {
                    bf['setup'](bg, bh, bi);
                },
                'pushLight': function(bf) {
                    bg['push'](bf);
                },
                'pushShadow': function(bf) {
                    bh['push'](bf);
                }
            };
        }
        function ZN() {
            var bf = {};
            function bg(bh) {
                var bi = bh['target'];
                bi['removeEventListener']('dispose', bg),
                delete bf[bi['id']];
            }
            return {
                'get': function(bh, bi) {
                    var bF;
                    return void 0x0 === bf[bh['id']] ? (bF = new ZG(),
                    bf[bh['id']] = {},
                    bf[bh['id']][bi['id']] = bF,
                    bh['addEventListener']('dispose', bg)) : void 0x0 === bf[bh['id']][bi['id']] ? (bF = new ZG(),
                    bf[bh['id']][bi['id']] = bF) : bF = bf[bh['id']][bi['id']],
                    bF;
                },
                'dispose': function() {
                    bf = {};
                }
            };
        }
        function ZV(bf) {
            Kf['call'](this),
            this['type'] = 'MeshDepthMaterial',
            this['depthPacking'] = dY,
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['map'] = null,
            this['alphaMap'] = null,
            this['displacementMap'] = null,
            this['displacementScale'] = 0x1,
            this['displacementBias'] = 0x0,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['fog'] = !0x1,
            this['lights'] = !0x1,
            this['setValues'](bf);
        }
        function ZX(bf) {
            Kf['call'](this),
            this['type'] = 'MeshDistanceMaterial',
            this['referencePosition'] = new eK(),
            this['nearDistance'] = 0x1,
            this['farDistance'] = 0x3e8,
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['map'] = null,
            this['alphaMap'] = null,
            this['displacementMap'] = null,
            this['displacementScale'] = 0x1,
            this['displacementBias'] = 0x0,
            this['fog'] = !0x1,
            this['lights'] = !0x1,
            this['setValues'](bf);
        }
        function ZZ(bf, bg, bh) {
            for (var bi = new mK(), bF = new mR(), bG = new eC(), bH = new eC(bh,bh), bI = new eK(), bJ = new eK(), bK = 0x1, bL = 0x2, bM = 0x1 + (bK | bL), bN = new Array(bM), bO = new Array(bM), bP = {}, bQ = {
                0: bU,
                1: bT,
                2: bV
            }, bS = [new eK(0x1,0x0,0x0), new eK(-0x1,0x0,0x0), new eK(0x0,0x0,0x1), new eK(0x0,0x0,-0x1), new eK(0x0,0x1,0x0), new eK(0x0,-0x1,0x0)], bW = [new eK(0x0,0x1,0x0), new eK(0x0,0x1,0x0), new eK(0x0,0x1,0x0), new eK(0x0,0x1,0x0), new eK(0x0,0x0,0x1), new eK(0x0,0x0,-0x1)], bX = [new m7(), new m7(), new m7(), new m7(), new m7(), new m7()], bY = 0x0; bY !== bM; ++bY) {
                var bZ = 0x0 != (bY & bK)
                  , c0 = 0x0 != (bY & bL)
                  , c2 = new ZV({
                    'depthPacking': dZ,
                    'morphTargets': bZ,
                    'skinning': c0
                });
                bN[bY] = c2;
                var c3 = new ZX({
                    'morphTargets': bZ,
                    'skinning': c0
                });
                bO[bY] = c3;
            }
            var c4 = this;
            function c5(bg, bh, bi, bF, bG, bH) {
                var bI = bg['geometry']
                  , bJ = null
                  , bM = bN
                  , bR = bg['customDepthMaterial'];
                if (bi && (bM = bO,
                bR = bg['customDistanceMaterial']),
                bR)
                    bJ = bR;
                else {
                    var bS = !0x1;
                    bh['morphTargets'] && (bI && bI['isBufferGeometry'] ? bS = bI['morphAttributes'] && bI['morphAttributes']['position'] && bI['morphAttributes']['position']['length'] > 0x0 : bI && bI['isGeometry'] && (bS = bI['morphTargets'] && bI['morphTargets']['length'] > 0x0)),
                    bg['isSkinnedMesh'] && !0x1 === bh['skinning'] && console['warn']('THREE.WebGLShadowMap:\x20THREE.SkinnedMesh\x20with\x20material.skinning\x20set\x20to\x20false:', bg);
                    var bT = bg['isSkinnedMesh'] && bh['skinning']
                      , bU = 0x0;
                    bS && (bU |= bK),
                    bT && (bU |= bL),
                    bJ = bM[bU];
                }
                if (bf['localClippingEnabled'] && !0x0 === bh['clipShadows'] && 0x0 !== bh['clippingPlanes']['length']) {
                    var bV = bJ['uuid']
                      , bW = bh['uuid']
                      , bX = bP[bV];
                    void 0x0 === bX && (bX = {},
                    bP[bV] = bX);
                    var bY = bX[bW];
                    void 0x0 === bY && (bY = bJ['clone'](),
                    bX[bW] = bY),
                    bJ = bY;
                }
                return bJ['visible'] = bh['visible'],
                bJ['wireframe'] = bh['wireframe'],
                bJ['side'] = null != bh['shadowSide'] ? bh['shadowSide'] : bQ[bh['side']],
                bJ['clipShadows'] = bh['clipShadows'],
                bJ['clippingPlanes'] = bh['clippingPlanes'],
                bJ['clipIntersection'] = bh['clipIntersection'],
                bJ['wireframeLinewidth'] = bh['wireframeLinewidth'],
                bJ['linewidth'] = bh['linewidth'],
                bi && bJ['isMeshDistanceMaterial'] && (bJ['referencePosition']['copy'](bF),
                bJ['nearDistance'] = bG,
                bJ['farDistance'] = bH),
                bJ;
            }
            function c6(bh, bF, bG, bH) {
                if (!0x1 !== bh['visible']) {
                    if (bh['layers']['test'](bF['layers']) && (bh['isMesh'] || bh['isLine'] || bh['isPoints']) && bh['castShadow'] && (!bh['frustumCulled'] || bi['intersectsObject'](bh))) {
                        bh['modelViewMatrix']['multiplyMatrices'](bG['matrixWorldInverse'], bh['matrixWorld']);
                        var bI = bg['update'](bh)
                          , bK = bh['material'];
                        if (Array['isArray'](bK))
                            for (var bL = bI['groups'], bM = 0x0, bN = bL['length']; bM < bN; bM++) {
                                var bO = bL[bM]
                                  , bP = bK[bO['materialIndex']];
                                if (bP && bP['visible']) {
                                    var bQ = c5(bh, bP, bH, bJ, bG['near'], bG['far']);
                                    bf['renderBufferDirect'](bG, null, bI, bQ, bh, bO);
                                }
                            }
                        else if (bK['visible']) {
                            bQ = c5(bh, bK, bH, bJ, bG['near'], bG['far']);
                            bf['renderBufferDirect'](bG, null, bI, bQ, bh, null);
                        }
                    }
                    for (var bR = bh['children'], bS = 0x0, bT = bR['length']; bS < bT; bS++)
                        c6(bR[bS], bF, bG, bH);
                }
            }
            this['enabled'] = !0x1,
            this['autoUpdate'] = !0x0,
            this['needsUpdate'] = !0x1,
            this['type'] = bR,
            this['render'] = function(bg, bh, bK) {
                if (!0x1 !== c4['enabled'] && (!0x1 !== c4['autoUpdate'] || !0x1 !== c4['needsUpdate']) && 0x0 !== bg['length']) {
                    var bL, bM = bf['getRenderTarget'](), bN = bf['getActiveCubeFace'](), bO = bf['getActiveMipMapLevel'](), bP = bf['state'];
                    bP['setBlending'](c1),
                    bP['buffers']['color']['setClear'](0x1, 0x1, 0x1, 0x1),
                    bP['buffers']['depth']['setTest'](!0x0),
                    bP['setScissorTest'](!0x1);
                    for (var bQ = 0x0, bR = bg['length']; bQ < bR; bQ++) {
                        var bT = bg[bQ]
                          , bU = bT['shadow']
                          , bV = bT && bT['isPointLight'];
                        if (void 0x0 !== bU) {
                            var bY = bU['camera'];
                            if (bG['copy'](bU['mapSize']),
                            bG['min'](bH),
                            bV) {
                                var bZ = bG['x']
                                  , c0 = bG['y'];
                                bX[0x0]['set'](0x2 * bZ, c0, bZ, c0),
                                bX[0x1]['set'](0x0, c0, bZ, c0),
                                bX[0x2]['set'](0x3 * bZ, c0, bZ, c0),
                                bX[0x3]['set'](bZ, c0, bZ, c0),
                                bX[0x4]['set'](0x3 * bZ, 0x0, bZ, c0),
                                bX[0x5]['set'](bZ, 0x0, bZ, c0),
                                bG['x'] *= 0x4,
                                bG['y'] *= 0x2;
                            }
                            if (null === bU['map']) {
                                var c2 = {
                                    'minFilter': cP,
                                    'magFilter': cP,
                                    'format': d9
                                };
                                bU['map'] = new mc(bG['x'],bG['y'],c2),
                                bU['map']['texture']['name'] = bT['name'] + '.shadowMap',
                                bY['updateProjectionMatrix']();
                            }
                            bU['isSpotLightShadow'] && bU['update'](bT);
                            var c3 = bU['map']
                              , c5 = bU['matrix'];
                            bJ['setFromMatrixPosition'](bT['matrixWorld']),
                            bY['position']['copy'](bJ),
                            bV ? (bL = 0x6,
                            c5['makeTranslation'](-bJ['x'], -bJ['y'], -bJ['z'])) : (bL = 0x1,
                            bI['setFromMatrixPosition'](bT['target']['matrixWorld']),
                            bY['lookAt'](bI),
                            bY['updateMatrixWorld'](),
                            c5['set'](0.5, 0x0, 0x0, 0.5, 0x0, 0.5, 0x0, 0.5, 0x0, 0x0, 0.5, 0.5, 0x0, 0x0, 0x0, 0x1),
                            c5['multiply'](bY['projectionMatrix']),
                            c5['multiply'](bY['matrixWorldInverse'])),
                            bf['setRenderTarget'](c3),
                            bf['clear']();
                            for (var c7 = 0x0; c7 < bL; c7++) {
                                if (bV) {
                                    bI['copy'](bY['position']),
                                    bI['add'](bS[c7]),
                                    bY['up']['copy'](bW[c7]),
                                    bY['lookAt'](bI),
                                    bY['updateMatrixWorld']();
                                    var c8 = bX[c7];
                                    bP['viewport'](c8);
                                }
                                bF['multiplyMatrices'](bY['projectionMatrix'], bY['matrixWorldInverse']),
                                bi['setFromMatrix'](bF),
                                c6(bh, bK, bY, bV);
                            }
                        } else
                            console['warn']('THREE.WebGLShadowMap:', bT, 'has\x20no\x20shadow.');
                    }
                    c4['needsUpdate'] = !0x1,
                    bf['setRenderTarget'](bM, bN, bO);
                }
            }
            ;
        }
        function a1i(bf, bg, bh, bi) {
            var bF = new function() {
                var bg = !0x1
                  , bh = new m7()
                  , bi = null
                  , bF = new m7(0x0,0x0,0x0,0x0);
                return {
                    'setMask': function(bh) {
                        bi === bh || bg || (bf['colorMask'](bh, bh, bh, bh),
                        bi = bh);
                    },
                    'setLocked': function(bf) {
                        bg = bf;
                    },
                    'setClear': function(bg, bi, bG, bH, bI) {
                        !0x0 === bI && (bg *= bH,
                        bi *= bH,
                        bG *= bH),
                        bh['set'](bg, bi, bG, bH),
                        !0x1 === bF['equals'](bh) && (bf['clearColor'](bg, bi, bG, bH),
                        bF['copy'](bh));
                    },
                    'reset': function() {
                        bg = !0x1,
                        bi = null,
                        bF['set'](-0x1, 0x0, 0x0, 0x0);
                    }
                };
            }
            ()
              , bG = new function() {
                var bg = !0x1
                  , bh = null
                  , bi = null
                  , bF = null;
                return {
                    'setTest': function(bf) {
                        bf ? cy(0xb71) : cz(0xb71);
                    },
                    'setMask': function(bi) {
                        bh === bi || bg || (bf['depthMask'](bi),
                        bh = bi);
                    },
                    'setFunc': function(bg) {
                        if (bi !== bg) {
                            if (bg)
                                switch (bg) {
                                case cn:
                                    bf['depthFunc'](0x200);
                                    break;
                                case co:
                                    bf['depthFunc'](0x207);
                                    break;
                                case cp:
                                    bf['depthFunc'](0x201);
                                    break;
                                case cq:
                                    bf['depthFunc'](0x203);
                                    break;
                                case cr:
                                    bf['depthFunc'](0x202);
                                    break;
                                case cs:
                                    bf['depthFunc'](0x206);
                                    break;
                                case ct:
                                    bf['depthFunc'](0x204);
                                    break;
                                case cu:
                                    bf['depthFunc'](0x205);
                                    break;
                                default:
                                    bf['depthFunc'](0x203);
                                }
                            else
                                bf['depthFunc'](0x203);
                            bi = bg;
                        }
                    },
                    'setLocked': function(bf) {
                        bg = bf;
                    },
                    'setClear': function(bg) {
                        bF !== bg && (bf['clearDepth'](bg),
                        bF = bg);
                    },
                    'reset': function() {
                        bg = !0x1,
                        bh = null,
                        bi = null,
                        bF = null;
                    }
                };
            }
            ()
              , bH = new function() {
                var bg = !0x1
                  , bh = null
                  , bi = null
                  , bF = null
                  , bG = null
                  , bH = null
                  , bI = null
                  , bJ = null
                  , bK = null;
                return {
                    'setTest': function(bf) {
                        bf ? cy(0xb90) : cz(0xb90);
                    },
                    'setMask': function(bi) {
                        bh === bi || bg || (bf['stencilMask'](bi),
                        bh = bi);
                    },
                    'setFunc': function(bg, bh, bH) {
                        bi === bg && bF === bh && bG === bH || (bf['stencilFunc'](bg, bh, bH),
                        bi = bg,
                        bF = bh,
                        bG = bH);
                    },
                    'setOp': function(bg, bh, bi) {
                        bH === bg && bI === bh && bJ === bi || (bf['stencilOp'](bg, bh, bi),
                        bH = bg,
                        bI = bh,
                        bJ = bi);
                    },
                    'setLocked': function(bf) {
                        bg = bf;
                    },
                    'setClear': function(bg) {
                        bK !== bg && (bf['clearStencil'](bg),
                        bK = bg);
                    },
                    'reset': function() {
                        bg = !0x1,
                        bh = null,
                        bi = null,
                        bF = null,
                        bG = null,
                        bH = null,
                        bI = null,
                        bJ = null,
                        bK = null;
                    }
                };
            }
            ()
              , bI = bf['getParameter'](0x8869)
              , bJ = new Uint8Array(bI)
              , bN = new Uint8Array(bI)
              , bO = new Uint8Array(bI)
              , bP = {}
              , bQ = null
              , bR = null
              , bS = null
              , bT = null
              , bW = null
              , bX = null
              , bY = null
              , bZ = null
              , c0 = null
              , c8 = null
              , c9 = !0x1
              , ca = null
              , cb = null
              , cc = null
              , cd = null
              , ce = null
              , cf = bf['getParameter'](0x8b4d)
              , cg = !0x1
              , ch = 0x0
              , ci = bf['getParameter'](0x1f02);
            -0x1 !== ci['indexOf']('WebGL') ? (ch = parseFloat(/^WebGL\ ([0-9])/['exec'](ci)[0x1]),
            cg = ch >= 0x1) : -0x1 !== ci['indexOf']('OpenGL\x20ES') && (ch = parseFloat(/^OpenGL\ ES\ ([0-9])/['exec'](ci)[0x1]),
            cg = ch >= 0x2);
            var cj = null
              , ck = {}
              , cl = new m7()
              , cm = new m7();
            function cv(bg, bh, bi) {
                var bF = new Uint8Array(0x4)
                  , bG = bf['createTexture']();
                bf['bindTexture'](bg, bG),
                bf['texParameteri'](bg, 0x2801, 0x2600),
                bf['texParameteri'](bg, 0x2800, 0x2600);
                for (var bH = 0x0; bH < bi; bH++)
                    bf['texImage2D'](bh + bH, 0x0, 0x1908, 0x1, 0x1, 0x0, 0x1908, 0x1401, bF);
                return bG;
            }
            var cw = {};
            function cx(bh, bF) {
                (bJ[bh] = 0x1,
                0x0 === bN[bh] && (bf['enableVertexAttribArray'](bh),
                bN[bh] = 0x1),
                bO[bh] !== bF) && ((bi['isWebGL2'] ? bf : bg['get']('ANGLE_instanced_arrays'))[bi['isWebGL2'] ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](bh, bF),
                bO[bh] = bF);
            }
            function cy(bg) {
                !0x0 !== bP[bg] && (bf['enable'](bg),
                bP[bg] = !0x0);
            }
            function cz(bg) {
                !0x1 !== bP[bg] && (bf['disable'](bg),
                bP[bg] = !0x1);
            }
            function cA(bg, bi, bF, bG, bH, bI, bJ, bK) {
                if (bg !== c1) {
                    if (bS || (cy(0xbe2),
                    bS = !0x0),
                    bg === c6)
                        bH = bH || bi,
                        bI = bI || bF,
                        bJ = bJ || bG,
                        bi === bW && bH === bZ || (bf['blendEquationSeparate'](bh['convert'](bi), bh['convert'](bH)),
                        bW = bi,
                        bZ = bH),
                        bF === bX && bG === bY && bI === c0 && bJ === c8 || (bf['blendFuncSeparate'](bh['convert'](bF), bh['convert'](bG), bh['convert'](bI), bh['convert'](bJ)),
                        bX = bF,
                        bY = bG,
                        c0 = bI,
                        c8 = bJ),
                        bT = bg,
                        c9 = null;
                    else if (bg !== bT || bK !== c9) {
                        if (bW === c7 && bZ === c7 || (bf['blendEquation'](0x8006),
                        bW = c7,
                        bZ = c7),
                        bK)
                            switch (bg) {
                            case c2:
                                bf['blendFuncSeparate'](0x1, 0x303, 0x1, 0x303);
                                break;
                            case c3:
                                bf['blendFunc'](0x1, 0x1);
                                break;
                            case c4:
                                bf['blendFuncSeparate'](0x0, 0x0, 0x301, 0x303);
                                break;
                            case c5:
                                bf['blendFuncSeparate'](0x0, 0x300, 0x0, 0x302);
                                break;
                            default:
                                console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
                            }
                        else
                            switch (bg) {
                            case c2:
                                bf['blendFuncSeparate'](0x302, 0x303, 0x1, 0x303);
                                break;
                            case c3:
                                bf['blendFunc'](0x302, 0x1);
                                break;
                            case c4:
                                bf['blendFunc'](0x0, 0x301);
                                break;
                            case c5:
                                bf['blendFunc'](0x0, 0x300);
                                break;
                            default:
                                console['error']('THREE.WebGLState:\x20Invalid\x20blending:\x20', bg);
                            }
                        bX = null,
                        bY = null,
                        c0 = null,
                        c8 = null,
                        bT = bg,
                        c9 = bK;
                    }
                } else
                    bS && (cz(0xbe2),
                    bS = !0x1);
            }
            function cB(bg) {
                ca !== bg && (bg ? bf['frontFace'](0x900) : bf['frontFace'](0x901),
                ca = bg);
            }
            function cC(bg) {
                bg !== bK ? (cy(0xb44),
                bg !== cb && (bg === bL ? bf['cullFace'](0x405) : bg === bM ? bf['cullFace'](0x404) : bf['cullFace'](0x408))) : cz(0xb44),
                cb = bg;
            }
            function cD(bg, bh, bi) {
                bg ? (cy(0x8037),
                cd === bh && ce === bi || (bf['polygonOffset'](bh, bi),
                cd = bh,
                ce = bi)) : cz(0x8037);
            }
            function cE(bg) {
                void 0x0 === bg && (bg = 0x84c0 + cf - 0x1),
                cj !== bg && (bf['activeTexture'](bg),
                cj = bg);
            }
            return cw[0xde1] = cv(0xde1, 0xde1, 0x1),
            cw[0x8513] = cv(0x8513, 0x8515, 0x6),
            bF['setClear'](0x0, 0x0, 0x0, 0x1),
            bG['setClear'](0x1),
            bH['setClear'](0x0),
            cy(0xb71),
            bG['setFunc'](cq),
            cB(!0x1),
            cC(bL),
            cy(0xb44),
            cA(c1),
            {
                'buffers': {
                    'color': bF,
                    'depth': bG,
                    'stencil': bH
                },
                'initAttributes': function() {
                    for (var bf = 0x0, bg = bJ['length']; bf < bg; bf++)
                        bJ[bf] = 0x0;
                },
                'enableAttribute': function(bf) {
                    cx(bf, 0x0);
                },
                'enableAttributeAndDivisor': cx,
                'disableUnusedAttributes': function() {
                    for (var bg = 0x0, bh = bN['length']; bg !== bh; ++bg)
                        bN[bg] !== bJ[bg] && (bf['disableVertexAttribArray'](bg),
                        bN[bg] = 0x0);
                },
                'enable': cy,
                'disable': cz,
                'getCompressedTextureFormats': function() {
                    if (null === bQ && (bQ = [],
                    bg['get']('WEBGL_compressed_texture_pvrtc') || bg['get']('WEBGL_compressed_texture_s3tc') || bg['get']('WEBGL_compressed_texture_etc1') || bg['get']('WEBGL_compressed_texture_astc')))
                        for (var bh = bf['getParameter'](0x86a3), bi = 0x0; bi < bh['length']; bi++)
                            bQ['push'](bh[bi]);
                    return bQ;
                },
                'useProgram': function(bg) {
                    return bR !== bg && (bf['useProgram'](bg),
                    bR = bg,
                    !0x0);
                },
                'setBlending': cA,
                'setMaterial': function(bf, bg) {
                    bf['side'] === bV ? cz(0xb44) : cy(0xb44);
                    var bh = bf['side'] === bU;
                    bg && (bh = !bh),
                    cB(bh),
                    bf['blending'] === c2 && !0x1 === bf['transparent'] ? cA(c1) : cA(bf['blending'], bf['blendEquation'], bf['blendSrc'], bf['blendDst'], bf['blendEquationAlpha'], bf['blendSrcAlpha'], bf['blendDstAlpha'], bf['premultipliedAlpha']),
                    bG['setFunc'](bf['depthFunc']),
                    bG['setTest'](bf['depthTest']),
                    bG['setMask'](bf['depthWrite']),
                    bF['setMask'](bf['colorWrite']),
                    cD(bf['polygonOffset'], bf['polygonOffsetFactor'], bf['polygonOffsetUnits']);
                },
                'setFlipSided': cB,
                'setCullFace': cC,
                'setLineWidth': function(bg) {
                    bg !== cc && (cg && bf['lineWidth'](bg),
                    cc = bg);
                },
                'setPolygonOffset': cD,
                'setScissorTest': function(bf) {
                    bf ? cy(0xc11) : cz(0xc11);
                },
                'activeTexture': cE,
                'bindTexture': function(bg, bh) {
                    null === cj && cE();
                    var bi = ck[cj];
                    void 0x0 === bi && (bi = {
                        'type': void 0x0,
                        'texture': void 0x0
                    },
                    ck[cj] = bi),
                    bi['type'] === bg && bi['texture'] === bh || (bf['bindTexture'](bg, bh || cw[bg]),
                    bi['type'] = bg,
                    bi['texture'] = bh);
                },
                'compressedTexImage2D': function() {
                    try {
                        bf['compressedTexImage2D']['apply'](bf, arguments);
                    } catch (a3k) {
                        console['error']('THREE.WebGLState:', a3k);
                    }
                },
                'texImage2D': function() {
                    try {
                        bf['texImage2D']['apply'](bf, arguments);
                    } catch (a3l) {
                        console['error']('THREE.WebGLState:', a3l);
                    }
                },
                'texImage3D': function() {
                    try {
                        bf['texImage3D']['apply'](bf, arguments);
                    } catch (a3m) {
                        console['error']('THREE.WebGLState:', a3m);
                    }
                },
                'scissor': function(bg) {
                    !0x1 === cl['equals'](bg) && (bf['scissor'](bg['x'], bg['y'], bg['z'], bg['w']),
                    cl['copy'](bg));
                },
                'viewport': function(bg) {
                    !0x1 === cm['equals'](bg) && (bf['viewport'](bg['x'], bg['y'], bg['z'], bg['w']),
                    cm['copy'](bg));
                },
                'reset': function() {
                    for (var bg = 0x0; bg < bN['length']; bg++)
                        0x1 === bN[bg] && (bf['disableVertexAttribArray'](bg),
                        bN[bg] = 0x0);
                    bP = {},
                    bQ = null,
                    cj = null,
                    ck = {},
                    bR = null,
                    bT = null,
                    ca = null,
                    cb = null,
                    bF['reset'](),
                    bG['reset'](),
                    bH['reset']();
                }
            };
        }
        function a3q(bf, bg, bh, bi, bF, bG, bH) {
            var bI, bJ = {}, bK = 'undefined' != typeof OffscreenCanvas;
            function bL(bf, bg) {
                return bK ? new OffscreenCanvas(bf,bg) : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas');
            }
            function bM(bf, bg, bh, bi) {
                var bF = 0x1;
                if ((bf['width'] > bi || bf['height'] > bi) && (bF = bi / Math['max'](bf['width'], bf['height'])),
                bF < 0x1 || !0x0 === bg) {
                    if ('undefined' != typeof HTMLImageElement && bf instanceof HTMLImageElement || 'undefined' != typeof HTMLCanvasElement && bf instanceof HTMLCanvasElement || 'undefined' != typeof ImageBitmap && bf instanceof ImageBitmap) {
                        var bG = bg ? e2['floorPowerOfTwo'] : Math['floor']
                          , bH = bG(bF * bf['width'])
                          , bJ = bG(bF * bf['height']);
                        void 0x0 === bI && (bI = bL(bH, bJ));
                        var bK = bh ? bL(bH, bJ) : bI;
                        return bK['width'] = bH,
                        bK['height'] = bJ,
                        bK['getContext']('2d')['drawImage'](bf, 0x0, 0x0, bH, bJ),
                        console['warn']('THREE.WebGLRenderer:\x20Texture\x20has\x20been\x20resized\x20from\x20(' + bf['width'] + 'x' + bf['height'] + ')\x20to\x20(' + bH + 'x' + bJ + ').'),
                        bK;
                    }
                    return 'data'in bf && console['warn']('THREE.WebGLRenderer:\x20Image\x20in\x20DataTexture\x20is\x20too\x20big\x20(' + bf['width'] + 'x' + bf['height'] + ').'),
                    bf;
                }
                return bf;
            }
            function bN(bf) {
                return e2['isPowerOfTwo'](bf['width']) && e2['isPowerOfTwo'](bf['height']);
            }
            function bO(bf, bg) {
                return bf['generateMipmaps'] && bg && bf['minFilter'] !== cP && bf['minFilter'] !== cS;
            }
            function bP(bg, bh, bF, bG) {
                bf['generateMipmap'](bg),
                bi['get'](bh)['__maxMipLevel'] = Math['log'](Math['max'](bF, bG)) * Math['LOG2E'];
            }
            function bQ(bf, bh) {
                if (!bF['isWebGL2'])
                    return bf;
                var bi = bf;
                return 0x1903 === bf && (0x1406 === bh && (bi = 0x822e),
                0x140b === bh && (bi = 0x822d),
                0x1401 === bh && (bi = 0x8229)),
                0x1907 === bf && (0x1406 === bh && (bi = 0x8815),
                0x140b === bh && (bi = 0x881b),
                0x1401 === bh && (bi = 0x8051)),
                0x1908 === bf && (0x1406 === bh && (bi = 0x8814),
                0x140b === bh && (bi = 0x881a),
                0x1401 === bh && (bi = 0x8058)),
                0x822d === bi || 0x822e === bi || 0x881a === bi || 0x8814 === bi ? bg['get']('EXT_color_buffer_float') : 0x881b !== bi && 0x8815 !== bi || console['warn']('THREE.WebGLRenderer:\x20Floating\x20point\x20textures\x20with\x20RGB\x20format\x20not\x20supported.\x20Please\x20use\x20RGBA\x20instead.'),
                bi;
            }
            function bR(bf) {
                return bf === cP || bf === cQ || bf === cR ? 0x2600 : 0x2601;
            }
            function bS(bg) {
                var bh = bg['target'];
                bh['removeEventListener']('dispose', bS),
                function(bg) {
                    var bh = bi['get'](bg);
                    if (void 0x0 === bh['__webglInit'])
                        return;
                    bf['deleteTexture'](bh['__webglTexture']),
                    bi['remove'](bg);
                }(bh),
                bh['isVideoTexture'] && delete bJ[bh['id']],
                bH['memory']['textures']--;
            }
            function bT(bg) {
                var bh = bg['target'];
                bh['removeEventListener']('dispose', bT),
                function(bg) {
                    var bh = bi['get'](bg)
                      , bF = bi['get'](bg['texture']);
                    if (!bg)
                        return;
                    void 0x0 !== bF['__webglTexture'] && bf['deleteTexture'](bF['__webglTexture']);
                    bg['depthTexture'] && bg['depthTexture']['dispose']();
                    if (bg['isWebGLRenderTargetCube'])
                        for (var bG = 0x0; bG < 0x6; bG++)
                            bf['deleteFramebuffer'](bh['__webglFramebuffer'][bG]),
                            bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer'][bG]);
                    else
                        bf['deleteFramebuffer'](bh['__webglFramebuffer']),
                        bh['__webglDepthbuffer'] && bf['deleteRenderbuffer'](bh['__webglDepthbuffer']);
                    bi['remove'](bg['texture']),
                    bi['remove'](bg);
                }(bh),
                bH['memory']['textures']--;
            }
            var bU = 0x0;
            function bV(bf, bg) {
                var bF = bi['get'](bf);
                if (bf['isVideoTexture'] && function(bf) {
                    var bg = bf['id']
                      , bh = bH['render']['frame'];
                    bJ[bg] !== bh && (bJ[bg] = bh,
                    bf['update']());
                }(bf),
                bf['version'] > 0x0 && bF['__version'] !== bf['version']) {
                    var bG = bf['image'];
                    if (void 0x0 === bG)
                        console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20undefined');
                    else {
                        if (!0x1 !== bG['complete'])
                            return void c0(bF, bf, bg);
                        console['warn']('THREE.WebGLRenderer:\x20Texture\x20marked\x20for\x20update\x20but\x20image\x20is\x20incomplete');
                    }
                }
                bh['activeTexture'](0x84c0 + bg),
                bh['bindTexture'](0xde1, bF['__webglTexture']);
            }
            function bW(bg, bH) {
                var bI = bi['get'](bg);
                if (0x6 === bg['image']['length'])
                    if (bg['version'] > 0x0 && bI['__version'] !== bg['version']) {
                        bZ(bI, bg),
                        bh['activeTexture'](0x84c0 + bH),
                        bh['bindTexture'](0x8513, bI['__webglTexture']),
                        bf['pixelStorei'](0x9240, bg['flipY']);
                        for (var bJ = bg && bg['isCompressedTexture'], bK = bg['image'][0x0] && bg['image'][0x0]['isDataTexture'], bL = [], bR = 0x0; bR < 0x6; bR++)
                            bL[bR] = bJ || bK ? bK ? bg['image'][bR]['image'] : bg['image'][bR] : bM(bg['image'][bR], !0x1, !0x0, bF['maxCubemapSize']);
                        var bS = bL[0x0]
                          , bT = bN(bS) || bF['isWebGL2']
                          , bU = bG['convert'](bg['format'])
                          , bV = bG['convert'](bg['type'])
                          , bW = bQ(bU, bV);
                        bY(0x8513, bg, bT);
                        for (bR = 0x0; bR < 0x6; bR++)
                            if (bJ)
                                for (var bX, c0 = bL[bR]['mipmaps'], c1 = 0x0, c2 = c0['length']; c1 < c2; c1++)
                                    bX = c0[c1],
                                    bg['format'] !== d9 && bg['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bU) > -0x1 ? bh['compressedTexImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bX['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.setTextureCube()') : bh['texImage2D'](0x8515 + bR, c1, bW, bX['width'], bX['height'], 0x0, bU, bV, bX['data']);
                            else
                                bK ? bh['texImage2D'](0x8515 + bR, 0x0, bW, bL[bR]['width'], bL[bR]['height'], 0x0, bU, bV, bL[bR]['data']) : bh['texImage2D'](0x8515 + bR, 0x0, bW, bU, bV, bL[bR]);
                        bI['__maxMipLevel'] = bJ ? c0['length'] - 0x1 : 0x0,
                        bO(bg, bT) && bP(0x8513, bg, bS['width'], bS['height']),
                        bI['__version'] = bg['version'],
                        bg['onUpdate'] && bg['onUpdate'](bg);
                    } else
                        bh['activeTexture'](0x84c0 + bH),
                        bh['bindTexture'](0x8513, bI['__webglTexture']);
            }
            function bX(bf, bg) {
                bh['activeTexture'](0x84c0 + bg),
                bh['bindTexture'](0x8513, bi['get'](bf)['__webglTexture']);
            }
            function bY(bh, bH, bI) {
                var bJ;
                if (bI ? (bf['texParameteri'](bh, 0x2802, bG['convert'](bH['wrapS'])),
                bf['texParameteri'](bh, 0x2803, bG['convert'](bH['wrapT'])),
                0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, bG['convert'](bH['wrapR'])),
                bf['texParameteri'](bh, 0x2800, bG['convert'](bH['magFilter'])),
                bf['texParameteri'](bh, 0x2801, bG['convert'](bH['minFilter']))) : (bf['texParameteri'](bh, 0x2802, 0x812f),
                bf['texParameteri'](bh, 0x2803, 0x812f),
                0x806f !== bh && 0x8c1a !== bh || bf['texParameteri'](bh, 0x8072, 0x812f),
                bH['wrapS'] === cN && bH['wrapT'] === cN || console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.wrapS\x20and\x20Texture.wrapT\x20should\x20be\x20set\x20to\x20THREE.ClampToEdgeWrapping.'),
                bf['texParameteri'](bh, 0x2800, bR(bH['magFilter'])),
                bf['texParameteri'](bh, 0x2801, bR(bH['minFilter'])),
                bH['minFilter'] !== cP && bH['minFilter'] !== cS && console['warn']('THREE.WebGLRenderer:\x20Texture\x20is\x20not\x20power\x20of\x20two.\x20Texture.minFilter\x20should\x20be\x20set\x20to\x20THREE.NearestFilter\x20or\x20THREE.LinearFilter.')),
                bJ = bg['get']('EXT_texture_filter_anisotropic')) {
                    if (bH['type'] === d1 && null === bg['get']('OES_texture_float_linear'))
                        return;
                    if (bH['type'] === d2 && null === (bF['isWebGL2'] || bg['get']('OES_texture_half_float_linear')))
                        return;
                    (bH['anisotropy'] > 0x1 || bi['get'](bH)['__currentAnisotropy']) && (bf['texParameterf'](bh, bJ['TEXTURE_MAX_ANISOTROPY_EXT'], Math['min'](bH['anisotropy'], bF['getMaxAnisotropy']())),
                    bi['get'](bH)['__currentAnisotropy'] = bH['anisotropy']);
                }
            }
            function bZ(bg, bh) {
                void 0x0 === bg['__webglInit'] && (bg['__webglInit'] = !0x0,
                bh['addEventListener']('dispose', bS),
                bg['__webglTexture'] = bf['createTexture'](),
                bH['memory']['textures']++);
            }
            function c0(bg, bi, bH) {
                var bI = 0xde1;
                bi['isDataTexture2DArray'] && (bI = 0x8c1a),
                bi['isDataTexture3D'] && (bI = 0x806f),
                bZ(bg, bi),
                bh['activeTexture'](0x84c0 + bH),
                bh['bindTexture'](bI, bg['__webglTexture']),
                bf['pixelStorei'](0x9240, bi['flipY']),
                bf['pixelStorei'](0x9241, bi['premultiplyAlpha']),
                bf['pixelStorei'](0xcf5, bi['unpackAlignment']);
                var bJ = function(bf) {
                    return !bF['isWebGL2'] && (bf['wrapS'] !== cN || bf['wrapT'] !== cN || bf['minFilter'] !== cP && bf['minFilter'] !== cS);
                }(bi) && !0x1 === bN(bi['image'])
                  , bK = bM(bi['image'], bJ, !0x1, bF['maxTextureSize'])
                  , bL = bN(bK) || bF['isWebGL2']
                  , bR = bG['convert'](bi['format'])
                  , bS = bG['convert'](bi['type'])
                  , bT = bQ(bR, bS);
                bY(bI, bi, bL);
                var bU, bV = bi['mipmaps'];
                if (bi['isDepthTexture']) {
                    if (bT = 0x1902,
                    bi['type'] === d1) {
                        if (!bF['isWebGL2'])
                            throw new Error('Float\x20Depth\x20Texture\x20only\x20supported\x20in\x20WebGL2.0');
                        bT = 0x8cac;
                    } else
                        bF['isWebGL2'] && (bT = 0x81a5);
                    bi['format'] === dd && 0x1902 === bT && bi['type'] !== cY && bi['type'] !== d0 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedShortType\x20or\x20UnsignedIntType\x20for\x20DepthFormat\x20DepthTexture.'),
                    bi['type'] = cY,
                    bS = bG['convert'](bi['type'])),
                    bi['format'] === de && (bT = 0x84f9,
                    bi['type'] !== d6 && (console['warn']('THREE.WebGLRenderer:\x20Use\x20UnsignedInt248Type\x20for\x20DepthStencilFormat\x20DepthTexture.'),
                    bi['type'] = d6,
                    bS = bG['convert'](bi['type']))),
                    bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, null);
                } else if (bi['isDataTexture'])
                    if (bV['length'] > 0x0 && bL) {
                        for (var bW = 0x0, bX = bV['length']; bW < bX; bW++)
                            bU = bV[bW],
                            bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
                        bi['generateMipmaps'] = !0x1,
                        bg['__maxMipLevel'] = bV['length'] - 0x1;
                    } else
                        bh['texImage2D'](0xde1, 0x0, bT, bK['width'], bK['height'], 0x0, bR, bS, bK['data']),
                        bg['__maxMipLevel'] = 0x0;
                else if (bi['isCompressedTexture']) {
                    for (bW = 0x0,
                    bX = bV['length']; bW < bX; bW++)
                        bU = bV[bW],
                        bi['format'] !== d9 && bi['format'] !== d8 ? bh['getCompressedTextureFormats']()['indexOf'](bR) > -0x1 ? bh['compressedTexImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bU['data']) : console['warn']('THREE.WebGLRenderer:\x20Attempt\x20to\x20load\x20unsupported\x20compressed\x20texture\x20format\x20in\x20.uploadTexture()') : bh['texImage2D'](0xde1, bW, bT, bU['width'], bU['height'], 0x0, bR, bS, bU['data']);
                    bg['__maxMipLevel'] = bV['length'] - 0x1;
                } else if (bi['isDataTexture2DArray'])
                    bh['texImage3D'](0x8c1a, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']),
                    bg['__maxMipLevel'] = 0x0;
                else if (bi['isDataTexture3D'])
                    bh['texImage3D'](0x806f, 0x0, bT, bK['width'], bK['height'], bK['depth'], 0x0, bR, bS, bK['data']),
                    bg['__maxMipLevel'] = 0x0;
                else if (bV['length'] > 0x0 && bL) {
                    for (bW = 0x0,
                    bX = bV['length']; bW < bX; bW++)
                        bU = bV[bW],
                        bh['texImage2D'](0xde1, bW, bT, bR, bS, bU);
                    bi['generateMipmaps'] = !0x1,
                    bg['__maxMipLevel'] = bV['length'] - 0x1;
                } else
                    bh['texImage2D'](0xde1, 0x0, bT, bR, bS, bK),
                    bg['__maxMipLevel'] = 0x0;
                bO(bi, bL) && bP(0xde1, bi, bK['width'], bK['height']),
                bg['__version'] = bi['version'],
                bi['onUpdate'] && bi['onUpdate'](bi);
            }
            function c1(bg, bF, bH, bI) {
                var bJ = bG['convert'](bF['texture']['format'])
                  , bK = bG['convert'](bF['texture']['type'])
                  , bL = bQ(bJ, bK);
                bh['texImage2D'](bI, 0x0, bL, bF['width'], bF['height'], 0x0, bJ, bK, null),
                bf['bindFramebuffer'](0x8d40, bg),
                bf['framebufferTexture2D'](0x8d40, bH, bI, bi['get'](bF['texture'])['__webglTexture'], 0x0),
                bf['bindFramebuffer'](0x8d40, null);
            }
            function c2(bg, bh, bi) {
                if (bf['bindRenderbuffer'](0x8d41, bg),
                bh['depthBuffer'] && !bh['stencilBuffer']) {
                    if (bi) {
                        var bF = c4(bh);
                        bf['renderbufferStorageMultisample'](0x8d41, bF, 0x81a5, bh['width'], bh['height']);
                    } else
                        bf['renderbufferStorage'](0x8d41, 0x81a5, bh['width'], bh['height']);
                    bf['framebufferRenderbuffer'](0x8d40, 0x8d00, 0x8d41, bg);
                } else if (bh['depthBuffer'] && bh['stencilBuffer']) {
                    if (bi) {
                        bF = c4(bh);
                        bf['renderbufferStorageMultisample'](0x8d41, bF, 0x84f9, bh['width'], bh['height']);
                    } else
                        bf['renderbufferStorage'](0x8d41, 0x84f9, bh['width'], bh['height']);
                    bf['framebufferRenderbuffer'](0x8d40, 0x821a, 0x8d41, bg);
                } else {
                    var bH = bQ(bG['convert'](bh['texture']['format']), bG['convert'](bh['texture']['type']));
                    if (bi) {
                        bF = c4(bh);
                        bf['renderbufferStorageMultisample'](0x8d41, bF, bH, bh['width'], bh['height']);
                    } else
                        bf['renderbufferStorage'](0x8d41, bH, bh['width'], bh['height']);
                }
                bf['bindRenderbuffer'](0x8d41, null);
            }
            function c3(bg) {
                var bh = bi['get'](bg)
                  , bF = !0x0 === bg['isWebGLRenderTargetCube'];
                if (bg['depthTexture']) {
                    if (bF)
                        throw new Error('target.depthTexture\x20not\x20supported\x20in\x20Cube\x20render\x20targets');
                    !function(bg, bh) {
                        if (bh && bh['isWebGLRenderTargetCube'])
                            throw new Error('Depth\x20Texture\x20with\x20cube\x20render\x20targets\x20is\x20not\x20supported');
                        if (bf['bindFramebuffer'](0x8d40, bg),
                        !bh['depthTexture'] || !bh['depthTexture']['isDepthTexture'])
                            throw new Error('renderTarget.depthTexture\x20must\x20be\x20an\x20instance\x20of\x20THREE.DepthTexture');
                        bi['get'](bh['depthTexture'])['__webglTexture'] && bh['depthTexture']['image']['width'] === bh['width'] && bh['depthTexture']['image']['height'] === bh['height'] || (bh['depthTexture']['image']['width'] = bh['width'],
                        bh['depthTexture']['image']['height'] = bh['height'],
                        bh['depthTexture']['needsUpdate'] = !0x0),
                        bV(bh['depthTexture'], 0x0);
                        var bF = bi['get'](bh['depthTexture'])['__webglTexture'];
                        if (bh['depthTexture']['format'] === dd)
                            bf['framebufferTexture2D'](0x8d40, 0x8d00, 0xde1, bF, 0x0);
                        else {
                            if (bh['depthTexture']['format'] !== de)
                                throw new Error('Unknown\x20depthTexture\x20format');
                            bf['framebufferTexture2D'](0x8d40, 0x821a, 0xde1, bF, 0x0);
                        }
                    }(bh['__webglFramebuffer'], bg);
                } else if (bF) {
                    bh['__webglDepthbuffer'] = [];
                    for (var bG = 0x0; bG < 0x6; bG++)
                        bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer'][bG]),
                        bh['__webglDepthbuffer'][bG] = bf['createRenderbuffer'](),
                        c2(bh['__webglDepthbuffer'][bG], bg);
                } else
                    bf['bindFramebuffer'](0x8d40, bh['__webglFramebuffer']),
                    bh['__webglDepthbuffer'] = bf['createRenderbuffer'](),
                    c2(bh['__webglDepthbuffer'], bg);
                bf['bindFramebuffer'](0x8d40, null);
            }
            function c4(bf) {
                return bF['isWebGL2'] && bf['isWebGLMultisampleRenderTarget'] ? Math['min'](bF['maxSamples'], bf['samples']) : 0x0;
            }
            var c5 = !0x1
              , c6 = !0x1;
            this['allocateTextureUnit'] = function() {
                var bf = bU;
                return bf >= bF['maxTextures'] && console['warn']('THREE.WebGLTextures:\x20Trying\x20to\x20use\x20' + bf + '\x20texture\x20units\x20while\x20this\x20GPU\x20supports\x20only\x20' + bF['maxTextures']),
                bU += 0x1,
                bf;
            }
            ,
            this['resetTextureUnits'] = function() {
                bU = 0x0;
            }
            ,
            this['setTexture2D'] = bV,
            this['setTexture2DArray'] = function(bf, bg) {
                var bF = bi['get'](bf);
                bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg),
                bh['bindTexture'](0x8c1a, bF['__webglTexture']));
            }
            ,
            this['setTexture3D'] = function(bf, bg) {
                var bF = bi['get'](bf);
                bf['version'] > 0x0 && bF['__version'] !== bf['version'] ? c0(bF, bf, bg) : (bh['activeTexture'](0x84c0 + bg),
                bh['bindTexture'](0x806f, bF['__webglTexture']));
            }
            ,
            this['setTextureCube'] = bW,
            this['setTextureCubeDynamic'] = bX,
            this['setupRenderTarget'] = function(bg) {
                var bI = bi['get'](bg)
                  , bJ = bi['get'](bg['texture']);
                bg['addEventListener']('dispose', bT),
                bJ['__webglTexture'] = bf['createTexture'](),
                bH['memory']['textures']++;
                var bK = !0x0 === bg['isWebGLRenderTargetCube']
                  , bL = !0x0 === bg['isWebGLMultisampleRenderTarget']
                  , bM = bN(bg) || bF['isWebGL2'];
                if (bK) {
                    bI['__webglFramebuffer'] = [];
                    for (var bR = 0x0; bR < 0x6; bR++)
                        bI['__webglFramebuffer'][bR] = bf['createFramebuffer']();
                } else if (bI['__webglFramebuffer'] = bf['createFramebuffer'](),
                bL)
                    if (bF['isWebGL2']) {
                        bI['__webglMultisampledFramebuffer'] = bf['createFramebuffer'](),
                        bI['__webglColorRenderbuffer'] = bf['createRenderbuffer'](),
                        bf['bindRenderbuffer'](0x8d41, bI['__webglColorRenderbuffer']);
                        var bS = bQ(bG['convert'](bg['texture']['format']), bG['convert'](bg['texture']['type']))
                          , bU = c4(bg);
                        bf['renderbufferStorageMultisample'](0x8d41, bU, bS, bg['width'], bg['height']),
                        bf['bindFramebuffer'](0x8d40, bI['__webglMultisampledFramebuffer']),
                        bf['framebufferRenderbuffer'](0x8d40, 0x8ce0, 0x8d41, bI['__webglColorRenderbuffer']),
                        bf['bindRenderbuffer'](0x8d41, null),
                        bg['depthBuffer'] && (bI['__webglDepthRenderbuffer'] = bf['createRenderbuffer'](),
                        c2(bI['__webglDepthRenderbuffer'], bg, !0x0)),
                        bf['bindFramebuffer'](0x8d40, null);
                    } else
                        console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
                if (bK) {
                    for (bh['bindTexture'](0x8513, bJ['__webglTexture']),
                    bY(0x8513, bg['texture'], bM),
                    bR = 0x0; bR < 0x6; bR++)
                        c1(bI['__webglFramebuffer'][bR], bg, 0x8ce0, 0x8515 + bR);
                    bO(bg['texture'], bM) && bP(0x8513, bg['texture'], bg['width'], bg['height']),
                    bh['bindTexture'](0x8513, null);
                } else
                    bh['bindTexture'](0xde1, bJ['__webglTexture']),
                    bY(0xde1, bg['texture'], bM),
                    c1(bI['__webglFramebuffer'], bg, 0x8ce0, 0xde1),
                    bO(bg['texture'], bM) && bP(0xde1, bg['texture'], bg['width'], bg['height']),
                    bh['bindTexture'](0xde1, null);
                bg['depthBuffer'] && c3(bg);
            }
            ,
            this['updateRenderTargetMipmap'] = function(bf) {
                var bg = bf['texture'];
                if (bO(bg, bN(bf) || bF['isWebGL2'])) {
                    var bG = bf['isWebGLRenderTargetCube'] ? 0x8513 : 0xde1
                      , bH = bi['get'](bg)['__webglTexture'];
                    bh['bindTexture'](bG, bH),
                    bP(bG, bg, bf['width'], bf['height']),
                    bh['bindTexture'](bG, null);
                }
            }
            ,
            this['updateMultisampleRenderTarget'] = function(bg) {
                if (bg['isWebGLMultisampleRenderTarget'])
                    if (bF['isWebGL2']) {
                        var bh = bi['get'](bg);
                        bf['bindFramebuffer'](0x8ca8, bh['__webglMultisampledFramebuffer']),
                        bf['bindFramebuffer'](0x8ca9, bh['__webglFramebuffer']);
                        var bG = bg['width']
                          , bH = bg['height']
                          , bI = 0x4000;
                        bg['depthBuffer'] && (bI |= 0x100),
                        bg['stencilBuffer'] && (bI |= 0x400),
                        bf['blitFramebuffer'](0x0, 0x0, bG, bH, 0x0, 0x0, bG, bH, bI, 0x2600);
                    } else
                        console['warn']('THREE.WebGLRenderer:\x20WebGLMultisampleRenderTarget\x20can\x20only\x20be\x20used\x20with\x20WebGL2.');
            }
            ,
            this['safeSetTexture2D'] = function(bf, bg) {
                bf && bf['isWebGLRenderTarget'] && (!0x1 === c5 && (console['warn']('THREE.WebGLTextures.safeSetTexture2D:\x20don\x27t\x20use\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'),
                c5 = !0x0),
                bf = bf['texture']),
                bV(bf, bg);
            }
            ,
            this['safeSetTextureCube'] = function(bf, bg) {
                bf && bf['isWebGLRenderTargetCube'] && (!0x1 === c6 && (console['warn']('THREE.WebGLTextures.safeSetTextureCube:\x20don\x27t\x20use\x20cube\x20render\x20targets\x20as\x20textures.\x20Use\x20their\x20.texture\x20property\x20instead.'),
                c6 = !0x0),
                bf = bf['texture']),
                bf && bf['isCubeTexture'] || Array['isArray'](bf['image']) && 0x6 === bf['image']['length'] ? bW(bf, bg) : bX(bf, bg);
            }
            ;
        }
        function a60(bf, bg, bh) {
            return {
                'convert': function(bf) {
                    var bi;
                    if (bf === cM)
                        return 0x2901;
                    if (bf === cN)
                        return 0x812f;
                    if (bf === cO)
                        return 0x8370;
                    if (bf === cP)
                        return 0x2600;
                    if (bf === cQ)
                        return 0x2700;
                    if (bf === cR)
                        return 0x2702;
                    if (bf === cS)
                        return 0x2601;
                    if (bf === cT)
                        return 0x2701;
                    if (bf === cU)
                        return 0x2703;
                    if (bf === cV)
                        return 0x1401;
                    if (bf === d3)
                        return 0x8033;
                    if (bf === d4)
                        return 0x8034;
                    if (bf === d5)
                        return 0x8363;
                    if (bf === cW)
                        return 0x1400;
                    if (bf === cX)
                        return 0x1402;
                    if (bf === cY)
                        return 0x1403;
                    if (bf === cZ)
                        return 0x1404;
                    if (bf === d0)
                        return 0x1405;
                    if (bf === d1)
                        return 0x1406;
                    if (bf === d2) {
                        if (bh['isWebGL2'])
                            return 0x140b;
                        if (null !== (bi = bg['get']('OES_texture_half_float')))
                            return bi['HALF_FLOAT_OES'];
                    }
                    if (bf === d7)
                        return 0x1906;
                    if (bf === d8)
                        return 0x1907;
                    if (bf === d9)
                        return 0x1908;
                    if (bf === da)
                        return 0x1909;
                    if (bf === db)
                        return 0x190a;
                    if (bf === dd)
                        return 0x1902;
                    if (bf === de)
                        return 0x84f9;
                    if (bf === df)
                        return 0x1903;
                    if (bf === c7)
                        return 0x8006;
                    if (bf === c8)
                        return 0x800a;
                    if (bf === c9)
                        return 0x800b;
                    if (bf === cc)
                        return 0x0;
                    if (bf === cd)
                        return 0x1;
                    if (bf === ce)
                        return 0x300;
                    if (bf === cf)
                        return 0x301;
                    if (bf === cg)
                        return 0x302;
                    if (bf === ch)
                        return 0x303;
                    if (bf === ci)
                        return 0x304;
                    if (bf === cj)
                        return 0x305;
                    if (bf === ck)
                        return 0x306;
                    if (bf === cl)
                        return 0x307;
                    if (bf === cm)
                        return 0x308;
                    if ((bf === dg || bf === dh || bf === di || bf === dj) && null !== (bi = bg['get']('WEBGL_compressed_texture_s3tc'))) {
                        if (bf === dg)
                            return bi['COMPRESSED_RGB_S3TC_DXT1_EXT'];
                        if (bf === dh)
                            return bi['COMPRESSED_RGBA_S3TC_DXT1_EXT'];
                        if (bf === di)
                            return bi['COMPRESSED_RGBA_S3TC_DXT3_EXT'];
                        if (bf === dj)
                            return bi['COMPRESSED_RGBA_S3TC_DXT5_EXT'];
                    }
                    if ((bf === dk || bf === dl || bf === dm || bf === dn) && null !== (bi = bg['get']('WEBGL_compressed_texture_pvrtc'))) {
                        if (bf === dk)
                            return bi['COMPRESSED_RGB_PVRTC_4BPPV1_IMG'];
                        if (bf === dl)
                            return bi['COMPRESSED_RGB_PVRTC_2BPPV1_IMG'];
                        if (bf === dm)
                            return bi['COMPRESSED_RGBA_PVRTC_4BPPV1_IMG'];
                        if (bf === dn)
                            return bi['COMPRESSED_RGBA_PVRTC_2BPPV1_IMG'];
                    }
                    if (bf === dp && null !== (bi = bg['get']('WEBGL_compressed_texture_etc1')))
                        return bi['COMPRESSED_RGB_ETC1_WEBGL'];
                    if ((bf === dq || bf === dr || bf === ds || bf === dt || bf === du || bf === dv || bf === dw || bf === dx || bf === dy || bf === dz || bf === dA || bf === dB || bf === dC || bf === dD) && null !== (bi = bg['get']('WEBGL_compressed_texture_astc')))
                        return bf;
                    if (bf === ca || bf === cb) {
                        if (bh['isWebGL2']) {
                            if (bf === ca)
                                return 0x8007;
                            if (bf === cb)
                                return 0x8008;
                        }
                        if (null !== (bi = bg['get']('EXT_blend_minmax'))) {
                            if (bf === ca)
                                return bi['MIN_EXT'];
                            if (bf === cb)
                                return bi['MAX_EXT'];
                        }
                    }
                    if (bf === d6) {
                        if (bh['isWebGL2'])
                            return 0x84fa;
                        if (null !== (bi = bg['get']('WEBGL_depth_texture')))
                            return bi['UNSIGNED_INT_24_8_WEBGL'];
                    }
                    return 0x0;
                }
            };
        }
        function a66() {
            yT['call'](this),
            this['type'] = 'Group';
        }
        function a67() {
            yT['call'](this),
            this['type'] = 'Camera',
            this['matrixWorldInverse'] = new mR(),
            this['projectionMatrix'] = new mR(),
            this['projectionMatrixInverse'] = new mR();
        }
        function a68(bf, bg, bh, bi) {
            a67['call'](this),
            this['type'] = 'PerspectiveCamera',
            this['fov'] = void 0x0 !== bf ? bf : 0x32,
            this['zoom'] = 0x1,
            this['near'] = void 0x0 !== bh ? bh : 0.1,
            this['far'] = void 0x0 !== bi ? bi : 0x7d0,
            this['focus'] = 0xa,
            this['aspect'] = void 0x0 !== bg ? bg : 0x1,
            this['view'] = null,
            this['filmGauge'] = 0x23,
            this['filmOffset'] = 0x0,
            this['updateProjectionMatrix']();
        }
        function a6d(bf) {
            a68['call'](this),
            this['cameras'] = bf || [];
        }
        ZV['prototype'] = Object['create'](Kf['prototype']),
        ZV['prototype']['constructor'] = ZV,
        ZV['prototype']['isMeshDepthMaterial'] = !0x0,
        ZV['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['depthPacking'] = bf['depthPacking'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['map'] = bf['map'],
            this['alphaMap'] = bf['alphaMap'],
            this['displacementMap'] = bf['displacementMap'],
            this['displacementScale'] = bf['displacementScale'],
            this['displacementBias'] = bf['displacementBias'],
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this;
        }
        ,
        ZX['prototype'] = Object['create'](Kf['prototype']),
        ZX['prototype']['constructor'] = ZX,
        ZX['prototype']['isMeshDistanceMaterial'] = !0x0,
        ZX['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['referencePosition']['copy'](bf['referencePosition']),
            this['nearDistance'] = bf['nearDistance'],
            this['farDistance'] = bf['farDistance'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['map'] = bf['map'],
            this['alphaMap'] = bf['alphaMap'],
            this['displacementMap'] = bf['displacementMap'],
            this['displacementScale'] = bf['displacementScale'],
            this['displacementBias'] = bf['displacementBias'],
            this;
        }
        ,
        a66['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': a66,
            'isGroup': !0x0
        }),
        a67['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': a67,
            'isCamera': !0x0,
            'copy': function(bf, bg) {
                return yT['prototype']['copy']['call'](this, bf, bg),
                this['matrixWorldInverse']['copy'](bf['matrixWorldInverse']),
                this['projectionMatrix']['copy'](bf['projectionMatrix']),
                this['projectionMatrixInverse']['copy'](bf['projectionMatrixInverse']),
                this;
            },
            'getWorldDirection': function(bf) {
                void 0x0 === bf && (console['warn']('THREE.Camera:\x20.getWorldDirection()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                this['updateMatrixWorld'](!0x0);
                var bg = this['matrixWorld']['elements'];
                return bf['set'](-bg[0x8], -bg[0x9], -bg[0xa])['normalize']();
            },
            'updateMatrixWorld': function(bf) {
                yT['prototype']['updateMatrixWorld']['call'](this, bf),
                this['matrixWorldInverse']['getInverse'](this['matrixWorld']);
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            }
        }),
        a68['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
            'constructor': a68,
            'isPerspectiveCamera': !0x0,
            'copy': function(bf, bg) {
                return a67['prototype']['copy']['call'](this, bf, bg),
                this['fov'] = bf['fov'],
                this['zoom'] = bf['zoom'],
                this['near'] = bf['near'],
                this['far'] = bf['far'],
                this['focus'] = bf['focus'],
                this['aspect'] = bf['aspect'],
                this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']),
                this['filmGauge'] = bf['filmGauge'],
                this['filmOffset'] = bf['filmOffset'],
                this;
            },
            'setFocalLength': function(bf) {
                var bg = 0.5 * this['getFilmHeight']() / bf;
                this['fov'] = 0x2 * e2['RAD2DEG'] * Math['atan'](bg),
                this['updateProjectionMatrix']();
            },
            'getFocalLength': function() {
                var bf = Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']);
                return 0.5 * this['getFilmHeight']() / bf;
            },
            'getEffectiveFOV': function() {
                return 0x2 * e2['RAD2DEG'] * Math['atan'](Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom']);
            },
            'getFilmWidth': function() {
                return this['filmGauge'] * Math['min'](this['aspect'], 0x1);
            },
            'getFilmHeight': function() {
                return this['filmGauge'] / Math['max'](this['aspect'], 0x1);
            },
            'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
                this['aspect'] = bf / bg,
                null === this['view'] && (this['view'] = {
                    'enabled': !0x0,
                    'fullWidth': 0x1,
                    'fullHeight': 0x1,
                    'offsetX': 0x0,
                    'offsetY': 0x0,
                    'width': 0x1,
                    'height': 0x1
                }),
                this['view']['enabled'] = !0x0,
                this['view']['fullWidth'] = bf,
                this['view']['fullHeight'] = bg,
                this['view']['offsetX'] = bh,
                this['view']['offsetY'] = bi,
                this['view']['width'] = bF,
                this['view']['height'] = bG,
                this['updateProjectionMatrix']();
            },
            'clearViewOffset': function() {
                null !== this['view'] && (this['view']['enabled'] = !0x1),
                this['updateProjectionMatrix']();
            },
            'updateProjectionMatrix': function() {
                var bf = this['near']
                  , bg = bf * Math['tan'](0.5 * e2['DEG2RAD'] * this['fov']) / this['zoom']
                  , bh = 0x2 * bg
                  , bi = this['aspect'] * bh
                  , bF = -0.5 * bi
                  , bG = this['view'];
                if (null !== this['view'] && this['view']['enabled']) {
                    var bH = bG['fullWidth']
                      , bI = bG['fullHeight'];
                    bF += bG['offsetX'] * bi / bH,
                    bg -= bG['offsetY'] * bh / bI,
                    bi *= bG['width'] / bH,
                    bh *= bG['height'] / bI;
                }
                var bJ = this['filmOffset'];
                0x0 !== bJ && (bF += bf * bJ / this['getFilmWidth']()),
                this['projectionMatrix']['makePerspective'](bF, bF + bi, bg, bg - bh, bf, this['far']),
                this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
            },
            'toJSON': function(bf) {
                var bg = yT['prototype']['toJSON']['call'](this, bf);
                return bg['object']['fov'] = this['fov'],
                bg['object']['zoom'] = this['zoom'],
                bg['object']['near'] = this['near'],
                bg['object']['far'] = this['far'],
                bg['object']['focus'] = this['focus'],
                bg['object']['aspect'] = this['aspect'],
                null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])),
                bg['object']['filmGauge'] = this['filmGauge'],
                bg['object']['filmOffset'] = this['filmOffset'],
                bg;
            }
        }),
        a6d['prototype'] = Object['assign'](Object['create'](a68['prototype']), {
            'constructor': a6d,
            'isArrayCamera': !0x0
        });
        var a6I, a6J, a6K, a6L, a6M, a6N, a6O = new eK(), a6P = new eK();
        function a6Q(bf, bg, bh) {
            a6O['setFromMatrixPosition'](bg['matrixWorld']),
            a6P['setFromMatrixPosition'](bh['matrixWorld']);
            var bi = a6O['distanceTo'](a6P)
              , bF = bg['projectionMatrix']['elements']
              , bG = bh['projectionMatrix']['elements']
              , bH = bF[0xe] / (bF[0xa] - 0x1)
              , bI = bF[0xe] / (bF[0xa] + 0x1)
              , bJ = (bF[0x9] + 0x1) / bF[0x5]
              , bK = (bF[0x9] - 0x1) / bF[0x5]
              , bL = (bF[0x8] - 0x1) / bF[0x0]
              , bM = (bG[0x8] + 0x1) / bG[0x0]
              , bN = bH * bL
              , bO = bH * bM
              , bP = bi / (-bL + bM)
              , bQ = bP * -bL;
            bg['matrixWorld']['decompose'](bf['position'], bf['quaternion'], bf['scale']),
            bf['translateX'](bQ),
            bf['translateZ'](bP),
            bf['matrixWorld']['compose'](bf['position'], bf['quaternion'], bf['scale']),
            bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
            var bR = bH + bP
              , bS = bI + bP
              , bT = bN - bQ
              , bU = bO + (bi - bQ)
              , bV = bJ * bI / bS * bR
              , bW = bK * bI / bS * bR;
            bf['projectionMatrix']['makePerspective'](bT, bU, bV, bW, bR, bS);
        }
        function a7d(bf) {
            var bg, bh, bi = this, bF = null, bG = null, bH = null, bI = [], bJ = new mR(), bK = new mR(), bL = 0x1, bM = 'local-floor';
            'undefined' != typeof window && 'VRFrameData'in window && (bG = new window['VRFrameData'](),
            window['addEventListener']('vrdisplaypresentchange', bW, !0x1));
            var bN = new mR()
              , bO = new eF()
              , bP = new eK()
              , bQ = new a68();
            bQ['viewport'] = new m7(),
            bQ['layers']['enable'](0x1);
            var bR = new a68();
            bR['viewport'] = new m7(),
            bR['layers']['enable'](0x2);
            var bS = new a6d([bQ, bR]);
            function bT() {
                return null !== bF && !0x0 === bF['isPresenting'];
            }
            bS['layers']['enable'](0x1),
            bS['layers']['enable'](0x2);
            var bU, bV = new eC();
            function bW() {
                if (bT()) {
                    var bG = bF['getEyeParameters']('left');
                    bg = 0x2 * bG['renderWidth'] * bL,
                    bh = bG['renderHeight'] * bL,
                    bU = bf['getPixelRatio'](),
                    bf['getSize'](bV),
                    bf['setDrawingBufferSize'](bg, bh, 0x1),
                    bQ['viewport']['set'](0x0, 0x0, bg / 0x2, bh),
                    bR['viewport']['set'](bg / 0x2, 0x0, bg / 0x2, bh),
                    c0['start']();
                } else
                    bi['enabled'] && bf['setDrawingBufferSize'](bV['width'], bV['height'], bU),
                    c0['stop']();
            }
            var bX = [];
            function bY(bf) {
                for (var bg = navigator['getGamepads'] && navigator['getGamepads'](), bh = 0x0, bi = 0x0, bF = bg['length']; bh < bF; bh++) {
                    var bG = bg[bh];
                    if (bG && ('Daydream\x20Controller' === bG['id'] || 'Gear\x20VR\x20Controller' === bG['id'] || 'Oculus\x20Go\x20Controller' === bG['id'] || 'OpenVR\x20Gamepad' === bG['id'] || bG['id']['startsWith']('Oculus\x20Touch') || bG['id']['startsWith']('Spatial\x20Controller'))) {
                        if (bi === bf)
                            return bG;
                        bi++;
                    }
                }
            }
            function bZ(bf, bi) {
                null !== bi && 0x4 === bi['length'] && bf['set'](bi[0x0] * bg, bi[0x1] * bh, bi[0x2] * bg, bi[0x3] * bh);
            }
            this['enabled'] = !0x1,
            this['getController'] = function(bf) {
                var bg = bI[bf];
                return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1,
                bg['visible'] = !0x1,
                bI[bf] = bg),
                bg;
            }
            ,
            this['getDevice'] = function() {
                return bF;
            }
            ,
            this['setDevice'] = function(bf) {
                void 0x0 !== bf && (bF = bf),
                c0['setContext'](bf);
            }
            ,
            this['setFramebufferScaleFactor'] = function(bf) {
                bL = bf;
            }
            ,
            this['setReferenceSpaceType'] = function(bf) {
                bM = bf;
            }
            ,
            this['setPoseTarget'] = function(bf) {
                void 0x0 !== bf && (bH = bf);
            }
            ,
            this['getCamera'] = function(bf) {
                var bg = 'local-floor' === bM ? 1.6 : 0x0;
                if (!0x1 === bT())
                    return bf['position']['set'](0x0, bg, 0x0),
                    bf['rotation']['set'](0x0, 0x0, 0x0),
                    bf;
                if (bF['depthNear'] = bf['near'],
                bF['depthFar'] = bf['far'],
                bF['getFrameData'](bG),
                'local-floor' === bM) {
                    var bh = bF['stageParameters'];
                    bh ? bJ['fromArray'](bh['sittingToStandingTransform']) : bJ['makeTranslation'](0x0, bg, 0x0);
                }
                var bi = bG['pose']
                  , bL = null !== bH ? bH : bf;
                bL['matrix']['copy'](bJ),
                bL['matrix']['decompose'](bL['position'], bL['quaternion'], bL['scale']),
                null !== bi['orientation'] && (bO['fromArray'](bi['orientation']),
                bL['quaternion']['multiply'](bO)),
                null !== bi['position'] && (bO['setFromRotationMatrix'](bJ),
                bP['fromArray'](bi['position']),
                bP['applyQuaternion'](bO),
                bL['position']['add'](bP)),
                bL['updateMatrixWorld'](),
                bQ['near'] = bf['near'],
                bR['near'] = bf['near'],
                bQ['far'] = bf['far'],
                bR['far'] = bf['far'],
                bQ['matrixWorldInverse']['fromArray'](bG['leftViewMatrix']),
                bR['matrixWorldInverse']['fromArray'](bG['rightViewMatrix']),
                bK['getInverse'](bJ),
                'local-floor' === bM && (bQ['matrixWorldInverse']['multiply'](bK),
                bR['matrixWorldInverse']['multiply'](bK));
                var bU = bL['parent'];
                null !== bU && (bN['getInverse'](bU['matrixWorld']),
                bQ['matrixWorldInverse']['multiply'](bN),
                bR['matrixWorldInverse']['multiply'](bN)),
                bQ['matrixWorld']['getInverse'](bQ['matrixWorldInverse']),
                bR['matrixWorld']['getInverse'](bR['matrixWorldInverse']),
                bQ['projectionMatrix']['fromArray'](bG['leftProjectionMatrix']),
                bR['projectionMatrix']['fromArray'](bG['rightProjectionMatrix']),
                a6Q(bS, bQ, bR);
                var bV = bF['getLayers']();
                if (bV['length']) {
                    var bW = bV[0x0];
                    bZ(bQ['viewport'], bW['leftBounds']),
                    bZ(bR['viewport'], bW['rightBounds']);
                }
                return function() {
                    for (var bf = 0x0; bf < bI['length']; bf++) {
                        var bg = bI[bf]
                          , bh = bY(bf);
                        if (void 0x0 !== bh && void 0x0 !== bh['pose']) {
                            if (null === bh['pose'])
                                return;
                            var bi = bh['pose'];
                            !0x1 === bi['hasPosition'] && bg['position']['set'](0.2, -0.6, -0.05),
                            null !== bi['position'] && bg['position']['fromArray'](bi['position']),
                            null !== bi['orientation'] && bg['quaternion']['fromArray'](bi['orientation']),
                            bg['matrix']['compose'](bg['position'], bg['quaternion'], bg['scale']),
                            bg['matrix']['premultiply'](bJ),
                            bg['matrix']['decompose'](bg['position'], bg['quaternion'], bg['scale']),
                            bg['matrixWorldNeedsUpdate'] = !0x0,
                            bg['visible'] = !0x0;
                            var bF = 'Daydream\x20Controller' === bh['id'] ? 0x0 : 0x1;
                            void 0x0 === bX[bf] && (bX[bf] = !0x1),
                            bX[bf] !== bh['buttons'][bF]['pressed'] && (bX[bf] = bh['buttons'][bF]['pressed'],
                            !0x0 === bX[bf] ? bg['dispatchEvent']({
                                'type': 'selectstart'
                            }) : (bg['dispatchEvent']({
                                'type': 'selectend'
                            }),
                            bg['dispatchEvent']({
                                'type': 'select'
                            })));
                        } else
                            bg['visible'] = !0x1;
                    }
                }(),
                bS;
            }
            ,
            this['getStandingMatrix'] = function() {
                return bJ;
            }
            ,
            this['isPresenting'] = bT;
            var c0 = new xp();
            this['setAnimationLoop'] = function(bf) {
                c0['setAnimationLoop'](bf),
                bT() && c0['start']();
            }
            ,
            this['submitFrame'] = function() {
                bT() && bF['submitFrame']();
            }
            ,
            this['dispose'] = function() {
                'undefined' != typeof window && window['removeEventListener']('vrdisplaypresentchange', bW);
            }
            ,
            this['setFrameOfReferenceType'] = function() {
                console['warn']('THREE.WebVRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
            }
            ;
        }
        function a87(bf) {
            var bg = bf['context']
              , bh = null
              , bi = null
              , bF = 'local-floor'
              , bG = null
              , bH = []
              , bI = [];
            function bJ() {
                return null !== bh && null !== bi;
            }
            var bK = new a68();
            bK['layers']['enable'](0x1),
            bK['viewport'] = new m7();
            var bL = new a68();
            bL['layers']['enable'](0x2),
            bL['viewport'] = new m7();
            var bM = new a6d([bK, bL]);
            function bN(bf) {
                for (var bg = 0x0; bg < bH['length']; bg++)
                    bI[bg] === bf['inputSource'] && bH[bg]['dispatchEvent']({
                        'type': bf['type']
                    });
            }
            function bO() {
                bf['setFramebuffer'](null),
                bf['setRenderTarget'](bf['getRenderTarget']()),
                bS['stop']();
            }
            function bP(bf) {
                bi = bf,
                bS['setContext'](bh),
                bS['start']();
            }
            function bQ(bf, bg) {
                null === bg ? bf['matrixWorld']['copy'](bf['matrix']) : bf['matrixWorld']['multiplyMatrices'](bg['matrixWorld'], bf['matrix']),
                bf['matrixWorldInverse']['getInverse'](bf['matrixWorld']);
            }
            bM['layers']['enable'](0x1),
            bM['layers']['enable'](0x2),
            this['enabled'] = !0x1,
            this['getController'] = function(bf) {
                var bg = bH[bf];
                return void 0x0 === bg && ((bg = new a66())['matrixAutoUpdate'] = !0x1,
                bg['visible'] = !0x1,
                bH[bf] = bg),
                bg;
            }
            ,
            this['setFramebufferScaleFactor'] = function(bf) {}
            ,
            this['setReferenceSpaceType'] = function(bf) {
                bF = bf;
            }
            ,
            this['getSession'] = function() {
                return bh;
            }
            ,
            this['setSession'] = function(bf) {
                null !== (bh = bf) && (bh['addEventListener']('select', bN),
                bh['addEventListener']('selectstart', bN),
                bh['addEventListener']('selectend', bN),
                bh['addEventListener']('end', bO),
                bh['updateRenderState']({
                    'baseLayer': new XRWebGLLayer(bh,bg)
                }),
                bh['requestReferenceSpace'](bF)['then'](bP),
                bI = bh['inputSources'],
                bh['addEventListener']('inputsourceschange', function() {
                    bI = bh['inputSources'],
                    console['log'](bI);
                    for (var bf = 0x0; bf < bH['length']; bf++) {
                        bH[bf]['userData']['inputSource'] = bI[bf];
                    }
                }));
            }
            ,
            this['getCamera'] = function(bf) {
                if (bJ()) {
                    var bg = bf['parent']
                      , bh = bM['cameras'];
                    bQ(bM, bg);
                    for (var bi = 0x0; bi < bh['length']; bi++)
                        bQ(bh[bi], bg);
                    bf['matrixWorld']['copy'](bM['matrixWorld']);
                    for (var bF = bf['children'], bG = (bi = 0x0,
                    bF['length']); bi < bG; bi++)
                        bF[bi]['updateMatrixWorld'](!0x0);
                    return a6Q(bM, bK, bL),
                    bM;
                }
                return bf;
            }
            ,
            this['isPresenting'] = bJ;
            var bR = null;
            var bS = new xp();
            bS['setAnimationLoop'](function(bg, bF) {
                if (null !== (bG = bF['getViewerPose'](bi))) {
                    var bJ = bG['views']
                      , bK = bh['renderState']['baseLayer'];
                    bf['setFramebuffer'](bK['framebuffer']);
                    for (var bL = 0x0; bL < bJ['length']; bL++) {
                        var bN = bJ[bL]
                          , bO = bK['getViewport'](bN)
                          , bP = bN['transform']['inverse']['matrix']
                          , bQ = bM['cameras'][bL];
                        bQ['matrix']['fromArray'](bP)['getInverse'](bQ['matrix']),
                        bQ['projectionMatrix']['fromArray'](bN['projectionMatrix']),
                        bQ['viewport']['set'](bO['x'], bO['y'], bO['width'], bO['height']),
                        0x0 === bL && bM['matrix']['copy'](bQ['matrix']);
                    }
                }
                for (bL = 0x0; bL < bH['length']; bL++) {
                    var bS = bH[bL]
                      , bT = bI[bL];
                    if (bT) {
                        var bU = bF['getPose'](bT['targetRaySpace'], bi);
                        if (null !== bU) {
                            bS['matrix']['fromArray'](bU['transform']['matrix']),
                            bS['matrix']['decompose'](bS['position'], bS['rotation'], bS['scale']),
                            bS['visible'] = !0x0;
                            continue;
                        }
                    }
                    bS['visible'] = !0x1;
                }
                bR && bR(bg);
            }),
            this['setAnimationLoop'] = function(bf) {
                bR = bf;
            }
            ,
            this['dispose'] = function() {}
            ,
            this['getStandingMatrix'] = function() {
                return console['warn']('THREE.WebXRManager:\x20getStandingMatrix()\x20is\x20no\x20longer\x20needed.'),
                new mR();
            }
            ,
            this['getDevice'] = function() {
                console['warn']('THREE.WebXRManager:\x20getDevice()\x20has\x20been\x20deprecated.');
            }
            ,
            this['setDevice'] = function() {
                console['warn']('THREE.WebXRManager:\x20setDevice()\x20has\x20been\x20deprecated.');
            }
            ,
            this['setFrameOfReferenceType'] = function() {
                console['warn']('THREE.WebXRManager:\x20setFrameOfReferenceType()\x20has\x20been\x20deprecated.');
            }
            ,
            this['submitFrame'] = function() {}
            ;
        }
        function a8U(bf) {
            console['log']('THREE.WebGLRenderer', bI);
            var bg = void 0x0 !== (bf = bf || {})['canvas'] ? bf['canvas'] : document['createElementNS']('http://www.w3.org/1999/xhtml', 'canvas')
              , bh = void 0x0 !== bf['context'] ? bf['context'] : null
              , bi = void 0x0 !== bf['alpha'] && bf['alpha']
              , bF = void 0x0 === bf['depth'] || bf['depth']
              , bG = void 0x0 === bf['stencil'] || bf['stencil']
              , bH = void 0x0 !== bf['antialias'] && bf['antialias']
              , bJ = void 0x0 === bf['premultipliedAlpha'] || bf['premultipliedAlpha']
              , bK = void 0x0 !== bf['preserveDrawingBuffer'] && bf['preserveDrawingBuffer']
              , bL = void 0x0 !== bf['powerPreference'] ? bf['powerPreference'] : 'default'
              , bM = void 0x0 !== bf['failIfMajorPerformanceCaveat'] && bf['failIfMajorPerformanceCaveat']
              , bN = null
              , bO = null;
            this['domElement'] = bg,
            this['context'] = null,
            this['debug'] = {
                'checkShaderErrors': !0x0
            },
            this['autoClear'] = !0x0,
            this['autoClearColor'] = !0x0,
            this['autoClearDepth'] = !0x0,
            this['autoClearStencil'] = !0x0,
            this['sortObjects'] = !0x0,
            this['clippingPlanes'] = [],
            this['localClippingEnabled'] = !0x1,
            this['gammaFactor'] = 0x2,
            this['gammaInput'] = !0x1,
            this['gammaOutput'] = !0x1,
            this['physicallyCorrectLights'] = !0x1,
            this['toneMapping'] = cz,
            this['toneMappingExposure'] = 0x1,
            this['toneMappingWhitePoint'] = 0x1,
            this['maxMorphTargets'] = 0x8,
            this['maxMorphNormals'] = 0x4;
            var bP, bQ, bR, bS, bT, bV, bW, bX, bY, bZ, c0, c1, c2, c3, c4, c5, c6, c7, c8 = this, c9 = !0x1, ca = null, cb = 0x0, cc = 0x0, cd = null, ce = null, cf = -0x1, cg = {
                'geometry': null,
                'program': null,
                'wireframe': !0x1
            }, ch = null, ci = null, cj = new m7(), ck = new m7(), cl = null, cm = bg['width'], cn = bg['height'], co = 0x1, cp = new m7(0x0,0x0,cm,cn), cq = new m7(0x0,0x0,cm,cn), cr = !0x1, cs = new mK(), ct = new M2(), cu = !0x1, cv = !0x1, cw = new mR(), cx = new eK();
            function cy() {
                return null === cd ? co : 0x1;
            }
            try {
                var cA = {
                    'alpha': bi,
                    'depth': bF,
                    'stencil': bG,
                    'antialias': bH,
                    'premultipliedAlpha': bJ,
                    'preserveDrawingBuffer': bK,
                    'powerPreference': bL,
                    'failIfMajorPerformanceCaveat': bM,
                    'xrCompatible': !0x0
                };
                if (bg['addEventListener']('webglcontextlost', cE, !0x1),
                bg['addEventListener']('webglcontextrestored', cF, !0x1),
                null === (bP = bh || bg['getContext']('webgl', cA) || bg['getContext']('experimental-webgl', cA)))
                    throw null !== bg['getContext']('webgl') ? new Error('Error\x20creating\x20WebGL\x20context\x20with\x20your\x20selected\x20attributes.') : new Error('Error\x20creating\x20WebGL\x20context.');
                void 0x0 === bP['getShaderPrecisionFormat'] && (bP['getShaderPrecisionFormat'] = function() {
                    return {
                        'rangeMin': 0x1,
                        'rangeMax': 0x1,
                        'precision': 0x1
                    };
                }
                );
            } catch (a9S) {
                throw console['error']('THREE.WebGLRenderer:\x20' + a9S['message']),
                a9S;
            }
            function cB() {
                bQ = new MB(bP),
                (bR = new LG(bP,bQ,bf))['isWebGL2'] || (bQ['get']('WEBGL_depth_texture'),
                bQ['get']('OES_texture_float'),
                bQ['get']('OES_texture_half_float'),
                bQ['get']('OES_texture_half_float_linear'),
                bQ['get']('OES_standard_derivatives'),
                bQ['get']('OES_element_index_uint'),
                bQ['get']('ANGLE_instanced_arrays')),
                bQ['get']('OES_texture_float_linear'),
                c7 = new a60(bP,bQ,bR),
                (bS = new a1i(bP,bQ,c7,bR))['scissor'](ck['copy'](cq)['multiplyScalar'](co)),
                bS['viewport'](cj['copy'](cp)['multiplyScalar'](co)),
                bT = new Nv(bP),
                bV = new Yj(),
                bW = new a3q(bP,bQ,bS,bV,bR,c7,bT),
                bX = new xy(bP),
                bY = new MG(bP,bX,bT),
                bZ = new NV(bY,bT),
                c4 = new NE(bP),
                c0 = new XC(c8,bQ,bR,bW),
                c1 = new YZ(),
                c2 = new ZN(),
                c3 = new L1(c8,bS,bZ,bJ),
                c5 = new Lt(bP,bQ,bT,bR),
                c6 = new Nf(bP,bQ,bT,bR),
                bT['programs'] = c0['programs'],
                c8['context'] = bP,
                c8['capabilities'] = bR,
                c8['extensions'] = bQ,
                c8['properties'] = bV,
                c8['renderLists'] = c1,
                c8['state'] = bS,
                c8['info'] = bT;
            }
            cB();
            var cC = 'undefined' != typeof navigator && 'xr'in navigator && 'supportsSession'in navigator['xr'] ? new a87(c8) : new a7d(c8);
            this['vr'] = cC;
            var cD = new ZZ(c8,bZ,bR['maxTextureSize']);
            function cE(bf) {
                bf['preventDefault'](),
                console['log']('THREE.WebGLRenderer:\x20Context\x20Lost.'),
                c9 = !0x0;
            }
            function cF() {
                console['log']('THREE.WebGLRenderer:\x20Context\x20Restored.'),
                c9 = !0x1,
                cB();
            }
            function cG(bf) {
                var bg = bf['target'];
                bg['removeEventListener']('dispose', cG),
                function(bf) {
                    cH(bf),
                    bV['remove'](bf);
                }(bg);
            }
            function cH(bf) {
                var bg = bV['get'](bf)['program'];
                bf['program'] = void 0x0,
                void 0x0 !== bg && c0['releaseProgram'](bg);
            }
            this['shadowMap'] = cD,
            this['getContext'] = function() {
                return bP;
            }
            ,
            this['getContextAttributes'] = function() {
                return bP['getContextAttributes']();
            }
            ,
            this['forceContextLoss'] = function() {
                var bf = bQ['get']('WEBGL_lose_context');
                bf && bf['loseContext']();
            }
            ,
            this['forceContextRestore'] = function() {
                var bf = bQ['get']('WEBGL_lose_context');
                bf && bf['restoreContext']();
            }
            ,
            this['getPixelRatio'] = function() {
                return co;
            }
            ,
            this['setPixelRatio'] = function(bf) {
                void 0x0 !== bf && (co = bf,
                this['setSize'](cm, cn, !0x1));
            }
            ,
            this['getSize'] = function(bf) {
                return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getsize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'),
                bf = new eC()),
                bf['set'](cm, cn);
            }
            ,
            this['setSize'] = function(bf, bh, bi) {
                cC['isPresenting']() ? console['warn']('THREE.WebGLRenderer:\x20Can\x27t\x20change\x20size\x20while\x20VR\x20device\x20is\x20presenting.') : (cm = bf,
                cn = bh,
                bg['width'] = bf * co,
                bg['height'] = bh * co,
                !0x1 !== bi && (bg['style']['width'] = bf + 'px',
                bg['style']['height'] = bh + 'px'),
                this['setViewport'](0x0, 0x0, bf, bh));
            }
            ,
            this['getDrawingBufferSize'] = function(bf) {
                return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getdrawingBufferSize()\x20now\x20requires\x20a\x20Vector2\x20as\x20an\x20argument'),
                bf = new eC()),
                bf['set'](cm * co, cn * co);
            }
            ,
            this['setDrawingBufferSize'] = function(bf, bh, bi) {
                cm = bf,
                cn = bh,
                co = bi,
                bg['width'] = bf * bi,
                bg['height'] = bh * bi,
                this['setViewport'](0x0, 0x0, bf, bh);
            }
            ,
            this['getCurrentViewport'] = function(bf) {
                return void 0x0 === bf && (console['warn']('WebGLRenderer:\x20.getCurrentViewport()\x20now\x20requires\x20a\x20Vector4\x20as\x20an\x20argument'),
                bf = new m7()),
                bf['copy'](cj);
            }
            ,
            this['getViewport'] = function(bf) {
                return bf['copy'](cp);
            }
            ,
            this['setViewport'] = function(bf, bg, bh, bi) {
                bf['isVector4'] ? cp['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cp['set'](bf, bg, bh, bi),
                bS['viewport'](cj['copy'](cp)['multiplyScalar'](co));
            }
            ,
            this['getScissor'] = function(bf) {
                return bf['copy'](cq);
            }
            ,
            this['setScissor'] = function(bf, bg, bh, bi) {
                bf['isVector4'] ? cq['set'](bf['x'], bf['y'], bf['z'], bf['w']) : cq['set'](bf, bg, bh, bi),
                bS['scissor'](ck['copy'](cq)['multiplyScalar'](co));
            }
            ,
            this['getScissorTest'] = function() {
                return cr;
            }
            ,
            this['setScissorTest'] = function(bf) {
                bS['setScissorTest'](cr = bf);
            }
            ,
            this['getClearColor'] = function() {
                return c3['getClearColor']();
            }
            ,
            this['setClearColor'] = function() {
                c3['setClearColor']['apply'](c3, arguments);
            }
            ,
            this['getClearAlpha'] = function() {
                return c3['getClearAlpha']();
            }
            ,
            this['setClearAlpha'] = function() {
                c3['setClearAlpha']['apply'](c3, arguments);
            }
            ,
            this['clear'] = function(bf, bg, bh) {
                var bi = 0x0;
                (void 0x0 === bf || bf) && (bi |= 0x4000),
                (void 0x0 === bg || bg) && (bi |= 0x100),
                (void 0x0 === bh || bh) && (bi |= 0x400),
                bP['clear'](bi);
            }
            ,
            this['clearColor'] = function() {
                this['clear'](!0x0, !0x1, !0x1);
            }
            ,
            this['clearDepth'] = function() {
                this['clear'](!0x1, !0x0, !0x1);
            }
            ,
            this['clearStencil'] = function() {
                this['clear'](!0x1, !0x1, !0x0);
            }
            ,
            this['dispose'] = function() {
                bg['removeEventListener']('webglcontextlost', cE, !0x1),
                bg['removeEventListener']('webglcontextrestored', cF, !0x1),
                c1['dispose'](),
                c2['dispose'](),
                bV['dispose'](),
                bZ['dispose'](),
                cC['dispose'](),
                cJ['stop']();
            }
            ,
            this['renderBufferImmediate'] = function(bf, bg) {
                bS['initAttributes']();
                var bh = bV['get'](bf);
                bf['hasPositions'] && !bh['position'] && (bh['position'] = bP['createBuffer']()),
                bf['hasNormals'] && !bh['normal'] && (bh['normal'] = bP['createBuffer']()),
                bf['hasUvs'] && !bh['uv'] && (bh['uv'] = bP['createBuffer']()),
                bf['hasColors'] && !bh['color'] && (bh['color'] = bP['createBuffer']());
                var bi = bg['getAttributes']();
                bf['hasPositions'] && (bP['bindBuffer'](0x8892, bh['position']),
                bP['bufferData'](0x8892, bf['positionArray'], 0x88e8),
                bS['enableAttribute'](bi['position']),
                bP['vertexAttribPointer'](bi['position'], 0x3, 0x1406, !0x1, 0x0, 0x0)),
                bf['hasNormals'] && (bP['bindBuffer'](0x8892, bh['normal']),
                bP['bufferData'](0x8892, bf['normalArray'], 0x88e8),
                bS['enableAttribute'](bi['normal']),
                bP['vertexAttribPointer'](bi['normal'], 0x3, 0x1406, !0x1, 0x0, 0x0)),
                bf['hasUvs'] && (bP['bindBuffer'](0x8892, bh['uv']),
                bP['bufferData'](0x8892, bf['uvArray'], 0x88e8),
                bS['enableAttribute'](bi['uv']),
                bP['vertexAttribPointer'](bi['uv'], 0x2, 0x1406, !0x1, 0x0, 0x0)),
                bf['hasColors'] && (bP['bindBuffer'](0x8892, bh['color']),
                bP['bufferData'](0x8892, bf['colorArray'], 0x88e8),
                bS['enableAttribute'](bi['color']),
                bP['vertexAttribPointer'](bi['color'], 0x3, 0x1406, !0x1, 0x0, 0x0)),
                bS['disableUnusedAttributes'](),
                bP['drawArrays'](0x4, 0x0, bf['count']),
                bf['count'] = 0x0;
            }
            ,
            this['renderBufferDirect'] = function(bf, bg, bh, bi, bF, bG) {
                var bH = bF['isMesh'] && bF['matrixWorld']['determinant']() < 0x0;
                bS['setMaterial'](bi, bH);
                var bI = cN(bf, bg, bi, bF)
                  , bJ = !0x1;
                cg['geometry'] === bh['id'] && cg['program'] === bI['id'] && cg['wireframe'] === (!0x0 === bi['wireframe']) || (cg['geometry'] = bh['id'],
                cg['program'] = bI['id'],
                cg['wireframe'] = !0x0 === bi['wireframe'],
                bJ = !0x0),
                bF['morphTargetInfluences'] && (c4['update'](bF, bh, bi, bI),
                bJ = !0x0);
                var bK, bL = bh['index'], bM = bh['attributes']['position'], bN = 0x1;
                !0x0 === bi['wireframe'] && (bL = bY['getWireframeAttribute'](bh),
                bN = 0x2);
                var bO = c5;
                null !== bL && (bK = bX['get'](bL),
                (bO = c6)['setIndex'](bK)),
                bJ && (!function(bf, bg, bh) {
                    if (bh && bh['isInstancedBufferGeometry'] && !bR['isWebGL2'] && null === bQ['get']('ANGLE_instanced_arrays'))
                        return void console['error']('THREE.WebGLRenderer.setupVertexAttributes:\x20using\x20THREE.InstancedBufferGeometry\x20but\x20hardware\x20does\x20not\x20support\x20extension\x20ANGLE_instanced_arrays.');
                    bS['initAttributes']();
                    var bi = bh['attributes']
                      , bF = bg['getAttributes']()
                      , bG = bf['defaultAttributeValues'];
                    for (var bH in bF) {
                        var bI = bF[bH];
                        if (bI >= 0x0) {
                            var bJ = bi[bH];
                            if (void 0x0 !== bJ) {
                                var bK = bJ['normalized']
                                  , bL = bJ['itemSize']
                                  , bM = bX['get'](bJ);
                                if (void 0x0 === bM)
                                    continue;
                                var bN = bM['buffer']
                                  , bO = bM['type']
                                  , bT = bM['bytesPerElement'];
                                if (bJ['isInterleavedBufferAttribute']) {
                                    var bU = bJ['data']
                                      , bV = bU['stride']
                                      , bW = bJ['offset'];
                                    bU && bU['isInstancedInterleavedBuffer'] ? (bS['enableAttributeAndDivisor'](bI, bU['meshPerAttribute']),
                                    void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bU['meshPerAttribute'] * bU['count'])) : bS['enableAttribute'](bI),
                                    bP['bindBuffer'](0x8892, bN),
                                    bP['vertexAttribPointer'](bI, bL, bO, bK, bV * bT, bW * bT);
                                } else
                                    bJ['isInstancedBufferAttribute'] ? (bS['enableAttributeAndDivisor'](bI, bJ['meshPerAttribute']),
                                    void 0x0 === bh['maxInstancedCount'] && (bh['maxInstancedCount'] = bJ['meshPerAttribute'] * bJ['count'])) : bS['enableAttribute'](bI),
                                    bP['bindBuffer'](0x8892, bN),
                                    bP['vertexAttribPointer'](bI, bL, bO, bK, 0x0, 0x0);
                            } else if (void 0x0 !== bG) {
                                var bY = bG[bH];
                                if (void 0x0 !== bY)
                                    switch (bY['length']) {
                                    case 0x2:
                                        bP['vertexAttrib2fv'](bI, bY);
                                        break;
                                    case 0x3:
                                        bP['vertexAttrib3fv'](bI, bY);
                                        break;
                                    case 0x4:
                                        bP['vertexAttrib4fv'](bI, bY);
                                        break;
                                    default:
                                        bP['vertexAttrib1fv'](bI, bY);
                                    }
                            }
                        }
                    }
                    bS['disableUnusedAttributes']();
                }(bi, bI, bh),
                null !== bL && bP['bindBuffer'](0x8893, bK['buffer']));
                var bT = 0x1 / 0x0;
                null !== bL ? bT = bL['count'] : void 0x0 !== bM && (bT = bM['count']);
                var bU = bh['drawRange']['start'] * bN
                  , bV = bh['drawRange']['count'] * bN
                  , bW = null !== bG ? bG['start'] * bN : 0x0
                  , bZ = null !== bG ? bG['count'] * bN : 0x1 / 0x0
                  , c0 = Math['max'](bU, bW)
                  , c1 = Math['min'](bT, bU + bV, bW + bZ) - 0x1
                  , c2 = Math['max'](0x0, c1 - c0 + 0x1);
                if (0x0 !== c2) {
                    if (bF['isMesh'])
                        if (!0x0 === bi['wireframe'])
                            bS['setLineWidth'](bi['wireframeLinewidth'] * cy()),
                            bO['setMode'](0x1);
                        else
                            switch (bF['drawMode']) {
                            case dN:
                                bO['setMode'](0x4);
                                break;
                            case dO:
                                bO['setMode'](0x5);
                                break;
                            case dP:
                                bO['setMode'](0x6);
                            }
                    else if (bF['isLine']) {
                        var c3 = bi['linewidth'];
                        void 0x0 === c3 && (c3 = 0x1),
                        bS['setLineWidth'](c3 * cy()),
                        bF['isLineSegments'] ? bO['setMode'](0x1) : bF['isLineLoop'] ? bO['setMode'](0x2) : bO['setMode'](0x3);
                    } else
                        bF['isPoints'] ? bO['setMode'](0x0) : bF['isSprite'] && bO['setMode'](0x4);
                    bh && bh['isInstancedBufferGeometry'] ? bh['maxInstancedCount'] > 0x0 && bO['renderInstances'](bh, c0, c2) : bO['render'](c0, c2);
                }
            }
            ,
            this['compile'] = function(bf, bg) {
                (bO = c2['get'](bf, bg))['init'](),
                bf['traverse'](function(bf) {
                    bf['isLight'] && (bO['pushLight'](bf),
                    bf['castShadow'] && bO['pushShadow'](bf));
                }),
                bO['setupLights'](bg),
                bf['traverse'](function(bg) {
                    if (bg['material'])
                        if (Array['isArray'](bg['material']))
                            for (var bh = 0x0; bh < bg['material']['length']; bh++)
                                cM(bg['material'][bh], bf['fog'], bg);
                        else
                            cM(bg['material'], bf['fog'], bg);
                });
            }
            ;
            var cI = null;
            var cJ = new xp();
            function cK(bf, bg, bh, bi) {
                for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                    var bH = bf[bF]
                      , bI = bH['object']
                      , bJ = bH['geometry']
                      , bK = void 0x0 === bi ? bH['material'] : bi
                      , bL = bH['group'];
                    if (bh['isArrayCamera']) {
                        ci = bh;
                        for (var bM = bh['cameras'], bN = 0x0, bP = bM['length']; bN < bP; bN++) {
                            var bQ = bM[bN];
                            bI['layers']['test'](bQ['layers']) && (bS['viewport'](cj['copy'](bQ['viewport'])),
                            bO['setupLights'](bQ),
                            cL(bI, bg, bQ, bJ, bK, bL));
                        }
                    } else
                        ci = null,
                        cL(bI, bg, bh, bJ, bK, bL);
                }
            }
            function cL(bf, bg, bh, bi, bF, bG) {
                if (bf['onBeforeRender'](c8, bg, bh, bi, bF, bG),
                bO = c2['get'](bg, ci || bh),
                bf['modelViewMatrix']['multiplyMatrices'](bh['matrixWorldInverse'], bf['matrixWorld']),
                bf['normalMatrix']['getNormalMatrix'](bf['modelViewMatrix']),
                bf['isImmediateRenderObject']) {
                    bS['setMaterial'](bF);
                    var bH = cN(bh, bg['fog'], bF, bf);
                    cg['geometry'] = null,
                    cg['program'] = null,
                    cg['wireframe'] = !0x1,
                    function(bf, bg) {
                        bf['render'](function(bf) {
                            c8['renderBufferImmediate'](bf, bg);
                        });
                    }(bf, bH);
                } else
                    c8['renderBufferDirect'](bh, bg['fog'], bi, bF, bf, bG);
                bf['onAfterRender'](c8, bg, bh, bi, bF, bG),
                bO = c2['get'](bg, ci || bh);
            }
            function cM(bf, bg, bh) {
                var bi = bV['get'](bf)
                  , bF = bO['state']['lights']
                  , bG = bO['state']['shadowsArray']
                  , bH = bi['lightsHash']
                  , bI = bF['state']['hash']
                  , bJ = c0['getParameters'](bf, bF['state'], bG, bg, ct['numPlanes'], ct['numIntersection'], bh)
                  , bK = c0['getProgramCode'](bf, bJ)
                  , bL = bi['program']
                  , bM = !0x0;
                if (void 0x0 === bL)
                    bf['addEventListener']('dispose', cG);
                else if (bL['code'] !== bK)
                    cH(bf);
                else if (bH['stateID'] !== bI['stateID'] || bH['directionalLength'] !== bI['directionalLength'] || bH['pointLength'] !== bI['pointLength'] || bH['spotLength'] !== bI['spotLength'] || bH['rectAreaLength'] !== bI['rectAreaLength'] || bH['hemiLength'] !== bI['hemiLength'] || bH['shadowsLength'] !== bI['shadowsLength'])
                    bH['stateID'] = bI['stateID'],
                    bH['directionalLength'] = bI['directionalLength'],
                    bH['pointLength'] = bI['pointLength'],
                    bH['spotLength'] = bI['spotLength'],
                    bH['rectAreaLength'] = bI['rectAreaLength'],
                    bH['hemiLength'] = bI['hemiLength'],
                    bH['shadowsLength'] = bI['shadowsLength'],
                    bM = !0x1;
                else {
                    if (void 0x0 !== bJ['shaderID'])
                        return;
                    bM = !0x1;
                }
                if (bM) {
                    if (bJ['shaderID']) {
                        var bN = xo[bJ['shaderID']];
                        bi['shader'] = {
                            'name': bf['type'],
                            'uniforms': vQ(bN['uniforms']),
                            'vertexShader': bN['vertexShader'],
                            'fragmentShader': bN['fragmentShader']
                        };
                    } else
                        bi['shader'] = {
                            'name': bf['type'],
                            'uniforms': bf['uniforms'],
                            'vertexShader': bf['vertexShader'],
                            'fragmentShader': bf['fragmentShader']
                        };
                    bf['onBeforeCompile'](bi['shader'], c8),
                    bK = c0['getProgramCode'](bf, bJ),
                    bL = c0['acquireProgram'](bf, bi['shader'], bJ, bK),
                    bi['program'] = bL,
                    bf['program'] = bL;
                }
                var bP = bL['getAttributes']();
                if (bf['morphTargets']) {
                    bf['numSupportedMorphTargets'] = 0x0;
                    for (var bQ = 0x0; bQ < c8['maxMorphTargets']; bQ++)
                        bP['morphTarget' + bQ] >= 0x0 && bf['numSupportedMorphTargets']++;
                }
                if (bf['morphNormals']) {
                    bf['numSupportedMorphNormals'] = 0x0;
                    for (bQ = 0x0; bQ < c8['maxMorphNormals']; bQ++)
                        bP['morphNormal' + bQ] >= 0x0 && bf['numSupportedMorphNormals']++;
                }
                var bR = bi['shader']['uniforms'];
                (bf['isShaderMaterial'] || bf['isRawShaderMaterial']) && !0x0 !== bf['clipping'] || (bi['numClippingPlanes'] = ct['numPlanes'],
                bi['numIntersection'] = ct['numIntersection'],
                bR['clippingPlanes'] = ct['uniform']),
                bi['fog'] = bg,
                void 0x0 === bH && (bi['lightsHash'] = bH = {}),
                bH['stateID'] = bI['stateID'],
                bH['directionalLength'] = bI['directionalLength'],
                bH['pointLength'] = bI['pointLength'],
                bH['spotLength'] = bI['spotLength'],
                bH['rectAreaLength'] = bI['rectAreaLength'],
                bH['hemiLength'] = bI['hemiLength'],
                bH['shadowsLength'] = bI['shadowsLength'],
                bf['lights'] && (bR['ambientLightColor']['value'] = bF['state']['ambient'],
                bR['lightProbe']['value'] = bF['state']['probe'],
                bR['directionalLights']['value'] = bF['state']['directional'],
                bR['spotLights']['value'] = bF['state']['spot'],
                bR['rectAreaLights']['value'] = bF['state']['rectArea'],
                bR['pointLights']['value'] = bF['state']['point'],
                bR['hemisphereLights']['value'] = bF['state']['hemi'],
                bR['directionalShadowMap']['value'] = bF['state']['directionalShadowMap'],
                bR['directionalShadowMatrix']['value'] = bF['state']['directionalShadowMatrix'],
                bR['spotShadowMap']['value'] = bF['state']['spotShadowMap'],
                bR['spotShadowMatrix']['value'] = bF['state']['spotShadowMatrix'],
                bR['pointShadowMap']['value'] = bF['state']['pointShadowMap'],
                bR['pointShadowMatrix']['value'] = bF['state']['pointShadowMatrix']);
                var bS = bi['program']['getUniforms']()
                  , bT = VF['seqWithValue'](bS['seq'], bR);
                bi['uniformsList'] = bT;
            }
            function cN(bf, bg, bh, bi) {
                bW['resetTextureUnits']();
                var bF = bV['get'](bh)
                  , bG = bO['state']['lights']
                  , bH = bF['lightsHash']
                  , bI = bG['state']['hash'];
                if (cu && (cv || bf !== ch)) {
                    var bJ = bf === ch && bh['id'] === cf;
                    ct['setState'](bh['clippingPlanes'], bh['clipIntersection'], bh['clipShadows'], bf, bF, bJ);
                }
                !0x1 === bh['needsUpdate'] && (void 0x0 === bF['program'] ? bh['needsUpdate'] = !0x0 : bh['fog'] && bF['fog'] !== bg ? bh['needsUpdate'] = !0x0 : (!bh['lights'] || bH['stateID'] === bI['stateID'] && bH['directionalLength'] === bI['directionalLength'] && bH['pointLength'] === bI['pointLength'] && bH['spotLength'] === bI['spotLength'] && bH['rectAreaLength'] === bI['rectAreaLength'] && bH['hemiLength'] === bI['hemiLength'] && bH['shadowsLength'] === bI['shadowsLength']) && (void 0x0 === bF['numClippingPlanes'] || bF['numClippingPlanes'] === ct['numPlanes'] && bF['numIntersection'] === ct['numIntersection']) || (bh['needsUpdate'] = !0x0)),
                bh['needsUpdate'] && (cM(bh, bg, bi),
                bh['needsUpdate'] = !0x1);
                var bK, bL, bM = !0x1, bN = !0x1, bQ = !0x1, bT = bF['program'], bX = bT['getUniforms'](), bY = bF['shader']['uniforms'];
                if (bS['useProgram'](bT['program']) && (bM = !0x0,
                bN = !0x0,
                bQ = !0x0),
                bh['id'] !== cf && (cf = bh['id'],
                bN = !0x0),
                bM || ch !== bf) {
                    if (bX['setValue'](bP, 'projectionMatrix', bf['projectionMatrix']),
                    bR['logarithmicDepthBuffer'] && bX['setValue'](bP, 'logDepthBufFC', 0x2 / (Math['log'](bf['far'] + 0x1) / Math['LN2'])),
                    ch !== bf && (ch = bf,
                    bN = !0x0,
                    bQ = !0x0),
                    bh['isShaderMaterial'] || bh['isMeshPhongMaterial'] || bh['isMeshStandardMaterial'] || bh['envMap']) {
                        var bZ = bX['map']['cameraPosition'];
                        void 0x0 !== bZ && bZ['setValue'](bP, cx['setFromMatrixPosition'](bf['matrixWorld']));
                    }
                    (bh['isMeshPhongMaterial'] || bh['isMeshLambertMaterial'] || bh['isMeshBasicMaterial'] || bh['isMeshStandardMaterial'] || bh['isShaderMaterial'] || bh['skinning']) && bX['setValue'](bP, 'viewMatrix', bf['matrixWorldInverse']);
                }
                if (bh['skinning']) {
                    bX['setOptional'](bP, bi, 'bindMatrix'),
                    bX['setOptional'](bP, bi, 'bindMatrixInverse');
                    var c0 = bi['skeleton'];
                    if (c0) {
                        var c1 = c0['bones'];
                        if (bR['floatVertexTextures']) {
                            if (void 0x0 === c0['boneTexture']) {
                                var c2 = Math['sqrt'](0x4 * c1['length']);
                                c2 = e2['ceilPowerOfTwo'](c2),
                                c2 = Math['max'](c2, 0x4);
                                var c3 = new Float32Array(c2 * c2 * 0x4);
                                c3['set'](c0['boneMatrices']);
                                var c4 = new mo(c3,c2,c2,d9,d1);
                                c4['needsUpdate'] = !0x0,
                                c0['boneMatrices'] = c3,
                                c0['boneTexture'] = c4,
                                c0['boneTextureSize'] = c2;
                            }
                            bX['setValue'](bP, 'boneTexture', c0['boneTexture'], bW),
                            bX['setValue'](bP, 'boneTextureSize', c0['boneTextureSize']);
                        } else
                            bX['setOptional'](bP, c0, 'boneMatrices');
                    }
                }
                return bN && (bX['setValue'](bP, 'toneMappingExposure', c8['toneMappingExposure']),
                bX['setValue'](bP, 'toneMappingWhitePoint', c8['toneMappingWhitePoint']),
                bh['lights'] && (bL = bQ,
                (bK = bY)['ambientLightColor']['needsUpdate'] = bL,
                bK['lightProbe']['needsUpdate'] = bL,
                bK['directionalLights']['needsUpdate'] = bL,
                bK['pointLights']['needsUpdate'] = bL,
                bK['spotLights']['needsUpdate'] = bL,
                bK['rectAreaLights']['needsUpdate'] = bL,
                bK['hemisphereLights']['needsUpdate'] = bL),
                bg && bh['fog'] && function(bf, bg) {
                    bf['fogColor']['value']['copy'](bg['color']),
                    bg['isFog'] ? (bf['fogNear']['value'] = bg['near'],
                    bf['fogFar']['value'] = bg['far']) : bg['isFogExp2'] && (bf['fogDensity']['value'] = bg['density']);
                }(bY, bg),
                bh['isMeshBasicMaterial'] ? cO(bY, bh) : bh['isMeshLambertMaterial'] ? (cO(bY, bh),
                function(bf, bg) {
                    bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']);
                }(bY, bh)) : bh['isMeshPhongMaterial'] ? (cO(bY, bh),
                bh['isMeshToonMaterial'] ? function(bf, bg) {
                    cP(bf, bg),
                    bg['gradientMap'] && (bf['gradientMap']['value'] = bg['gradientMap']);
                }(bY, bh) : cP(bY, bh)) : bh['isMeshStandardMaterial'] ? (cO(bY, bh),
                bh['isMeshPhysicalMaterial'] ? function(bf, bg) {
                    cQ(bf, bg),
                    bf['reflectivity']['value'] = bg['reflectivity'],
                    bf['clearCoat']['value'] = bg['clearCoat'],
                    bf['clearCoatRoughness']['value'] = bg['clearCoatRoughness'];
                }(bY, bh) : cQ(bY, bh)) : bh['isMeshMatcapMaterial'] ? (cO(bY, bh),
                function(bf, bg) {
                    bg['matcap'] && (bf['matcap']['value'] = bg['matcap']);
                    bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
                    bf['bumpScale']['value'] = bg['bumpScale'],
                    bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
                    bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
                    bf['normalScale']['value']['copy'](bg['normalScale']),
                    bg['side'] === bU && bf['normalScale']['value']['negate']());
                    bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                    bf['displacementScale']['value'] = bg['displacementScale'],
                    bf['displacementBias']['value'] = bg['displacementBias']);
                }(bY, bh)) : bh['isMeshDepthMaterial'] ? (cO(bY, bh),
                function(bf, bg) {
                    bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                    bf['displacementScale']['value'] = bg['displacementScale'],
                    bf['displacementBias']['value'] = bg['displacementBias']);
                }(bY, bh)) : bh['isMeshDistanceMaterial'] ? (cO(bY, bh),
                function(bf, bg) {
                    bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                    bf['displacementScale']['value'] = bg['displacementScale'],
                    bf['displacementBias']['value'] = bg['displacementBias']);
                    bf['referencePosition']['value']['copy'](bg['referencePosition']),
                    bf['nearDistance']['value'] = bg['nearDistance'],
                    bf['farDistance']['value'] = bg['farDistance'];
                }(bY, bh)) : bh['isMeshNormalMaterial'] ? (cO(bY, bh),
                function(bf, bg) {
                    bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
                    bf['bumpScale']['value'] = bg['bumpScale'],
                    bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1));
                    bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
                    bf['normalScale']['value']['copy'](bg['normalScale']),
                    bg['side'] === bU && bf['normalScale']['value']['negate']());
                    bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                    bf['displacementScale']['value'] = bg['displacementScale'],
                    bf['displacementBias']['value'] = bg['displacementBias']);
                }(bY, bh)) : bh['isLineBasicMaterial'] ? (function(bf, bg) {
                    bf['diffuse']['value']['copy'](bg['color']),
                    bf['opacity']['value'] = bg['opacity'];
                }(bY, bh),
                bh['isLineDashedMaterial'] && function(bf, bg) {
                    bf['dashSize']['value'] = bg['dashSize'],
                    bf['totalSize']['value'] = bg['dashSize'] + bg['gapSize'],
                    bf['scale']['value'] = bg['scale'];
                }(bY, bh)) : bh['isPointsMaterial'] ? function(bf, bg) {
                    bf['diffuse']['value']['copy'](bg['color']),
                    bf['opacity']['value'] = bg['opacity'],
                    bf['size']['value'] = bg['size'] * co,
                    bf['scale']['value'] = 0.5 * cn,
                    bf['map']['value'] = bg['map'],
                    null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](),
                    bf['uvTransform']['value']['copy'](bg['map']['matrix']));
                }(bY, bh) : bh['isSpriteMaterial'] ? function(bf, bg) {
                    bf['diffuse']['value']['copy'](bg['color']),
                    bf['opacity']['value'] = bg['opacity'],
                    bf['rotation']['value'] = bg['rotation'],
                    bf['map']['value'] = bg['map'],
                    null !== bg['map'] && (!0x0 === bg['map']['matrixAutoUpdate'] && bg['map']['updateMatrix'](),
                    bf['uvTransform']['value']['copy'](bg['map']['matrix']));
                }(bY, bh) : bh['isShadowMaterial'] && (bY['color']['value']['copy'](bh['color']),
                bY['opacity']['value'] = bh['opacity']),
                void 0x0 !== bY['ltc_1'] && (bY['ltc_1']['value'] = xn['LTC_1']),
                void 0x0 !== bY['ltc_2'] && (bY['ltc_2']['value'] = xn['LTC_2']),
                VF['upload'](bP, bF['uniformsList'], bY, bW)),
                bh['isShaderMaterial'] && !0x0 === bh['uniformsNeedUpdate'] && (VF['upload'](bP, bF['uniformsList'], bY, bW),
                bh['uniformsNeedUpdate'] = !0x1),
                bh['isSpriteMaterial'] && bX['setValue'](bP, 'center', bi['center']),
                bX['setValue'](bP, 'modelViewMatrix', bi['modelViewMatrix']),
                bX['setValue'](bP, 'normalMatrix', bi['normalMatrix']),
                bX['setValue'](bP, 'modelMatrix', bi['matrixWorld']),
                bT;
            }
            function cO(bf, bg) {
                var bh;
                bf['opacity']['value'] = bg['opacity'],
                bg['color'] && bf['diffuse']['value']['copy'](bg['color']),
                bg['emissive'] && bf['emissive']['value']['copy'](bg['emissive'])['multiplyScalar'](bg['emissiveIntensity']),
                bg['map'] && (bf['map']['value'] = bg['map']),
                bg['alphaMap'] && (bf['alphaMap']['value'] = bg['alphaMap']),
                bg['specularMap'] && (bf['specularMap']['value'] = bg['specularMap']),
                bg['envMap'] && (bf['envMap']['value'] = bg['envMap'],
                bf['flipEnvMap']['value'] = bg['envMap']['isCubeTexture'] ? -0x1 : 0x1,
                bf['reflectivity']['value'] = bg['reflectivity'],
                bf['refractionRatio']['value'] = bg['refractionRatio'],
                bf['maxMipLevel']['value'] = bV['get'](bg['envMap'])['__maxMipLevel']),
                bg['lightMap'] && (bf['lightMap']['value'] = bg['lightMap'],
                bf['lightMapIntensity']['value'] = bg['lightMapIntensity']),
                bg['aoMap'] && (bf['aoMap']['value'] = bg['aoMap'],
                bf['aoMapIntensity']['value'] = bg['aoMapIntensity']),
                bg['map'] ? bh = bg['map'] : bg['specularMap'] ? bh = bg['specularMap'] : bg['displacementMap'] ? bh = bg['displacementMap'] : bg['normalMap'] ? bh = bg['normalMap'] : bg['bumpMap'] ? bh = bg['bumpMap'] : bg['roughnessMap'] ? bh = bg['roughnessMap'] : bg['metalnessMap'] ? bh = bg['metalnessMap'] : bg['alphaMap'] ? bh = bg['alphaMap'] : bg['emissiveMap'] && (bh = bg['emissiveMap']),
                void 0x0 !== bh && (bh['isWebGLRenderTarget'] && (bh = bh['texture']),
                !0x0 === bh['matrixAutoUpdate'] && bh['updateMatrix'](),
                bf['uvTransform']['value']['copy'](bh['matrix']));
            }
            function cP(bf, bg) {
                bf['specular']['value']['copy'](bg['specular']),
                bf['shininess']['value'] = Math['max'](bg['shininess'], 0.0001),
                bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']),
                bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
                bf['bumpScale']['value'] = bg['bumpScale'],
                bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)),
                bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
                bf['normalScale']['value']['copy'](bg['normalScale']),
                bg['side'] === bU && bf['normalScale']['value']['negate']()),
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                bf['displacementScale']['value'] = bg['displacementScale'],
                bf['displacementBias']['value'] = bg['displacementBias']);
            }
            function cQ(bf, bg) {
                bf['roughness']['value'] = bg['roughness'],
                bf['metalness']['value'] = bg['metalness'],
                bg['roughnessMap'] && (bf['roughnessMap']['value'] = bg['roughnessMap']),
                bg['metalnessMap'] && (bf['metalnessMap']['value'] = bg['metalnessMap']),
                bg['emissiveMap'] && (bf['emissiveMap']['value'] = bg['emissiveMap']),
                bg['bumpMap'] && (bf['bumpMap']['value'] = bg['bumpMap'],
                bf['bumpScale']['value'] = bg['bumpScale'],
                bg['side'] === bU && (bf['bumpScale']['value'] *= -0x1)),
                bg['normalMap'] && (bf['normalMap']['value'] = bg['normalMap'],
                bf['normalScale']['value']['copy'](bg['normalScale']),
                bg['side'] === bU && bf['normalScale']['value']['negate']()),
                bg['displacementMap'] && (bf['displacementMap']['value'] = bg['displacementMap'],
                bf['displacementScale']['value'] = bg['displacementScale'],
                bf['displacementBias']['value'] = bg['displacementBias']),
                bg['envMap'] && (bf['envMapIntensity']['value'] = bg['envMapIntensity']);
            }
            cJ['setAnimationLoop'](function(bf) {
                cC['isPresenting']() || cI && cI(bf);
            }),
            'undefined' != typeof window && cJ['setContext'](window),
            this['setAnimationLoop'] = function(bf) {
                cI = bf,
                cC['setAnimationLoop'](bf),
                cJ['start']();
            }
            ,
            this['render'] = function(bf, bg) {
                var bh, bi;
                if (void 0x0 !== arguments[0x2] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20renderTarget\x20argument\x20has\x20been\x20removed.\x20Use\x20.setRenderTarget()\x20instead.'),
                bh = arguments[0x2]),
                void 0x0 !== arguments[0x3] && (console['warn']('THREE.WebGLRenderer.render():\x20the\x20forceClear\x20argument\x20has\x20been\x20removed.\x20Use\x20.clear()\x20instead.'),
                bi = arguments[0x3]),
                bg && bg['isCamera']) {
                    if (!c9) {
                        cg['geometry'] = null,
                        cg['program'] = null,
                        cg['wireframe'] = !0x1,
                        cf = -0x1,
                        ch = null,
                        !0x0 === bf['autoUpdate'] && bf['updateMatrixWorld'](),
                        null === bg['parent'] && bg['updateMatrixWorld'](),
                        cC['enabled'] && (bg = cC['getCamera'](bg)),
                        (bO = c2['get'](bf, bg))['init'](),
                        bf['onBeforeRender'](c8, bf, bg, bh || cd),
                        cw['multiplyMatrices'](bg['projectionMatrix'], bg['matrixWorldInverse']),
                        cs['setFromMatrix'](cw),
                        cv = this['localClippingEnabled'],
                        cu = ct['init'](this['clippingPlanes'], cv, bg),
                        (bN = c1['get'](bf, bg))['init'](),
                        function bf(bg, bh, bi, bF) {
                            if (!0x1 === bg['visible'])
                                return;
                            var bG = bg['layers']['test'](bh['layers']);
                            if (bG)
                                if (bg['isGroup'])
                                    bi = bg['renderOrder'];
                                else if (bg['isLight'])
                                    bO['pushLight'](bg),
                                    bg['castShadow'] && bO['pushShadow'](bg);
                                else if (bg['isSprite']) {
                                    if (!bg['frustumCulled'] || cs['intersectsSprite'](bg)) {
                                        bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                                        var bH = bZ['update'](bg)
                                          , bI = bg['material'];
                                        bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                                    }
                                } else if (bg['isImmediateRenderObject'])
                                    bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw),
                                    bN['push'](bg, null, bg['material'], bi, cx['z'], null);
                                else if ((bg['isMesh'] || bg['isLine'] || bg['isPoints']) && (bg['isSkinnedMesh'] && bg['skeleton']['update'](),
                                !bg['frustumCulled'] || cs['intersectsObject'](bg))) {
                                    bF && cx['setFromMatrixPosition'](bg['matrixWorld'])['applyMatrix4'](cw);
                                    var bH = bZ['update'](bg)
                                      , bI = bg['material'];
                                    if (Array['isArray'](bI))
                                        for (var bJ = bH['groups'], bK = 0x0, bL = bJ['length']; bK < bL; bK++) {
                                            var bM = bJ[bK]
                                              , bP = bI[bM['materialIndex']];
                                            bP && bP['visible'] && bN['push'](bg, bH, bP, bi, cx['z'], bM);
                                        }
                                    else
                                        bI['visible'] && bN['push'](bg, bH, bI, bi, cx['z'], null);
                                }
                            var bQ = bg['children'];
                            for (var bK = 0x0, bL = bQ['length']; bK < bL; bK++)
                                bf(bQ[bK], bh, bi, bF);
                        }(bf, bg, 0x0, c8['sortObjects']),
                        !0x0 === c8['sortObjects'] && bN['sort'](),
                        cu && ct['beginShadows']();
                        var bF = bO['state']['shadowsArray'];
                        cD['render'](bF, bf, bg),
                        bO['setupLights'](bg),
                        cu && ct['endShadows'](),
                        this['info']['autoReset'] && this['info']['reset'](),
                        void 0x0 !== bh && this['setRenderTarget'](bh),
                        c3['render'](bN, bf, bg, bi);
                        var bG = bN['opaque']
                          , bH = bN['transparent'];
                        if (bf['overrideMaterial']) {
                            var bI = bf['overrideMaterial'];
                            bG['length'] && cK(bG, bf, bg, bI),
                            bH['length'] && cK(bH, bf, bg, bI);
                        } else
                            bG['length'] && cK(bG, bf, bg),
                            bH['length'] && cK(bH, bf, bg);
                        bf['onAfterRender'](c8, bf, bg),
                        null !== cd && (bW['updateRenderTargetMipmap'](cd),
                        bW['updateMultisampleRenderTarget'](cd)),
                        bS['buffers']['depth']['setTest'](!0x0),
                        bS['buffers']['depth']['setMask'](!0x0),
                        bS['buffers']['color']['setMask'](!0x0),
                        bS['setPolygonOffset'](!0x1),
                        cC['enabled'] && cC['submitFrame'](),
                        bN = null,
                        bO = null;
                    }
                } else
                    console['error']('THREE.WebGLRenderer.render:\x20camera\x20is\x20not\x20an\x20instance\x20of\x20THREE.Camera.');
            }
            ,
            this['setFramebuffer'] = function(bf) {
                ca !== bf && bP['bindFramebuffer'](0x8d40, bf),
                ca = bf;
            }
            ,
            this['getActiveCubeFace'] = function() {
                return cb;
            }
            ,
            this['getActiveMipMapLevel'] = function() {
                return cc;
            }
            ,
            this['getRenderTarget'] = function() {
                return cd;
            }
            ,
            this['setRenderTarget'] = function(bf, bg, bh) {
                cd = bf,
                cb = bg,
                cc = bh,
                bf && void 0x0 === bV['get'](bf)['__webglFramebuffer'] && bW['setupRenderTarget'](bf);
                var bi = ca
                  , bF = !0x1;
                if (bf) {
                    var bG = bV['get'](bf)['__webglFramebuffer'];
                    bf['isWebGLRenderTargetCube'] ? (bi = bG[bg || 0x0],
                    bF = !0x0) : bi = bf['isWebGLMultisampleRenderTarget'] ? bV['get'](bf)['__webglMultisampledFramebuffer'] : bG,
                    cj['copy'](bf['viewport']),
                    ck['copy'](bf['scissor']),
                    cl = bf['scissorTest'];
                } else
                    cj['copy'](cp)['multiplyScalar'](co),
                    ck['copy'](cq)['multiplyScalar'](co),
                    cl = cr;
                if (ce !== bi && (bP['bindFramebuffer'](0x8d40, bi),
                ce = bi),
                bS['viewport'](cj),
                bS['scissor'](ck),
                bS['setScissorTest'](cl),
                bF) {
                    var bH = bV['get'](bf['texture']);
                    bP['framebufferTexture2D'](0x8d40, 0x8ce0, 0x8515 + (bg || 0x0), bH['__webglTexture'], bh || 0x0);
                }
            }
            ,
            this['readRenderTargetPixels'] = function(bf, bg, bh, bi, bF, bG, bH) {
                if (bf && bf['isWebGLRenderTarget']) {
                    var bI = bV['get'](bf)['__webglFramebuffer'];
                    if (bf['isWebGLRenderTargetCube'] && void 0x0 !== bH && (bI = bI[bH]),
                    bI) {
                        var bJ = !0x1;
                        bI !== ce && (bP['bindFramebuffer'](0x8d40, bI),
                        bJ = !0x0);
                        try {
                            var bK = bf['texture']
                              , bL = bK['format']
                              , bM = bK['type'];
                            if (bL !== d9 && c7['convert'](bL) !== bP['getParameter'](0x8b9b))
                                return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20RGBA\x20or\x20implementation\x20defined\x20format.');
                            if (!(bM === cV || c7['convert'](bM) === bP['getParameter'](0x8b9a) || bM === d1 && (bR['isWebGL2'] || bQ['get']('OES_texture_float') || bQ['get']('WEBGL_color_buffer_float')) || bM === d2 && (bR['isWebGL2'] ? bQ['get']('EXT_color_buffer_float') : bQ['get']('EXT_color_buffer_half_float'))))
                                return void console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20in\x20UnsignedByteType\x20or\x20implementation\x20defined\x20type.');
                            0x8cd5 === bP['checkFramebufferStatus'](0x8d40) ? bg >= 0x0 && bg <= bf['width'] - bi && bh >= 0x0 && bh <= bf['height'] - bF && bP['readPixels'](bg, bh, bi, bF, c7['convert'](bL), c7['convert'](bM), bG) : console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20readPixels\x20from\x20renderTarget\x20failed.\x20Framebuffer\x20not\x20complete.');
                        } finally {
                            bJ && bP['bindFramebuffer'](0x8d40, ce);
                        }
                    }
                } else
                    console['error']('THREE.WebGLRenderer.readRenderTargetPixels:\x20renderTarget\x20is\x20not\x20THREE.WebGLRenderTarget.');
            }
            ,
            this['copyFramebufferToTexture'] = function(bf, bg, bh) {
                var bi = bg['image']['width']
                  , bF = bg['image']['height']
                  , bG = c7['convert'](bg['format']);
                bW['setTexture2D'](bg, 0x0),
                bP['copyTexImage2D'](0xde1, bh || 0x0, bG, bf['x'], bf['y'], bi, bF, 0x0);
            }
            ,
            this['copyTextureToTexture'] = function(bf, bg, bh, bi) {
                var bF = bg['image']['width']
                  , bG = bg['image']['height']
                  , bH = c7['convert'](bh['format'])
                  , bI = c7['convert'](bh['type']);
                bW['setTexture2D'](bh, 0x0),
                bg['isDataTexture'] ? bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bF, bG, bH, bI, bg['image']['data']) : bP['texSubImage2D'](0xde1, bi || 0x0, bf['x'], bf['y'], bH, bI, bg['image']);
            }
            ;
        }
        function ae3(bf, bg) {
            this['name'] = '',
            this['color'] = new w7(bf),
            this['density'] = void 0x0 !== bg ? bg : 0.00025;
        }
        function ae6(bf, bg, bh) {
            this['name'] = '',
            this['color'] = new w7(bf),
            this['near'] = void 0x0 !== bg ? bg : 0x1,
            this['far'] = void 0x0 !== bh ? bh : 0x3e8;
        }
        function aea() {
            yT['call'](this),
            this['type'] = 'Scene',
            this['background'] = null,
            this['fog'] = null,
            this['overrideMaterial'] = null,
            this['autoUpdate'] = !0x0;
        }
        function aeb(bf, bg) {
            this['array'] = bf,
            this['stride'] = bg,
            this['count'] = void 0x0 !== bf ? bf['length'] / bg : 0x0,
            this['dynamic'] = !0x1,
            this['updateRange'] = {
                'offset': 0x0,
                'count': -0x1
            },
            this['version'] = 0x0;
        }
        function aee(bf, bg, bh, bi) {
            this['data'] = bf,
            this['itemSize'] = bg,
            this['offset'] = bh,
            this['normalized'] = !0x0 === bi;
        }
        function aej(bf) {
            Kf['call'](this),
            this['type'] = 'SpriteMaterial',
            this['color'] = new w7(0xffffff),
            this['map'] = null,
            this['rotation'] = 0x0,
            this['sizeAttenuation'] = !0x0,
            this['lights'] = !0x1,
            this['transparent'] = !0x0,
            this['setValues'](bf);
        }
        function ael(bf) {
            if (yT['call'](this),
            this['type'] = 'Sprite',
            void 0x0 === a6I) {
                a6I = new Gf();
                var bg = new aeb(new Float32Array([-0.5, -0.5, 0x0, 0x0, 0x0, 0.5, -0.5, 0x0, 0x1, 0x0, 0.5, 0.5, 0x0, 0x1, 0x1, -0.5, 0.5, 0x0, 0x0, 0x1]),0x5);
                a6I['setIndex']([0x0, 0x1, 0x2, 0x0, 0x2, 0x3]),
                a6I['addAttribute']('position', new aee(bg,0x3,0x0,!0x1)),
                a6I['addAttribute']('uv', new aee(bg,0x2,0x3,!0x1));
            }
            this['geometry'] = a6I,
            this['material'] = void 0x0 !== bf ? bf : new aej(),
            this['center'] = new eC(0.5,0.5);
        }
        function aeo() {
            yT['call'](this),
            this['type'] = 'LOD',
            Object['defineProperties'](this, {
                'levels': {
                    'enumerable': !0x0,
                    'value': []
                }
            });
        }
        function aep(bf, bg) {
            bf && bf['isGeometry'] && console['error']('THREE.SkinnedMesh\x20no\x20longer\x20supports\x20THREE.Geometry.\x20Use\x20THREE.BufferGeometry\x20instead.'),
            KY['call'](this, bf, bg),
            this['type'] = 'SkinnedMesh',
            this['bindMode'] = 'attached',
            this['bindMatrix'] = new mR(),
            this['bindMatrixInverse'] = new mR();
        }
        function aes(bf, bg) {
            if (bf = bf || [],
            this['bones'] = bf['slice'](0x0),
            this['boneMatrices'] = new Float32Array(0x10 * this['bones']['length']),
            void 0x0 === bg)
                this['calculateInverses']();
            else if (this['bones']['length'] === bg['length'])
                this['boneInverses'] = bg['slice'](0x0);
            else {
                console['warn']('THREE.Skeleton\x20boneInverses\x20is\x20the\x20wrong\x20length.'),
                this['boneInverses'] = [];
                for (var bh = 0x0, bi = this['bones']['length']; bh < bi; bh++)
                    this['boneInverses']['push'](new mR());
            }
        }
        function aex() {
            yT['call'](this),
            this['type'] = 'Bone';
        }
        function aey(bf) {
            Kf['call'](this),
            this['type'] = 'LineBasicMaterial',
            this['color'] = new w7(0xffffff),
            this['linewidth'] = 0x1,
            this['linecap'] = 'round',
            this['linejoin'] = 'round',
            this['lights'] = !0x1,
            this['setValues'](bf);
        }
        function aeA(bf, bg, bh) {
            0x1 === bh && console['error']('THREE.Line:\x20parameter\x20THREE.LinePieces\x20no\x20longer\x20supported.\x20Use\x20THREE.LineSegments\x20instead.'),
            yT['call'](this),
            this['type'] = 'Line',
            this['geometry'] = void 0x0 !== bf ? bf : new Gf(),
            this['material'] = void 0x0 !== bg ? bg : new aey({
                'color': 0xffffff * Math['random']()
            });
        }
        function aeE(bf, bg) {
            aeA['call'](this, bf, bg),
            this['type'] = 'LineSegments';
        }
        function aeH(bf, bg) {
            aeA['call'](this, bf, bg),
            this['type'] = 'LineLoop';
        }
        function aeK(bf) {
            Kf['call'](this),
            this['type'] = 'PointsMaterial',
            this['color'] = new w7(0xffffff),
            this['map'] = null,
            this['size'] = 0x1,
            this['sizeAttenuation'] = !0x0,
            this['morphTargets'] = !0x1,
            this['lights'] = !0x1,
            this['setValues'](bf);
        }
        function aeM(bf, bg) {
            yT['call'](this),
            this['type'] = 'Points',
            this['geometry'] = void 0x0 !== bf ? bf : new Gf(),
            this['material'] = void 0x0 !== bg ? bg : new aeK({
                'color': 0xffffff * Math['random']()
            });
        }
        function aeP(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
            lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ),
            this['format'] = void 0x0 !== bH ? bH : d8,
            this['minFilter'] = void 0x0 !== bG ? bG : cS,
            this['magFilter'] = void 0x0 !== bF ? bF : cS,
            this['generateMipmaps'] = !0x1;
        }
        function aeZ(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM) {
            lW['call'](this, null, bG, bH, bI, bJ, bK, bi, bF, bL, bM),
            this['image'] = {
                'width': bg,
                'height': bh
            },
            this['mipmaps'] = bf,
            this['flipY'] = !0x1,
            this['generateMipmaps'] = !0x1;
        }
        function afc(bf, bg, bh, bi, bF, bG, bH, bI, bJ) {
            lW['call'](this, bf, bg, bh, bi, bF, bG, bH, bI, bJ),
            this['needsUpdate'] = !0x0;
        }
        function afm(bf, bg, bh, bi, bF, bG, bH, bI, bJ, bK) {
            if ((bK = void 0x0 !== bK ? bK : dd) !== dd && bK !== de)
                throw new Error('DepthTexture\x20format\x20must\x20be\x20either\x20THREE.DepthFormat\x20or\x20THREE.DepthStencilFormat');
            void 0x0 === bh && bK === dd && (bh = cY),
            void 0x0 === bh && bK === de && (bh = d6),
            lW['call'](this, null, bi, bF, bG, bH, bI, bK, bh, bJ),
            this['image'] = {
                'width': bf,
                'height': bg
            },
            this['magFilter'] = void 0x0 !== bH ? bH : cP,
            this['minFilter'] = void 0x0 !== bI ? bI : cP,
            this['flipY'] = !0x1,
            this['generateMipmaps'] = !0x1;
        }
        function afx(bf) {
            Gf['call'](this),
            this['type'] = 'WireframeGeometry';
            var bg, bh, bi, bF, bG, bH, bI, bJ, bK, bL, bM = [], bN = [0x0, 0x0], bO = {}, bP = ['a', 'b', 'c'];
            if (bf && bf['isGeometry']) {
                var bQ = bf['faces'];
                for (bg = 0x0,
                bi = bQ['length']; bg < bi; bg++) {
                    var bR = bQ[bg];
                    for (bh = 0x0; bh < 0x3; bh++)
                        bI = bR[bP[bh]],
                        bJ = bR[bP[(bh + 0x1) % 0x3]],
                        bN[0x0] = Math['min'](bI, bJ),
                        bN[0x1] = Math['max'](bI, bJ),
                        void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
                            'index1': bN[0x0],
                            'index2': bN[0x1]
                        });
                }
                for (bK in bO)
                    bH = bO[bK],
                    bL = bf['vertices'][bH['index1']],
                    bM['push'](bL['x'], bL['y'], bL['z']),
                    bL = bf['vertices'][bH['index2']],
                    bM['push'](bL['x'], bL['y'], bL['z']);
            } else if (bf && bf['isBufferGeometry']) {
                var bS, bT, bU, bV, bW, bX, bY;
                if (bL = new eK(),
                null !== bf['index']) {
                    for (bS = bf['attributes']['position'],
                    bT = bf['index'],
                    0x0 === (bU = bf['groups'])['length'] && (bU = [{
                        'start': 0x0,
                        'count': bT['count'],
                        'materialIndex': 0x0
                    }]),
                    bF = 0x0,
                    bG = bU['length']; bF < bG; ++bF)
                        for (bg = bW = (bV = bU[bF])['start'],
                        bi = bW + bV['count']; bg < bi; bg += 0x3)
                            for (bh = 0x0; bh < 0x3; bh++)
                                bI = bT['getX'](bg + bh),
                                bJ = bT['getX'](bg + (bh + 0x1) % 0x3),
                                bN[0x0] = Math['min'](bI, bJ),
                                bN[0x1] = Math['max'](bI, bJ),
                                void 0x0 === bO[bK = bN[0x0] + ',' + bN[0x1]] && (bO[bK] = {
                                    'index1': bN[0x0],
                                    'index2': bN[0x1]
                                });
                    for (bK in bO)
                        bH = bO[bK],
                        bL['fromBufferAttribute'](bS, bH['index1']),
                        bM['push'](bL['x'], bL['y'], bL['z']),
                        bL['fromBufferAttribute'](bS, bH['index2']),
                        bM['push'](bL['x'], bL['y'], bL['z']);
                } else
                    for (bg = 0x0,
                    bi = (bS = bf['attributes']['position'])['count'] / 0x3; bg < bi; bg++)
                        for (bh = 0x0; bh < 0x3; bh++)
                            bX = 0x3 * bg + bh,
                            bL['fromBufferAttribute'](bS, bX),
                            bM['push'](bL['x'], bL['y'], bL['z']),
                            bY = 0x3 * bg + (bh + 0x1) % 0x3,
                            bL['fromBufferAttribute'](bS, bY),
                            bM['push'](bL['x'], bL['y'], bL['z']);
            }
            this['addAttribute']('position', new Be(bM,0x3));
        }
        function afW(bf, bg, bh) {
            AH['call'](this),
            this['type'] = 'ParametricGeometry',
            this['parameters'] = {
                'func': bf,
                'slices': bg,
                'stacks': bh
            },
            this['fromBufferGeometry'](new ag0(bf,bg,bh)),
            this['mergeVertices']();
        }
        function ag0(bf, bg, bh) {
            Gf['call'](this),
            this['type'] = 'ParametricBufferGeometry',
            this['parameters'] = {
                'func': bf,
                'slices': bg,
                'stacks': bh
            };
            var bi, bF, bG = [], bH = [], bI = [], bJ = [], bK = new eK(), bL = new eK(), bM = new eK(), bN = new eK(), bO = new eK();
            bf['length'] < 0x3 && console['error']('THREE.ParametricGeometry:\x20Function\x20must\x20now\x20modify\x20a\x20Vector3\x20as\x20third\x20parameter.');
            var bP = bg + 0x1;
            for (bi = 0x0; bi <= bh; bi++) {
                var bQ = bi / bh;
                for (bF = 0x0; bF <= bg; bF++) {
                    var bR = bF / bg;
                    bf(bR, bQ, bL),
                    bH['push'](bL['x'], bL['y'], bL['z']),
                    bR - 0.00001 >= 0x0 ? (bf(bR - 0.00001, bQ, bM),
                    bN['subVectors'](bL, bM)) : (bf(bR + 0.00001, bQ, bM),
                    bN['subVectors'](bM, bL)),
                    bQ - 0.00001 >= 0x0 ? (bf(bR, bQ - 0.00001, bM),
                    bO['subVectors'](bL, bM)) : (bf(bR, bQ + 0.00001, bM),
                    bO['subVectors'](bM, bL)),
                    bK['crossVectors'](bN, bO)['normalize'](),
                    bI['push'](bK['x'], bK['y'], bK['z']),
                    bJ['push'](bR, bQ);
                }
            }
            for (bi = 0x0; bi < bh; bi++)
                for (bF = 0x0; bF < bg; bF++) {
                    var bS = bi * bP + bF
                      , bT = bi * bP + bF + 0x1
                      , bU = (bi + 0x1) * bP + bF + 0x1
                      , bV = (bi + 0x1) * bP + bF;
                    bG['push'](bS, bT, bV),
                    bG['push'](bT, bU, bV);
                }
            this['setIndex'](bG),
            this['addAttribute']('position', new Be(bH,0x3)),
            this['addAttribute']('normal', new Be(bI,0x3)),
            this['addAttribute']('uv', new Be(bJ,0x2));
        }
        function agm(bf, bg, bh, bi) {
            AH['call'](this),
            this['type'] = 'PolyhedronGeometry',
            this['parameters'] = {
                'vertices': bf,
                'indices': bg,
                'radius': bh,
                'detail': bi
            },
            this['fromBufferGeometry'](new agr(bf,bg,bh,bi)),
            this['mergeVertices']();
        }
        function agr(bf, bg, bh, bi) {
            Gf['call'](this),
            this['type'] = 'PolyhedronBufferGeometry',
            this['parameters'] = {
                'vertices': bf,
                'indices': bg,
                'radius': bh,
                'detail': bi
            },
            bh = bh || 0x1;
            var bF = []
              , bG = [];
            function bH(bf, bg, bh, bi) {
                var bF, bG, bH = Math['pow'](0x2, bi), bJ = [];
                for (bF = 0x0; bF <= bH; bF++) {
                    bJ[bF] = [];
                    var bK = bf['clone']()['lerp'](bh, bF / bH)
                      , bL = bg['clone']()['lerp'](bh, bF / bH)
                      , bM = bH - bF;
                    for (bG = 0x0; bG <= bM; bG++)
                        bJ[bF][bG] = 0x0 === bG && bF === bH ? bK : bK['clone']()['lerp'](bL, bG / bM);
                }
                for (bF = 0x0; bF < bH; bF++)
                    for (bG = 0x0; bG < 0x2 * (bH - bF) - 0x1; bG++) {
                        var bN = Math['floor'](bG / 0x2);
                        bG % 0x2 == 0x0 ? (bI(bJ[bF][bN + 0x1]),
                        bI(bJ[bF + 0x1][bN]),
                        bI(bJ[bF][bN])) : (bI(bJ[bF][bN + 0x1]),
                        bI(bJ[bF + 0x1][bN + 0x1]),
                        bI(bJ[bF + 0x1][bN]));
                    }
            }
            function bI(bf) {
                bF['push'](bf['x'], bf['y'], bf['z']);
            }
            function bJ(bg, bh) {
                var bi = 0x3 * bg;
                bh['x'] = bf[bi + 0x0],
                bh['y'] = bf[bi + 0x1],
                bh['z'] = bf[bi + 0x2];
            }
            function bK(bf, bg, bh, bi) {
                bi < 0x0 && 0x1 === bf['x'] && (bG[bg] = bf['x'] - 0x1),
                0x0 === bh['x'] && 0x0 === bh['z'] && (bG[bg] = bi / 0x2 / Math['PI'] + 0.5);
            }
            function bL(bf) {
                return Math['atan2'](bf['z'], -bf['x']);
            }
            !function(bf) {
                for (var bh = new eK(), bi = new eK(), bF = new eK(), bG = 0x0; bG < bg['length']; bG += 0x3)
                    bJ(bg[bG + 0x0], bh),
                    bJ(bg[bG + 0x1], bi),
                    bJ(bg[bG + 0x2], bF),
                    bH(bh, bi, bF, bf);
            }(bi = bi || 0x0),
            function(bf) {
                for (var bg = new eK(), bh = 0x0; bh < bF['length']; bh += 0x3)
                    bg['x'] = bF[bh + 0x0],
                    bg['y'] = bF[bh + 0x1],
                    bg['z'] = bF[bh + 0x2],
                    bg['normalize']()['multiplyScalar'](bf),
                    bF[bh + 0x0] = bg['x'],
                    bF[bh + 0x1] = bg['y'],
                    bF[bh + 0x2] = bg['z'];
            }(bh),
            function() {
                for (var bf = new eK(), bg = 0x0; bg < bF['length']; bg += 0x3) {
                    bf['x'] = bF[bg + 0x0],
                    bf['y'] = bF[bg + 0x1],
                    bf['z'] = bF[bg + 0x2];
                    var bh = bL(bf) / 0x2 / Math['PI'] + 0.5
                      , bi = (bH = bf,
                    Math['atan2'](-bH['y'], Math['sqrt'](bH['x'] * bH['x'] + bH['z'] * bH['z'])) / Math['PI'] + 0.5);
                    bG['push'](bh, 0x1 - bi);
                }
                var bH;
                (function() {
                    for (var bf = new eK(), bg = new eK(), bh = new eK(), bi = new eK(), bH = new eC(), bI = new eC(), bJ = new eC(), bM = 0x0, bN = 0x0; bM < bF['length']; bM += 0x9,
                    bN += 0x6) {
                        bf['set'](bF[bM + 0x0], bF[bM + 0x1], bF[bM + 0x2]),
                        bg['set'](bF[bM + 0x3], bF[bM + 0x4], bF[bM + 0x5]),
                        bh['set'](bF[bM + 0x6], bF[bM + 0x7], bF[bM + 0x8]),
                        bH['set'](bG[bN + 0x0], bG[bN + 0x1]),
                        bI['set'](bG[bN + 0x2], bG[bN + 0x3]),
                        bJ['set'](bG[bN + 0x4], bG[bN + 0x5]),
                        bi['copy'](bf)['add'](bg)['add'](bh)['divideScalar'](0x3);
                        var bO = bL(bi);
                        bK(bH, bN + 0x0, bf, bO),
                        bK(bI, bN + 0x2, bg, bO),
                        bK(bJ, bN + 0x4, bh, bO);
                    }
                }(),
                function() {
                    for (var bf = 0x0; bf < bG['length']; bf += 0x6) {
                        var bg = bG[bf + 0x0]
                          , bh = bG[bf + 0x2]
                          , bi = bG[bf + 0x4]
                          , bF = Math['max'](bg, bh, bi)
                          , bH = Math['min'](bg, bh, bi);
                        bF > 0.9 && bH < 0.1 && (bg < 0.2 && (bG[bf + 0x0] += 0x1),
                        bh < 0.2 && (bG[bf + 0x2] += 0x1),
                        bi < 0.2 && (bG[bf + 0x4] += 0x1));
                    }
                }());
            }(),
            this['addAttribute']('position', new Be(bF,0x3)),
            this['addAttribute']('normal', new Be(bF['slice'](),0x3)),
            this['addAttribute']('uv', new Be(bG,0x2)),
            0x0 === bi ? this['computeVertexNormals']() : this['normalizeNormals']();
        }
        function ahr(bf, bg) {
            AH['call'](this),
            this['type'] = 'TetrahedronGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            },
            this['fromBufferGeometry'](new ahu(bf,bg)),
            this['mergeVertices']();
        }
        function ahu(bf, bg) {
            agr['call'](this, [0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1], [0x2, 0x1, 0x0, 0x0, 0x3, 0x2, 0x1, 0x3, 0x0, 0x2, 0x3, 0x1], bf, bg),
            this['type'] = 'TetrahedronBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            };
        }
        function ahx(bf, bg) {
            AH['call'](this),
            this['type'] = 'OctahedronGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            },
            this['fromBufferGeometry'](new ahA(bf,bg)),
            this['mergeVertices']();
        }
        function ahA(bf, bg) {
            agr['call'](this, [0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, -0x1], [0x0, 0x2, 0x4, 0x0, 0x4, 0x3, 0x0, 0x3, 0x5, 0x0, 0x5, 0x2, 0x1, 0x2, 0x5, 0x1, 0x5, 0x3, 0x1, 0x3, 0x4, 0x1, 0x4, 0x2], bf, bg),
            this['type'] = 'OctahedronBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            };
        }
        function ahD(bf, bg) {
            AH['call'](this),
            this['type'] = 'IcosahedronGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            },
            this['fromBufferGeometry'](new ahG(bf,bg)),
            this['mergeVertices']();
        }
        function ahG(bf, bg) {
            var bh = (0x1 + Math['sqrt'](0x5)) / 0x2
              , bi = [-0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, 0x0, 0x0, -0x1, bh, 0x0, 0x1, bh, 0x0, -0x1, -bh, 0x0, 0x1, -bh, bh, 0x0, -0x1, bh, 0x0, 0x1, -bh, 0x0, -0x1, -bh, 0x0, 0x1];
            agr['call'](this, bi, [0x0, 0xb, 0x5, 0x0, 0x5, 0x1, 0x0, 0x1, 0x7, 0x0, 0x7, 0xa, 0x0, 0xa, 0xb, 0x1, 0x5, 0x9, 0x5, 0xb, 0x4, 0xb, 0xa, 0x2, 0xa, 0x7, 0x6, 0x7, 0x1, 0x8, 0x3, 0x9, 0x4, 0x3, 0x4, 0x2, 0x3, 0x2, 0x6, 0x3, 0x6, 0x8, 0x3, 0x8, 0x9, 0x4, 0x9, 0x5, 0x2, 0x4, 0xb, 0x6, 0x2, 0xa, 0x8, 0x6, 0x7, 0x9, 0x8, 0x1], bf, bg),
            this['type'] = 'IcosahedronBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            };
        }
        function ahL(bf, bg) {
            AH['call'](this),
            this['type'] = 'DodecahedronGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            },
            this['fromBufferGeometry'](new ahO(bf,bg)),
            this['mergeVertices']();
        }
        function ahO(bf, bg) {
            var bh = (0x1 + Math['sqrt'](0x5)) / 0x2
              , bi = 0x1 / bh
              , bF = [-0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x0, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, -bi, -bh, 0x0, -bi, bh, 0x0, bi, -bh, 0x0, bi, bh, 0x0, -bh, 0x0, -bi, bh, 0x0, -bi, -bh, 0x0, bi, bh, 0x0, bi];
            agr['call'](this, bF, [0x3, 0xb, 0x7, 0x3, 0x7, 0xf, 0x3, 0xf, 0xd, 0x7, 0x13, 0x11, 0x7, 0x11, 0x6, 0x7, 0x6, 0xf, 0x11, 0x4, 0x8, 0x11, 0x8, 0xa, 0x11, 0xa, 0x6, 0x8, 0x0, 0x10, 0x8, 0x10, 0x2, 0x8, 0x2, 0xa, 0x0, 0xc, 0x1, 0x0, 0x1, 0x12, 0x0, 0x12, 0x10, 0x6, 0xa, 0x2, 0x6, 0x2, 0xd, 0x6, 0xd, 0xf, 0x2, 0x10, 0x12, 0x2, 0x12, 0x3, 0x2, 0x3, 0xd, 0x12, 0x1, 0x9, 0x12, 0x9, 0xb, 0x12, 0xb, 0x3, 0x4, 0xe, 0xc, 0x4, 0xc, 0x0, 0x4, 0x0, 0x8, 0xb, 0x9, 0x5, 0xb, 0x5, 0x13, 0xb, 0x13, 0x7, 0x13, 0x5, 0xe, 0x13, 0xe, 0x4, 0x13, 0x4, 0x11, 0x1, 0xc, 0xe, 0x1, 0xe, 0x5, 0x1, 0x5, 0x9], bf, bg),
            this['type'] = 'DodecahedronBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'detail': bg
            };
        }
        function ahU(bf, bg, bh, bi, bF, bG) {
            AH['call'](this),
            this['type'] = 'TubeGeometry',
            this['parameters'] = {
                'path': bf,
                'tubularSegments': bg,
                'radius': bh,
                'radialSegments': bi,
                'closed': bF
            },
            void 0x0 !== bG && console['warn']('THREE.TubeGeometry:\x20taper\x20has\x20been\x20removed.');
            var bH = new ai2(bf,bg,bh,bi,bF);
            this['tangents'] = bH['tangents'],
            this['normals'] = bH['normals'],
            this['binormals'] = bH['binormals'],
            this['fromBufferGeometry'](bH),
            this['mergeVertices']();
        }
        function ai2(bf, bg, bh, bi, bF) {
            Gf['call'](this),
            this['type'] = 'TubeBufferGeometry',
            this['parameters'] = {
                'path': bf,
                'tubularSegments': bg,
                'radius': bh,
                'radialSegments': bi,
                'closed': bF
            },
            bg = bg || 0x40,
            bh = bh || 0x1,
            bi = bi || 0x8,
            bF = bF || !0x1;
            var bG = bf['computeFrenetFrames'](bg, bF);
            this['tangents'] = bG['tangents'],
            this['normals'] = bG['normals'],
            this['binormals'] = bG['binormals'];
            var bH, bI, bJ = new eK(), bK = new eK(), bL = new eC(), bM = new eK(), bN = [], bO = [], bP = [], bQ = [];
            function bR(bF) {
                bM = bf['getPointAt'](bF / bg, bM);
                var bH = bG['normals'][bF]
                  , bL = bG['binormals'][bF];
                for (bI = 0x0; bI <= bi; bI++) {
                    var bP = bI / bi * Math['PI'] * 0x2
                      , bQ = Math['sin'](bP)
                      , bR = -Math['cos'](bP);
                    bK['x'] = bR * bH['x'] + bQ * bL['x'],
                    bK['y'] = bR * bH['y'] + bQ * bL['y'],
                    bK['z'] = bR * bH['z'] + bQ * bL['z'],
                    bK['normalize'](),
                    bO['push'](bK['x'], bK['y'], bK['z']),
                    bJ['x'] = bM['x'] + bh * bK['x'],
                    bJ['y'] = bM['y'] + bh * bK['y'],
                    bJ['z'] = bM['z'] + bh * bK['z'],
                    bN['push'](bJ['x'], bJ['y'], bJ['z']);
                }
            }
            !function() {
                for (bH = 0x0; bH < bg; bH++)
                    bR(bH);
                bR(!0x1 === bF ? bg : 0x0),
                function() {
                    for (bH = 0x0; bH <= bg; bH++)
                        for (bI = 0x0; bI <= bi; bI++)
                            bL['x'] = bH / bg,
                            bL['y'] = bI / bi,
                            bP['push'](bL['x'], bL['y']);
                }(),
                function() {
                    for (bI = 0x1; bI <= bg; bI++)
                        for (bH = 0x1; bH <= bi; bH++) {
                            var bf = (bi + 0x1) * (bI - 0x1) + (bH - 0x1)
                              , bh = (bi + 0x1) * bI + (bH - 0x1)
                              , bF = (bi + 0x1) * bI + bH
                              , bG = (bi + 0x1) * (bI - 0x1) + bH;
                            bQ['push'](bf, bh, bG),
                            bQ['push'](bh, bF, bG);
                        }
                }();
            }(),
            this['setIndex'](bQ),
            this['addAttribute']('position', new Be(bN,0x3)),
            this['addAttribute']('normal', new Be(bO,0x3)),
            this['addAttribute']('uv', new Be(bP,0x2));
        }
        function aiu(bf, bg, bh, bi, bF, bG, bH) {
            AH['call'](this),
            this['type'] = 'TorusKnotGeometry',
            this['parameters'] = {
                'radius': bf,
                'tube': bg,
                'tubularSegments': bh,
                'radialSegments': bi,
                'p': bF,
                'q': bG
            },
            void 0x0 !== bH && console['warn']('THREE.TorusKnotGeometry:\x20heightScale\x20has\x20been\x20deprecated.\x20Use\x20.scale(\x20x,\x20y,\x20z\x20)\x20instead.'),
            this['fromBufferGeometry'](new aiC(bf,bg,bh,bi,bF,bG)),
            this['mergeVertices']();
        }
        function aiC(bf, bg, bh, bi, bF, bG) {
            Gf['call'](this),
            this['type'] = 'TorusKnotBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'tube': bg,
                'tubularSegments': bh,
                'radialSegments': bi,
                'p': bF,
                'q': bG
            },
            bf = bf || 0x1,
            bg = bg || 0.4,
            bh = Math['floor'](bh) || 0x40,
            bi = Math['floor'](bi) || 0x8,
            bF = bF || 0x2,
            bG = bG || 0x3;
            var bH, bI, bJ = [], bK = [], bL = [], bM = [], bN = new eK(), bO = new eK(), bP = new eK(), bQ = new eK(), bR = new eK(), bS = new eK(), bT = new eK();
            for (bH = 0x0; bH <= bh; ++bH) {
                var bU = bH / bh * bF * Math['PI'] * 0x2;
                for (c2(bU, bF, bG, bf, bP),
                c2(bU + 0.01, bF, bG, bf, bQ),
                bS['subVectors'](bQ, bP),
                bT['addVectors'](bQ, bP),
                bR['crossVectors'](bS, bT),
                bT['crossVectors'](bR, bS),
                bR['normalize'](),
                bT['normalize'](),
                bI = 0x0; bI <= bi; ++bI) {
                    var bV = bI / bi * Math['PI'] * 0x2
                      , bW = -bg * Math['cos'](bV)
                      , bX = bg * Math['sin'](bV);
                    bN['x'] = bP['x'] + (bW * bT['x'] + bX * bR['x']),
                    bN['y'] = bP['y'] + (bW * bT['y'] + bX * bR['y']),
                    bN['z'] = bP['z'] + (bW * bT['z'] + bX * bR['z']),
                    bK['push'](bN['x'], bN['y'], bN['z']),
                    bO['subVectors'](bN, bP)['normalize'](),
                    bL['push'](bO['x'], bO['y'], bO['z']),
                    bM['push'](bH / bh),
                    bM['push'](bI / bi);
                }
            }
            for (bI = 0x1; bI <= bh; bI++)
                for (bH = 0x1; bH <= bi; bH++) {
                    var bY = (bi + 0x1) * (bI - 0x1) + (bH - 0x1)
                      , bZ = (bi + 0x1) * bI + (bH - 0x1)
                      , c0 = (bi + 0x1) * bI + bH
                      , c1 = (bi + 0x1) * (bI - 0x1) + bH;
                    bJ['push'](bY, bZ, c1),
                    bJ['push'](bZ, c0, c1);
                }
            function c2(bf, bg, bh, bi, bF) {
                var bG = Math['cos'](bf)
                  , bH = Math['sin'](bf)
                  , bI = bh / bg * bf
                  , bJ = Math['cos'](bI);
                bF['x'] = bi * (0x2 + bJ) * 0.5 * bG,
                bF['y'] = bi * (0x2 + bJ) * bH * 0.5,
                bF['z'] = bi * Math['sin'](bI) * 0.5;
            }
            this['setIndex'](bJ),
            this['addAttribute']('position', new Be(bK,0x3)),
            this['addAttribute']('normal', new Be(bL,0x3)),
            this['addAttribute']('uv', new Be(bM,0x2));
        }
        function aje(bf, bg, bh, bi, bF) {
            AH['call'](this),
            this['type'] = 'TorusGeometry',
            this['parameters'] = {
                'radius': bf,
                'tube': bg,
                'radialSegments': bh,
                'tubularSegments': bi,
                'arc': bF
            },
            this['fromBufferGeometry'](new ajk(bf,bg,bh,bi,bF)),
            this['mergeVertices']();
        }
        function ajk(bf, bg, bh, bi, bF) {
            Gf['call'](this),
            this['type'] = 'TorusBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'tube': bg,
                'radialSegments': bh,
                'tubularSegments': bi,
                'arc': bF
            },
            bf = bf || 0x1,
            bg = bg || 0.4,
            bh = Math['floor'](bh) || 0x8,
            bi = Math['floor'](bi) || 0x6,
            bF = bF || 0x2 * Math['PI'];
            var bG, bH, bI = [], bJ = [], bK = [], bL = [], bM = new eK(), bN = new eK(), bO = new eK();
            for (bG = 0x0; bG <= bh; bG++)
                for (bH = 0x0; bH <= bi; bH++) {
                    var bP = bH / bi * bF
                      , bQ = bG / bh * Math['PI'] * 0x2;
                    bN['x'] = (bf + bg * Math['cos'](bQ)) * Math['cos'](bP),
                    bN['y'] = (bf + bg * Math['cos'](bQ)) * Math['sin'](bP),
                    bN['z'] = bg * Math['sin'](bQ),
                    bJ['push'](bN['x'], bN['y'], bN['z']),
                    bM['x'] = bf * Math['cos'](bP),
                    bM['y'] = bf * Math['sin'](bP),
                    bO['subVectors'](bN, bM)['normalize'](),
                    bK['push'](bO['x'], bO['y'], bO['z']),
                    bL['push'](bH / bi),
                    bL['push'](bG / bh);
                }
            for (bG = 0x1; bG <= bh; bG++)
                for (bH = 0x1; bH <= bi; bH++) {
                    var bR = (bi + 0x1) * bG + bH - 0x1
                      , bS = (bi + 0x1) * (bG - 0x1) + bH - 0x1
                      , bT = (bi + 0x1) * (bG - 0x1) + bH
                      , bU = (bi + 0x1) * bG + bH;
                    bI['push'](bR, bS, bU),
                    bI['push'](bS, bT, bU);
                }
            this['setIndex'](bI),
            this['addAttribute']('position', new Be(bJ,0x3)),
            this['addAttribute']('normal', new Be(bK,0x3)),
            this['addAttribute']('uv', new Be(bL,0x2));
        }
        Object['assign'](ae3['prototype'], {
            'isFogExp2': !0x0,
            'clone': function() {
                return new ae3(this['color'],this['density']);
            },
            'toJSON': function() {
                return {
                    'type': 'FogExp2',
                    'color': this['color']['getHex'](),
                    'density': this['density']
                };
            }
        }),
        Object['assign'](ae6['prototype'], {
            'isFog': !0x0,
            'clone': function() {
                return new ae6(this['color'],this['near'],this['far']);
            },
            'toJSON': function() {
                return {
                    'type': 'Fog',
                    'color': this['color']['getHex'](),
                    'near': this['near'],
                    'far': this['far']
                };
            }
        }),
        aea['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aea,
            'isScene': !0x0,
            'copy': function(bf, bg) {
                return yT['prototype']['copy']['call'](this, bf, bg),
                null !== bf['background'] && (this['background'] = bf['background']['clone']()),
                null !== bf['fog'] && (this['fog'] = bf['fog']['clone']()),
                null !== bf['overrideMaterial'] && (this['overrideMaterial'] = bf['overrideMaterial']['clone']()),
                this['autoUpdate'] = bf['autoUpdate'],
                this['matrixAutoUpdate'] = bf['matrixAutoUpdate'],
                this;
            },
            'toJSON': function(bf) {
                var bg = yT['prototype']['toJSON']['call'](this, bf);
                return null !== this['background'] && (bg['object']['background'] = this['background']['toJSON'](bf)),
                null !== this['fog'] && (bg['object']['fog'] = this['fog']['toJSON']()),
                bg;
            },
            'dispose': function() {
                this['dispatchEvent']({
                    'type': 'dispose'
                });
            }
        }),
        Object['defineProperty'](aeb['prototype'], 'needsUpdate', {
            'set': function(bf) {
                !0x0 === bf && this['version']++;
            }
        }),
        Object['assign'](aeb['prototype'], {
            'isInterleavedBuffer': !0x0,
            'onUploadCallback': function() {},
            'setArray': function(bf) {
                if (Array['isArray'](bf))
                    throw new TypeError('THREE.BufferAttribute:\x20array\x20should\x20be\x20a\x20Typed\x20Array.');
                return this['count'] = void 0x0 !== bf ? bf['length'] / this['stride'] : 0x0,
                this['array'] = bf,
                this;
            },
            'setDynamic': function(bf) {
                return this['dynamic'] = bf,
                this;
            },
            'copy': function(bf) {
                return this['array'] = new bf['array']['constructor'](bf['array']),
                this['count'] = bf['count'],
                this['stride'] = bf['stride'],
                this['dynamic'] = bf['dynamic'],
                this;
            },
            'copyAt': function(bf, bg, bh) {
                bf *= this['stride'],
                bh *= bg['stride'];
                for (var bi = 0x0, bF = this['stride']; bi < bF; bi++)
                    this['array'][bf + bi] = bg['array'][bh + bi];
                return this;
            },
            'set': function(bf, bg) {
                return void 0x0 === bg && (bg = 0x0),
                this['array']['set'](bf, bg),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'onUpload': function(bf) {
                return this['onUploadCallback'] = bf,
                this;
            }
        }),
        Object['defineProperties'](aee['prototype'], {
            'count': {
                'get': function() {
                    return this['data']['count'];
                }
            },
            'array': {
                'get': function() {
                    return this['data']['array'];
                }
            }
        }),
        Object['assign'](aee['prototype'], {
            'isInterleavedBufferAttribute': !0x0,
            'setX': function(bf, bg) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset']] = bg,
                this;
            },
            'setY': function(bf, bg) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1] = bg,
                this;
            },
            'setZ': function(bf, bg) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2] = bg,
                this;
            },
            'setW': function(bf, bg) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3] = bg,
                this;
            },
            'getX': function(bf) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset']];
            },
            'getY': function(bf) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x1];
            },
            'getZ': function(bf) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x2];
            },
            'getW': function(bf) {
                return this['data']['array'][bf * this['data']['stride'] + this['offset'] + 0x3];
            },
            'setXY': function(bf, bg, bh) {
                return bf = bf * this['data']['stride'] + this['offset'],
                this['data']['array'][bf + 0x0] = bg,
                this['data']['array'][bf + 0x1] = bh,
                this;
            },
            'setXYZ': function(bf, bg, bh, bi) {
                return bf = bf * this['data']['stride'] + this['offset'],
                this['data']['array'][bf + 0x0] = bg,
                this['data']['array'][bf + 0x1] = bh,
                this['data']['array'][bf + 0x2] = bi,
                this;
            },
            'setXYZW': function(bf, bg, bh, bi, bF) {
                return bf = bf * this['data']['stride'] + this['offset'],
                this['data']['array'][bf + 0x0] = bg,
                this['data']['array'][bf + 0x1] = bh,
                this['data']['array'][bf + 0x2] = bi,
                this['data']['array'][bf + 0x3] = bF,
                this;
            }
        }),
        aej['prototype'] = Object['create'](Kf['prototype']),
        aej['prototype']['constructor'] = aej,
        aej['prototype']['isSpriteMaterial'] = !0x0,
        aej['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['map'] = bf['map'],
            this['rotation'] = bf['rotation'],
            this['sizeAttenuation'] = bf['sizeAttenuation'],
            this;
        }
        ,
        ael['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': ael,
            'isSprite': !0x0,
            'raycast': function() {
                var bf = new eK()
                  , bg = new eK()
                  , bh = new eK()
                  , bi = new eC()
                  , bF = new eC()
                  , bG = new mR()
                  , bH = new eK()
                  , bI = new eK()
                  , bJ = new eK()
                  , bK = new eC()
                  , bL = new eC()
                  , bM = new eC();
                function bN(bf, bg, bh, bH, bI, bJ) {
                    bi['subVectors'](bf, bh)['addScalar'](0.5)['multiply'](bH),
                    void 0x0 !== bI ? (bF['x'] = bJ * bi['x'] - bI * bi['y'],
                    bF['y'] = bI * bi['x'] + bJ * bi['y']) : bF['copy'](bi),
                    bf['copy'](bg),
                    bf['x'] += bF['x'],
                    bf['y'] += bF['y'],
                    bf['applyMatrix4'](bG);
                }
                return function(bi, bF) {
                    bg['setFromMatrixScale'](this['matrixWorld']),
                    bG['getInverse'](this['modelViewMatrix'])['premultiply'](this['matrixWorld']),
                    bh['setFromMatrixPosition'](this['modelViewMatrix']);
                    var bO, bP, bQ = this['material']['rotation'];
                    0x0 !== bQ && (bP = Math['cos'](bQ),
                    bO = Math['sin'](bQ));
                    var bR = this['center'];
                    bN(bH['set'](-0.5, -0.5, 0x0), bh, bR, bg, bO, bP),
                    bN(bI['set'](0.5, -0.5, 0x0), bh, bR, bg, bO, bP),
                    bN(bJ['set'](0.5, 0.5, 0x0), bh, bR, bg, bO, bP),
                    bK['set'](0x0, 0x0),
                    bL['set'](0x1, 0x0),
                    bM['set'](0x1, 0x1);
                    var bS = bi['ray']['intersectTriangle'](bH, bI, bJ, !0x1, bf);
                    if (null !== bS || (bN(bI['set'](-0.5, 0.5, 0x0), bh, bR, bg, bO, bP),
                    bL['set'](0x0, 0x1),
                    null !== (bS = bi['ray']['intersectTriangle'](bH, bJ, bI, !0x1, bf)))) {
                        var bT = bi['ray']['origin']['distanceTo'](bf);
                        bT < bi['near'] || bT > bi['far'] || bF['push']({
                            'distance': bT,
                            'point': bf['clone'](),
                            'uv': KS['getUV'](bf, bH, bI, bJ, bK, bL, bM, new eC()),
                            'face': null,
                            'object': this
                        });
                    }
                }
                ;
            }(),
            'clone': function() {
                return new this['constructor'](this['material'])['copy'](this);
            },
            'copy': function(bf) {
                return yT['prototype']['copy']['call'](this, bf),
                void 0x0 !== bf['center'] && this['center']['copy'](bf['center']),
                this;
            }
        }),
        aeo['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aeo,
            'isLOD': !0x0,
            'copy': function(bf) {
                yT['prototype']['copy']['call'](this, bf, !0x1);
                for (var bg = bf['levels'], bh = 0x0, bi = bg['length']; bh < bi; bh++) {
                    var bF = bg[bh];
                    this['addLevel'](bF['object']['clone'](), bF['distance']);
                }
                return this;
            },
            'addLevel': function(bf, bg) {
                void 0x0 === bg && (bg = 0x0),
                bg = Math['abs'](bg);
                for (var bh = this['levels'], bi = 0x0; bi < bh['length'] && !(bg < bh[bi]['distance']); bi++)
                    ;
                return bh['splice'](bi, 0x0, {
                    'distance': bg,
                    'object': bf
                }),
                this['add'](bf),
                this;
            },
            'getObjectForDistance': function(bf) {
                for (var bg = this['levels'], bh = 0x1, bi = bg['length']; bh < bi && !(bf < bg[bh]['distance']); bh++)
                    ;
                return bg[bh - 0x1]['object'];
            },
            'raycast': (a6J = new eK(),
            function(bf, bg) {
                a6J['setFromMatrixPosition'](this['matrixWorld']);
                var bh = bf['ray']['origin']['distanceTo'](a6J);
                this['getObjectForDistance'](bh)['raycast'](bf, bg);
            }
            ),
            'update': function() {
                var bf = new eK()
                  , bg = new eK();
                return function(bh) {
                    var bi = this['levels'];
                    if (bi['length'] > 0x1) {
                        bf['setFromMatrixPosition'](bh['matrixWorld']),
                        bg['setFromMatrixPosition'](this['matrixWorld']);
                        var bF = bf['distanceTo'](bg);
                        bi[0x0]['object']['visible'] = !0x0;
                        for (var bG = 0x1, bH = bi['length']; bG < bH && bF >= bi[bG]['distance']; bG++)
                            bi[bG - 0x1]['object']['visible'] = !0x1,
                            bi[bG]['object']['visible'] = !0x0;
                        for (; bG < bH; bG++)
                            bi[bG]['object']['visible'] = !0x1;
                    }
                }
                ;
            }(),
            'toJSON': function(bf) {
                var bg = yT['prototype']['toJSON']['call'](this, bf);
                bg['object']['levels'] = [];
                for (var bh = this['levels'], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                    var bG = bh[bi];
                    bg['object']['levels']['push']({
                        'object': bG['object']['uuid'],
                        'distance': bG['distance']
                    });
                }
                return bg;
            }
        }),
        aep['prototype'] = Object['assign'](Object['create'](KY['prototype']), {
            'constructor': aep,
            'isSkinnedMesh': !0x0,
            'bind': function(bf, bg) {
                this['skeleton'] = bf,
                void 0x0 === bg && (this['updateMatrixWorld'](!0x0),
                this['skeleton']['calculateInverses'](),
                bg = this['matrixWorld']),
                this['bindMatrix']['copy'](bg),
                this['bindMatrixInverse']['getInverse'](bg);
            },
            'pose': function() {
                this['skeleton']['pose']();
            },
            'normalizeSkinWeights': function() {
                for (var bf = new m7(), bg = this['geometry']['attributes']['skinWeight'], bh = 0x0, bi = bg['count']; bh < bi; bh++) {
                    bf['x'] = bg['getX'](bh),
                    bf['y'] = bg['getY'](bh),
                    bf['z'] = bg['getZ'](bh),
                    bf['w'] = bg['getW'](bh);
                    var bF = 0x1 / bf['manhattanLength']();
                    bF !== 0x1 / 0x0 ? bf['multiplyScalar'](bF) : bf['set'](0x1, 0x0, 0x0, 0x0),
                    bg['setXYZW'](bh, bf['x'], bf['y'], bf['z'], bf['w']);
                }
            },
            'updateMatrixWorld': function(bf) {
                KY['prototype']['updateMatrixWorld']['call'](this, bf),
                'attached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['matrixWorld']) : 'detached' === this['bindMode'] ? this['bindMatrixInverse']['getInverse'](this['bindMatrix']) : console['warn']('THREE.SkinnedMesh:\x20Unrecognized\x20bindMode:\x20' + this['bindMode']);
            },
            'clone': function() {
                return new this['constructor'](this['geometry'],this['material'])['copy'](this);
            }
        }),
        Object['assign'](aes['prototype'], {
            'calculateInverses': function() {
                this['boneInverses'] = [];
                for (var bf = 0x0, bg = this['bones']['length']; bf < bg; bf++) {
                    var bh = new mR();
                    this['bones'][bf] && bh['getInverse'](this['bones'][bf]['matrixWorld']),
                    this['boneInverses']['push'](bh);
                }
            },
            'pose': function() {
                var bf, bg, bh;
                for (bg = 0x0,
                bh = this['bones']['length']; bg < bh; bg++)
                    (bf = this['bones'][bg]) && bf['matrixWorld']['getInverse'](this['boneInverses'][bg]);
                for (bg = 0x0,
                bh = this['bones']['length']; bg < bh; bg++)
                    (bf = this['bones'][bg]) && (bf['parent'] && bf['parent']['isBone'] ? (bf['matrix']['getInverse'](bf['parent']['matrixWorld']),
                    bf['matrix']['multiply'](bf['matrixWorld'])) : bf['matrix']['copy'](bf['matrixWorld']),
                    bf['matrix']['decompose'](bf['position'], bf['quaternion'], bf['scale']));
            },
            'update': (a6K = new mR(),
            a6L = new mR(),
            function() {
                for (var bf = this['bones'], bg = this['boneInverses'], bh = this['boneMatrices'], bi = this['boneTexture'], bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                    var bH = bf[bF] ? bf[bF]['matrixWorld'] : a6L;
                    a6K['multiplyMatrices'](bH, bg[bF]),
                    a6K['toArray'](bh, 0x10 * bF);
                }
                void 0x0 !== bi && (bi['needsUpdate'] = !0x0);
            }
            ),
            'clone': function() {
                return new aes(this['bones'],this['boneInverses']);
            },
            'getBoneByName': function(bf) {
                for (var bg = 0x0, bh = this['bones']['length']; bg < bh; bg++) {
                    var bi = this['bones'][bg];
                    if (bi['name'] === bf)
                        return bi;
                }
            }
        }),
        aex['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aex,
            'isBone': !0x0
        }),
        aey['prototype'] = Object['create'](Kf['prototype']),
        aey['prototype']['constructor'] = aey,
        aey['prototype']['isLineBasicMaterial'] = !0x0,
        aey['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['linewidth'] = bf['linewidth'],
            this['linecap'] = bf['linecap'],
            this['linejoin'] = bf['linejoin'],
            this;
        }
        ,
        aeA['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aeA,
            'isLine': !0x0,
            'computeLineDistances': (a6M = new eK(),
            a6N = new eK(),
            function() {
                var bf = this['geometry'];
                if (bf['isBufferGeometry'])
                    if (null === bf['index']) {
                        for (var bg = bf['attributes']['position'], bh = [0x0], bi = 0x1, bF = bg['count']; bi < bF; bi++)
                            a6M['fromBufferAttribute'](bg, bi - 0x1),
                            a6N['fromBufferAttribute'](bg, bi),
                            bh[bi] = bh[bi - 0x1],
                            bh[bi] += a6M['distanceTo'](a6N);
                        bf['addAttribute']('lineDistance', new Be(bh,0x1));
                    } else
                        console['warn']('THREE.Line.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
                else if (bf['isGeometry']) {
                    var bG = bf['vertices'];
                    for ((bh = bf['lineDistances'])[0x0] = 0x0,
                    bi = 0x1,
                    bF = bG['length']; bi < bF; bi++)
                        bh[bi] = bh[bi - 0x1],
                        bh[bi] += bG[bi - 0x1]['distanceTo'](bG[bi]);
                }
                return this;
            }
            ),
            'raycast': function() {
                var bf = new mR()
                  , bg = new KP()
                  , bh = new mE();
                return function(bi, bF) {
                    var bG = bi['linePrecision']
                      , bH = this['geometry']
                      , bI = this['matrixWorld'];
                    if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](),
                    bh['copy'](bH['boundingSphere']),
                    bh['applyMatrix4'](bI),
                    bh['radius'] += bG,
                    !0x1 !== bi['ray']['intersectsSphere'](bh)) {
                        bf['getInverse'](bI),
                        bg['copy'](bi['ray'])['applyMatrix4'](bf);
                        var bJ = bG / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3)
                          , bK = bJ * bJ
                          , bL = new eK()
                          , bM = new eK()
                          , bN = new eK()
                          , bO = new eK()
                          , bP = this && this['isLineSegments'] ? 0x2 : 0x1;
                        if (bH['isBufferGeometry']) {
                            var bQ = bH['index']
                              , bR = bH['attributes']['position']['array'];
                            if (null !== bQ)
                                for (var bS = bQ['array'], bT = 0x0, bU = bS['length'] - 0x1; bT < bU; bT += bP) {
                                    var bV = bS[bT]
                                      , bW = bS[bT + 0x1];
                                    if (bL['fromArray'](bR, 0x3 * bV),
                                    bM['fromArray'](bR, 0x3 * bW),
                                    !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK))
                                        bO['applyMatrix4'](this['matrixWorld']),
                                        (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                            'distance': bZ,
                                            'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                            'index': bT,
                                            'face': null,
                                            'faceIndex': null,
                                            'object': this
                                        });
                                }
                            else
                                for (bT = 0x0,
                                bU = bR['length'] / 0x3 - 0x1; bT < bU; bT += bP) {
                                    if (bL['fromArray'](bR, 0x3 * bT),
                                    bM['fromArray'](bR, 0x3 * bT + 0x3),
                                    !(bg['distanceSqToSegment'](bL, bM, bO, bN) > bK))
                                        bO['applyMatrix4'](this['matrixWorld']),
                                        (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                            'distance': bZ,
                                            'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                            'index': bT,
                                            'face': null,
                                            'faceIndex': null,
                                            'object': this
                                        });
                                }
                        } else if (bH['isGeometry']) {
                            var bX = bH['vertices']
                              , bY = bX['length'];
                            for (bT = 0x0; bT < bY - 0x1; bT += bP) {
                                var bZ;
                                if (!(bg['distanceSqToSegment'](bX[bT], bX[bT + 0x1], bO, bN) > bK))
                                    bO['applyMatrix4'](this['matrixWorld']),
                                    (bZ = bi['ray']['origin']['distanceTo'](bO)) < bi['near'] || bZ > bi['far'] || bF['push']({
                                        'distance': bZ,
                                        'point': bN['clone']()['applyMatrix4'](this['matrixWorld']),
                                        'index': bT,
                                        'face': null,
                                        'faceIndex': null,
                                        'object': this
                                    });
                            }
                        }
                    }
                }
                ;
            }(),
            'clone': function() {
                return new this['constructor'](this['geometry'],this['material'])['copy'](this);
            }
        }),
        aeE['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
            'constructor': aeE,
            'isLineSegments': !0x0,
            'computeLineDistances': function() {
                var bf = new eK()
                  , bg = new eK();
                return function() {
                    var bh = this['geometry'];
                    if (bh['isBufferGeometry'])
                        if (null === bh['index']) {
                            for (var bi = bh['attributes']['position'], bF = [], bG = 0x0, bH = bi['count']; bG < bH; bG += 0x2)
                                bf['fromBufferAttribute'](bi, bG),
                                bg['fromBufferAttribute'](bi, bG + 0x1),
                                bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1],
                                bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
                            bh['addAttribute']('lineDistance', new Be(bF,0x1));
                        } else
                            console['warn']('THREE.LineSegments.computeLineDistances():\x20Computation\x20only\x20possible\x20with\x20non-indexed\x20BufferGeometry.');
                    else if (bh['isGeometry']) {
                        var bI = bh['vertices'];
                        for (bF = bh['lineDistances'],
                        bG = 0x0,
                        bH = bI['length']; bG < bH; bG += 0x2)
                            bf['copy'](bI[bG]),
                            bg['copy'](bI[bG + 0x1]),
                            bF[bG] = 0x0 === bG ? 0x0 : bF[bG - 0x1],
                            bF[bG + 0x1] = bF[bG] + bf['distanceTo'](bg);
                    }
                    return this;
                }
                ;
            }()
        }),
        aeH['prototype'] = Object['assign'](Object['create'](aeA['prototype']), {
            'constructor': aeH,
            'isLineLoop': !0x0
        }),
        aeK['prototype'] = Object['create'](Kf['prototype']),
        aeK['prototype']['constructor'] = aeK,
        aeK['prototype']['isPointsMaterial'] = !0x0,
        aeK['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['map'] = bf['map'],
            this['size'] = bf['size'],
            this['sizeAttenuation'] = bf['sizeAttenuation'],
            this['morphTargets'] = bf['morphTargets'],
            this;
        }
        ,
        aeM['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aeM,
            'isPoints': !0x0,
            'raycast': function() {
                var bf = new mR()
                  , bg = new KP()
                  , bh = new mE();
                return function(bi, bF) {
                    var bG = this
                      , bH = this['geometry']
                      , bI = this['matrixWorld']
                      , bJ = bi['params']['Points']['threshold'];
                    if (null === bH['boundingSphere'] && bH['computeBoundingSphere'](),
                    bh['copy'](bH['boundingSphere']),
                    bh['applyMatrix4'](bI),
                    bh['radius'] += bJ,
                    !0x1 !== bi['ray']['intersectsSphere'](bh)) {
                        bf['getInverse'](bI),
                        bg['copy'](bi['ray'])['applyMatrix4'](bf);
                        var bK = bJ / ((this['scale']['x'] + this['scale']['y'] + this['scale']['z']) / 0x3)
                          , bL = bK * bK
                          , bM = new eK()
                          , bN = new eK();
                        if (bH['isBufferGeometry']) {
                            var bO = bH['index']
                              , bP = bH['attributes']['position']['array'];
                            if (null !== bO)
                                for (var bQ = bO['array'], bR = 0x0, bS = bQ['length']; bR < bS; bR++) {
                                    var bT = bQ[bR];
                                    bM['fromArray'](bP, 0x3 * bT),
                                    bW(bM, bT);
                                }
                            else {
                                bR = 0x0;
                                for (var bU = bP['length'] / 0x3; bR < bU; bR++)
                                    bM['fromArray'](bP, 0x3 * bR),
                                    bW(bM, bR);
                            }
                        } else {
                            var bV = bH['vertices'];
                            for (bR = 0x0,
                            bU = bV['length']; bR < bU; bR++)
                                bW(bV[bR], bR);
                        }
                    }
                    function bW(bf, bh) {
                        var bH = bg['distanceSqToPoint'](bf);
                        if (bH < bL) {
                            bg['closestPointToPoint'](bf, bN),
                            bN['applyMatrix4'](bI);
                            var bJ = bi['ray']['origin']['distanceTo'](bN);
                            if (bJ < bi['near'] || bJ > bi['far'])
                                return;
                            bF['push']({
                                'distance': bJ,
                                'distanceToRay': Math['sqrt'](bH),
                                'point': bN['clone'](),
                                'index': bh,
                                'face': null,
                                'object': bG
                            });
                        }
                    }
                }
                ;
            }(),
            'clone': function() {
                return new this['constructor'](this['geometry'],this['material'])['copy'](this);
            }
        }),
        aeP['prototype'] = Object['assign'](Object['create'](lW['prototype']), {
            'constructor': aeP,
            'isVideoTexture': !0x0,
            'update': function() {
                var bf = this['image'];
                bf['readyState'] >= bf['HAVE_CURRENT_DATA'] && (this['needsUpdate'] = !0x0);
            }
        }),
        aeZ['prototype'] = Object['create'](lW['prototype']),
        aeZ['prototype']['constructor'] = aeZ,
        aeZ['prototype']['isCompressedTexture'] = !0x0,
        afc['prototype'] = Object['create'](lW['prototype']),
        afc['prototype']['constructor'] = afc,
        afc['prototype']['isCanvasTexture'] = !0x0,
        afm['prototype'] = Object['create'](lW['prototype']),
        afm['prototype']['constructor'] = afm,
        afm['prototype']['isDepthTexture'] = !0x0,
        afx['prototype'] = Object['create'](Gf['prototype']),
        afx['prototype']['constructor'] = afx,
        afW['prototype'] = Object['create'](AH['prototype']),
        afW['prototype']['constructor'] = afW,
        ag0['prototype'] = Object['create'](Gf['prototype']),
        ag0['prototype']['constructor'] = ag0,
        agm['prototype'] = Object['create'](AH['prototype']),
        agm['prototype']['constructor'] = agm,
        agr['prototype'] = Object['create'](Gf['prototype']),
        agr['prototype']['constructor'] = agr,
        ahr['prototype'] = Object['create'](AH['prototype']),
        ahr['prototype']['constructor'] = ahr,
        ahu['prototype'] = Object['create'](agr['prototype']),
        ahu['prototype']['constructor'] = ahu,
        ahx['prototype'] = Object['create'](AH['prototype']),
        ahx['prototype']['constructor'] = ahx,
        ahA['prototype'] = Object['create'](agr['prototype']),
        ahA['prototype']['constructor'] = ahA,
        ahD['prototype'] = Object['create'](AH['prototype']),
        ahD['prototype']['constructor'] = ahD,
        ahG['prototype'] = Object['create'](agr['prototype']),
        ahG['prototype']['constructor'] = ahG,
        ahL['prototype'] = Object['create'](AH['prototype']),
        ahL['prototype']['constructor'] = ahL,
        ahO['prototype'] = Object['create'](agr['prototype']),
        ahO['prototype']['constructor'] = ahO,
        ahU['prototype'] = Object['create'](AH['prototype']),
        ahU['prototype']['constructor'] = ahU,
        ai2['prototype'] = Object['create'](Gf['prototype']),
        ai2['prototype']['constructor'] = ai2,
        ai2['prototype']['toJSON'] = function() {
            var bf = Gf['prototype']['toJSON']['call'](this);
            return bf['path'] = this['parameters']['path']['toJSON'](),
            bf;
        }
        ,
        aiu['prototype'] = Object['create'](AH['prototype']),
        aiu['prototype']['constructor'] = aiu,
        aiC['prototype'] = Object['create'](Gf['prototype']),
        aiC['prototype']['constructor'] = aiC,
        aje['prototype'] = Object['create'](AH['prototype']),
        aje['prototype']['constructor'] = aje,
        ajk['prototype'] = Object['create'](Gf['prototype']),
        ajk['prototype']['constructor'] = ajk;
        var amL = function(bf, bg, bh) {
            bh = bh || 0x2;
            var bi, bF, bG, bH, bI, bJ, bK, bL = bg && bg['length'], bM = bL ? bg[0x0] * bh : bf['length'], bN = anb(bf, 0x0, bM, bh, !0x0), bO = [];
            if (!bN)
                return bO;
            if (bL && (bN = function(bf, bg, bh, bi) {
                var bF, bG, bH, bI, bJ, bK = [];
                for (bF = 0x0,
                bG = bg['length']; bF < bG; bF++)
                    bH = bg[bF] * bi,
                    bI = bF < bG - 0x1 ? bg[bF + 0x1] * bi : bf['length'],
                    (bJ = anb(bf, bH, bI, bi, !0x1)) === bJ['next'] && (bJ['steiner'] = !0x0),
                    bK['push'](aoX(bJ));
                for (bK['sort'](aox),
                bF = 0x0; bF < bK['length']; bF++)
                    aoA(bK[bF], bh),
                    bh = anq(bh, bh['next']);
                return bh;
            }(bf, bg, bN, bh)),
            bf['length'] > 0x50 * bh) {
                bi = bG = bf[0x0],
                bF = bH = bf[0x1];
                for (var bP = bh; bP < bM; bP += bh)
                    (bI = bf[bP]) < bi && (bi = bI),
                    (bJ = bf[bP + 0x1]) < bF && (bF = bJ),
                    bI > bG && (bG = bI),
                    bJ > bH && (bH = bJ);
                bK = 0x0 !== (bK = Math['max'](bG - bi, bH - bF)) ? 0x1 / bK : 0x0;
            }
            return anv(bN, bO, bh, bi, bF, bK),
            bO;
        };
        function anb(bf, bg, bh, bi, bF) {
            var bG, bH;
            if (bF === function(bf, bg, bh, bi) {
                for (var bF = 0x0, bG = bg, bH = bh - bi; bG < bh; bG += bi)
                    bF += (bf[bH] - bf[bG]) * (bf[bG + 0x1] + bf[bH + 0x1]),
                    bH = bG;
                return bF;
            }(bf, bg, bh, bi) > 0x0)
                for (bG = bg; bG < bh; bG += bi)
                    bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
            else
                for (bG = bh - bi; bG >= bg; bG -= bi)
                    bH = apI(bG, bf[bG], bf[bG + 0x1], bH);
            return bH && apq(bH, bH['next']) && (apO(bH),
            bH = bH['next']),
            bH;
        }
        function anq(bf, bg) {
            if (!bf)
                return bf;
            bg || (bg = bf);
            var bh, bi = bf;
            do {
                if (bh = !0x1,
                bi['steiner'] || !apq(bi, bi['next']) && 0x0 !== apm(bi['prev'], bi, bi['next']))
                    bi = bi['next'];
                else {
                    if (apO(bi),
                    (bi = bg = bi['prev']) === bi['next'])
                        break;
                    bh = !0x0;
                }
            } while (bh || bi !== bg);return bg;
        }
        function anv(bf, bg, bh, bi, bF, bG, bH) {
            if (bf) {
                !bH && bG && function(bf, bg, bh, bi) {
                    var bF = bf;
                    do {
                        null === bF['z'] && (bF['z'] = aoR(bF['x'], bF['y'], bg, bh, bi)),
                        bF['prevZ'] = bF['prev'],
                        bF['nextZ'] = bF['next'],
                        bF = bF['next'];
                    } while (bF !== bf);bF['prevZ']['nextZ'] = null,
                    bF['prevZ'] = null,
                    function(bf) {
                        var bg, bh, bi, bF, bG, bH, bI, bJ, bK = 0x1;
                        do {
                            for (bh = bf,
                            bf = null,
                            bG = null,
                            bH = 0x0; bh; ) {
                                for (bH++,
                                bi = bh,
                                bI = 0x0,
                                bg = 0x0; bg < bK && (bI++,
                                bi = bi['nextZ']); bg++)
                                    ;
                                for (bJ = bK; bI > 0x0 || bJ > 0x0 && bi; )
                                    0x0 !== bI && (0x0 === bJ || !bi || bh['z'] <= bi['z']) ? (bF = bh,
                                    bh = bh['nextZ'],
                                    bI--) : (bF = bi,
                                    bi = bi['nextZ'],
                                    bJ--),
                                    bG ? bG['nextZ'] = bF : bf = bF,
                                    bF['prevZ'] = bG,
                                    bG = bF;
                                bh = bi;
                            }
                            bG['nextZ'] = null,
                            bK *= 0x2;
                        } while (bH > 0x1);
                    }(bF);
                }(bf, bi, bF, bG);
                for (var bI, bJ, bK = bf; bf['prev'] !== bf['next']; )
                    if (bI = bf['prev'],
                    bJ = bf['next'],
                    bG ? ao1(bf, bi, bF, bG) : anV(bf))
                        bg['push'](bI['i'] / bh),
                        bg['push'](bf['i'] / bh),
                        bg['push'](bJ['i'] / bh),
                        apO(bf),
                        bf = bJ['next'],
                        bK = bJ['next'];
                    else if ((bf = bJ) === bK) {
                        bH ? 0x1 === bH ? anv(bf = aog(bf, bg, bh), bg, bh, bi, bF, bG, 0x2) : 0x2 === bH && aon(bf, bg, bh, bi, bF, bG) : anv(anq(bf), bg, bh, bi, bF, bG, 0x1);
                        break;
                    }
            }
        }
        function anV(bf) {
            var bg = bf['prev']
              , bh = bf
              , bi = bf['next'];
            if (apm(bg, bh, bi) >= 0x0)
                return !0x1;
            for (var bF = bf['next']['next']; bF !== bf['prev']; ) {
                if (ap1(bg['x'], bg['y'], bh['x'], bh['y'], bi['x'], bi['y'], bF['x'], bF['y']) && apm(bF['prev'], bF, bF['next']) >= 0x0)
                    return !0x1;
                bF = bF['next'];
            }
            return !0x0;
        }
        function ao1(bf, bg, bh, bi) {
            var bF = bf['prev']
              , bG = bf
              , bH = bf['next'];
            if (apm(bF, bG, bH) >= 0x0)
                return !0x1;
            for (var bI = bF['x'] < bG['x'] ? bF['x'] < bH['x'] ? bF['x'] : bH['x'] : bG['x'] < bH['x'] ? bG['x'] : bH['x'], bJ = bF['y'] < bG['y'] ? bF['y'] < bH['y'] ? bF['y'] : bH['y'] : bG['y'] < bH['y'] ? bG['y'] : bH['y'], bK = bF['x'] > bG['x'] ? bF['x'] > bH['x'] ? bF['x'] : bH['x'] : bG['x'] > bH['x'] ? bG['x'] : bH['x'], bL = bF['y'] > bG['y'] ? bF['y'] > bH['y'] ? bF['y'] : bH['y'] : bG['y'] > bH['y'] ? bG['y'] : bH['y'], bM = aoR(bI, bJ, bg, bh, bi), bN = aoR(bK, bL, bg, bh, bi), bO = bf['nextZ']; bO && bO['z'] <= bN; ) {
                if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0)
                    return !0x1;
                bO = bO['nextZ'];
            }
            for (bO = bf['prevZ']; bO && bO['z'] >= bM; ) {
                if (bO !== bf['prev'] && bO !== bf['next'] && ap1(bF['x'], bF['y'], bG['x'], bG['y'], bH['x'], bH['y'], bO['x'], bO['y']) && apm(bO['prev'], bO, bO['next']) >= 0x0)
                    return !0x1;
                bO = bO['prevZ'];
            }
            return !0x0;
        }
        function aog(bf, bg, bh) {
            var bi = bf;
            do {
                var bF = bi['prev']
                  , bG = bi['next']['next'];
                !apq(bF, bG) && apt(bF, bi, bi['next'], bG) && apy(bF, bG) && apy(bG, bF) && (bg['push'](bF['i'] / bh),
                bg['push'](bi['i'] / bh),
                bg['push'](bG['i'] / bh),
                apO(bi),
                apO(bi['next']),
                bi = bf = bG),
                bi = bi['next'];
            } while (bi !== bf);return bi;
        }
        function aon(bf, bg, bh, bi, bF, bG) {
            var bH = bf;
            do {
                for (var bI = bH['next']['next']; bI !== bH['prev']; ) {
                    if (bH['i'] !== bI['i'] && apa(bH, bI)) {
                        var bJ = apB(bH, bI);
                        return bH = anq(bH, bH['next']),
                        bJ = anq(bJ, bJ['next']),
                        anv(bH, bg, bh, bi, bF, bG),
                        void anv(bJ, bg, bh, bi, bF, bG);
                    }
                    bI = bI['next'];
                }
                bH = bH['next'];
            } while (bH !== bf);
        }
        function aox(bf, bg) {
            return bf['x'] - bg['x'];
        }
        function aoA(bf, bg) {
            if (bg = function(bf, bg) {
                var bh, bi = bg, bF = bf['x'], bG = bf['y'], bH = -0x1 / 0x0;
                do {
                    if (bG <= bi['y'] && bG >= bi['next']['y'] && bi['next']['y'] !== bi['y']) {
                        var bI = bi['x'] + (bG - bi['y']) * (bi['next']['x'] - bi['x']) / (bi['next']['y'] - bi['y']);
                        if (bI <= bF && bI > bH) {
                            if (bH = bI,
                            bI === bF) {
                                if (bG === bi['y'])
                                    return bi;
                                if (bG === bi['next']['y'])
                                    return bi['next'];
                            }
                            bh = bi['x'] < bi['next']['x'] ? bi : bi['next'];
                        }
                    }
                    bi = bi['next'];
                } while (bi !== bg);if (!bh)
                    return null;
                if (bF === bH)
                    return bh['prev'];
                var bJ, bK = bh, bL = bh['x'], bM = bh['y'], bN = 0x1 / 0x0;
                bi = bh['next'];
                for (; bi !== bK; )
                    bF >= bi['x'] && bi['x'] >= bL && bF !== bi['x'] && ap1(bG < bM ? bF : bH, bG, bL, bM, bG < bM ? bH : bF, bG, bi['x'], bi['y']) && ((bJ = Math['abs'](bG - bi['y']) / (bF - bi['x'])) < bN || bJ === bN && bi['x'] > bh['x']) && apy(bi, bf) && (bh = bi,
                    bN = bJ),
                    bi = bi['next'];
                return bh;
            }(bf, bg)) {
                var bh = apB(bg, bf);
                anq(bh, bh['next']);
            }
        }
        function aoR(bf, bg, bh, bi, bF) {
            return (bf = 0x55555555 & ((bf = 0x33333333 & ((bf = 0xf0f0f0f & ((bf = 0xff00ff & ((bf = 0x7fff * (bf - bh) * bF) | bf << 0x8)) | bf << 0x4)) | bf << 0x2)) | bf << 0x1)) | (bg = 0x55555555 & ((bg = 0x33333333 & ((bg = 0xf0f0f0f & ((bg = 0xff00ff & ((bg = 0x7fff * (bg - bi) * bF) | bg << 0x8)) | bg << 0x4)) | bg << 0x2)) | bg << 0x1)) << 0x1;
        }
        function aoX(bf) {
            var bg = bf
              , bh = bf;
            do {
                bg['x'] < bh['x'] && (bh = bg),
                bg = bg['next'];
            } while (bg !== bf);return bh;
        }
        function ap1(bf, bg, bh, bi, bF, bG, bH, bI) {
            return (bF - bH) * (bg - bI) - (bf - bH) * (bG - bI) >= 0x0 && (bf - bH) * (bi - bI) - (bh - bH) * (bg - bI) >= 0x0 && (bh - bH) * (bG - bI) - (bF - bH) * (bi - bI) >= 0x0;
        }
        function apa(bf, bg) {
            return bf['next']['i'] !== bg['i'] && bf['prev']['i'] !== bg['i'] && !function(bf, bg) {
                var bh = bf;
                do {
                    if (bh['i'] !== bf['i'] && bh['next']['i'] !== bf['i'] && bh['i'] !== bg['i'] && bh['next']['i'] !== bg['i'] && apt(bh, bh['next'], bf, bg))
                        return !0x0;
                    bh = bh['next'];
                } while (bh !== bf);return !0x1;
            }(bf, bg) && apy(bf, bg) && apy(bg, bf) && function(bf, bg) {
                var bh = bf
                  , bi = !0x1
                  , bF = (bf['x'] + bg['x']) / 0x2
                  , bG = (bf['y'] + bg['y']) / 0x2;
                do {
                    bh['y'] > bG != bh['next']['y'] > bG && bh['next']['y'] !== bh['y'] && bF < (bh['next']['x'] - bh['x']) * (bG - bh['y']) / (bh['next']['y'] - bh['y']) + bh['x'] && (bi = !bi),
                    bh = bh['next'];
                } while (bh !== bf);return bi;
            }(bf, bg);
        }
        function apm(bf, bg, bh) {
            return (bg['y'] - bf['y']) * (bh['x'] - bg['x']) - (bg['x'] - bf['x']) * (bh['y'] - bg['y']);
        }
        function apq(bf, bg) {
            return bf['x'] === bg['x'] && bf['y'] === bg['y'];
        }
        function apt(bf, bg, bh, bi) {
            return !!(apq(bf, bg) && apq(bh, bi) || apq(bf, bi) && apq(bh, bg)) || apm(bf, bg, bh) > 0x0 != apm(bf, bg, bi) > 0x0 && apm(bh, bi, bf) > 0x0 != apm(bh, bi, bg) > 0x0;
        }
        function apy(bf, bg) {
            return apm(bf['prev'], bf, bf['next']) < 0x0 ? apm(bf, bg, bf['next']) >= 0x0 && apm(bf, bf['prev'], bg) >= 0x0 : apm(bf, bg, bf['prev']) < 0x0 || apm(bf, bf['next'], bg) < 0x0;
        }
        function apB(bf, bg) {
            var bh = new apQ(bf['i'],bf['x'],bf['y'])
              , bi = new apQ(bg['i'],bg['x'],bg['y'])
              , bF = bf['next']
              , bG = bg['prev'];
            return bf['next'] = bg,
            bg['prev'] = bf,
            bh['next'] = bF,
            bF['prev'] = bh,
            bi['next'] = bh,
            bh['prev'] = bi,
            bG['next'] = bi,
            bi['prev'] = bG,
            bi;
        }
        function apI(bf, bg, bh, bi) {
            var bF = new apQ(bf,bg,bh);
            return bi ? (bF['next'] = bi['next'],
            bF['prev'] = bi,
            bi['next']['prev'] = bF,
            bi['next'] = bF) : (bF['prev'] = bF,
            bF['next'] = bF),
            bF;
        }
        function apO(bf) {
            bf['next']['prev'] = bf['prev'],
            bf['prev']['next'] = bf['next'],
            bf['prevZ'] && (bf['prevZ']['nextZ'] = bf['nextZ']),
            bf['nextZ'] && (bf['nextZ']['prevZ'] = bf['prevZ']);
        }
        function apQ(bf, bg, bh) {
            this['i'] = bf,
            this['x'] = bg,
            this['y'] = bh,
            this['prev'] = null,
            this['next'] = null,
            this['z'] = null,
            this['prevZ'] = null,
            this['nextZ'] = null,
            this['steiner'] = !0x1;
        }
        var apU = {
            'area': function(bf) {
                for (var bg = bf['length'], bh = 0x0, bi = bg - 0x1, bF = 0x0; bF < bg; bi = bF++)
                    bh += bf[bi]['x'] * bf[bF]['y'] - bf[bF]['x'] * bf[bi]['y'];
                return 0.5 * bh;
            },
            'isClockWise': function(bf) {
                return apU['area'](bf) < 0x0;
            },
            'triangulateShape': function(bf, bg) {
                var bh = []
                  , bi = []
                  , bF = [];
                aq9(bf),
                aqc(bh, bf);
                var bG = bf['length'];
                bg['forEach'](aq9);
                for (var bH = 0x0; bH < bg['length']; bH++)
                    bi['push'](bG),
                    bG += bg[bH]['length'],
                    aqc(bh, bg[bH]);
                var bI = amL(bh, bi);
                for (bH = 0x0; bH < bI['length']; bH += 0x3)
                    bF['push'](bI['slice'](bH, bH + 0x3));
                return bF;
            }
        };
        function aq9(bf) {
            var bg = bf['length'];
            bg > 0x2 && bf[bg - 0x1]['equals'](bf[0x0]) && bf['pop']();
        }
        function aqc(bf, bg) {
            for (var bh = 0x0; bh < bg['length']; bh++)
                bf['push'](bg[bh]['x']),
                bf['push'](bg[bh]['y']);
        }
        function aqg(bf, bg) {
            AH['call'](this),
            this['type'] = 'ExtrudeGeometry',
            this['parameters'] = {
                'shapes': bf,
                'options': bg
            },
            this['fromBufferGeometry'](new aqj(bf,bg)),
            this['mergeVertices']();
        }
        function aqj(bf, bg) {
            Gf['call'](this),
            this['type'] = 'ExtrudeBufferGeometry',
            this['parameters'] = {
                'shapes': bf,
                'options': bg
            },
            bf = Array['isArray'](bf) ? bf : [bf];
            for (var bh = this, bi = [], bF = [], bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                bI(bf[bG]);
            }
            function bI(bf) {
                var bG = []
                  , bH = void 0x0 !== bg['curveSegments'] ? bg['curveSegments'] : 0xc
                  , bI = void 0x0 !== bg['steps'] ? bg['steps'] : 0x1
                  , bJ = void 0x0 !== bg['depth'] ? bg['depth'] : 0x64
                  , bK = void 0x0 === bg['bevelEnabled'] || bg['bevelEnabled']
                  , bL = void 0x0 !== bg['bevelThickness'] ? bg['bevelThickness'] : 0x6
                  , bM = void 0x0 !== bg['bevelSize'] ? bg['bevelSize'] : bL - 0x2
                  , bN = void 0x0 !== bg['bevelOffset'] ? bg['bevelOffset'] : 0x0
                  , bO = void 0x0 !== bg['bevelSegments'] ? bg['bevelSegments'] : 0x3
                  , bP = bg['extrudePath']
                  , bQ = void 0x0 !== bg['UVGenerator'] ? bg['UVGenerator'] : as8;
                void 0x0 !== bg['amount'] && (console['warn']('THREE.ExtrudeBufferGeometry:\x20amount\x20has\x20been\x20renamed\x20to\x20depth.'),
                bJ = bg['amount']);
                var bR, bS, bT, bU, bV, bW, bX, bY, bZ = !0x1;
                bP && (bR = bP['getSpacedPoints'](bI),
                bZ = !0x0,
                bK = !0x1,
                bS = bP['computeFrenetFrames'](bI, !0x1),
                bT = new eK(),
                bU = new eK(),
                bV = new eK()),
                bK || (bO = 0x0,
                bL = 0x0,
                bM = 0x0,
                bN = 0x0);
                var c0 = bf['extractPoints'](bH)
                  , c1 = c0['shape']
                  , c2 = c0['holes'];
                if (!apU['isClockWise'](c1))
                    for (c1 = c1['reverse'](),
                    bX = 0x0,
                    bY = c2['length']; bX < bY; bX++)
                        bW = c2[bX],
                        apU['isClockWise'](bW) && (c2[bX] = bW['reverse']());
                var c3 = apU['triangulateShape'](c1, c2)
                  , c4 = c1;
                for (bX = 0x0,
                bY = c2['length']; bX < bY; bX++)
                    bW = c2[bX],
                    c1 = c1['concat'](bW);
                function c5(bf, bg, bh) {
                    return bg || console['error']('THREE.ExtrudeGeometry:\x20vec\x20does\x20not\x20exist'),
                    bg['clone']()['multiplyScalar'](bh)['add'](bf);
                }
                var c6, c7, c8, c9, ca, cb, cc = c1['length'], cd = c3['length'];
                function ce(bf, bg, bh) {
                    var bi, bF, bG, bH = bf['x'] - bg['x'], bI = bf['y'] - bg['y'], bJ = bh['x'] - bf['x'], bK = bh['y'] - bf['y'], bL = bH * bH + bI * bI, bM = bH * bK - bI * bJ;
                    if (Math['abs'](bM) > Number['EPSILON']) {
                        var bN = Math['sqrt'](bL)
                          , bO = Math['sqrt'](bJ * bJ + bK * bK)
                          , bP = bg['x'] - bI / bN
                          , bQ = bg['y'] + bH / bN
                          , bR = ((bh['x'] - bK / bO - bP) * bK - (bh['y'] + bJ / bO - bQ) * bJ) / (bH * bK - bI * bJ)
                          , bS = (bi = bP + bH * bR - bf['x']) * bi + (bF = bQ + bI * bR - bf['y']) * bF;
                        if (bS <= 0x2)
                            return new eC(bi,bF);
                        bG = Math['sqrt'](bS / 0x2);
                    } else {
                        var bT = !0x1;
                        bH > Number['EPSILON'] ? bJ > Number['EPSILON'] && (bT = !0x0) : bH < -Number['EPSILON'] ? bJ < -Number['EPSILON'] && (bT = !0x0) : Math['sign'](bI) === Math['sign'](bK) && (bT = !0x0),
                        bT ? (bi = -bI,
                        bF = bH,
                        bG = Math['sqrt'](bL)) : (bi = bH,
                        bF = bI,
                        bG = Math['sqrt'](bL / 0x2));
                    }
                    return new eC(bi / bG,bF / bG);
                }
                for (var cf = [], cg = 0x0, ch = c4['length'], ci = ch - 0x1, cj = cg + 0x1; cg < ch; cg++,
                ci++,
                cj++)
                    ci === ch && (ci = 0x0),
                    cj === ch && (cj = 0x0),
                    cf[cg] = ce(c4[cg], c4[ci], c4[cj]);
                var ck, cl, cm = [], cn = cf['concat']();
                for (bX = 0x0,
                bY = c2['length']; bX < bY; bX++) {
                    for (bW = c2[bX],
                    ck = [],
                    cg = 0x0,
                    ci = (ch = bW['length']) - 0x1,
                    cj = cg + 0x1; cg < ch; cg++,
                    ci++,
                    cj++)
                        ci === ch && (ci = 0x0),
                        cj === ch && (cj = 0x0),
                        ck[cg] = ce(bW[cg], bW[ci], bW[cj]);
                    cm['push'](ck),
                    cn = cn['concat'](ck);
                }
                for (c6 = 0x0; c6 < bO; c6++) {
                    for (c8 = c6 / bO,
                    c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2),
                    c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN,
                    cg = 0x0,
                    ch = c4['length']; cg < ch; cg++)
                        cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], -c9);
                    for (bX = 0x0,
                    bY = c2['length']; bX < bY; bX++)
                        for (bW = c2[bX],
                        ck = cm[bX],
                        cg = 0x0,
                        ch = bW['length']; cg < ch; cg++)
                            cp((ca = c5(bW[cg], ck[cg], c7))['x'], ca['y'], -c9);
                }
                for (c7 = bM + bN,
                cg = 0x0; cg < cc; cg++)
                    ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg],
                    bZ ? (bU['copy'](bS['normals'][0x0])['multiplyScalar'](ca['x']),
                    bT['copy'](bS['binormals'][0x0])['multiplyScalar'](ca['y']),
                    bV['copy'](bR[0x0])['add'](bU)['add'](bT),
                    cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], 0x0);
                for (cl = 0x1; cl <= bI; cl++)
                    for (cg = 0x0; cg < cc; cg++)
                        ca = bK ? c5(c1[cg], cn[cg], c7) : c1[cg],
                        bZ ? (bU['copy'](bS['normals'][cl])['multiplyScalar'](ca['x']),
                        bT['copy'](bS['binormals'][cl])['multiplyScalar'](ca['y']),
                        bV['copy'](bR[cl])['add'](bU)['add'](bT),
                        cp(bV['x'], bV['y'], bV['z'])) : cp(ca['x'], ca['y'], bJ / bI * cl);
                for (c6 = bO - 0x1; c6 >= 0x0; c6--) {
                    for (c8 = c6 / bO,
                    c9 = bL * Math['cos'](c8 * Math['PI'] / 0x2),
                    c7 = bM * Math['sin'](c8 * Math['PI'] / 0x2) + bN,
                    cg = 0x0,
                    ch = c4['length']; cg < ch; cg++)
                        cp((ca = c5(c4[cg], cf[cg], c7))['x'], ca['y'], bJ + c9);
                    for (bX = 0x0,
                    bY = c2['length']; bX < bY; bX++)
                        for (bW = c2[bX],
                        ck = cm[bX],
                        cg = 0x0,
                        ch = bW['length']; cg < ch; cg++)
                            ca = c5(bW[cg], ck[cg], c7),
                            bZ ? cp(ca['x'], ca['y'] + bR[bI - 0x1]['y'], bR[bI - 0x1]['x'] + c9) : cp(ca['x'], ca['y'], bJ + c9);
                }
                function co(bf, bg) {
                    var bh, bi;
                    for (cg = bf['length']; --cg >= 0x0; ) {
                        bh = cg,
                        (bi = cg - 0x1) < 0x0 && (bi = bf['length'] - 0x1);
                        var bF = 0x0
                          , bG = bI + 0x2 * bO;
                        for (bF = 0x0; bF < bG; bF++) {
                            var bH = cc * bF
                              , bJ = cc * (bF + 0x1);
                            cr(bg + bh + bH, bg + bi + bH, bg + bi + bJ, bg + bh + bJ);
                        }
                    }
                }
                function cp(bf, bg, bh) {
                    bG['push'](bf),
                    bG['push'](bg),
                    bG['push'](bh);
                }
                function cq(bf, bg, bF) {
                    cs(bf),
                    cs(bg),
                    cs(bF);
                    var bG = bi['length'] / 0x3
                      , bH = bQ['generateTopUV'](bh, bi, bG - 0x3, bG - 0x2, bG - 0x1);
                    ct(bH[0x0]),
                    ct(bH[0x1]),
                    ct(bH[0x2]);
                }
                function cr(bf, bg, bF, bG) {
                    cs(bf),
                    cs(bg),
                    cs(bG),
                    cs(bg),
                    cs(bF),
                    cs(bG);
                    var bH = bi['length'] / 0x3
                      , bI = bQ['generateSideWallUV'](bh, bi, bH - 0x6, bH - 0x3, bH - 0x2, bH - 0x1);
                    ct(bI[0x0]),
                    ct(bI[0x1]),
                    ct(bI[0x3]),
                    ct(bI[0x1]),
                    ct(bI[0x2]),
                    ct(bI[0x3]);
                }
                function cs(bf) {
                    bi['push'](bG[0x3 * bf + 0x0]),
                    bi['push'](bG[0x3 * bf + 0x1]),
                    bi['push'](bG[0x3 * bf + 0x2]);
                }
                function ct(bf) {
                    bF['push'](bf['x']),
                    bF['push'](bf['y']);
                }
                !function() {
                    var bf = bi['length'] / 0x3;
                    if (bK) {
                        var bg = 0x0
                          , bF = cc * bg;
                        for (cg = 0x0; cg < cd; cg++)
                            cq((cb = c3[cg])[0x2] + bF, cb[0x1] + bF, cb[0x0] + bF);
                        for (bF = cc * (bg = bI + 0x2 * bO),
                        cg = 0x0; cg < cd; cg++)
                            cq((cb = c3[cg])[0x0] + bF, cb[0x1] + bF, cb[0x2] + bF);
                    } else {
                        for (cg = 0x0; cg < cd; cg++)
                            cq((cb = c3[cg])[0x2], cb[0x1], cb[0x0]);
                        for (cg = 0x0; cg < cd; cg++)
                            cq((cb = c3[cg])[0x0] + cc * bI, cb[0x1] + cc * bI, cb[0x2] + cc * bI);
                    }
                    bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x0);
                }(),
                function() {
                    var bf = bi['length'] / 0x3
                      , bg = 0x0;
                    for (co(c4, bg),
                    bg += c4['length'],
                    bX = 0x0,
                    bY = c2['length']; bX < bY; bX++)
                        co(bW = c2[bX], bg),
                        bg += bW['length'];
                    bh['addGroup'](bf, bi['length'] / 0x3 - bf, 0x1);
                }();
            }
            this['addAttribute']('position', new Be(bi,0x3)),
            this['addAttribute']('uv', new Be(bF,0x2)),
            this['computeVertexNormals']();
        }
        aqg['prototype'] = Object['create'](AH['prototype']),
        aqg['prototype']['constructor'] = aqg,
        aqg['prototype']['toJSON'] = function() {
            var bf = AH['prototype']['toJSON']['call'](this);
            return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
        }
        ,
        aqj['prototype'] = Object['create'](Gf['prototype']),
        aqj['prototype']['constructor'] = aqj,
        aqj['prototype']['toJSON'] = function() {
            var bf = Gf['prototype']['toJSON']['call'](this);
            return asC(this['parameters']['shapes'], this['parameters']['options'], bf);
        }
        ;
        var as8 = {
            'generateTopUV': function(bf, bg, bh, bi, bF) {
                var bG = bg[0x3 * bh]
                  , bH = bg[0x3 * bh + 0x1]
                  , bI = bg[0x3 * bi]
                  , bJ = bg[0x3 * bi + 0x1]
                  , bK = bg[0x3 * bF]
                  , bL = bg[0x3 * bF + 0x1];
                return [new eC(bG,bH), new eC(bI,bJ), new eC(bK,bL)];
            },
            'generateSideWallUV': function(bf, bg, bh, bi, bF, bG) {
                var bH = bg[0x3 * bh]
                  , bI = bg[0x3 * bh + 0x1]
                  , bJ = bg[0x3 * bh + 0x2]
                  , bK = bg[0x3 * bi]
                  , bL = bg[0x3 * bi + 0x1]
                  , bM = bg[0x3 * bi + 0x2]
                  , bN = bg[0x3 * bF]
                  , bO = bg[0x3 * bF + 0x1]
                  , bP = bg[0x3 * bF + 0x2]
                  , bQ = bg[0x3 * bG]
                  , bR = bg[0x3 * bG + 0x1]
                  , bS = bg[0x3 * bG + 0x2];
                return Math['abs'](bI - bL) < 0.01 ? [new eC(bH,0x1 - bJ), new eC(bK,0x1 - bM), new eC(bN,0x1 - bP), new eC(bQ,0x1 - bS)] : [new eC(bI,0x1 - bJ), new eC(bL,0x1 - bM), new eC(bO,0x1 - bP), new eC(bR,0x1 - bS)];
            }
        };
        function asC(bf, bg, bh) {
            if (bh['shapes'] = [],
            Array['isArray'](bf))
                for (var bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                    var bG = bf[bi];
                    bh['shapes']['push'](bG['uuid']);
                }
            else
                bh['shapes']['push'](bf['uuid']);
            return void 0x0 !== bg['extrudePath'] && (bh['options']['extrudePath'] = bg['extrudePath']['toJSON']()),
            bh;
        }
        function asJ(bf, bg) {
            AH['call'](this),
            this['type'] = 'TextGeometry',
            this['parameters'] = {
                'text': bf,
                'parameters': bg
            },
            this['fromBufferGeometry'](new asM(bf,bg)),
            this['mergeVertices']();
        }
        function asM(bf, bg) {
            var bh = (bg = bg || {})['font'];
            if (!bh || !bh['isFont'])
                return console['error']('THREE.TextGeometry:\x20font\x20parameter\x20is\x20not\x20an\x20instance\x20of\x20THREE.Font.'),
                new AH();
            var bi = bh['generateShapes'](bf, bg['size']);
            bg['depth'] = void 0x0 !== bg['height'] ? bg['height'] : 0x32,
            void 0x0 === bg['bevelThickness'] && (bg['bevelThickness'] = 0xa),
            void 0x0 === bg['bevelSize'] && (bg['bevelSize'] = 0x8),
            void 0x0 === bg['bevelEnabled'] && (bg['bevelEnabled'] = !0x1),
            aqj['call'](this, bi, bg),
            this['type'] = 'TextBufferGeometry';
        }
        function asR(bf, bg, bh, bi, bF, bG, bH) {
            AH['call'](this),
            this['type'] = 'SphereGeometry',
            this['parameters'] = {
                'radius': bf,
                'widthSegments': bg,
                'heightSegments': bh,
                'phiStart': bi,
                'phiLength': bF,
                'thetaStart': bG,
                'thetaLength': bH
            },
            this['fromBufferGeometry'](new asZ(bf,bg,bh,bi,bF,bG,bH)),
            this['mergeVertices']();
        }
        function asZ(bf, bg, bh, bi, bF, bG, bH) {
            Gf['call'](this),
            this['type'] = 'SphereBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'widthSegments': bg,
                'heightSegments': bh,
                'phiStart': bi,
                'phiLength': bF,
                'thetaStart': bG,
                'thetaLength': bH
            },
            bf = bf || 0x1,
            bg = Math['max'](0x3, Math['floor'](bg) || 0x8),
            bh = Math['max'](0x2, Math['floor'](bh) || 0x6),
            bi = void 0x0 !== bi ? bi : 0x0,
            bF = void 0x0 !== bF ? bF : 0x2 * Math['PI'],
            bG = void 0x0 !== bG ? bG : 0x0,
            bH = void 0x0 !== bH ? bH : Math['PI'];
            var bI, bJ, bK = Math['min'](bG + bH, Math['PI']), bL = 0x0, bM = [], bN = new eK(), bO = new eK(), bP = [], bQ = [], bR = [], bS = [];
            for (bJ = 0x0; bJ <= bh; bJ++) {
                var bT = []
                  , bU = bJ / bh
                  , bV = 0x0;
                for (0x0 == bJ && 0x0 == bG ? bV = 0.5 / bg : bJ == bh && bK == Math['PI'] && (bV = -0.5 / bg),
                bI = 0x0; bI <= bg; bI++) {
                    var bW = bI / bg;
                    bN['x'] = -bf * Math['cos'](bi + bW * bF) * Math['sin'](bG + bU * bH),
                    bN['y'] = bf * Math['cos'](bG + bU * bH),
                    bN['z'] = bf * Math['sin'](bi + bW * bF) * Math['sin'](bG + bU * bH),
                    bQ['push'](bN['x'], bN['y'], bN['z']),
                    bO['copy'](bN)['normalize'](),
                    bR['push'](bO['x'], bO['y'], bO['z']),
                    bS['push'](bW + bV, 0x1 - bU),
                    bT['push'](bL++);
                }
                bM['push'](bT);
            }
            for (bJ = 0x0; bJ < bh; bJ++)
                for (bI = 0x0; bI < bg; bI++) {
                    var bX = bM[bJ][bI + 0x1]
                      , bY = bM[bJ][bI]
                      , bZ = bM[bJ + 0x1][bI]
                      , c0 = bM[bJ + 0x1][bI + 0x1];
                    (0x0 !== bJ || bG > 0x0) && bP['push'](bX, bY, c0),
                    (bJ !== bh - 0x1 || bK < Math['PI']) && bP['push'](bY, bZ, c0);
                }
            this['setIndex'](bP),
            this['addAttribute']('position', new Be(bQ,0x3)),
            this['addAttribute']('normal', new Be(bR,0x3)),
            this['addAttribute']('uv', new Be(bS,0x2));
        }
        function atq(bf, bg, bh, bi, bF, bG) {
            AH['call'](this),
            this['type'] = 'RingGeometry',
            this['parameters'] = {
                'innerRadius': bf,
                'outerRadius': bg,
                'thetaSegments': bh,
                'phiSegments': bi,
                'thetaStart': bF,
                'thetaLength': bG
            },
            this['fromBufferGeometry'](new atx(bf,bg,bh,bi,bF,bG)),
            this['mergeVertices']();
        }
        function atx(bf, bg, bh, bi, bF, bG) {
            Gf['call'](this),
            this['type'] = 'RingBufferGeometry',
            this['parameters'] = {
                'innerRadius': bf,
                'outerRadius': bg,
                'thetaSegments': bh,
                'phiSegments': bi,
                'thetaStart': bF,
                'thetaLength': bG
            },
            bf = bf || 0.5,
            bg = bg || 0x1,
            bF = void 0x0 !== bF ? bF : 0x0,
            bG = void 0x0 !== bG ? bG : 0x2 * Math['PI'],
            bh = void 0x0 !== bh ? Math['max'](0x3, bh) : 0x8;
            var bH, bI, bJ, bK = [], bL = [], bM = [], bN = [], bO = bf, bP = (bg - bf) / (bi = void 0x0 !== bi ? Math['max'](0x1, bi) : 0x1), bQ = new eK(), bR = new eC();
            for (bI = 0x0; bI <= bi; bI++) {
                for (bJ = 0x0; bJ <= bh; bJ++)
                    bH = bF + bJ / bh * bG,
                    bQ['x'] = bO * Math['cos'](bH),
                    bQ['y'] = bO * Math['sin'](bH),
                    bL['push'](bQ['x'], bQ['y'], bQ['z']),
                    bM['push'](0x0, 0x0, 0x1),
                    bR['x'] = (bQ['x'] / bg + 0x1) / 0x2,
                    bR['y'] = (bQ['y'] / bg + 0x1) / 0x2,
                    bN['push'](bR['x'], bR['y']);
                bO += bP;
            }
            for (bI = 0x0; bI < bi; bI++) {
                var bS = bI * (bh + 0x1);
                for (bJ = 0x0; bJ < bh; bJ++) {
                    var bT = bH = bJ + bS
                      , bU = bH + bh + 0x1
                      , bV = bH + bh + 0x2
                      , bW = bH + 0x1;
                    bK['push'](bT, bU, bW),
                    bK['push'](bU, bV, bW);
                }
            }
            this['setIndex'](bK),
            this['addAttribute']('position', new Be(bL,0x3)),
            this['addAttribute']('normal', new Be(bM,0x3)),
            this['addAttribute']('uv', new Be(bN,0x2));
        }
        function atU(bf, bg, bh, bi) {
            AH['call'](this),
            this['type'] = 'LatheGeometry',
            this['parameters'] = {
                'points': bf,
                'segments': bg,
                'phiStart': bh,
                'phiLength': bi
            },
            this['fromBufferGeometry'](new atZ(bf,bg,bh,bi)),
            this['mergeVertices']();
        }
        function atZ(bf, bg, bh, bi) {
            Gf['call'](this),
            this['type'] = 'LatheBufferGeometry',
            this['parameters'] = {
                'points': bf,
                'segments': bg,
                'phiStart': bh,
                'phiLength': bi
            },
            bg = Math['floor'](bg) || 0xc,
            bh = bh || 0x0,
            bi = bi || 0x2 * Math['PI'],
            bi = e2['clamp'](bi, 0x0, 0x2 * Math['PI']);
            var bF, bG, bH, bI = [], bJ = [], bK = [], bL = 0x1 / bg, bM = new eK(), bN = new eC();
            for (bG = 0x0; bG <= bg; bG++) {
                var bO = bh + bG * bL * bi
                  , bP = Math['sin'](bO)
                  , bQ = Math['cos'](bO);
                for (bH = 0x0; bH <= bf['length'] - 0x1; bH++)
                    bM['x'] = bf[bH]['x'] * bP,
                    bM['y'] = bf[bH]['y'],
                    bM['z'] = bf[bH]['x'] * bQ,
                    bJ['push'](bM['x'], bM['y'], bM['z']),
                    bN['x'] = bG / bg,
                    bN['y'] = bH / (bf['length'] - 0x1),
                    bK['push'](bN['x'], bN['y']);
            }
            for (bG = 0x0; bG < bg; bG++)
                for (bH = 0x0; bH < bf['length'] - 0x1; bH++) {
                    var bR = bF = bH + bG * bf['length']
                      , bS = bF + bf['length']
                      , bT = bF + bf['length'] + 0x1
                      , bU = bF + 0x1;
                    bI['push'](bR, bS, bU),
                    bI['push'](bS, bT, bU);
                }
            if (this['setIndex'](bI),
            this['addAttribute']('position', new Be(bJ,0x3)),
            this['addAttribute']('uv', new Be(bK,0x2)),
            this['computeVertexNormals'](),
            bi === 0x2 * Math['PI']) {
                var bV = this['attributes']['normal']['array']
                  , bW = new eK()
                  , bX = new eK()
                  , bY = new eK();
                for (bF = bg * bf['length'] * 0x3,
                bG = 0x0,
                bH = 0x0; bG < bf['length']; bG++,
                bH += 0x3)
                    bW['x'] = bV[bH + 0x0],
                    bW['y'] = bV[bH + 0x1],
                    bW['z'] = bV[bH + 0x2],
                    bX['x'] = bV[bF + bH + 0x0],
                    bX['y'] = bV[bF + bH + 0x1],
                    bX['z'] = bV[bF + bH + 0x2],
                    bY['addVectors'](bW, bX)['normalize'](),
                    bV[bH + 0x0] = bV[bF + bH + 0x0] = bY['x'],
                    bV[bH + 0x1] = bV[bF + bH + 0x1] = bY['y'],
                    bV[bH + 0x2] = bV[bF + bH + 0x2] = bY['z'];
            }
        }
        function auo(bf, bg) {
            AH['call'](this),
            this['type'] = 'ShapeGeometry',
            'object' == typeof bg && (console['warn']('THREE.ShapeGeometry:\x20Options\x20parameter\x20has\x20been\x20removed.'),
            bg = bg['curveSegments']),
            this['parameters'] = {
                'shapes': bf,
                'curveSegments': bg
            },
            this['fromBufferGeometry'](new aur(bf,bg)),
            this['mergeVertices']();
        }
        function aur(bf, bg) {
            Gf['call'](this),
            this['type'] = 'ShapeBufferGeometry',
            this['parameters'] = {
                'shapes': bf,
                'curveSegments': bg
            },
            bg = bg || 0xc;
            var bh = []
              , bi = []
              , bF = []
              , bG = []
              , bH = 0x0
              , bI = 0x0;
            if (!0x1 === Array['isArray'](bf))
                bK(bf);
            else
                for (var bJ = 0x0; bJ < bf['length']; bJ++)
                    bK(bf[bJ]),
                    this['addGroup'](bH, bI, bJ),
                    bH += bI,
                    bI = 0x0;
            function bK(bf) {
                var bH, bJ, bK, bL = bi['length'] / 0x3, bM = bf['extractPoints'](bg), bN = bM['shape'], bO = bM['holes'];
                for (!0x1 === apU['isClockWise'](bN) && (bN = bN['reverse']()),
                bH = 0x0,
                bJ = bO['length']; bH < bJ; bH++)
                    bK = bO[bH],
                    !0x0 === apU['isClockWise'](bK) && (bO[bH] = bK['reverse']());
                var bP = apU['triangulateShape'](bN, bO);
                for (bH = 0x0,
                bJ = bO['length']; bH < bJ; bH++)
                    bK = bO[bH],
                    bN = bN['concat'](bK);
                for (bH = 0x0,
                bJ = bN['length']; bH < bJ; bH++) {
                    var bQ = bN[bH];
                    bi['push'](bQ['x'], bQ['y'], 0x0),
                    bF['push'](0x0, 0x0, 0x1),
                    bG['push'](bQ['x'], bQ['y']);
                }
                for (bH = 0x0,
                bJ = bP['length']; bH < bJ; bH++) {
                    var bR = bP[bH]
                      , bS = bR[0x0] + bL
                      , bT = bR[0x1] + bL
                      , bU = bR[0x2] + bL;
                    bh['push'](bS, bT, bU),
                    bI += 0x3;
                }
            }
            this['setIndex'](bh),
            this['addAttribute']('position', new Be(bi,0x3)),
            this['addAttribute']('normal', new Be(bF,0x3)),
            this['addAttribute']('uv', new Be(bG,0x2));
        }
        function auQ(bf, bg) {
            if (bg['shapes'] = [],
            Array['isArray'](bf))
                for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = bf[bh];
                    bg['shapes']['push'](bF['uuid']);
                }
            else
                bg['shapes']['push'](bf['uuid']);
            return bg;
        }
        function auW(bf, bg) {
            Gf['call'](this),
            this['type'] = 'EdgesGeometry',
            this['parameters'] = {
                'thresholdAngle': bg
            },
            bg = void 0x0 !== bg ? bg : 0x1;
            var bh, bi, bF, bG, bH = [], bI = Math['cos'](e2['DEG2RAD'] * bg), bJ = [0x0, 0x0], bK = {}, bL = ['a', 'b', 'c'];
            bf['isBufferGeometry'] ? (bG = new AH())['fromBufferGeometry'](bf) : bG = bf['clone'](),
            bG['mergeVertices'](),
            bG['computeFaceNormals']();
            for (var bM = bG['vertices'], bN = bG['faces'], bO = 0x0, bP = bN['length']; bO < bP; bO++)
                for (var bQ = bN[bO], bR = 0x0; bR < 0x3; bR++)
                    bh = bQ[bL[bR]],
                    bi = bQ[bL[(bR + 0x1) % 0x3]],
                    bJ[0x0] = Math['min'](bh, bi),
                    bJ[0x1] = Math['max'](bh, bi),
                    void 0x0 === bK[bF = bJ[0x0] + ',' + bJ[0x1]] ? bK[bF] = {
                        'index1': bJ[0x0],
                        'index2': bJ[0x1],
                        'face1': bO,
                        'face2': void 0x0
                    } : bK[bF]['face2'] = bO;
            for (bF in bK) {
                var bS = bK[bF];
                if (void 0x0 === bS['face2'] || bN[bS['face1']]['normal']['dot'](bN[bS['face2']]['normal']) <= bI) {
                    var bT = bM[bS['index1']];
                    bH['push'](bT['x'], bT['y'], bT['z']),
                    bT = bM[bS['index2']],
                    bH['push'](bT['x'], bT['y'], bT['z']);
                }
            }
            this['addAttribute']('position', new Be(bH,0x3));
        }
        function avg(bf, bg, bh, bi, bF, bG, bH, bI) {
            AH['call'](this),
            this['type'] = 'CylinderGeometry',
            this['parameters'] = {
                'radiusTop': bf,
                'radiusBottom': bg,
                'height': bh,
                'radialSegments': bi,
                'heightSegments': bF,
                'openEnded': bG,
                'thetaStart': bH,
                'thetaLength': bI
            },
            this['fromBufferGeometry'](new avp(bf,bg,bh,bi,bF,bG,bH,bI)),
            this['mergeVertices']();
        }
        function avp(bf, bg, bh, bi, bF, bG, bH, bI) {
            Gf['call'](this),
            this['type'] = 'CylinderBufferGeometry',
            this['parameters'] = {
                'radiusTop': bf,
                'radiusBottom': bg,
                'height': bh,
                'radialSegments': bi,
                'heightSegments': bF,
                'openEnded': bG,
                'thetaStart': bH,
                'thetaLength': bI
            };
            var bJ = this;
            bf = void 0x0 !== bf ? bf : 0x1,
            bg = void 0x0 !== bg ? bg : 0x1,
            bh = bh || 0x1,
            bi = Math['floor'](bi) || 0x8,
            bF = Math['floor'](bF) || 0x1,
            bG = void 0x0 !== bG && bG,
            bH = void 0x0 !== bH ? bH : 0x0,
            bI = void 0x0 !== bI ? bI : 0x2 * Math['PI'];
            var bK = []
              , bL = []
              , bM = []
              , bN = []
              , bO = 0x0
              , bP = []
              , bQ = bh / 0x2
              , bR = 0x0;
            function bS(bh) {
                var bF, bG, bP, bS = new eC(), bT = new eK(), bU = 0x0, bV = !0x0 === bh ? bf : bg, bW = !0x0 === bh ? 0x1 : -0x1;
                for (bG = bO,
                bF = 0x1; bF <= bi; bF++)
                    bL['push'](0x0, bQ * bW, 0x0),
                    bM['push'](0x0, bW, 0x0),
                    bN['push'](0.5, 0.5),
                    bO++;
                for (bP = bO,
                bF = 0x0; bF <= bi; bF++) {
                    var bX = bF / bi * bI + bH
                      , bY = Math['cos'](bX)
                      , bZ = Math['sin'](bX);
                    bT['x'] = bV * bZ,
                    bT['y'] = bQ * bW,
                    bT['z'] = bV * bY,
                    bL['push'](bT['x'], bT['y'], bT['z']),
                    bM['push'](0x0, bW, 0x0),
                    bS['x'] = 0.5 * bY + 0.5,
                    bS['y'] = 0.5 * bZ * bW + 0.5,
                    bN['push'](bS['x'], bS['y']),
                    bO++;
                }
                for (bF = 0x0; bF < bi; bF++) {
                    var c0 = bG + bF
                      , c1 = bP + bF;
                    !0x0 === bh ? bK['push'](c1, c1 + 0x1, c0) : bK['push'](c1 + 0x1, c1, c0),
                    bU += 0x3;
                }
                bJ['addGroup'](bR, bU, !0x0 === bh ? 0x1 : 0x2),
                bR += bU;
            }
            !function() {
                var bG, bS, bT = new eK(), bU = new eK(), bV = 0x0, bW = (bg - bf) / bh;
                for (bS = 0x0; bS <= bF; bS++) {
                    var bX = []
                      , bY = bS / bF
                      , bZ = bY * (bg - bf) + bf;
                    for (bG = 0x0; bG <= bi; bG++) {
                        var c0 = bG / bi
                          , c1 = c0 * bI + bH
                          , c2 = Math['sin'](c1)
                          , c3 = Math['cos'](c1);
                        bU['x'] = bZ * c2,
                        bU['y'] = -bY * bh + bQ,
                        bU['z'] = bZ * c3,
                        bL['push'](bU['x'], bU['y'], bU['z']),
                        bT['set'](c2, bW, c3)['normalize'](),
                        bM['push'](bT['x'], bT['y'], bT['z']),
                        bN['push'](c0, 0x1 - bY),
                        bX['push'](bO++);
                    }
                    bP['push'](bX);
                }
                for (bG = 0x0; bG < bi; bG++)
                    for (bS = 0x0; bS < bF; bS++) {
                        var c4 = bP[bS][bG]
                          , c5 = bP[bS + 0x1][bG]
                          , c6 = bP[bS + 0x1][bG + 0x1]
                          , c7 = bP[bS][bG + 0x1];
                        bK['push'](c4, c5, c7),
                        bK['push'](c5, c6, c7),
                        bV += 0x6;
                    }
                bJ['addGroup'](bR, bV, 0x0),
                bR += bV;
            }(),
            !0x1 === bG && (bf > 0x0 && bS(!0x0),
            bg > 0x0 && bS(!0x1)),
            this['setIndex'](bK),
            this['addAttribute']('position', new Be(bL,0x3)),
            this['addAttribute']('normal', new Be(bM,0x3)),
            this['addAttribute']('uv', new Be(bN,0x2));
        }
        function awd(bf, bg, bh, bi, bF, bG, bH) {
            avg['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH),
            this['type'] = 'ConeGeometry',
            this['parameters'] = {
                'radius': bf,
                'height': bg,
                'radialSegments': bh,
                'heightSegments': bi,
                'openEnded': bF,
                'thetaStart': bG,
                'thetaLength': bH
            };
        }
        function awl(bf, bg, bh, bi, bF, bG, bH) {
            avp['call'](this, 0x0, bf, bg, bh, bi, bF, bG, bH),
            this['type'] = 'ConeBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'height': bg,
                'radialSegments': bh,
                'heightSegments': bi,
                'openEnded': bF,
                'thetaStart': bG,
                'thetaLength': bH
            };
        }
        function awt(bf, bg, bh, bi) {
            AH['call'](this),
            this['type'] = 'CircleGeometry',
            this['parameters'] = {
                'radius': bf,
                'segments': bg,
                'thetaStart': bh,
                'thetaLength': bi
            },
            this['fromBufferGeometry'](new awy(bf,bg,bh,bi)),
            this['mergeVertices']();
        }
        function awy(bf, bg, bh, bi) {
            Gf['call'](this),
            this['type'] = 'CircleBufferGeometry',
            this['parameters'] = {
                'radius': bf,
                'segments': bg,
                'thetaStart': bh,
                'thetaLength': bi
            },
            bf = bf || 0x1,
            bg = void 0x0 !== bg ? Math['max'](0x3, bg) : 0x8,
            bh = void 0x0 !== bh ? bh : 0x0,
            bi = void 0x0 !== bi ? bi : 0x2 * Math['PI'];
            var bF, bG, bH = [], bI = [], bJ = [], bK = [], bL = new eK(), bM = new eC();
            for (bI['push'](0x0, 0x0, 0x0),
            bJ['push'](0x0, 0x0, 0x1),
            bK['push'](0.5, 0.5),
            bG = 0x0,
            bF = 0x3; bG <= bg; bG++,
            bF += 0x3) {
                var bN = bh + bG / bg * bi;
                bL['x'] = bf * Math['cos'](bN),
                bL['y'] = bf * Math['sin'](bN),
                bI['push'](bL['x'], bL['y'], bL['z']),
                bJ['push'](0x0, 0x0, 0x1),
                bM['x'] = (bI[bF] / bf + 0x1) / 0x2,
                bM['y'] = (bI[bF + 0x1] / bf + 0x1) / 0x2,
                bK['push'](bM['x'], bM['y']);
            }
            for (bF = 0x1; bF <= bg; bF++)
                bH['push'](bF, bF + 0x1, 0x0);
            this['setIndex'](bH),
            this['addAttribute']('position', new Be(bI,0x3)),
            this['addAttribute']('normal', new Be(bJ,0x3)),
            this['addAttribute']('uv', new Be(bK,0x2));
        }
        asJ['prototype'] = Object['create'](AH['prototype']),
        asJ['prototype']['constructor'] = asJ,
        asM['prototype'] = Object['create'](aqj['prototype']),
        asM['prototype']['constructor'] = asM,
        asR['prototype'] = Object['create'](AH['prototype']),
        asR['prototype']['constructor'] = asR,
        asZ['prototype'] = Object['create'](Gf['prototype']),
        asZ['prototype']['constructor'] = asZ,
        atq['prototype'] = Object['create'](AH['prototype']),
        atq['prototype']['constructor'] = atq,
        atx['prototype'] = Object['create'](Gf['prototype']),
        atx['prototype']['constructor'] = atx,
        atU['prototype'] = Object['create'](AH['prototype']),
        atU['prototype']['constructor'] = atU,
        atZ['prototype'] = Object['create'](Gf['prototype']),
        atZ['prototype']['constructor'] = atZ,
        auo['prototype'] = Object['create'](AH['prototype']),
        auo['prototype']['constructor'] = auo,
        auo['prototype']['toJSON'] = function() {
            var bf = AH['prototype']['toJSON']['call'](this);
            return auQ(this['parameters']['shapes'], bf);
        }
        ,
        aur['prototype'] = Object['create'](Gf['prototype']),
        aur['prototype']['constructor'] = aur,
        aur['prototype']['toJSON'] = function() {
            var bf = Gf['prototype']['toJSON']['call'](this);
            return auQ(this['parameters']['shapes'], bf);
        }
        ,
        auW['prototype'] = Object['create'](Gf['prototype']),
        auW['prototype']['constructor'] = auW,
        avg['prototype'] = Object['create'](AH['prototype']),
        avg['prototype']['constructor'] = avg,
        avp['prototype'] = Object['create'](Gf['prototype']),
        avp['prototype']['constructor'] = avp,
        awd['prototype'] = Object['create'](avg['prototype']),
        awd['prototype']['constructor'] = awd,
        awl['prototype'] = Object['create'](avp['prototype']),
        awl['prototype']['constructor'] = awl,
        awt['prototype'] = Object['create'](AH['prototype']),
        awt['prototype']['constructor'] = awt,
        awy['prototype'] = Object['create'](Gf['prototype']),
        awy['prototype']['constructor'] = awy;
        var awO = Object['freeze']({
            'WireframeGeometry': afx,
            'ParametricGeometry': afW,
            'ParametricBufferGeometry': ag0,
            'TetrahedronGeometry': ahr,
            'TetrahedronBufferGeometry': ahu,
            'OctahedronGeometry': ahx,
            'OctahedronBufferGeometry': ahA,
            'IcosahedronGeometry': ahD,
            'IcosahedronBufferGeometry': ahG,
            'DodecahedronGeometry': ahL,
            'DodecahedronBufferGeometry': ahO,
            'PolyhedronGeometry': agm,
            'PolyhedronBufferGeometry': agr,
            'TubeGeometry': ahU,
            'TubeBufferGeometry': ai2,
            'TorusKnotGeometry': aiu,
            'TorusKnotBufferGeometry': aiC,
            'TorusGeometry': aje,
            'TorusBufferGeometry': ajk,
            'TextGeometry': asJ,
            'TextBufferGeometry': asM,
            'SphereGeometry': asR,
            'SphereBufferGeometry': asZ,
            'RingGeometry': atq,
            'RingBufferGeometry': atx,
            'PlaneGeometry': H5,
            'PlaneBufferGeometry': Ha,
            'LatheGeometry': atU,
            'LatheBufferGeometry': atZ,
            'ShapeGeometry': auo,
            'ShapeBufferGeometry': aur,
            'ExtrudeGeometry': aqg,
            'ExtrudeBufferGeometry': aqj,
            'EdgesGeometry': auW,
            'ConeGeometry': awd,
            'ConeBufferGeometry': awl,
            'CylinderGeometry': avg,
            'CylinderBufferGeometry': avp,
            'CircleGeometry': awt,
            'CircleBufferGeometry': awy,
            'BoxGeometry': Gg,
            'BoxBufferGeometry': Gn
        });
        function awP(bf) {
            Kf['call'](this),
            this['type'] = 'ShadowMaterial',
            this['color'] = new w7(0x0),
            this['transparent'] = !0x0,
            this['setValues'](bf);
        }
        function awR(bf) {
            KN['call'](this, bf),
            this['type'] = 'RawShaderMaterial';
        }
        function awT(bf) {
            Kf['call'](this),
            this['defines'] = {
                'STANDARD': ''
            },
            this['type'] = 'MeshStandardMaterial',
            this['color'] = new w7(0xffffff),
            this['roughness'] = 0.5,
            this['metalness'] = 0.5,
            this['map'] = null,
            this['lightMap'] = null,
            this['lightMapIntensity'] = 0x1,
            this['aoMap'] = null,
            this['aoMapIntensity'] = 0x1,
            this['emissive'] = new w7(0x0),
            this['emissiveIntensity'] = 0x1,
            this['emissiveMap'] = null,
            this['bumpMap'] = null,
            this['bumpScale'] = 0x1,
            this['normalMap'] = null,
            this['normalMapType'] = e0,
            this['normalScale'] = new eC(0x1,0x1),
            this['displacementMap'] = null,
            this['displacementScale'] = 0x1,
            this['displacementBias'] = 0x0,
            this['roughnessMap'] = null,
            this['metalnessMap'] = null,
            this['alphaMap'] = null,
            this['envMap'] = null,
            this['envMapIntensity'] = 0x1,
            this['refractionRatio'] = 0.98,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['wireframeLinecap'] = 'round',
            this['wireframeLinejoin'] = 'round',
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['morphNormals'] = !0x1,
            this['setValues'](bf);
        }
        function awV(bf) {
            awT['call'](this),
            this['defines'] = {
                'PHYSICAL': ''
            },
            this['type'] = 'MeshPhysicalMaterial',
            this['reflectivity'] = 0.5,
            this['clearCoat'] = 0x0,
            this['clearCoatRoughness'] = 0x0,
            this['setValues'](bf);
        }
        function awX(bf) {
            Kf['call'](this),
            this['type'] = 'MeshPhongMaterial',
            this['color'] = new w7(0xffffff),
            this['specular'] = new w7(0x111111),
            this['shininess'] = 0x1e,
            this['map'] = null,
            this['lightMap'] = null,
            this['lightMapIntensity'] = 0x1,
            this['aoMap'] = null,
            this['aoMapIntensity'] = 0x1,
            this['emissive'] = new w7(0x0),
            this['emissiveIntensity'] = 0x1,
            this['emissiveMap'] = null,
            this['bumpMap'] = null,
            this['bumpScale'] = 0x1,
            this['normalMap'] = null,
            this['normalMapType'] = e0,
            this['normalScale'] = new eC(0x1,0x1),
            this['displacementMap'] = null,
            this['displacementScale'] = 0x1,
            this['displacementBias'] = 0x0,
            this['specularMap'] = null,
            this['alphaMap'] = null,
            this['envMap'] = null,
            this['combine'] = cv,
            this['reflectivity'] = 0x1,
            this['refractionRatio'] = 0.98,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['wireframeLinecap'] = 'round',
            this['wireframeLinejoin'] = 'round',
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['morphNormals'] = !0x1,
            this['setValues'](bf);
        }
        function awZ(bf) {
            awX['call'](this),
            this['defines'] = {
                'TOON': ''
            },
            this['type'] = 'MeshToonMaterial',
            this['gradientMap'] = null,
            this['setValues'](bf);
        }
        function ax1(bf) {
            Kf['call'](this),
            this['type'] = 'MeshNormalMaterial',
            this['bumpMap'] = null,
            this['bumpScale'] = 0x1,
            this['normalMap'] = null,
            this['normalMapType'] = e0,
            this['normalScale'] = new eC(0x1,0x1),
            this['displacementMap'] = null,
            this['displacementScale'] = 0x1,
            this['displacementBias'] = 0x0,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['fog'] = !0x1,
            this['lights'] = !0x1,
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['morphNormals'] = !0x1,
            this['setValues'](bf);
        }
        function ax3(bf) {
            Kf['call'](this),
            this['type'] = 'MeshLambertMaterial',
            this['color'] = new w7(0xffffff),
            this['map'] = null,
            this['lightMap'] = null,
            this['lightMapIntensity'] = 0x1,
            this['aoMap'] = null,
            this['aoMapIntensity'] = 0x1,
            this['emissive'] = new w7(0x0),
            this['emissiveIntensity'] = 0x1,
            this['emissiveMap'] = null,
            this['specularMap'] = null,
            this['alphaMap'] = null,
            this['envMap'] = null,
            this['combine'] = cv,
            this['reflectivity'] = 0x1,
            this['refractionRatio'] = 0.98,
            this['wireframe'] = !0x1,
            this['wireframeLinewidth'] = 0x1,
            this['wireframeLinecap'] = 'round',
            this['wireframeLinejoin'] = 'round',
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['morphNormals'] = !0x1,
            this['setValues'](bf);
        }
        function ax5(bf) {
            Kf['call'](this),
            this['defines'] = {
                'MATCAP': ''
            },
            this['type'] = 'MeshMatcapMaterial',
            this['color'] = new w7(0xffffff),
            this['matcap'] = null,
            this['map'] = null,
            this['bumpMap'] = null,
            this['bumpScale'] = 0x1,
            this['normalMap'] = null,
            this['normalMapType'] = e0,
            this['normalScale'] = new eC(0x1,0x1),
            this['displacementMap'] = null,
            this['displacementScale'] = 0x1,
            this['displacementBias'] = 0x0,
            this['alphaMap'] = null,
            this['skinning'] = !0x1,
            this['morphTargets'] = !0x1,
            this['morphNormals'] = !0x1,
            this['lights'] = !0x1,
            this['setValues'](bf);
        }
        function ax7(bf) {
            aey['call'](this),
            this['type'] = 'LineDashedMaterial',
            this['scale'] = 0x1,
            this['dashSize'] = 0x3,
            this['gapSize'] = 0x1,
            this['setValues'](bf);
        }
        awP['prototype'] = Object['create'](Kf['prototype']),
        awP['prototype']['constructor'] = awP,
        awP['prototype']['isShadowMaterial'] = !0x0,
        awP['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this;
        }
        ,
        awR['prototype'] = Object['create'](KN['prototype']),
        awR['prototype']['constructor'] = awR,
        awR['prototype']['isRawShaderMaterial'] = !0x0,
        awT['prototype'] = Object['create'](Kf['prototype']),
        awT['prototype']['constructor'] = awT,
        awT['prototype']['isMeshStandardMaterial'] = !0x0,
        awT['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['defines'] = {
                'STANDARD': ''
            },
            this['color']['copy'](bf['color']),
            this['roughness'] = bf['roughness'],
            this['metalness'] = bf['metalness'],
            this['map'] = bf['map'],
            this['lightMap'] = bf['lightMap'],
            this['lightMapIntensity'] = bf['lightMapIntensity'],
            this['aoMap'] = bf['aoMap'],
            this['aoMapIntensity'] = bf['aoMapIntensity'],
            this['emissive']['copy'](bf['emissive']),
            this['emissiveMap'] = bf['emissiveMap'],
            this['emissiveIntensity'] = bf['emissiveIntensity'],
            this['bumpMap'] = bf['bumpMap'],
            this['bumpScale'] = bf['bumpScale'],
            this['normalMap'] = bf['normalMap'],
            this['normalMapType'] = bf['normalMapType'],
            this['normalScale']['copy'](bf['normalScale']),
            this['displacementMap'] = bf['displacementMap'],
            this['displacementScale'] = bf['displacementScale'],
            this['displacementBias'] = bf['displacementBias'],
            this['roughnessMap'] = bf['roughnessMap'],
            this['metalnessMap'] = bf['metalnessMap'],
            this['alphaMap'] = bf['alphaMap'],
            this['envMap'] = bf['envMap'],
            this['envMapIntensity'] = bf['envMapIntensity'],
            this['refractionRatio'] = bf['refractionRatio'],
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this['wireframeLinecap'] = bf['wireframeLinecap'],
            this['wireframeLinejoin'] = bf['wireframeLinejoin'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['morphNormals'] = bf['morphNormals'],
            this;
        }
        ,
        awV['prototype'] = Object['create'](awT['prototype']),
        awV['prototype']['constructor'] = awV,
        awV['prototype']['isMeshPhysicalMaterial'] = !0x0,
        awV['prototype']['copy'] = function(bf) {
            return awT['prototype']['copy']['call'](this, bf),
            this['defines'] = {
                'PHYSICAL': ''
            },
            this['reflectivity'] = bf['reflectivity'],
            this['clearCoat'] = bf['clearCoat'],
            this['clearCoatRoughness'] = bf['clearCoatRoughness'],
            this;
        }
        ,
        awX['prototype'] = Object['create'](Kf['prototype']),
        awX['prototype']['constructor'] = awX,
        awX['prototype']['isMeshPhongMaterial'] = !0x0,
        awX['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['specular']['copy'](bf['specular']),
            this['shininess'] = bf['shininess'],
            this['map'] = bf['map'],
            this['lightMap'] = bf['lightMap'],
            this['lightMapIntensity'] = bf['lightMapIntensity'],
            this['aoMap'] = bf['aoMap'],
            this['aoMapIntensity'] = bf['aoMapIntensity'],
            this['emissive']['copy'](bf['emissive']),
            this['emissiveMap'] = bf['emissiveMap'],
            this['emissiveIntensity'] = bf['emissiveIntensity'],
            this['bumpMap'] = bf['bumpMap'],
            this['bumpScale'] = bf['bumpScale'],
            this['normalMap'] = bf['normalMap'],
            this['normalMapType'] = bf['normalMapType'],
            this['normalScale']['copy'](bf['normalScale']),
            this['displacementMap'] = bf['displacementMap'],
            this['displacementScale'] = bf['displacementScale'],
            this['displacementBias'] = bf['displacementBias'],
            this['specularMap'] = bf['specularMap'],
            this['alphaMap'] = bf['alphaMap'],
            this['envMap'] = bf['envMap'],
            this['combine'] = bf['combine'],
            this['reflectivity'] = bf['reflectivity'],
            this['refractionRatio'] = bf['refractionRatio'],
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this['wireframeLinecap'] = bf['wireframeLinecap'],
            this['wireframeLinejoin'] = bf['wireframeLinejoin'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['morphNormals'] = bf['morphNormals'],
            this;
        }
        ,
        awZ['prototype'] = Object['create'](awX['prototype']),
        awZ['prototype']['constructor'] = awZ,
        awZ['prototype']['isMeshToonMaterial'] = !0x0,
        awZ['prototype']['copy'] = function(bf) {
            return awX['prototype']['copy']['call'](this, bf),
            this['gradientMap'] = bf['gradientMap'],
            this;
        }
        ,
        ax1['prototype'] = Object['create'](Kf['prototype']),
        ax1['prototype']['constructor'] = ax1,
        ax1['prototype']['isMeshNormalMaterial'] = !0x0,
        ax1['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['bumpMap'] = bf['bumpMap'],
            this['bumpScale'] = bf['bumpScale'],
            this['normalMap'] = bf['normalMap'],
            this['normalMapType'] = bf['normalMapType'],
            this['normalScale']['copy'](bf['normalScale']),
            this['displacementMap'] = bf['displacementMap'],
            this['displacementScale'] = bf['displacementScale'],
            this['displacementBias'] = bf['displacementBias'],
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['morphNormals'] = bf['morphNormals'],
            this;
        }
        ,
        ax3['prototype'] = Object['create'](Kf['prototype']),
        ax3['prototype']['constructor'] = ax3,
        ax3['prototype']['isMeshLambertMaterial'] = !0x0,
        ax3['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['color']['copy'](bf['color']),
            this['map'] = bf['map'],
            this['lightMap'] = bf['lightMap'],
            this['lightMapIntensity'] = bf['lightMapIntensity'],
            this['aoMap'] = bf['aoMap'],
            this['aoMapIntensity'] = bf['aoMapIntensity'],
            this['emissive']['copy'](bf['emissive']),
            this['emissiveMap'] = bf['emissiveMap'],
            this['emissiveIntensity'] = bf['emissiveIntensity'],
            this['specularMap'] = bf['specularMap'],
            this['alphaMap'] = bf['alphaMap'],
            this['envMap'] = bf['envMap'],
            this['combine'] = bf['combine'],
            this['reflectivity'] = bf['reflectivity'],
            this['refractionRatio'] = bf['refractionRatio'],
            this['wireframe'] = bf['wireframe'],
            this['wireframeLinewidth'] = bf['wireframeLinewidth'],
            this['wireframeLinecap'] = bf['wireframeLinecap'],
            this['wireframeLinejoin'] = bf['wireframeLinejoin'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['morphNormals'] = bf['morphNormals'],
            this;
        }
        ,
        ax5['prototype'] = Object['create'](Kf['prototype']),
        ax5['prototype']['constructor'] = ax5,
        ax5['prototype']['isMeshMatcapMaterial'] = !0x0,
        ax5['prototype']['copy'] = function(bf) {
            return Kf['prototype']['copy']['call'](this, bf),
            this['defines'] = {
                'MATCAP': ''
            },
            this['color']['copy'](bf['color']),
            this['matcap'] = bf['matcap'],
            this['map'] = bf['map'],
            this['bumpMap'] = bf['bumpMap'],
            this['bumpScale'] = bf['bumpScale'],
            this['normalMap'] = bf['normalMap'],
            this['normalMapType'] = bf['normalMapType'],
            this['normalScale']['copy'](bf['normalScale']),
            this['displacementMap'] = bf['displacementMap'],
            this['displacementScale'] = bf['displacementScale'],
            this['displacementBias'] = bf['displacementBias'],
            this['alphaMap'] = bf['alphaMap'],
            this['skinning'] = bf['skinning'],
            this['morphTargets'] = bf['morphTargets'],
            this['morphNormals'] = bf['morphNormals'],
            this;
        }
        ,
        ax7['prototype'] = Object['create'](aey['prototype']),
        ax7['prototype']['constructor'] = ax7,
        ax7['prototype']['isLineDashedMaterial'] = !0x0,
        ax7['prototype']['copy'] = function(bf) {
            return aey['prototype']['copy']['call'](this, bf),
            this['scale'] = bf['scale'],
            this['dashSize'] = bf['dashSize'],
            this['gapSize'] = bf['gapSize'],
            this;
        }
        ;
        var axi = Object['freeze']({
            'ShadowMaterial': awP,
            'SpriteMaterial': aej,
            'RawShaderMaterial': awR,
            'ShaderMaterial': KN,
            'PointsMaterial': aeK,
            'MeshPhysicalMaterial': awV,
            'MeshStandardMaterial': awT,
            'MeshPhongMaterial': awX,
            'MeshToonMaterial': awZ,
            'MeshNormalMaterial': ax1,
            'MeshLambertMaterial': ax3,
            'MeshDepthMaterial': ZV,
            'MeshDistanceMaterial': ZX,
            'MeshBasicMaterial': KW,
            'MeshMatcapMaterial': ax5,
            'LineDashedMaterial': ax7,
            'LineBasicMaterial': aey,
            'Material': Kf
        })
          , axj = {
            'arraySlice': function(bf, bg, bh) {
                return axj['isTypedArray'](bf) ? new bf['constructor'](bf['subarray'](bg, void 0x0 !== bh ? bh : bf['length'])) : bf['slice'](bg, bh);
            },
            'convertArray': function(bf, bg, bh) {
                return !bf || !bh && bf['constructor'] === bg ? bf : 'number' == typeof bg['BYTES_PER_ELEMENT'] ? new bg(bf) : Array['prototype']['slice']['call'](bf);
            },
            'isTypedArray': function(bf) {
                return ArrayBuffer['isView'](bf) && !(bf instanceof DataView);
            },
            'getKeyframeOrder': function(bf) {
                for (var bg = bf['length'], bh = new Array(bg), bi = 0x0; bi !== bg; ++bi)
                    bh[bi] = bi;
                return bh['sort'](function(bg, bh) {
                    return bf[bg] - bf[bh];
                }),
                bh;
            },
            'sortedArray': function(bf, bg, bh) {
                for (var bi = bf['length'], bF = new bf['constructor'](bi), bG = 0x0, bH = 0x0; bH !== bi; ++bG)
                    for (var bI = bh[bG] * bg, bJ = 0x0; bJ !== bg; ++bJ)
                        bF[bH++] = bf[bI + bJ];
                return bF;
            },
            'flattenJSON': function(bf, bg, bh, bi) {
                for (var bF = 0x1, bG = bf[0x0]; void 0x0 !== bG && void 0x0 === bG[bi]; )
                    bG = bf[bF++];
                if (void 0x0 !== bG) {
                    var bH = bG[bi];
                    if (void 0x0 !== bH)
                        if (Array['isArray'](bH))
                            do {
                                void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']),
                                bh['push']['apply'](bh, bH)),
                                bG = bf[bF++];
                            } while (void 0x0 !== bG);
                        else if (void 0x0 !== bH['toArray'])
                            do {
                                void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']),
                                bH['toArray'](bh, bh['length'])),
                                bG = bf[bF++];
                            } while (void 0x0 !== bG);
                        else
                            do {
                                void 0x0 !== (bH = bG[bi]) && (bg['push'](bG['time']),
                                bh['push'](bH)),
                                bG = bf[bF++];
                            } while (void 0x0 !== bG);
                }
            }
        };
        function axN(bf, bg, bh, bi) {
            this['parameterPositions'] = bf,
            this['_cachedIndex'] = 0x0,
            this['resultBuffer'] = void 0x0 !== bi ? bi : new bg['constructor'](bh),
            this['sampleValues'] = bg,
            this['valueSize'] = bh;
        }
        function axS(bf, bg, bh, bi) {
            axN['call'](this, bf, bg, bh, bi),
            this['_weightPrev'] = -0x0,
            this['_offsetPrev'] = -0x0,
            this['_weightNext'] = -0x0,
            this['_offsetNext'] = -0x0;
        }
        function axX(bf, bg, bh, bi) {
            axN['call'](this, bf, bg, bh, bi);
        }
        function ay2(bf, bg, bh, bi) {
            axN['call'](this, bf, bg, bh, bi);
        }
        function ay7(bf, bg, bh, bi) {
            if (void 0x0 === bf)
                throw new Error('THREE.KeyframeTrack:\x20track\x20name\x20is\x20undefined');
            if (void 0x0 === bg || 0x0 === bg['length'])
                throw new Error('THREE.KeyframeTrack:\x20no\x20keyframes\x20in\x20track\x20named\x20' + bf);
            this['name'] = bf,
            this['times'] = axj['convertArray'](bg, this['TimeBufferType']),
            this['values'] = axj['convertArray'](bh, this['ValueBufferType']),
            this['setInterpolation'](bi || this['DefaultInterpolation']);
        }
        function ayc(bf, bg, bh) {
            ay7['call'](this, bf, bg, bh);
        }
        function ayg(bf, bg, bh, bi) {
            ay7['call'](this, bf, bg, bh, bi);
        }
        function ayl(bf, bg, bh, bi) {
            ay7['call'](this, bf, bg, bh, bi);
        }
        function ayq(bf, bg, bh, bi) {
            axN['call'](this, bf, bg, bh, bi);
        }
        function ayv(bf, bg, bh, bi) {
            ay7['call'](this, bf, bg, bh, bi);
        }
        function ayA(bf, bg, bh, bi) {
            ay7['call'](this, bf, bg, bh, bi);
        }
        function ayF(bf, bg, bh, bi) {
            ay7['call'](this, bf, bg, bh, bi);
        }
        function ayK(bf, bg, bh) {
            this['name'] = bf,
            this['tracks'] = bh,
            this['duration'] = void 0x0 !== bg ? bg : -0x1,
            this['uuid'] = e2['generateUUID'](),
            this['duration'] < 0x0 && this['resetDuration']();
        }
        function ayO(bf) {
            if (void 0x0 === bf['type'])
                throw new Error('THREE.KeyframeTrack:\x20track\x20type\x20undefined,\x20can\x20not\x20parse');
            var bg = function(bf) {
                switch (bf['toLowerCase']()) {
                case 'scalar':
                case 'double':
                case 'float':
                case 'number':
                case 'integer':
                    return ayl;
                case 'vector':
                case 'vector2':
                case 'vector3':
                case 'vector4':
                    return ayF;
                case 'color':
                    return ayg;
                case 'quaternion':
                    return ayv;
                case 'bool':
                case 'boolean':
                    return ayc;
                case 'string':
                    return ayA;
                }
                throw new Error('THREE.KeyframeTrack:\x20Unsupported\x20typeName:\x20' + bf);
            }(bf['type']);
            if (void 0x0 === bf['times']) {
                var bh = []
                  , bi = [];
                axj['flattenJSON'](bf['keys'], bh, bi, 'value'),
                bf['times'] = bh,
                bf['values'] = bi;
            }
            return void 0x0 !== bg['parse'] ? bg['parse'](bf) : new bg(bf['name'],bf['times'],bf['values'],bf['interpolation']);
        }
        Object['assign'](axN['prototype'], {
            'evaluate': function(bf) {
                var bg = this['parameterPositions']
                  , bh = this['_cachedIndex']
                  , bi = bg[bh]
                  , bF = bg[bh - 0x1];
                ayZ: {
                    az0: {
                        var bG;
                        az2: {
                            az3: if (!(bf < bi)) {
                                for (var bH = bh + 0x2; ; ) {
                                    if (void 0x0 === bi) {
                                        if (bf < bF)
                                            break az3;
                                        return bh = bg['length'],
                                        this['_cachedIndex'] = bh,
                                        this['afterEnd_'](bh - 0x1, bf, bF);
                                    }
                                    if (bh === bH)
                                        break;
                                    if (bF = bi,
                                    bf < (bi = bg[++bh]))
                                        break az0;
                                }
                                bG = bg['length'];
                                break az2;
                            }
                            if (bf >= bF)
                                break ayZ;
                            var bI = bg[0x1];
                            bf < bI && (bh = 0x2,
                            bF = bI);
                            for (bH = bh - 0x2; ; ) {
                                if (void 0x0 === bF)
                                    return this['_cachedIndex'] = 0x0,
                                    this['beforeStart_'](0x0, bf, bi);
                                if (bh === bH)
                                    break;
                                if (bi = bF,
                                bf >= (bF = bg[--bh - 0x1]))
                                    break az0;
                            }
                            bG = bh,
                            bh = 0x0;
                        }
                        for (; bh < bG; ) {
                            var bJ = bh + bG >>> 0x1;
                            bf < bg[bJ] ? bG = bJ : bh = bJ + 0x1;
                        }
                        if (bi = bg[bh],
                        void 0x0 === (bF = bg[bh - 0x1]))
                            return this['_cachedIndex'] = 0x0,
                            this['beforeStart_'](0x0, bf, bi);
                        if (void 0x0 === bi)
                            return bh = bg['length'],
                            this['_cachedIndex'] = bh,
                            this['afterEnd_'](bh - 0x1, bF, bf);
                    }
                    this['_cachedIndex'] = bh,
                    this['intervalChanged_'](bh, bF, bi);
                }
                return this['interpolate_'](bh, bF, bf, bi);
            },
            'settings': null,
            'DefaultSettings_': {},
            'getSettings_': function() {
                return this['settings'] || this['DefaultSettings_'];
            },
            'copySampleValue_': function(bf) {
                for (var bg = this['resultBuffer'], bh = this['sampleValues'], bi = this['valueSize'], bF = bf * bi, bG = 0x0; bG !== bi; ++bG)
                    bg[bG] = bh[bF + bG];
                return bg;
            },
            'interpolate_': function() {
                throw new Error('call\x20to\x20abstract\x20method');
            },
            'intervalChanged_': function() {}
        }),
        Object['assign'](axN['prototype'], {
            'beforeStart_': axN['prototype']['copySampleValue_'],
            'afterEnd_': axN['prototype']['copySampleValue_']
        }),
        axS['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
            'constructor': axS,
            'DefaultSettings_': {
                'endingStart': dK,
                'endingEnd': dK
            },
            'intervalChanged_': function(bf, bg, bh) {
                var bi = this['parameterPositions']
                  , bF = bf - 0x2
                  , bG = bf + 0x1
                  , bH = bi[bF]
                  , bI = bi[bG];
                if (void 0x0 === bH)
                    switch (this['getSettings_']()['endingStart']) {
                    case dL:
                        bF = bf,
                        bH = 0x2 * bg - bh;
                        break;
                    case dM:
                        bH = bg + bi[bF = bi['length'] - 0x2] - bi[bF + 0x1];
                        break;
                    default:
                        bF = bf,
                        bH = bh;
                    }
                if (void 0x0 === bI)
                    switch (this['getSettings_']()['endingEnd']) {
                    case dL:
                        bG = bf,
                        bI = 0x2 * bh - bg;
                        break;
                    case dM:
                        bG = 0x1,
                        bI = bh + bi[0x1] - bi[0x0];
                        break;
                    default:
                        bG = bf - 0x1,
                        bI = bg;
                    }
                var bJ = 0.5 * (bh - bg)
                  , bK = this['valueSize'];
                this['_weightPrev'] = bJ / (bg - bH),
                this['_weightNext'] = bJ / (bI - bh),
                this['_offsetPrev'] = bF * bK,
                this['_offsetNext'] = bG * bK;
            },
            'interpolate_': function(bf, bg, bh, bi) {
                for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = this['_offsetPrev'], bL = this['_offsetNext'], bM = this['_weightPrev'], bN = this['_weightNext'], bO = (bh - bg) / (bi - bg), bP = bO * bO, bQ = bP * bO, bR = -bM * bQ + 0x2 * bM * bP - bM * bO, bS = (0x1 + bM) * bQ + (-1.5 - 0x2 * bM) * bP + (-0.5 + bM) * bO + 0x1, bT = (-0x1 - bN) * bQ + (1.5 + bN) * bP + 0.5 * bO, bU = bN * bQ - bN * bP, bV = 0x0; bV !== bH; ++bV)
                    bF[bV] = bR * bG[bK + bV] + bS * bG[bJ + bV] + bT * bG[bI + bV] + bU * bG[bL + bV];
                return bF;
            }
        }),
        axX['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
            'constructor': axX,
            'interpolate_': function(bf, bg, bh, bi) {
                for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = bI - bH, bK = (bh - bg) / (bi - bg), bL = 0x1 - bK, bM = 0x0; bM !== bH; ++bM)
                    bF[bM] = bG[bJ + bM] * bL + bG[bI + bM] * bK;
                return bF;
            }
        }),
        ay2['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
            'constructor': ay2,
            'interpolate_': function(bf) {
                return this['copySampleValue_'](bf - 0x1);
            }
        }),
        Object['assign'](ay7, {
            'toJSON': function(bf) {
                var bg, bh = bf['constructor'];
                if (void 0x0 !== bh['toJSON'])
                    bg = bh['toJSON'](bf);
                else {
                    bg = {
                        'name': bf['name'],
                        'times': axj['convertArray'](bf['times'], Array),
                        'values': axj['convertArray'](bf['values'], Array)
                    };
                    var bi = bf['getInterpolation']();
                    bi !== bf['DefaultInterpolation'] && (bg['interpolation'] = bi);
                }
                return bg['type'] = bf['ValueTypeName'],
                bg;
            }
        }),
        Object['assign'](ay7['prototype'], {
            'constructor': ay7,
            'TimeBufferType': Float32Array,
            'ValueBufferType': Float32Array,
            'DefaultInterpolation': dI,
            'InterpolantFactoryMethodDiscrete': function(bf) {
                return new ay2(this['times'],this['values'],this['getValueSize'](),bf);
            },
            'InterpolantFactoryMethodLinear': function(bf) {
                return new axX(this['times'],this['values'],this['getValueSize'](),bf);
            },
            'InterpolantFactoryMethodSmooth': function(bf) {
                return new axS(this['times'],this['values'],this['getValueSize'](),bf);
            },
            'setInterpolation': function(bf) {
                var bg;
                switch (bf) {
                case dH:
                    bg = this['InterpolantFactoryMethodDiscrete'];
                    break;
                case dI:
                    bg = this['InterpolantFactoryMethodLinear'];
                    break;
                case dJ:
                    bg = this['InterpolantFactoryMethodSmooth'];
                }
                if (void 0x0 === bg) {
                    var bh = 'unsupported\x20interpolation\x20for\x20' + this['ValueTypeName'] + '\x20keyframe\x20track\x20named\x20' + this['name'];
                    if (void 0x0 === this['createInterpolant']) {
                        if (bf === this['DefaultInterpolation'])
                            throw new Error(bh);
                        this['setInterpolation'](this['DefaultInterpolation']);
                    }
                    return console['warn']('THREE.KeyframeTrack:', bh),
                    this;
                }
                return this['createInterpolant'] = bg,
                this;
            },
            'getInterpolation': function() {
                switch (this['createInterpolant']) {
                case this['InterpolantFactoryMethodDiscrete']:
                    return dH;
                case this['InterpolantFactoryMethodLinear']:
                    return dI;
                case this['InterpolantFactoryMethodSmooth']:
                    return dJ;
                }
            },
            'getValueSize': function() {
                return this['values']['length'] / this['times']['length'];
            },
            'shift': function(bf) {
                if (0x0 !== bf)
                    for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh)
                        bg[bh] += bf;
                return this;
            },
            'scale': function(bf) {
                if (0x1 !== bf)
                    for (var bg = this['times'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh)
                        bg[bh] *= bf;
                return this;
            },
            'trim': function(bf, bg) {
                for (var bh = this['times'], bi = bh['length'], bF = 0x0, bG = bi - 0x1; bF !== bi && bh[bF] < bf; )
                    ++bF;
                for (; -0x1 !== bG && bh[bG] > bg; )
                    --bG;
                if (++bG,
                0x0 !== bF || bG !== bi) {
                    bF >= bG && (bF = (bG = Math['max'](bG, 0x1)) - 0x1);
                    var bH = this['getValueSize']();
                    this['times'] = axj['arraySlice'](bh, bF, bG),
                    this['values'] = axj['arraySlice'](this['values'], bF * bH, bG * bH);
                }
                return this;
            },
            'validate': function() {
                var bf = !0x0
                  , bg = this['getValueSize']();
                bg - Math['floor'](bg) != 0x0 && (console['error']('THREE.KeyframeTrack:\x20Invalid\x20value\x20size\x20in\x20track.', this),
                bf = !0x1);
                var bh = this['times']
                  , bi = this['values']
                  , bF = bh['length'];
                0x0 === bF && (console['error']('THREE.KeyframeTrack:\x20Track\x20is\x20empty.', this),
                bf = !0x1);
                for (var bG = null, bH = 0x0; bH !== bF; bH++) {
                    var bI = bh[bH];
                    if ('number' == typeof bI && isNaN(bI)) {
                        console['error']('THREE.KeyframeTrack:\x20Time\x20is\x20not\x20a\x20valid\x20number.', this, bH, bI),
                        bf = !0x1;
                        break;
                    }
                    if (null !== bG && bG > bI) {
                        console['error']('THREE.KeyframeTrack:\x20Out\x20of\x20order\x20keys.', this, bH, bI, bG),
                        bf = !0x1;
                        break;
                    }
                    bG = bI;
                }
                if (void 0x0 !== bi && axj['isTypedArray'](bi)) {
                    bH = 0x0;
                    for (var bJ = bi['length']; bH !== bJ; ++bH) {
                        var bK = bi[bH];
                        if (isNaN(bK)) {
                            console['error']('THREE.KeyframeTrack:\x20Value\x20is\x20not\x20a\x20valid\x20number.', this, bH, bK),
                            bf = !0x1;
                            break;
                        }
                    }
                }
                return bf;
            },
            'optimize': function() {
                for (var bf = this['times'], bg = this['values'], bh = this['getValueSize'](), bi = this['getInterpolation']() === dJ, bF = 0x1, bG = bf['length'] - 0x1, bH = 0x1; bH < bG; ++bH) {
                    var bI = !0x1
                      , bJ = bf[bH];
                    if (bJ !== bf[bH + 0x1] && (0x1 !== bH || bJ !== bJ[0x0]))
                        if (bi)
                            bI = !0x0;
                        else
                            for (var bK = bH * bh, bL = bK - bh, bM = bK + bh, bN = 0x0; bN !== bh; ++bN) {
                                var bO = bg[bK + bN];
                                if (bO !== bg[bL + bN] || bO !== bg[bM + bN]) {
                                    bI = !0x0;
                                    break;
                                }
                            }
                    if (bI) {
                        if (bH !== bF) {
                            bf[bF] = bf[bH];
                            var bP = bH * bh
                              , bQ = bF * bh;
                            for (bN = 0x0; bN !== bh; ++bN)
                                bg[bQ + bN] = bg[bP + bN];
                        }
                        ++bF;
                    }
                }
                if (bG > 0x0) {
                    bf[bF] = bf[bG];
                    for (bP = bG * bh,
                    bQ = bF * bh,
                    bN = 0x0; bN !== bh; ++bN)
                        bg[bQ + bN] = bg[bP + bN];
                    ++bF;
                }
                return bF !== bf['length'] && (this['times'] = axj['arraySlice'](bf, 0x0, bF),
                this['values'] = axj['arraySlice'](bg, 0x0, bF * bh)),
                this;
            },
            'clone': function() {
                var bf = axj['arraySlice'](this['times'], 0x0)
                  , bg = axj['arraySlice'](this['values'], 0x0)
                  , bh = new (0x0,
                this['constructor'])(this['name'],bf,bg);
                return bh['createInterpolant'] = this['createInterpolant'],
                bh;
            }
        }),
        ayc['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
            'constructor': ayc,
            'ValueTypeName': 'bool',
            'ValueBufferType': Array,
            'DefaultInterpolation': dH,
            'InterpolantFactoryMethodLinear': void 0x0,
            'InterpolantFactoryMethodSmooth': void 0x0
        }),
        ayg['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
            'constructor': ayg,
            'ValueTypeName': 'color'
        }),
        ayl['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
            'constructor': ayl,
            'ValueTypeName': 'number'
        }),
        ayq['prototype'] = Object['assign'](Object['create'](axN['prototype']), {
            'constructor': ayq,
            'interpolate_': function(bf, bg, bh, bi) {
                for (var bF = this['resultBuffer'], bG = this['sampleValues'], bH = this['valueSize'], bI = bf * bH, bJ = (bh - bg) / (bi - bg), bK = bI + bH; bI !== bK; bI += 0x4)
                    eF['slerpFlat'](bF, 0x0, bG, bI - bH, bG, bI, bJ);
                return bF;
            }
        }),
        ayv['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
            'constructor': ayv,
            'ValueTypeName': 'quaternion',
            'DefaultInterpolation': dI,
            'InterpolantFactoryMethodLinear': function(bf) {
                return new ayq(this['times'],this['values'],this['getValueSize'](),bf);
            },
            'InterpolantFactoryMethodSmooth': void 0x0
        }),
        ayA['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
            'constructor': ayA,
            'ValueTypeName': 'string',
            'ValueBufferType': Array,
            'DefaultInterpolation': dH,
            'InterpolantFactoryMethodLinear': void 0x0,
            'InterpolantFactoryMethodSmooth': void 0x0
        }),
        ayF['prototype'] = Object['assign'](Object['create'](ay7['prototype']), {
            'constructor': ayF,
            'ValueTypeName': 'vector'
        }),
        Object['assign'](ayK, {
            'parse': function(bf) {
                for (var bg = [], bh = bf['tracks'], bi = 0x1 / (bf['fps'] || 0x1), bF = 0x0, bG = bh['length']; bF !== bG; ++bF)
                    bg['push'](ayO(bh[bF])['scale'](bi));
                return new ayK(bf['name'],bf['duration'],bg);
            },
            'toJSON': function(bf) {
                for (var bg = [], bh = bf['tracks'], bi = {
                    'name': bf['name'],
                    'duration': bf['duration'],
                    'tracks': bg,
                    'uuid': bf['uuid']
                }, bF = 0x0, bG = bh['length']; bF !== bG; ++bF)
                    bg['push'](ay7['toJSON'](bh[bF]));
                return bi;
            },
            'CreateFromMorphTargetSequence': function(bf, bg, bh, bi) {
                for (var bF = bg['length'], bG = [], bH = 0x0; bH < bF; bH++) {
                    var bI = []
                      , bJ = [];
                    bI['push']((bH + bF - 0x1) % bF, bH, (bH + 0x1) % bF),
                    bJ['push'](0x0, 0x1, 0x0);
                    var bK = axj['getKeyframeOrder'](bI);
                    bI = axj['sortedArray'](bI, 0x1, bK),
                    bJ = axj['sortedArray'](bJ, 0x1, bK),
                    bi || 0x0 !== bI[0x0] || (bI['push'](bF),
                    bJ['push'](bJ[0x0])),
                    bG['push'](new ayl('.morphTargetInfluences[' + bg[bH]['name'] + ']',bI,bJ)['scale'](0x1 / bh));
                }
                return new ayK(bf,-0x1,bG);
            },
            'findByName': function(bf, bg) {
                var bh = bf;
                if (!Array['isArray'](bf)) {
                    var bi = bf;
                    bh = bi['geometry'] && bi['geometry']['animations'] || bi['animations'];
                }
                for (var bF = 0x0; bF < bh['length']; bF++)
                    if (bh[bF]['name'] === bg)
                        return bh[bF];
                return null;
            },
            'CreateClipsFromMorphTargetSequences': function(bf, bg, bh) {
                for (var bi = {}, bF = /^([\w-]*?)([\d]+)$/, bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                    var bI = bf[bG]
                      , bJ = bI['name']['match'](bF);
                    if (bJ && bJ['length'] > 0x1) {
                        var bK = bi[bM = bJ[0x1]];
                        bK || (bi[bM] = bK = []),
                        bK['push'](bI);
                    }
                }
                var bL = [];
                for (var bM in bi)
                    bL['push'](ayK['CreateFromMorphTargetSequence'](bM, bi[bM], bg, bh));
                return bL;
            },
            'parseAnimation': function(bf, bg) {
                if (!bf)
                    return console['error']('THREE.AnimationClip:\x20No\x20animation\x20in\x20JSONLoader\x20data.'),
                    null;
                for (var bh = function(bf, bg, bh, bi, bF) {
                    if (0x0 !== bh['length']) {
                        var bG = []
                          , bH = [];
                        axj['flattenJSON'](bh, bG, bH, bi),
                        0x0 !== bG['length'] && bF['push'](new bf(bg,bG,bH));
                    }
                }, bi = [], bF = bf['name'] || 'default', bG = bf['length'] || -0x1, bH = bf['fps'] || 0x1e, bI = bf['hierarchy'] || [], bJ = 0x0; bJ < bI['length']; bJ++) {
                    var bK = bI[bJ]['keys'];
                    if (bK && 0x0 !== bK['length'])
                        if (bK[0x0]['morphTargets']) {
                            for (var bL = {}, bM = 0x0; bM < bK['length']; bM++)
                                if (bK[bM]['morphTargets'])
                                    for (var bN = 0x0; bN < bK[bM]['morphTargets']['length']; bN++)
                                        bL[bK[bM]['morphTargets'][bN]] = -0x1;
                            for (var bO in bL) {
                                var bP = []
                                  , bQ = [];
                                for (bN = 0x0; bN !== bK[bM]['morphTargets']['length']; ++bN) {
                                    var bR = bK[bM];
                                    bP['push'](bR['time']),
                                    bQ['push'](bR['morphTarget'] === bO ? 0x1 : 0x0);
                                }
                                bi['push'](new ayl('.morphTargetInfluence[' + bO + ']',bP,bQ));
                            }
                            bG = bL['length'] * (bH || 0x1);
                        } else {
                            var bS = '.bones[' + bg[bJ]['name'] + ']';
                            bh(ayF, bS + '.position', bK, 'pos', bi),
                            bh(ayv, bS + '.quaternion', bK, 'rot', bi),
                            bh(ayF, bS + '.scale', bK, 'scl', bi);
                        }
                }
                return 0x0 === bi['length'] ? null : new ayK(bF,bG,bi);
            }
        }),
        Object['assign'](ayK['prototype'], {
            'resetDuration': function() {
                for (var bf = 0x0, bg = 0x0, bh = this['tracks']['length']; bg !== bh; ++bg) {
                    var bi = this['tracks'][bg];
                    bf = Math['max'](bf, bi['times'][bi['times']['length'] - 0x1]);
                }
                return this['duration'] = bf,
                this;
            },
            'trim': function() {
                for (var bf = 0x0; bf < this['tracks']['length']; bf++)
                    this['tracks'][bf]['trim'](0x0, this['duration']);
                return this;
            },
            'validate': function() {
                for (var bf = !0x0, bg = 0x0; bg < this['tracks']['length']; bg++)
                    bf = bf && this['tracks'][bg]['validate']();
                return bf;
            },
            'optimize': function() {
                for (var bf = 0x0; bf < this['tracks']['length']; bf++)
                    this['tracks'][bf]['optimize']();
                return this;
            },
            'clone': function() {
                for (var bf = [], bg = 0x0; bg < this['tracks']['length']; bg++)
                    bf['push'](this['tracks'][bg]['clone']());
                return new ayK(this['name'],this['duration'],bf);
            }
        });
        var aCa = {
            'enabled': !0x1,
            'files': {},
            'add': function(bf, bg) {
                !0x1 !== this['enabled'] && (this['files'][bf] = bg);
            },
            'get': function(bf) {
                if (!0x1 !== this['enabled'])
                    return this['files'][bf];
            },
            'remove': function(bf) {
                delete this['files'][bf];
            },
            'clear': function() {
                this['files'] = {};
            }
        };
        function aCf(bf, bg, bh) {
            var bi = this
              , bF = !0x1
              , bG = 0x0
              , bH = 0x0
              , bI = void 0x0;
            this['onStart'] = void 0x0,
            this['onLoad'] = bf,
            this['onProgress'] = bg,
            this['onError'] = bh,
            this['itemStart'] = function(bf) {
                bH++,
                !0x1 === bF && void 0x0 !== bi['onStart'] && bi['onStart'](bf, bG, bH),
                bF = !0x0;
            }
            ,
            this['itemEnd'] = function(bf) {
                bG++,
                void 0x0 !== bi['onProgress'] && bi['onProgress'](bf, bG, bH),
                bG === bH && (bF = !0x1,
                void 0x0 !== bi['onLoad'] && bi['onLoad']());
            }
            ,
            this['itemError'] = function(bf) {
                void 0x0 !== bi['onError'] && bi['onError'](bf);
            }
            ,
            this['resolveURL'] = function(bf) {
                return bI ? bI(bf) : bf;
            }
            ,
            this['setURLModifier'] = function(bf) {
                return bI = bf,
                this;
            }
            ;
        }
        var aCt = new aCf()
          , aCu = {};
        function aCv(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aCx(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aCz(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt,
            this['_parser'] = null;
        }
        function aCB(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt,
            this['_parser'] = null;
        }
        function aCD(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aCF(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aCH(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aCJ() {
            this['type'] = 'Curve',
            this['arcLengthDivisions'] = 0xc8;
        }
        function aCK(bf, bg, bh, bi, bF, bG, bH, bI) {
            aCJ['call'](this),
            this['type'] = 'EllipseCurve',
            this['aX'] = bf || 0x0,
            this['aY'] = bg || 0x0,
            this['xRadius'] = bh || 0x1,
            this['yRadius'] = bi || 0x1,
            this['aStartAngle'] = bF || 0x0,
            this['aEndAngle'] = bG || 0x2 * Math['PI'],
            this['aClockwise'] = bH || !0x1,
            this['aRotation'] = bI || 0x0;
        }
        function aCT(bf, bg, bh, bi, bF, bG) {
            aCK['call'](this, bf, bg, bh, bh, bi, bF, bG),
            this['type'] = 'ArcCurve';
        }
        function aD0() {
            var bf = 0x0
              , bg = 0x0
              , bh = 0x0
              , bi = 0x0;
            function bF(bF, bG, bH, bI) {
                bf = bF,
                bg = bH,
                bh = -0x3 * bF + 0x3 * bG - 0x2 * bH - bI,
                bi = 0x2 * bF - 0x2 * bG + bH + bI;
            }
            return {
                'initCatmullRom': function(bf, bg, bh, bi, bG) {
                    bF(bg, bh, bG * (bh - bf), bG * (bi - bg));
                },
                'initNonuniformCatmullRom': function(bf, bg, bh, bi, bG, bH, bI) {
                    var bJ = (bg - bf) / bG - (bh - bf) / (bG + bH) + (bh - bg) / bH
                      , bK = (bh - bg) / bH - (bi - bg) / (bH + bI) + (bi - bh) / bI;
                    bF(bg, bh, bJ *= bH, bK *= bH);
                },
                'calc': function(bF) {
                    var bG = bF * bF;
                    return bf + bg * bF + bh * bG + bi * (bG * bF);
                }
            };
        }
        Object['assign'](aCv['prototype'], {
            'load': function(bf, bg, bh, bi) {
                void 0x0 === bf && (bf = ''),
                void 0x0 !== this['path'] && (bf = this['path'] + bf),
                bf = this['manager']['resolveURL'](bf);
                var bF = this
                  , bG = aCa['get'](bf);
                if (void 0x0 !== bG)
                    return bF['manager']['itemStart'](bf),
                    setTimeout(function() {
                        bg && bg(bG),
                        bF['manager']['itemEnd'](bf);
                    }, 0x0),
                    bG;
                if (void 0x0 === aCu[bf]) {
                    var bH = bf['match'](/^data:(.*?)(;base64)?,(.*)$/);
                    if (bH) {
                        var bI = bH[0x1]
                          , bJ = !!bH[0x2]
                          , bK = bH[0x3];
                        bK = decodeURIComponent(bK),
                        bJ && (bK = atob(bK));
                        try {
                            var bL, bM = (this['responseType'] || '')['toLowerCase']();
                            switch (bM) {
                            case 'arraybuffer':
                            case 'blob':
                                for (var bN = new Uint8Array(bK['length']), bO = 0x0; bO < bK['length']; bO++)
                                    bN[bO] = bK['charCodeAt'](bO);
                                bL = 'blob' === bM ? new Blob([bN['buffer']],{
                                    'type': bI
                                }) : bN['buffer'];
                                break;
                            case 'document':
                                var bP = new DOMParser();
                                bL = bP['parseFromString'](bK, bI);
                                break;
                            case 'json':
                                bL = JSON['parse'](bK);
                                break;
                            default:
                                bL = bK;
                            }
                            setTimeout(function() {
                                bg && bg(bL),
                                bF['manager']['itemEnd'](bf);
                            }, 0x0);
                        } catch (aDF) {
                            setTimeout(function() {
                                bi && bi(aDF),
                                bF['manager']['itemError'](bf),
                                bF['manager']['itemEnd'](bf);
                            }, 0x0);
                        }
                    } else {
                        aCu[bf] = [],
                        aCu[bf]['push']({
                            'onLoad': bg,
                            'onProgress': bh,
                            'onError': bi
                        });
                        var bQ = new XMLHttpRequest();
                        for (var bR in bQ['open']('GET', bf, !0x0),
                        bQ['addEventListener']('load', function(bg) {
                            var bh = this['response'];
                            aCa['add'](bf, bh);
                            var bi = aCu[bf];
                            if (delete aCu[bf],
                            0xc8 === this['status'] || 0x0 === this['status']) {
                                0x0 === this['status'] && console['warn']('THREE.FileLoader:\x20HTTP\x20Status\x200\x20received.');
                                for (var bG = 0x0, bH = bi['length']; bG < bH; bG++) {
                                    (bI = bi[bG])['onLoad'] && bI['onLoad'](bh);
                                }
                                bF['manager']['itemEnd'](bf);
                            } else {
                                for (bG = 0x0,
                                bH = bi['length']; bG < bH; bG++) {
                                    var bI;
                                    (bI = bi[bG])['onError'] && bI['onError'](bg);
                                }
                                bF['manager']['itemError'](bf),
                                bF['manager']['itemEnd'](bf);
                            }
                        }, !0x1),
                        bQ['addEventListener']('progress', function(bg) {
                            for (var bh = aCu[bf], bi = 0x0, bF = bh['length']; bi < bF; bi++) {
                                var bG = bh[bi];
                                bG['onProgress'] && bG['onProgress'](bg);
                            }
                        }, !0x1),
                        bQ['addEventListener']('error', function(bg) {
                            var bh = aCu[bf];
                            delete aCu[bf];
                            for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                                var bH = bh[bi];
                                bH['onError'] && bH['onError'](bg);
                            }
                            bF['manager']['itemError'](bf),
                            bF['manager']['itemEnd'](bf);
                        }, !0x1),
                        bQ['addEventListener']('abort', function(bg) {
                            var bh = aCu[bf];
                            delete aCu[bf];
                            for (var bi = 0x0, bG = bh['length']; bi < bG; bi++) {
                                var bH = bh[bi];
                                bH['onError'] && bH['onError'](bg);
                            }
                            bF['manager']['itemError'](bf),
                            bF['manager']['itemEnd'](bf);
                        }, !0x1),
                        void 0x0 !== this['responseType'] && (bQ['responseType'] = this['responseType']),
                        void 0x0 !== this['withCredentials'] && (bQ['withCredentials'] = this['withCredentials']),
                        bQ['overrideMimeType'] && bQ['overrideMimeType'](void 0x0 !== this['mimeType'] ? this['mimeType'] : 'text/plain'),
                        this['requestHeader'])
                            bQ['setRequestHeader'](bR, this['requestHeader'][bR]);
                        bQ['send'](null);
                    }
                    return bF['manager']['itemStart'](bf),
                    bQ;
                }
                aCu[bf]['push']({
                    'onLoad': bg,
                    'onProgress': bh,
                    'onError': bi
                });
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            },
            'setResponseType': function(bf) {
                return this['responseType'] = bf,
                this;
            },
            'setWithCredentials': function(bf) {
                return this['withCredentials'] = bf,
                this;
            },
            'setMimeType': function(bf) {
                return this['mimeType'] = bf,
                this;
            },
            'setRequestHeader': function(bf) {
                return this['requestHeader'] = bf,
                this;
            }
        }),
        Object['assign'](aCx['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = new aCv(bF['manager']);
                bG['setPath'](bF['path']),
                bG['load'](bf, function(bf) {
                    bg(bF['parse'](JSON['parse'](bf)));
                }, bh, bi);
            },
            'parse': function(bf) {
                for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
                    var bi = ayK['parse'](bf[bh]);
                    bg['push'](bi);
                }
                return bg;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aCz['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = []
                  , bH = new aeZ();
                bH['image'] = bG;
                var bI = new aCv(this['manager']);
                function bJ(bJ) {
                    bI['load'](bf[bJ], function(bf) {
                        var bh = bF['_parser'](bf, !0x0);
                        bG[bJ] = {
                            'width': bh['width'],
                            'height': bh['height'],
                            'format': bh['format'],
                            'mipmaps': bh['mipmaps']
                        },
                        0x6 === (bK += 0x1) && (0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS),
                        bH['format'] = bh['format'],
                        bH['needsUpdate'] = !0x0,
                        bg && bg(bH));
                    }, bh, bi);
                }
                if (bI['setPath'](this['path']),
                bI['setResponseType']('arraybuffer'),
                Array['isArray'](bf))
                    for (var bK = 0x0, bL = 0x0, bM = bf['length']; bL < bM; ++bL)
                        bJ(bL);
                else
                    bI['load'](bf, function(bf) {
                        var bh = bF['_parser'](bf, !0x0);
                        if (bh['isCubemap'])
                            for (var bi = bh['mipmaps']['length'] / bh['mipmapCount'], bI = 0x0; bI < bi; bI++) {
                                bG[bI] = {
                                    'mipmaps': []
                                };
                                for (var bJ = 0x0; bJ < bh['mipmapCount']; bJ++)
                                    bG[bI]['mipmaps']['push'](bh['mipmaps'][bI * bh['mipmapCount'] + bJ]),
                                    bG[bI]['format'] = bh['format'],
                                    bG[bI]['width'] = bh['width'],
                                    bG[bI]['height'] = bh['height'];
                            }
                        else
                            bH['image']['width'] = bh['width'],
                            bH['image']['height'] = bh['height'],
                            bH['mipmaps'] = bh['mipmaps'];
                        0x1 === bh['mipmapCount'] && (bH['minFilter'] = cS),
                        bH['format'] = bh['format'],
                        bH['needsUpdate'] = !0x0,
                        bg && bg(bH);
                    }, bh, bi);
                return bH;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aCB['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = new mo()
                  , bH = new aCv(this['manager']);
                return bH['setResponseType']('arraybuffer'),
                bH['setPath'](this['path']),
                bH['load'](bf, function(bf) {
                    var bh = bF['_parser'](bf);
                    bh && (void 0x0 !== bh['image'] ? bG['image'] = bh['image'] : void 0x0 !== bh['data'] && (bG['image']['width'] = bh['width'],
                    bG['image']['height'] = bh['height'],
                    bG['image']['data'] = bh['data']),
                    bG['wrapS'] = void 0x0 !== bh['wrapS'] ? bh['wrapS'] : cN,
                    bG['wrapT'] = void 0x0 !== bh['wrapT'] ? bh['wrapT'] : cN,
                    bG['magFilter'] = void 0x0 !== bh['magFilter'] ? bh['magFilter'] : cS,
                    bG['minFilter'] = void 0x0 !== bh['minFilter'] ? bh['minFilter'] : cU,
                    bG['anisotropy'] = void 0x0 !== bh['anisotropy'] ? bh['anisotropy'] : 0x1,
                    void 0x0 !== bh['format'] && (bG['format'] = bh['format']),
                    void 0x0 !== bh['type'] && (bG['type'] = bh['type']),
                    void 0x0 !== bh['mipmaps'] && (bG['mipmaps'] = bh['mipmaps']),
                    0x1 === bh['mipmapCount'] && (bG['minFilter'] = cS),
                    bG['needsUpdate'] = !0x0,
                    bg && bg(bG, bh));
                }, bh, bi),
                bG;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aCD['prototype'], {
            'crossOrigin': 'anonymous',
            'load': function(bf, bg, bh, bi) {
                void 0x0 === bf && (bf = ''),
                void 0x0 !== this['path'] && (bf = this['path'] + bf),
                bf = this['manager']['resolveURL'](bf);
                var bF = this
                  , bG = aCa['get'](bf);
                if (void 0x0 !== bG)
                    return bF['manager']['itemStart'](bf),
                    setTimeout(function() {
                        bg && bg(bG),
                        bF['manager']['itemEnd'](bf);
                    }, 0x0),
                    bG;
                var bH = document['createElementNS']('http://www.w3.org/1999/xhtml', 'img');
                function bI() {
                    bH['removeEventListener']('load', bI, !0x1),
                    bH['removeEventListener']('error', bJ, !0x1),
                    aCa['add'](bf, this),
                    bg && bg(this),
                    bF['manager']['itemEnd'](bf);
                }
                function bJ(bg) {
                    bH['removeEventListener']('load', bI, !0x1),
                    bH['removeEventListener']('error', bJ, !0x1),
                    bi && bi(bg),
                    bF['manager']['itemError'](bf),
                    bF['manager']['itemEnd'](bf);
                }
                return bH['addEventListener']('load', bI, !0x1),
                bH['addEventListener']('error', bJ, !0x1),
                'data:' !== bf['substr'](0x0, 0x5) && void 0x0 !== this['crossOrigin'] && (bH['crossOrigin'] = this['crossOrigin']),
                bF['manager']['itemStart'](bf),
                bH['src'] = bf,
                bH;
            },
            'setCrossOrigin': function(bf) {
                return this['crossOrigin'] = bf,
                this;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aCF['prototype'], {
            'crossOrigin': 'anonymous',
            'load': function(bf, bg, bh, bi) {
                var bF = new O3()
                  , bG = new aCD(this['manager']);
                bG['setCrossOrigin'](this['crossOrigin']),
                bG['setPath'](this['path']);
                var bH = 0x0;
                function bI(bh) {
                    bG['load'](bf[bh], function(bf) {
                        bF['images'][bh] = bf,
                        0x6 === ++bH && (bF['needsUpdate'] = !0x0,
                        bg && bg(bF));
                    }, void 0x0, bi);
                }
                for (var bJ = 0x0; bJ < bf['length']; ++bJ)
                    bI(bJ);
                return bF;
            },
            'setCrossOrigin': function(bf) {
                return this['crossOrigin'] = bf,
                this;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aCH['prototype'], {
            'crossOrigin': 'anonymous',
            'load': function(bf, bg, bh, bi) {
                var bF = new lW()
                  , bG = new aCD(this['manager']);
                return bG['setCrossOrigin'](this['crossOrigin']),
                bG['setPath'](this['path']),
                bG['load'](bf, function(bh) {
                    bF['image'] = bh;
                    var bi = bf['search'](/\.jpe?g($|\?)/i) > 0x0 || 0x0 === bf['search'](/^data\:image\/jpeg/);
                    bF['format'] = bi ? d8 : d9,
                    bF['needsUpdate'] = !0x0,
                    void 0x0 !== bg && bg(bF);
                }, bh, bi),
                bF;
            },
            'setCrossOrigin': function(bf) {
                return this['crossOrigin'] = bf,
                this;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aCJ['prototype'], {
            'getPoint': function() {
                return console['warn']('THREE.Curve:\x20.getPoint()\x20not\x20implemented.'),
                null;
            },
            'getPointAt': function(bf, bg) {
                var bh = this['getUtoTmapping'](bf);
                return this['getPoint'](bh, bg);
            },
            'getPoints': function(bf) {
                void 0x0 === bf && (bf = 0x5);
                for (var bg = [], bh = 0x0; bh <= bf; bh++)
                    bg['push'](this['getPoint'](bh / bf));
                return bg;
            },
            'getSpacedPoints': function(bf) {
                void 0x0 === bf && (bf = 0x5);
                for (var bg = [], bh = 0x0; bh <= bf; bh++)
                    bg['push'](this['getPointAt'](bh / bf));
                return bg;
            },
            'getLength': function() {
                var bf = this['getLengths']();
                return bf[bf['length'] - 0x1];
            },
            'getLengths': function(bf) {
                if (void 0x0 === bf && (bf = this['arcLengthDivisions']),
                this['cacheArcLengths'] && this['cacheArcLengths']['length'] === bf + 0x1 && !this['needsUpdate'])
                    return this['cacheArcLengths'];
                this['needsUpdate'] = !0x1;
                var bg, bh, bi = [], bF = this['getPoint'](0x0), bG = 0x0;
                for (bi['push'](0x0),
                bh = 0x1; bh <= bf; bh++)
                    bG += (bg = this['getPoint'](bh / bf))['distanceTo'](bF),
                    bi['push'](bG),
                    bF = bg;
                return this['cacheArcLengths'] = bi,
                bi;
            },
            'updateArcLengths': function() {
                this['needsUpdate'] = !0x0,
                this['getLengths']();
            },
            'getUtoTmapping': function(bf, bg) {
                var bh, bi = this['getLengths'](), bF = 0x0, bG = bi['length'];
                bh = bg || bf * bi[bG - 0x1];
                for (var bH, bI = 0x0, bJ = bG - 0x1; bI <= bJ; )
                    if ((bH = bi[bF = Math['floor'](bI + (bJ - bI) / 0x2)] - bh) < 0x0)
                        bI = bF + 0x1;
                    else {
                        if (!(bH > 0x0)) {
                            bJ = bF;
                            break;
                        }
                        bJ = bF - 0x1;
                    }
                if (bi[bF = bJ] === bh)
                    return bF / (bG - 0x1);
                var bK = bi[bF];
                return (bF + (bh - bK) / (bi[bF + 0x1] - bK)) / (bG - 0x1);
            },
            'getTangent': function(bf) {
                var bg = bf - 0.0001
                  , bh = bf + 0.0001;
                bg < 0x0 && (bg = 0x0),
                bh > 0x1 && (bh = 0x1);
                var bi = this['getPoint'](bg);
                return this['getPoint'](bh)['clone']()['sub'](bi)['normalize']();
            },
            'getTangentAt': function(bf) {
                var bg = this['getUtoTmapping'](bf);
                return this['getTangent'](bg);
            },
            'computeFrenetFrames': function(bf, bg) {
                var bh, bi, bF, bG = new eK(), bH = [], bI = [], bJ = [], bK = new eK(), bL = new mR();
                for (bh = 0x0; bh <= bf; bh++)
                    bi = bh / bf,
                    bH[bh] = this['getTangentAt'](bi),
                    bH[bh]['normalize']();
                bI[0x0] = new eK(),
                bJ[0x0] = new eK();
                var bM = Number['MAX_VALUE']
                  , bN = Math['abs'](bH[0x0]['x'])
                  , bO = Math['abs'](bH[0x0]['y'])
                  , bP = Math['abs'](bH[0x0]['z']);
                for (bN <= bM && (bM = bN,
                bG['set'](0x1, 0x0, 0x0)),
                bO <= bM && (bM = bO,
                bG['set'](0x0, 0x1, 0x0)),
                bP <= bM && bG['set'](0x0, 0x0, 0x1),
                bK['crossVectors'](bH[0x0], bG)['normalize'](),
                bI[0x0]['crossVectors'](bH[0x0], bK),
                bJ[0x0]['crossVectors'](bH[0x0], bI[0x0]),
                bh = 0x1; bh <= bf; bh++)
                    bI[bh] = bI[bh - 0x1]['clone'](),
                    bJ[bh] = bJ[bh - 0x1]['clone'](),
                    bK['crossVectors'](bH[bh - 0x1], bH[bh]),
                    bK['length']() > Number['EPSILON'] && (bK['normalize'](),
                    bF = Math['acos'](e2['clamp'](bH[bh - 0x1]['dot'](bH[bh]), -0x1, 0x1)),
                    bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bK, bF))),
                    bJ[bh]['crossVectors'](bH[bh], bI[bh]);
                if (!0x0 === bg)
                    for (bF = Math['acos'](e2['clamp'](bI[0x0]['dot'](bI[bf]), -0x1, 0x1)),
                    bF /= bf,
                    bH[0x0]['dot'](bK['crossVectors'](bI[0x0], bI[bf])) > 0x0 && (bF = -bF),
                    bh = 0x1; bh <= bf; bh++)
                        bI[bh]['applyMatrix4'](bL['makeRotationAxis'](bH[bh], bF * bh)),
                        bJ[bh]['crossVectors'](bH[bh], bI[bh]);
                return {
                    'tangents': bH,
                    'normals': bI,
                    'binormals': bJ
                };
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['arcLengthDivisions'] = bf['arcLengthDivisions'],
                this;
            },
            'toJSON': function() {
                var bf = {
                    'metadata': {
                        'version': 4.5,
                        'type': 'Curve',
                        'generator': 'Curve.toJSON'
                    }
                };
                return bf['arcLengthDivisions'] = this['arcLengthDivisions'],
                bf['type'] = this['type'],
                bf;
            },
            'fromJSON': function(bf) {
                return this['arcLengthDivisions'] = bf['arcLengthDivisions'],
                this;
            }
        }),
        aCK['prototype'] = Object['create'](aCJ['prototype']),
        aCK['prototype']['constructor'] = aCK,
        aCK['prototype']['isEllipseCurve'] = !0x0,
        aCK['prototype']['getPoint'] = function(bf, bg) {
            for (var bh = bg || new eC(), bi = 0x2 * Math['PI'], bF = this['aEndAngle'] - this['aStartAngle'], bG = Math['abs'](bF) < Number['EPSILON']; bF < 0x0; )
                bF += bi;
            for (; bF > bi; )
                bF -= bi;
            bF < Number['EPSILON'] && (bF = bG ? 0x0 : bi),
            !0x0 !== this['aClockwise'] || bG || (bF === bi ? bF = -bi : bF -= bi);
            var bH = this['aStartAngle'] + bf * bF
              , bI = this['aX'] + this['xRadius'] * Math['cos'](bH)
              , bJ = this['aY'] + this['yRadius'] * Math['sin'](bH);
            if (0x0 !== this['aRotation']) {
                var bK = Math['cos'](this['aRotation'])
                  , bL = Math['sin'](this['aRotation'])
                  , bM = bI - this['aX']
                  , bN = bJ - this['aY'];
                bI = bM * bK - bN * bL + this['aX'],
                bJ = bM * bL + bN * bK + this['aY'];
            }
            return bh['set'](bI, bJ);
        }
        ,
        aCK['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['aX'] = bf['aX'],
            this['aY'] = bf['aY'],
            this['xRadius'] = bf['xRadius'],
            this['yRadius'] = bf['yRadius'],
            this['aStartAngle'] = bf['aStartAngle'],
            this['aEndAngle'] = bf['aEndAngle'],
            this['aClockwise'] = bf['aClockwise'],
            this['aRotation'] = bf['aRotation'],
            this;
        }
        ,
        aCK['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['aX'] = this['aX'],
            bf['aY'] = this['aY'],
            bf['xRadius'] = this['xRadius'],
            bf['yRadius'] = this['yRadius'],
            bf['aStartAngle'] = this['aStartAngle'],
            bf['aEndAngle'] = this['aEndAngle'],
            bf['aClockwise'] = this['aClockwise'],
            bf['aRotation'] = this['aRotation'],
            bf;
        }
        ,
        aCK['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['aX'] = bf['aX'],
            this['aY'] = bf['aY'],
            this['xRadius'] = bf['xRadius'],
            this['yRadius'] = bf['yRadius'],
            this['aStartAngle'] = bf['aStartAngle'],
            this['aEndAngle'] = bf['aEndAngle'],
            this['aClockwise'] = bf['aClockwise'],
            this['aRotation'] = bf['aRotation'],
            this;
        }
        ,
        aCT['prototype'] = Object['create'](aCK['prototype']),
        aCT['prototype']['constructor'] = aCT,
        aCT['prototype']['isArcCurve'] = !0x0;
        var aGs = new eK()
          , aGt = new aD0()
          , aGu = new aD0()
          , aGv = new aD0();
        function aGw(bf, bg, bh, bi) {
            aCJ['call'](this),
            this['type'] = 'CatmullRomCurve3',
            this['points'] = bf || [],
            this['closed'] = bg || !0x1,
            this['curveType'] = bh || 'centripetal',
            this['tension'] = bi || 0.5;
        }
        function aGB(bf, bg, bh, bi, bF) {
            var bG = 0.5 * (bi - bg)
              , bH = 0.5 * (bF - bh)
              , bI = bf * bf;
            return (0x2 * bh - 0x2 * bi + bG + bH) * (bf * bI) + (-0x3 * bh + 0x3 * bi - 0x2 * bG - bH) * bI + bG * bf + bh;
        }
        function aGK(bf, bg, bh, bi) {
            return function(bf, bg) {
                var bh = 0x1 - bf;
                return bh * bh * bg;
            }(bf, bg) + function(bf, bg) {
                return 0x2 * (0x1 - bf) * bf * bg;
            }(bf, bh) + function(bf, bg) {
                return bf * bf * bg;
            }(bf, bi);
        }
        function aGW(bf, bg, bh, bi, bF) {
            return function(bf, bg) {
                var bh = 0x1 - bf;
                return bh * bh * bh * bg;
            }(bf, bg) + function(bf, bg) {
                var bh = 0x1 - bf;
                return 0x3 * bh * bh * bf * bg;
            }(bf, bh) + function(bf, bg) {
                return 0x3 * (0x1 - bf) * bf * bf * bg;
            }(bf, bi) + function(bf, bg) {
                return bf * bf * bf * bg;
            }(bf, bF);
        }
        function aHc(bf, bg, bh, bi) {
            aCJ['call'](this),
            this['type'] = 'CubicBezierCurve',
            this['v0'] = bf || new eC(),
            this['v1'] = bg || new eC(),
            this['v2'] = bh || new eC(),
            this['v3'] = bi || new eC();
        }
        function aHh(bf, bg, bh, bi) {
            aCJ['call'](this),
            this['type'] = 'CubicBezierCurve3',
            this['v0'] = bf || new eK(),
            this['v1'] = bg || new eK(),
            this['v2'] = bh || new eK(),
            this['v3'] = bi || new eK();
        }
        function aHm(bf, bg) {
            aCJ['call'](this),
            this['type'] = 'LineCurve',
            this['v1'] = bf || new eC(),
            this['v2'] = bg || new eC();
        }
        function aHp(bf, bg) {
            aCJ['call'](this),
            this['type'] = 'LineCurve3',
            this['v1'] = bf || new eK(),
            this['v2'] = bg || new eK();
        }
        function aHs(bf, bg, bh) {
            aCJ['call'](this),
            this['type'] = 'QuadraticBezierCurve',
            this['v0'] = bf || new eC(),
            this['v1'] = bg || new eC(),
            this['v2'] = bh || new eC();
        }
        function aHw(bf, bg, bh) {
            aCJ['call'](this),
            this['type'] = 'QuadraticBezierCurve3',
            this['v0'] = bf || new eK(),
            this['v1'] = bg || new eK(),
            this['v2'] = bh || new eK();
        }
        function aHA(bf) {
            aCJ['call'](this),
            this['type'] = 'SplineCurve',
            this['points'] = bf || [];
        }
        aGw['prototype'] = Object['create'](aCJ['prototype']),
        aGw['prototype']['constructor'] = aGw,
        aGw['prototype']['isCatmullRomCurve3'] = !0x0,
        aGw['prototype']['getPoint'] = function(bf, bg) {
            var bh, bi, bF, bG, bH = bg || new eK(), bI = this['points'], bJ = bI['length'], bK = (bJ - (this['closed'] ? 0x0 : 0x1)) * bf, bL = Math['floor'](bK), bM = bK - bL;
            if (this['closed'] ? bL += bL > 0x0 ? 0x0 : (Math['floor'](Math['abs'](bL) / bJ) + 0x1) * bJ : 0x0 === bM && bL === bJ - 0x1 && (bL = bJ - 0x2,
            bM = 0x1),
            this['closed'] || bL > 0x0 ? bh = bI[(bL - 0x1) % bJ] : (aGs['subVectors'](bI[0x0], bI[0x1])['add'](bI[0x0]),
            bh = aGs),
            bi = bI[bL % bJ],
            bF = bI[(bL + 0x1) % bJ],
            this['closed'] || bL + 0x2 < bJ ? bG = bI[(bL + 0x2) % bJ] : (aGs['subVectors'](bI[bJ - 0x1], bI[bJ - 0x2])['add'](bI[bJ - 0x1]),
            bG = aGs),
            'centripetal' === this['curveType'] || 'chordal' === this['curveType']) {
                var bN = 'chordal' === this['curveType'] ? 0.5 : 0.25
                  , bO = Math['pow'](bh['distanceToSquared'](bi), bN)
                  , bP = Math['pow'](bi['distanceToSquared'](bF), bN)
                  , bQ = Math['pow'](bF['distanceToSquared'](bG), bN);
                bP < 0.0001 && (bP = 0x1),
                bO < 0.0001 && (bO = bP),
                bQ < 0.0001 && (bQ = bP),
                aGt['initNonuniformCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], bO, bP, bQ),
                aGu['initNonuniformCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], bO, bP, bQ),
                aGv['initNonuniformCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], bO, bP, bQ);
            } else
                'catmullrom' === this['curveType'] && (aGt['initCatmullRom'](bh['x'], bi['x'], bF['x'], bG['x'], this['tension']),
                aGu['initCatmullRom'](bh['y'], bi['y'], bF['y'], bG['y'], this['tension']),
                aGv['initCatmullRom'](bh['z'], bi['z'], bF['z'], bG['z'], this['tension']));
            return bH['set'](aGt['calc'](bM), aGu['calc'](bM), aGv['calc'](bM)),
            bH;
        }
        ,
        aGw['prototype']['copy'] = function(bf) {
            aCJ['prototype']['copy']['call'](this, bf),
            this['points'] = [];
            for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
                var bi = bf['points'][bg];
                this['points']['push'](bi['clone']());
            }
            return this['closed'] = bf['closed'],
            this['curveType'] = bf['curveType'],
            this['tension'] = bf['tension'],
            this;
        }
        ,
        aGw['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            bf['points'] = [];
            for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
                var bi = this['points'][bg];
                bf['points']['push'](bi['toArray']());
            }
            return bf['closed'] = this['closed'],
            bf['curveType'] = this['curveType'],
            bf['tension'] = this['tension'],
            bf;
        }
        ,
        aGw['prototype']['fromJSON'] = function(bf) {
            aCJ['prototype']['fromJSON']['call'](this, bf),
            this['points'] = [];
            for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
                var bi = bf['points'][bg];
                this['points']['push'](new eK()['fromArray'](bi));
            }
            return this['closed'] = bf['closed'],
            this['curveType'] = bf['curveType'],
            this['tension'] = bf['tension'],
            this;
        }
        ,
        aHc['prototype'] = Object['create'](aCJ['prototype']),
        aHc['prototype']['constructor'] = aHc,
        aHc['prototype']['isCubicBezierCurve'] = !0x0,
        aHc['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eC()
              , bi = this['v0']
              , bF = this['v1']
              , bG = this['v2']
              , bH = this['v3'];
            return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y'])),
            bh;
        }
        ,
        aHc['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['v0']['copy'](bf['v0']),
            this['v1']['copy'](bf['v1']),
            this['v2']['copy'](bf['v2']),
            this['v3']['copy'](bf['v3']),
            this;
        }
        ,
        aHc['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['v0'] = this['v0']['toArray'](),
            bf['v1'] = this['v1']['toArray'](),
            bf['v2'] = this['v2']['toArray'](),
            bf['v3'] = this['v3']['toArray'](),
            bf;
        }
        ,
        aHc['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['v0']['fromArray'](bf['v0']),
            this['v1']['fromArray'](bf['v1']),
            this['v2']['fromArray'](bf['v2']),
            this['v3']['fromArray'](bf['v3']),
            this;
        }
        ,
        aHh['prototype'] = Object['create'](aCJ['prototype']),
        aHh['prototype']['constructor'] = aHh,
        aHh['prototype']['isCubicBezierCurve3'] = !0x0,
        aHh['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eK()
              , bi = this['v0']
              , bF = this['v1']
              , bG = this['v2']
              , bH = this['v3'];
            return bh['set'](aGW(bf, bi['x'], bF['x'], bG['x'], bH['x']), aGW(bf, bi['y'], bF['y'], bG['y'], bH['y']), aGW(bf, bi['z'], bF['z'], bG['z'], bH['z'])),
            bh;
        }
        ,
        aHh['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['v0']['copy'](bf['v0']),
            this['v1']['copy'](bf['v1']),
            this['v2']['copy'](bf['v2']),
            this['v3']['copy'](bf['v3']),
            this;
        }
        ,
        aHh['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['v0'] = this['v0']['toArray'](),
            bf['v1'] = this['v1']['toArray'](),
            bf['v2'] = this['v2']['toArray'](),
            bf['v3'] = this['v3']['toArray'](),
            bf;
        }
        ,
        aHh['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['v0']['fromArray'](bf['v0']),
            this['v1']['fromArray'](bf['v1']),
            this['v2']['fromArray'](bf['v2']),
            this['v3']['fromArray'](bf['v3']),
            this;
        }
        ,
        aHm['prototype'] = Object['create'](aCJ['prototype']),
        aHm['prototype']['constructor'] = aHm,
        aHm['prototype']['isLineCurve'] = !0x0,
        aHm['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eC();
            return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']),
            bh['multiplyScalar'](bf)['add'](this['v1'])),
            bh;
        }
        ,
        aHm['prototype']['getPointAt'] = function(bf, bg) {
            return this['getPoint'](bf, bg);
        }
        ,
        aHm['prototype']['getTangent'] = function() {
            return this['v2']['clone']()['sub'](this['v1'])['normalize']();
        }
        ,
        aHm['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['v1']['copy'](bf['v1']),
            this['v2']['copy'](bf['v2']),
            this;
        }
        ,
        aHm['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['v1'] = this['v1']['toArray'](),
            bf['v2'] = this['v2']['toArray'](),
            bf;
        }
        ,
        aHm['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['v1']['fromArray'](bf['v1']),
            this['v2']['fromArray'](bf['v2']),
            this;
        }
        ,
        aHp['prototype'] = Object['create'](aCJ['prototype']),
        aHp['prototype']['constructor'] = aHp,
        aHp['prototype']['isLineCurve3'] = !0x0,
        aHp['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eK();
            return 0x1 === bf ? bh['copy'](this['v2']) : (bh['copy'](this['v2'])['sub'](this['v1']),
            bh['multiplyScalar'](bf)['add'](this['v1'])),
            bh;
        }
        ,
        aHp['prototype']['getPointAt'] = function(bf, bg) {
            return this['getPoint'](bf, bg);
        }
        ,
        aHp['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['v1']['copy'](bf['v1']),
            this['v2']['copy'](bf['v2']),
            this;
        }
        ,
        aHp['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['v1'] = this['v1']['toArray'](),
            bf['v2'] = this['v2']['toArray'](),
            bf;
        }
        ,
        aHp['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['v1']['fromArray'](bf['v1']),
            this['v2']['fromArray'](bf['v2']),
            this;
        }
        ,
        aHs['prototype'] = Object['create'](aCJ['prototype']),
        aHs['prototype']['constructor'] = aHs,
        aHs['prototype']['isQuadraticBezierCurve'] = !0x0,
        aHs['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eC()
              , bi = this['v0']
              , bF = this['v1']
              , bG = this['v2'];
            return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y'])),
            bh;
        }
        ,
        aHs['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['v0']['copy'](bf['v0']),
            this['v1']['copy'](bf['v1']),
            this['v2']['copy'](bf['v2']),
            this;
        }
        ,
        aHs['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['v0'] = this['v0']['toArray'](),
            bf['v1'] = this['v1']['toArray'](),
            bf['v2'] = this['v2']['toArray'](),
            bf;
        }
        ,
        aHs['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['v0']['fromArray'](bf['v0']),
            this['v1']['fromArray'](bf['v1']),
            this['v2']['fromArray'](bf['v2']),
            this;
        }
        ,
        aHw['prototype'] = Object['create'](aCJ['prototype']),
        aHw['prototype']['constructor'] = aHw,
        aHw['prototype']['isQuadraticBezierCurve3'] = !0x0,
        aHw['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eK()
              , bi = this['v0']
              , bF = this['v1']
              , bG = this['v2'];
            return bh['set'](aGK(bf, bi['x'], bF['x'], bG['x']), aGK(bf, bi['y'], bF['y'], bG['y']), aGK(bf, bi['z'], bF['z'], bG['z'])),
            bh;
        }
        ,
        aHw['prototype']['copy'] = function(bf) {
            return aCJ['prototype']['copy']['call'](this, bf),
            this['v0']['copy'](bf['v0']),
            this['v1']['copy'](bf['v1']),
            this['v2']['copy'](bf['v2']),
            this;
        }
        ,
        aHw['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            return bf['v0'] = this['v0']['toArray'](),
            bf['v1'] = this['v1']['toArray'](),
            bf['v2'] = this['v2']['toArray'](),
            bf;
        }
        ,
        aHw['prototype']['fromJSON'] = function(bf) {
            return aCJ['prototype']['fromJSON']['call'](this, bf),
            this['v0']['fromArray'](bf['v0']),
            this['v1']['fromArray'](bf['v1']),
            this['v2']['fromArray'](bf['v2']),
            this;
        }
        ,
        aHA['prototype'] = Object['create'](aCJ['prototype']),
        aHA['prototype']['constructor'] = aHA,
        aHA['prototype']['isSplineCurve'] = !0x0,
        aHA['prototype']['getPoint'] = function(bf, bg) {
            var bh = bg || new eC()
              , bi = this['points']
              , bF = (bi['length'] - 0x1) * bf
              , bG = Math['floor'](bF)
              , bH = bF - bG
              , bI = bi[0x0 === bG ? bG : bG - 0x1]
              , bJ = bi[bG]
              , bK = bi[bG > bi['length'] - 0x2 ? bi['length'] - 0x1 : bG + 0x1]
              , bL = bi[bG > bi['length'] - 0x3 ? bi['length'] - 0x1 : bG + 0x2];
            return bh['set'](aGB(bH, bI['x'], bJ['x'], bK['x'], bL['x']), aGB(bH, bI['y'], bJ['y'], bK['y'], bL['y'])),
            bh;
        }
        ,
        aHA['prototype']['copy'] = function(bf) {
            aCJ['prototype']['copy']['call'](this, bf),
            this['points'] = [];
            for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
                var bi = bf['points'][bg];
                this['points']['push'](bi['clone']());
            }
            return this;
        }
        ,
        aHA['prototype']['toJSON'] = function() {
            var bf = aCJ['prototype']['toJSON']['call'](this);
            bf['points'] = [];
            for (var bg = 0x0, bh = this['points']['length']; bg < bh; bg++) {
                var bi = this['points'][bg];
                bf['points']['push'](bi['toArray']());
            }
            return bf;
        }
        ,
        aHA['prototype']['fromJSON'] = function(bf) {
            aCJ['prototype']['fromJSON']['call'](this, bf),
            this['points'] = [];
            for (var bg = 0x0, bh = bf['points']['length']; bg < bh; bg++) {
                var bi = bf['points'][bg];
                this['points']['push'](new eC()['fromArray'](bi));
            }
            return this;
        }
        ;
        var aJj = Object['freeze']({
            'ArcCurve': aCT,
            'CatmullRomCurve3': aGw,
            'CubicBezierCurve': aHc,
            'CubicBezierCurve3': aHh,
            'EllipseCurve': aCK,
            'LineCurve': aHm,
            'LineCurve3': aHp,
            'QuadraticBezierCurve': aHs,
            'QuadraticBezierCurve3': aHw,
            'SplineCurve': aHA
        });
        function aJk() {
            aCJ['call'](this),
            this['type'] = 'CurvePath',
            this['curves'] = [],
            this['autoClose'] = !0x1;
        }
        function aJl(bf) {
            aJk['call'](this),
            this['type'] = 'Path',
            this['currentPoint'] = new eC(),
            bf && this['setFromPoints'](bf);
        }
        function aJn(bf) {
            aJl['call'](this, bf),
            this['uuid'] = e2['generateUUID'](),
            this['type'] = 'Shape',
            this['holes'] = [];
        }
        function aJp(bf, bg) {
            yT['call'](this),
            this['type'] = 'Light',
            this['color'] = new w7(bf),
            this['intensity'] = void 0x0 !== bg ? bg : 0x1,
            this['receiveShadow'] = void 0x0;
        }
        function aJs(bf, bg, bh) {
            aJp['call'](this, bf, bh),
            this['type'] = 'HemisphereLight',
            this['castShadow'] = void 0x0,
            this['position']['copy'](yT['DefaultUp']),
            this['updateMatrix'](),
            this['groundColor'] = new w7(bg);
        }
        function aJw(bf) {
            this['camera'] = bf,
            this['bias'] = 0x0,
            this['radius'] = 0x1,
            this['mapSize'] = new eC(0x200,0x200),
            this['map'] = null,
            this['matrix'] = new mR();
        }
        function aJy() {
            aJw['call'](this, new a68(0x32,0x1,0.5,0x1f4));
        }
        function aJz(bf, bg, bh, bi, bF, bG) {
            aJp['call'](this, bf, bg),
            this['type'] = 'SpotLight',
            this['position']['copy'](yT['DefaultUp']),
            this['updateMatrix'](),
            this['target'] = new yT(),
            Object['defineProperty'](this, 'power', {
                'get': function() {
                    return this['intensity'] * Math['PI'];
                },
                'set': function(bf) {
                    this['intensity'] = bf / Math['PI'];
                }
            }),
            this['distance'] = void 0x0 !== bh ? bh : 0x0,
            this['angle'] = void 0x0 !== bi ? bi : Math['PI'] / 0x3,
            this['penumbra'] = void 0x0 !== bF ? bF : 0x0,
            this['decay'] = void 0x0 !== bG ? bG : 0x1,
            this['shadow'] = new aJy();
        }
        function aJH(bf, bg, bh, bi) {
            aJp['call'](this, bf, bg),
            this['type'] = 'PointLight',
            Object['defineProperty'](this, 'power', {
                'get': function() {
                    return 0x4 * this['intensity'] * Math['PI'];
                },
                'set': function(bf) {
                    this['intensity'] = bf / (0x4 * Math['PI']);
                }
            }),
            this['distance'] = void 0x0 !== bh ? bh : 0x0,
            this['decay'] = void 0x0 !== bi ? bi : 0x1,
            this['shadow'] = new aJw(new a68(0x5a,0x1,0.5,0x1f4));
        }
        function aJN(bf, bg, bh, bi, bF, bG) {
            a67['call'](this),
            this['type'] = 'OrthographicCamera',
            this['zoom'] = 0x1,
            this['view'] = null,
            this['left'] = void 0x0 !== bf ? bf : -0x1,
            this['right'] = void 0x0 !== bg ? bg : 0x1,
            this['top'] = void 0x0 !== bh ? bh : 0x1,
            this['bottom'] = void 0x0 !== bi ? bi : -0x1,
            this['near'] = void 0x0 !== bF ? bF : 0.1,
            this['far'] = void 0x0 !== bG ? bG : 0x7d0,
            this['updateProjectionMatrix']();
        }
        function aJU() {
            aJw['call'](this, new aJN(-0x5,0x5,0x5,-0x5,0.5,0x1f4));
        }
        function aJV(bf, bg) {
            aJp['call'](this, bf, bg),
            this['type'] = 'DirectionalLight',
            this['position']['copy'](yT['DefaultUp']),
            this['updateMatrix'](),
            this['target'] = new yT(),
            this['shadow'] = new aJU();
        }
        function aJY(bf, bg) {
            aJp['call'](this, bf, bg),
            this['type'] = 'AmbientLight',
            this['castShadow'] = void 0x0;
        }
        function aK1(bf, bg, bh, bi) {
            aJp['call'](this, bf, bg),
            this['type'] = 'RectAreaLight',
            this['width'] = void 0x0 !== bh ? bh : 0xa,
            this['height'] = void 0x0 !== bi ? bi : 0xa;
        }
        function aK6(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt,
            this['textures'] = {};
        }
        aJk['prototype'] = Object['assign'](Object['create'](aCJ['prototype']), {
            'constructor': aJk,
            'add': function(bf) {
                this['curves']['push'](bf);
            },
            'closePath': function() {
                var bf = this['curves'][0x0]['getPoint'](0x0)
                  , bg = this['curves'][this['curves']['length'] - 0x1]['getPoint'](0x1);
                bf['equals'](bg) || this['curves']['push'](new aHm(bg,bf));
            },
            'getPoint': function(bf) {
                for (var bg = bf * this['getLength'](), bh = this['getCurveLengths'](), bi = 0x0; bi < bh['length']; ) {
                    if (bh[bi] >= bg) {
                        var bF = bh[bi] - bg
                          , bG = this['curves'][bi]
                          , bH = bG['getLength']()
                          , bI = 0x0 === bH ? 0x0 : 0x1 - bF / bH;
                        return bG['getPointAt'](bI);
                    }
                    bi++;
                }
                return null;
            },
            'getLength': function() {
                var bf = this['getCurveLengths']();
                return bf[bf['length'] - 0x1];
            },
            'updateArcLengths': function() {
                this['needsUpdate'] = !0x0,
                this['cacheLengths'] = null,
                this['getCurveLengths']();
            },
            'getCurveLengths': function() {
                if (this['cacheLengths'] && this['cacheLengths']['length'] === this['curves']['length'])
                    return this['cacheLengths'];
                for (var bf = [], bg = 0x0, bh = 0x0, bi = this['curves']['length']; bh < bi; bh++)
                    bg += this['curves'][bh]['getLength'](),
                    bf['push'](bg);
                return this['cacheLengths'] = bf,
                bf;
            },
            'getSpacedPoints': function(bf) {
                void 0x0 === bf && (bf = 0x28);
                for (var bg = [], bh = 0x0; bh <= bf; bh++)
                    bg['push'](this['getPoint'](bh / bf));
                return this['autoClose'] && bg['push'](bg[0x0]),
                bg;
            },
            'getPoints': function(bf) {
                bf = bf || 0xc;
                for (var bg, bh = [], bi = 0x0, bF = this['curves']; bi < bF['length']; bi++)
                    for (var bG = bF[bi], bH = bG && bG['isEllipseCurve'] ? 0x2 * bf : bG && (bG['isLineCurve'] || bG['isLineCurve3']) ? 0x1 : bG && bG['isSplineCurve'] ? bf * bG['points']['length'] : bf, bI = bG['getPoints'](bH), bJ = 0x0; bJ < bI['length']; bJ++) {
                        var bK = bI[bJ];
                        bg && bg['equals'](bK) || (bh['push'](bK),
                        bg = bK);
                    }
                return this['autoClose'] && bh['length'] > 0x1 && !bh[bh['length'] - 0x1]['equals'](bh[0x0]) && bh['push'](bh[0x0]),
                bh;
            },
            'copy': function(bf) {
                aCJ['prototype']['copy']['call'](this, bf),
                this['curves'] = [];
                for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
                    var bi = bf['curves'][bg];
                    this['curves']['push'](bi['clone']());
                }
                return this['autoClose'] = bf['autoClose'],
                this;
            },
            'toJSON': function() {
                var bf = aCJ['prototype']['toJSON']['call'](this);
                bf['autoClose'] = this['autoClose'],
                bf['curves'] = [];
                for (var bg = 0x0, bh = this['curves']['length']; bg < bh; bg++) {
                    var bi = this['curves'][bg];
                    bf['curves']['push'](bi['toJSON']());
                }
                return bf;
            },
            'fromJSON': function(bf) {
                aCJ['prototype']['fromJSON']['call'](this, bf),
                this['autoClose'] = bf['autoClose'],
                this['curves'] = [];
                for (var bg = 0x0, bh = bf['curves']['length']; bg < bh; bg++) {
                    var bi = bf['curves'][bg];
                    this['curves']['push'](new aJj[bi['type']]()['fromJSON'](bi));
                }
                return this;
            }
        }),
        aJl['prototype'] = Object['assign'](Object['create'](aJk['prototype']), {
            'constructor': aJl,
            'setFromPoints': function(bf) {
                this['moveTo'](bf[0x0]['x'], bf[0x0]['y']);
                for (var bg = 0x1, bh = bf['length']; bg < bh; bg++)
                    this['lineTo'](bf[bg]['x'], bf[bg]['y']);
            },
            'moveTo': function(bf, bg) {
                this['currentPoint']['set'](bf, bg);
            },
            'lineTo': function(bf, bg) {
                var bh = new aHm(this['currentPoint']['clone'](),new eC(bf,bg));
                this['curves']['push'](bh),
                this['currentPoint']['set'](bf, bg);
            },
            'quadraticCurveTo': function(bf, bg, bh, bi) {
                var bF = new aHs(this['currentPoint']['clone'](),new eC(bf,bg),new eC(bh,bi));
                this['curves']['push'](bF),
                this['currentPoint']['set'](bh, bi);
            },
            'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
                var bH = new aHc(this['currentPoint']['clone'](),new eC(bf,bg),new eC(bh,bi),new eC(bF,bG));
                this['curves']['push'](bH),
                this['currentPoint']['set'](bF, bG);
            },
            'splineThru': function(bf) {
                var bg = new aHA([this['currentPoint']['clone']()]['concat'](bf));
                this['curves']['push'](bg),
                this['currentPoint']['copy'](bf[bf['length'] - 0x1]);
            },
            'arc': function(bf, bg, bh, bi, bF, bG) {
                var bH = this['currentPoint']['x']
                  , bI = this['currentPoint']['y'];
                this['absarc'](bf + bH, bg + bI, bh, bi, bF, bG);
            },
            'absarc': function(bf, bg, bh, bi, bF, bG) {
                this['absellipse'](bf, bg, bh, bh, bi, bF, bG);
            },
            'ellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
                var bJ = this['currentPoint']['x']
                  , bK = this['currentPoint']['y'];
                this['absellipse'](bf + bJ, bg + bK, bh, bi, bF, bG, bH, bI);
            },
            'absellipse': function(bf, bg, bh, bi, bF, bG, bH, bI) {
                var bJ = new aCK(bf,bg,bh,bi,bF,bG,bH,bI);
                if (this['curves']['length'] > 0x0) {
                    var bK = bJ['getPoint'](0x0);
                    bK['equals'](this['currentPoint']) || this['lineTo'](bK['x'], bK['y']);
                }
                this['curves']['push'](bJ);
                var bL = bJ['getPoint'](0x1);
                this['currentPoint']['copy'](bL);
            },
            'copy': function(bf) {
                return aJk['prototype']['copy']['call'](this, bf),
                this['currentPoint']['copy'](bf['currentPoint']),
                this;
            },
            'toJSON': function() {
                var bf = aJk['prototype']['toJSON']['call'](this);
                return bf['currentPoint'] = this['currentPoint']['toArray'](),
                bf;
            },
            'fromJSON': function(bf) {
                return aJk['prototype']['fromJSON']['call'](this, bf),
                this['currentPoint']['fromArray'](bf['currentPoint']),
                this;
            }
        }),
        aJn['prototype'] = Object['assign'](Object['create'](aJl['prototype']), {
            'constructor': aJn,
            'getPointsHoles': function(bf) {
                for (var bg = [], bh = 0x0, bi = this['holes']['length']; bh < bi; bh++)
                    bg[bh] = this['holes'][bh]['getPoints'](bf);
                return bg;
            },
            'extractPoints': function(bf) {
                return {
                    'shape': this['getPoints'](bf),
                    'holes': this['getPointsHoles'](bf)
                };
            },
            'copy': function(bf) {
                aJl['prototype']['copy']['call'](this, bf),
                this['holes'] = [];
                for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
                    var bi = bf['holes'][bg];
                    this['holes']['push'](bi['clone']());
                }
                return this;
            },
            'toJSON': function() {
                var bf = aJl['prototype']['toJSON']['call'](this);
                bf['uuid'] = this['uuid'],
                bf['holes'] = [];
                for (var bg = 0x0, bh = this['holes']['length']; bg < bh; bg++) {
                    var bi = this['holes'][bg];
                    bf['holes']['push'](bi['toJSON']());
                }
                return bf;
            },
            'fromJSON': function(bf) {
                aJl['prototype']['fromJSON']['call'](this, bf),
                this['uuid'] = bf['uuid'],
                this['holes'] = [];
                for (var bg = 0x0, bh = bf['holes']['length']; bg < bh; bg++) {
                    var bi = bf['holes'][bg];
                    this['holes']['push'](new aJl()['fromJSON'](bi));
                }
                return this;
            }
        }),
        aJp['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aJp,
            'isLight': !0x0,
            'copy': function(bf) {
                return yT['prototype']['copy']['call'](this, bf),
                this['color']['copy'](bf['color']),
                this['intensity'] = bf['intensity'],
                this;
            },
            'toJSON': function(bf) {
                var bg = yT['prototype']['toJSON']['call'](this, bf);
                return bg['object']['color'] = this['color']['getHex'](),
                bg['object']['intensity'] = this['intensity'],
                void 0x0 !== this['groundColor'] && (bg['object']['groundColor'] = this['groundColor']['getHex']()),
                void 0x0 !== this['distance'] && (bg['object']['distance'] = this['distance']),
                void 0x0 !== this['angle'] && (bg['object']['angle'] = this['angle']),
                void 0x0 !== this['decay'] && (bg['object']['decay'] = this['decay']),
                void 0x0 !== this['penumbra'] && (bg['object']['penumbra'] = this['penumbra']),
                void 0x0 !== this['shadow'] && (bg['object']['shadow'] = this['shadow']['toJSON']()),
                bg;
            }
        }),
        aJs['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aJs,
            'isHemisphereLight': !0x0,
            'copy': function(bf) {
                return aJp['prototype']['copy']['call'](this, bf),
                this['groundColor']['copy'](bf['groundColor']),
                this;
            }
        }),
        Object['assign'](aJw['prototype'], {
            'copy': function(bf) {
                return this['camera'] = bf['camera']['clone'](),
                this['bias'] = bf['bias'],
                this['radius'] = bf['radius'],
                this['mapSize']['copy'](bf['mapSize']),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'toJSON': function() {
                var bf = {};
                return 0x0 !== this['bias'] && (bf['bias'] = this['bias']),
                0x1 !== this['radius'] && (bf['radius'] = this['radius']),
                0x200 === this['mapSize']['x'] && 0x200 === this['mapSize']['y'] || (bf['mapSize'] = this['mapSize']['toArray']()),
                bf['camera'] = this['camera']['toJSON'](!0x1)['object'],
                delete bf['camera']['matrix'],
                bf;
            }
        }),
        aJy['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
            'constructor': aJy,
            'isSpotLightShadow': !0x0,
            'update': function(bf) {
                var bg = this['camera']
                  , bh = 0x2 * e2['RAD2DEG'] * bf['angle']
                  , bi = this['mapSize']['width'] / this['mapSize']['height']
                  , bF = bf['distance'] || bg['far'];
                bh === bg['fov'] && bi === bg['aspect'] && bF === bg['far'] || (bg['fov'] = bh,
                bg['aspect'] = bi,
                bg['far'] = bF,
                bg['updateProjectionMatrix']());
            }
        }),
        aJz['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aJz,
            'isSpotLight': !0x0,
            'copy': function(bf) {
                return aJp['prototype']['copy']['call'](this, bf),
                this['distance'] = bf['distance'],
                this['angle'] = bf['angle'],
                this['penumbra'] = bf['penumbra'],
                this['decay'] = bf['decay'],
                this['target'] = bf['target']['clone'](),
                this['shadow'] = bf['shadow']['clone'](),
                this;
            }
        }),
        aJH['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aJH,
            'isPointLight': !0x0,
            'copy': function(bf) {
                return aJp['prototype']['copy']['call'](this, bf),
                this['distance'] = bf['distance'],
                this['decay'] = bf['decay'],
                this['shadow'] = bf['shadow']['clone'](),
                this;
            }
        }),
        aJN['prototype'] = Object['assign'](Object['create'](a67['prototype']), {
            'constructor': aJN,
            'isOrthographicCamera': !0x0,
            'copy': function(bf, bg) {
                return a67['prototype']['copy']['call'](this, bf, bg),
                this['left'] = bf['left'],
                this['right'] = bf['right'],
                this['top'] = bf['top'],
                this['bottom'] = bf['bottom'],
                this['near'] = bf['near'],
                this['far'] = bf['far'],
                this['zoom'] = bf['zoom'],
                this['view'] = null === bf['view'] ? null : Object['assign']({}, bf['view']),
                this;
            },
            'setViewOffset': function(bf, bg, bh, bi, bF, bG) {
                null === this['view'] && (this['view'] = {
                    'enabled': !0x0,
                    'fullWidth': 0x1,
                    'fullHeight': 0x1,
                    'offsetX': 0x0,
                    'offsetY': 0x0,
                    'width': 0x1,
                    'height': 0x1
                }),
                this['view']['enabled'] = !0x0,
                this['view']['fullWidth'] = bf,
                this['view']['fullHeight'] = bg,
                this['view']['offsetX'] = bh,
                this['view']['offsetY'] = bi,
                this['view']['width'] = bF,
                this['view']['height'] = bG,
                this['updateProjectionMatrix']();
            },
            'clearViewOffset': function() {
                null !== this['view'] && (this['view']['enabled'] = !0x1),
                this['updateProjectionMatrix']();
            },
            'updateProjectionMatrix': function() {
                var bf = (this['right'] - this['left']) / (0x2 * this['zoom'])
                  , bg = (this['top'] - this['bottom']) / (0x2 * this['zoom'])
                  , bh = (this['right'] + this['left']) / 0x2
                  , bi = (this['top'] + this['bottom']) / 0x2
                  , bF = bh - bf
                  , bG = bh + bf
                  , bH = bi + bg
                  , bI = bi - bg;
                if (null !== this['view'] && this['view']['enabled']) {
                    var bJ = this['zoom'] / (this['view']['width'] / this['view']['fullWidth'])
                      , bK = this['zoom'] / (this['view']['height'] / this['view']['fullHeight'])
                      , bL = (this['right'] - this['left']) / this['view']['width']
                      , bM = (this['top'] - this['bottom']) / this['view']['height'];
                    bG = (bF += bL * (this['view']['offsetX'] / bJ)) + bL * (this['view']['width'] / bJ),
                    bI = (bH -= bM * (this['view']['offsetY'] / bK)) - bM * (this['view']['height'] / bK);
                }
                this['projectionMatrix']['makeOrthographic'](bF, bG, bH, bI, this['near'], this['far']),
                this['projectionMatrixInverse']['getInverse'](this['projectionMatrix']);
            },
            'toJSON': function(bf) {
                var bg = yT['prototype']['toJSON']['call'](this, bf);
                return bg['object']['zoom'] = this['zoom'],
                bg['object']['left'] = this['left'],
                bg['object']['right'] = this['right'],
                bg['object']['top'] = this['top'],
                bg['object']['bottom'] = this['bottom'],
                bg['object']['near'] = this['near'],
                bg['object']['far'] = this['far'],
                null !== this['view'] && (bg['object']['view'] = Object['assign']({}, this['view'])),
                bg;
            }
        }),
        aJU['prototype'] = Object['assign'](Object['create'](aJw['prototype']), {
            'constructor': aJU
        }),
        aJV['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aJV,
            'isDirectionalLight': !0x0,
            'copy': function(bf) {
                return aJp['prototype']['copy']['call'](this, bf),
                this['target'] = bf['target']['clone'](),
                this['shadow'] = bf['shadow']['clone'](),
                this;
            }
        }),
        aJY['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aJY,
            'isAmbientLight': !0x0
        }),
        aK1['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aK1,
            'isRectAreaLight': !0x0,
            'copy': function(bf) {
                return aJp['prototype']['copy']['call'](this, bf),
                this['width'] = bf['width'],
                this['height'] = bf['height'],
                this;
            },
            'toJSON': function(bf) {
                var bg = aJp['prototype']['toJSON']['call'](this, bf);
                return bg['object']['width'] = this['width'],
                bg['object']['height'] = this['height'],
                bg;
            }
        }),
        Object['assign'](aK6['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = new aCv(bF['manager']);
                bG['setPath'](bF['path']),
                bG['load'](bf, function(bf) {
                    bg(bF['parse'](JSON['parse'](bf)));
                }, bh, bi);
            },
            'parse': function(bf) {
                var bg = this['textures'];
                function bh(bf) {
                    return void 0x0 === bg[bf] && console['warn']('THREE.MaterialLoader:\x20Undefined\x20texture', bf),
                    bg[bf];
                }
                var bi = new axi[bf['type']]();
                if (void 0x0 !== bf['uuid'] && (bi['uuid'] = bf['uuid']),
                void 0x0 !== bf['name'] && (bi['name'] = bf['name']),
                void 0x0 !== bf['color'] && bi['color']['setHex'](bf['color']),
                void 0x0 !== bf['roughness'] && (bi['roughness'] = bf['roughness']),
                void 0x0 !== bf['metalness'] && (bi['metalness'] = bf['metalness']),
                void 0x0 !== bf['emissive'] && bi['emissive']['setHex'](bf['emissive']),
                void 0x0 !== bf['specular'] && bi['specular']['setHex'](bf['specular']),
                void 0x0 !== bf['shininess'] && (bi['shininess'] = bf['shininess']),
                void 0x0 !== bf['clearCoat'] && (bi['clearCoat'] = bf['clearCoat']),
                void 0x0 !== bf['clearCoatRoughness'] && (bi['clearCoatRoughness'] = bf['clearCoatRoughness']),
                void 0x0 !== bf['vertexColors'] && (bi['vertexColors'] = bf['vertexColors']),
                void 0x0 !== bf['fog'] && (bi['fog'] = bf['fog']),
                void 0x0 !== bf['flatShading'] && (bi['flatShading'] = bf['flatShading']),
                void 0x0 !== bf['blending'] && (bi['blending'] = bf['blending']),
                void 0x0 !== bf['combine'] && (bi['combine'] = bf['combine']),
                void 0x0 !== bf['side'] && (bi['side'] = bf['side']),
                void 0x0 !== bf['opacity'] && (bi['opacity'] = bf['opacity']),
                void 0x0 !== bf['transparent'] && (bi['transparent'] = bf['transparent']),
                void 0x0 !== bf['alphaTest'] && (bi['alphaTest'] = bf['alphaTest']),
                void 0x0 !== bf['depthTest'] && (bi['depthTest'] = bf['depthTest']),
                void 0x0 !== bf['depthWrite'] && (bi['depthWrite'] = bf['depthWrite']),
                void 0x0 !== bf['colorWrite'] && (bi['colorWrite'] = bf['colorWrite']),
                void 0x0 !== bf['wireframe'] && (bi['wireframe'] = bf['wireframe']),
                void 0x0 !== bf['wireframeLinewidth'] && (bi['wireframeLinewidth'] = bf['wireframeLinewidth']),
                void 0x0 !== bf['wireframeLinecap'] && (bi['wireframeLinecap'] = bf['wireframeLinecap']),
                void 0x0 !== bf['wireframeLinejoin'] && (bi['wireframeLinejoin'] = bf['wireframeLinejoin']),
                void 0x0 !== bf['rotation'] && (bi['rotation'] = bf['rotation']),
                0x1 !== bf['linewidth'] && (bi['linewidth'] = bf['linewidth']),
                void 0x0 !== bf['dashSize'] && (bi['dashSize'] = bf['dashSize']),
                void 0x0 !== bf['gapSize'] && (bi['gapSize'] = bf['gapSize']),
                void 0x0 !== bf['scale'] && (bi['scale'] = bf['scale']),
                void 0x0 !== bf['polygonOffset'] && (bi['polygonOffset'] = bf['polygonOffset']),
                void 0x0 !== bf['polygonOffsetFactor'] && (bi['polygonOffsetFactor'] = bf['polygonOffsetFactor']),
                void 0x0 !== bf['polygonOffsetUnits'] && (bi['polygonOffsetUnits'] = bf['polygonOffsetUnits']),
                void 0x0 !== bf['skinning'] && (bi['skinning'] = bf['skinning']),
                void 0x0 !== bf['morphTargets'] && (bi['morphTargets'] = bf['morphTargets']),
                void 0x0 !== bf['dithering'] && (bi['dithering'] = bf['dithering']),
                void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']),
                void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']),
                void 0x0 !== bf['uniforms'])
                    for (var bF in bf['uniforms']) {
                        var bG = bf['uniforms'][bF];
                        switch (bi['uniforms'][bF] = {},
                        bG['type']) {
                        case 't':
                            bi['uniforms'][bF]['value'] = bh(bG['value']);
                            break;
                        case 'c':
                            bi['uniforms'][bF]['value'] = new w7()['setHex'](bG['value']);
                            break;
                        case 'v2':
                            bi['uniforms'][bF]['value'] = new eC()['fromArray'](bG['value']);
                            break;
                        case 'v3':
                            bi['uniforms'][bF]['value'] = new eK()['fromArray'](bG['value']);
                            break;
                        case 'v4':
                            bi['uniforms'][bF]['value'] = new m7()['fromArray'](bG['value']);
                            break;
                        case 'm3':
                            bi['uniforms'][bF]['value'] = new eO()['fromArray'](bG['value']);
                        case 'm4':
                            bi['uniforms'][bF]['value'] = new mR()['fromArray'](bG['value']);
                            break;
                        default:
                            bi['uniforms'][bF]['value'] = bG['value'];
                        }
                    }
                if (void 0x0 !== bf['defines'] && (bi['defines'] = bf['defines']),
                void 0x0 !== bf['vertexShader'] && (bi['vertexShader'] = bf['vertexShader']),
                void 0x0 !== bf['fragmentShader'] && (bi['fragmentShader'] = bf['fragmentShader']),
                void 0x0 !== bf['extensions'])
                    for (var bH in bf['extensions'])
                        bi['extensions'][bH] = bf['extensions'][bH];
                if (void 0x0 !== bf['shading'] && (bi['flatShading'] = 0x1 === bf['shading']),
                void 0x0 !== bf['size'] && (bi['size'] = bf['size']),
                void 0x0 !== bf['sizeAttenuation'] && (bi['sizeAttenuation'] = bf['sizeAttenuation']),
                void 0x0 !== bf['map'] && (bi['map'] = bh(bf['map'])),
                void 0x0 !== bf['matcap'] && (bi['matcap'] = bh(bf['matcap'])),
                void 0x0 !== bf['alphaMap'] && (bi['alphaMap'] = bh(bf['alphaMap']),
                bi['transparent'] = !0x0),
                void 0x0 !== bf['bumpMap'] && (bi['bumpMap'] = bh(bf['bumpMap'])),
                void 0x0 !== bf['bumpScale'] && (bi['bumpScale'] = bf['bumpScale']),
                void 0x0 !== bf['normalMap'] && (bi['normalMap'] = bh(bf['normalMap'])),
                void 0x0 !== bf['normalMapType'] && (bi['normalMapType'] = bf['normalMapType']),
                void 0x0 !== bf['normalScale']) {
                    var bI = bf['normalScale'];
                    !0x1 === Array['isArray'](bI) && (bI = [bI, bI]),
                    bi['normalScale'] = new eC()['fromArray'](bI);
                }
                return void 0x0 !== bf['displacementMap'] && (bi['displacementMap'] = bh(bf['displacementMap'])),
                void 0x0 !== bf['displacementScale'] && (bi['displacementScale'] = bf['displacementScale']),
                void 0x0 !== bf['displacementBias'] && (bi['displacementBias'] = bf['displacementBias']),
                void 0x0 !== bf['roughnessMap'] && (bi['roughnessMap'] = bh(bf['roughnessMap'])),
                void 0x0 !== bf['metalnessMap'] && (bi['metalnessMap'] = bh(bf['metalnessMap'])),
                void 0x0 !== bf['emissiveMap'] && (bi['emissiveMap'] = bh(bf['emissiveMap'])),
                void 0x0 !== bf['emissiveIntensity'] && (bi['emissiveIntensity'] = bf['emissiveIntensity']),
                void 0x0 !== bf['specularMap'] && (bi['specularMap'] = bh(bf['specularMap'])),
                void 0x0 !== bf['envMap'] && (bi['envMap'] = bh(bf['envMap'])),
                void 0x0 !== bf['envMapIntensity'] && (bi['envMapIntensity'] = bf['envMapIntensity']),
                void 0x0 !== bf['reflectivity'] && (bi['reflectivity'] = bf['reflectivity']),
                void 0x0 !== bf['lightMap'] && (bi['lightMap'] = bh(bf['lightMap'])),
                void 0x0 !== bf['lightMapIntensity'] && (bi['lightMapIntensity'] = bf['lightMapIntensity']),
                void 0x0 !== bf['aoMap'] && (bi['aoMap'] = bh(bf['aoMap'])),
                void 0x0 !== bf['aoMapIntensity'] && (bi['aoMapIntensity'] = bf['aoMapIntensity']),
                void 0x0 !== bf['gradientMap'] && (bi['gradientMap'] = bh(bf['gradientMap'])),
                bi;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            },
            'setTextures': function(bf) {
                return this['textures'] = bf,
                this;
            }
        });
        var aMX = {
            'decodeText': function(bf) {
                if ('undefined' != typeof TextDecoder)
                    return new TextDecoder()['decode'](bf);
                for (var bg = '', bh = 0x0, bi = bf['length']; bh < bi; bh++)
                    bg += String['fromCharCode'](bf[bh]);
                try {
                    return decodeURIComponent(escape(bg));
                } catch (aN2) {
                    return bg;
                }
            },
            'extractUrlBase': function(bf) {
                var bg = bf['lastIndexOf']('/');
                return -0x1 === bg ? './' : bf['substr'](0x0, bg + 0x1);
            }
        };
        function aN5() {
            Gf['call'](this),
            this['type'] = 'InstancedBufferGeometry',
            this['maxInstancedCount'] = void 0x0;
        }
        function aN6(bf, bg, bh, bi) {
            'number' == typeof bh && (bi = bh,
            bh = !0x1,
            console['error']('THREE.InstancedBufferAttribute:\x20The\x20constructor\x20now\x20expects\x20normalized\x20as\x20the\x20third\x20argument.')),
            AI['call'](this, bf, bg, bh),
            this['meshPerAttribute'] = bi || 0x1;
        }
        function aNb(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        aN5['prototype'] = Object['assign'](Object['create'](Gf['prototype']), {
            'constructor': aN5,
            'isInstancedBufferGeometry': !0x0,
            'copy': function(bf) {
                return Gf['prototype']['copy']['call'](this, bf),
                this['maxInstancedCount'] = bf['maxInstancedCount'],
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'toJSON': function() {
                var bf = Gf['prototype']['toJSON']['call'](this);
                return bf['maxInstancedCount'] = this['maxInstancedCount'],
                bf['isInstancedBufferGeometry'] = !0x0,
                bf;
            }
        }),
        aN6['prototype'] = Object['assign'](Object['create'](AI['prototype']), {
            'constructor': aN6,
            'isInstancedBufferAttribute': !0x0,
            'copy': function(bf) {
                return AI['prototype']['copy']['call'](this, bf),
                this['meshPerAttribute'] = bf['meshPerAttribute'],
                this;
            },
            'toJSON': function() {
                var bf = AI['prototype']['toJSON']['call'](this);
                return bf['meshPerAttribute'] = this['meshPerAttribute'],
                bf['isInstancedBufferAttribute'] = !0x0,
                bf;
            }
        }),
        Object['assign'](aNb['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = new aCv(bF['manager']);
                bG['setPath'](bF['path']),
                bG['load'](bf, function(bf) {
                    bg(bF['parse'](JSON['parse'](bf)));
                }, bh, bi);
            },
            'parse': function(bf) {
                var bg = bf['isInstancedBufferGeometry'] ? new aN5() : new Gf()
                  , bh = bf['data']['index'];
                if (void 0x0 !== bh) {
                    var bi = new aNI[bh['type']](bh['array']);
                    bg['setIndex'](new AI(bi,0x1));
                }
                var bF = bf['data']['attributes'];
                for (var bG in bF) {
                    var bH = bF[bG]
                      , bI = (bi = new aNI[bH['type']](bH['array']),
                    new (bH['isInstancedBufferAttribute'] ? aN6 : AI)(bi,bH['itemSize'],bH['normalized']));
                    void 0x0 !== bH['name'] && (bI['name'] = bH['name']),
                    bg['addAttribute'](bG, bI);
                }
                var bJ = bf['data']['morphAttributes'];
                if (bJ)
                    for (var bG in bJ) {
                        for (var bK = bJ[bG], bL = [], bM = 0x0, bN = bK['length']; bM < bN; bM++) {
                            bH = bK[bM],
                            bI = new AI(bi = new aNI[bH['type']](bH['array']),bH['itemSize'],bH['normalized']);
                            void 0x0 !== bH['name'] && (bI['name'] = bH['name']),
                            bL['push'](bI);
                        }
                        bg['morphAttributes'][bG] = bL;
                    }
                var bO = bf['data']['groups'] || bf['data']['drawcalls'] || bf['data']['offsets'];
                if (void 0x0 !== bO) {
                    bM = 0x0;
                    for (var bP = bO['length']; bM !== bP; ++bM) {
                        var bQ = bO[bM];
                        bg['addGroup'](bQ['start'], bQ['count'], bQ['materialIndex']);
                    }
                }
                var bR = bf['data']['boundingSphere'];
                if (void 0x0 !== bR) {
                    var bS = new eK();
                    void 0x0 !== bR['center'] && bS['fromArray'](bR['center']),
                    bg['boundingSphere'] = new mE(bS,bR['radius']);
                }
                return bf['name'] && (bg['name'] = bf['name']),
                bf['userData'] && (bg['userData'] = bf['userData']),
                bg;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        });
        var aNI = {
            'Int8Array': Int8Array,
            'Uint8Array': Uint8Array,
            'Uint8ClampedArray': 'undefined' != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
            'Int16Array': Int16Array,
            'Uint16Array': Uint16Array,
            'Int32Array': Int32Array,
            'Uint32Array': Uint32Array,
            'Float32Array': Float32Array,
            'Float64Array': Float64Array
        };
        function aNJ(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt,
            this['resourcePath'] = '';
        }
        Object['assign'](aNJ['prototype'], {
            'crossOrigin': 'anonymous',
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = void 0x0 === this['path'] ? aMX['extractUrlBase'](bf) : this['path'];
                this['resourcePath'] = this['resourcePath'] || bG;
                var bH = new aCv(bF['manager']);
                bH['setPath'](this['path']),
                bH['load'](bf, function(bh) {
                    var bG = null;
                    try {
                        bG = JSON['parse'](bh);
                    } catch (aNU) {
                        return void 0x0 !== bi && bi(aNU),
                        void console['error']('THREE:ObjectLoader:\x20Can\x27t\x20parse\x20' + bf + '.', aNU['message']);
                    }
                    var bH = bG['metadata'];
                    void 0x0 !== bH && void 0x0 !== bH['type'] && 'geometry' !== bH['type']['toLowerCase']() ? bF['parse'](bG, bg) : console['error']('THREE.ObjectLoader:\x20Can\x27t\x20load\x20' + bf);
                }, bh, bi);
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            },
            'setResourcePath': function(bf) {
                return this['resourcePath'] = bf,
                this;
            },
            'setCrossOrigin': function(bf) {
                return this['crossOrigin'] = bf,
                this;
            },
            'parse': function(bf, bg) {
                var bh = this['parseShape'](bf['shapes'])
                  , bi = this['parseGeometries'](bf['geometries'], bh)
                  , bF = this['parseImages'](bf['images'], function() {
                    void 0x0 !== bg && bg(bI);
                })
                  , bG = this['parseTextures'](bf['textures'], bF)
                  , bH = this['parseMaterials'](bf['materials'], bG)
                  , bI = this['parseObject'](bf['object'], bi, bH);
                return bf['animations'] && (bI['animations'] = this['parseAnimations'](bf['animations'])),
                void 0x0 !== bf['images'] && 0x0 !== bf['images']['length'] || void 0x0 !== bg && bg(bI),
                bI;
            },
            'parseShape': function(bf) {
                var bg = {};
                if (void 0x0 !== bf)
                    for (var bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                        var bF = new aJn()['fromJSON'](bf[bh]);
                        bg[bF['uuid']] = bF;
                    }
                return bg;
            },
            'parseGeometries': function(bf, bg) {
                var bh = {};
                if (void 0x0 !== bf)
                    for (var bi = new aNb(), bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                        var bH, bI = bf[bF];
                        switch (bI['type']) {
                        case 'PlaneGeometry':
                        case 'PlaneBufferGeometry':
                            bH = new awO[bI['type']](bI['width'],bI['height'],bI['widthSegments'],bI['heightSegments']);
                            break;
                        case 'BoxGeometry':
                        case 'BoxBufferGeometry':
                        case 'CubeGeometry':
                            bH = new awO[bI['type']](bI['width'],bI['height'],bI['depth'],bI['widthSegments'],bI['heightSegments'],bI['depthSegments']);
                            break;
                        case 'CircleGeometry':
                        case 'CircleBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'],bI['segments'],bI['thetaStart'],bI['thetaLength']);
                            break;
                        case 'CylinderGeometry':
                        case 'CylinderBufferGeometry':
                            bH = new awO[bI['type']](bI['radiusTop'],bI['radiusBottom'],bI['height'],bI['radialSegments'],bI['heightSegments'],bI['openEnded'],bI['thetaStart'],bI['thetaLength']);
                            break;
                        case 'ConeGeometry':
                        case 'ConeBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'],bI['height'],bI['radialSegments'],bI['heightSegments'],bI['openEnded'],bI['thetaStart'],bI['thetaLength']);
                            break;
                        case 'SphereGeometry':
                        case 'SphereBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'],bI['widthSegments'],bI['heightSegments'],bI['phiStart'],bI['phiLength'],bI['thetaStart'],bI['thetaLength']);
                            break;
                        case 'DodecahedronGeometry':
                        case 'DodecahedronBufferGeometry':
                        case 'IcosahedronGeometry':
                        case 'IcosahedronBufferGeometry':
                        case 'OctahedronGeometry':
                        case 'OctahedronBufferGeometry':
                        case 'TetrahedronGeometry':
                        case 'TetrahedronBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'],bI['detail']);
                            break;
                        case 'RingGeometry':
                        case 'RingBufferGeometry':
                            bH = new awO[bI['type']](bI['innerRadius'],bI['outerRadius'],bI['thetaSegments'],bI['phiSegments'],bI['thetaStart'],bI['thetaLength']);
                            break;
                        case 'TorusGeometry':
                        case 'TorusBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'],bI['tube'],bI['radialSegments'],bI['tubularSegments'],bI['arc']);
                            break;
                        case 'TorusKnotGeometry':
                        case 'TorusKnotBufferGeometry':
                            bH = new awO[bI['type']](bI['radius'],bI['tube'],bI['tubularSegments'],bI['radialSegments'],bI['p'],bI['q']);
                            break;
                        case 'TubeGeometry':
                        case 'TubeBufferGeometry':
                            bH = new awO[bI['type']](new aJj[bI['path']['type']]()['fromJSON'](bI['path']),bI['tubularSegments'],bI['radius'],bI['radialSegments'],bI['closed']);
                            break;
                        case 'LatheGeometry':
                        case 'LatheBufferGeometry':
                            bH = new awO[bI['type']](bI['points'],bI['segments'],bI['phiStart'],bI['phiLength']);
                            break;
                        case 'PolyhedronGeometry':
                        case 'PolyhedronBufferGeometry':
                            bH = new awO[bI['type']](bI['vertices'],bI['indices'],bI['radius'],bI['details']);
                            break;
                        case 'ShapeGeometry':
                        case 'ShapeBufferGeometry':
                            for (var bJ = [], bK = 0x0, bL = bI['shapes']['length']; bK < bL; bK++) {
                                var bM = bg[bI['shapes'][bK]];
                                bJ['push'](bM);
                            }
                            bH = new awO[bI['type']](bJ,bI['curveSegments']);
                            break;
                        case 'ExtrudeGeometry':
                        case 'ExtrudeBufferGeometry':
                            for (bJ = [],
                            bK = 0x0,
                            bL = bI['shapes']['length']; bK < bL; bK++) {
                                bM = bg[bI['shapes'][bK]];
                                bJ['push'](bM);
                            }
                            var bN = bI['options']['extrudePath'];
                            void 0x0 !== bN && (bI['options']['extrudePath'] = new aJj[bN['type']]()['fromJSON'](bN)),
                            bH = new awO[bI['type']](bJ,bI['options']);
                            break;
                        case 'BufferGeometry':
                        case 'InstancedBufferGeometry':
                            bH = bi['parse'](bI);
                            break;
                        case 'Geometry':
                            if ('THREE'in window && 'LegacyJSONLoader'in THREE)
                                bH = new THREE['LegacyJSONLoader']()['parse'](bI, this['resourcePath'])['geometry'];
                            else
                                console['error']('THREE.ObjectLoader:\x20You\x20have\x20to\x20import\x20LegacyJSONLoader\x20in\x20order\x20load\x20geometry\x20data\x20of\x20type\x20\x22Geometry\x22.');
                            break;
                        default:
                            console['warn']('THREE.ObjectLoader:\x20Unsupported\x20geometry\x20type\x20\x22' + bI['type'] + '\x22');
                            continue;
                        }
                        bH['uuid'] = bI['uuid'],
                        void 0x0 !== bI['name'] && (bH['name'] = bI['name']),
                        !0x0 === bH['isBufferGeometry'] && void 0x0 !== bI['userData'] && (bH['userData'] = bI['userData']),
                        bh[bI['uuid']] = bH;
                    }
                return bh;
            },
            'parseMaterials': function(bf, bg) {
                var bh = {}
                  , bi = {};
                if (void 0x0 !== bf) {
                    var bF = new aK6();
                    bF['setTextures'](bg);
                    for (var bG = 0x0, bH = bf['length']; bG < bH; bG++) {
                        var bI = bf[bG];
                        if ('MultiMaterial' === bI['type']) {
                            for (var bJ = [], bK = 0x0; bK < bI['materials']['length']; bK++) {
                                var bL = bI['materials'][bK];
                                void 0x0 === bh[bL['uuid']] && (bh[bL['uuid']] = bF['parse'](bL)),
                                bJ['push'](bh[bL['uuid']]);
                            }
                            bi[bI['uuid']] = bJ;
                        } else
                            void 0x0 === bh[bI['uuid']] && (bh[bI['uuid']] = bF['parse'](bI)),
                            bi[bI['uuid']] = bh[bI['uuid']];
                    }
                }
                return bi;
            },
            'parseAnimations': function(bf) {
                for (var bg = [], bh = 0x0; bh < bf['length']; bh++) {
                    var bi = bf[bh]
                      , bF = ayK['parse'](bi);
                    void 0x0 !== bi['uuid'] && (bF['uuid'] = bi['uuid']),
                    bg['push'](bF);
                }
                return bg;
            },
            'parseImages': function(bf, bg) {
                var bh = this
                  , bi = {};
                function bF(bf) {
                    return bh['manager']['itemStart'](bf),
                    bG['load'](bf, function() {
                        bh['manager']['itemEnd'](bf);
                    }, void 0x0, function() {
                        bh['manager']['itemError'](bf),
                        bh['manager']['itemEnd'](bf);
                    });
                }
                if (void 0x0 !== bf && bf['length'] > 0x0) {
                    var bG = new aCD(new aCf(bg));
                    bG['setCrossOrigin'](this['crossOrigin']);
                    for (var bH = 0x0, bI = bf['length']; bH < bI; bH++) {
                        var bJ = bf[bH]
                          , bK = bJ['url'];
                        if (Array['isArray'](bK)) {
                            bi[bJ['uuid']] = [];
                            for (var bL = 0x0, bM = bK['length']; bL < bM; bL++) {
                                var bN = bK[bL]
                                  , bO = /^(\/\/)|([a-z]+:(\/\/)?)/i['test'](bN) ? bN : bh['resourcePath'] + bN;
                                bi[bJ['uuid']]['push'](bF(bO));
                            }
                        } else {
                            bO = /^(\/\/)|([a-z]+:(\/\/)?)/i['test'](bJ['url']) ? bJ['url'] : bh['resourcePath'] + bJ['url'];
                            bi[bJ['uuid']] = bF(bO);
                        }
                    }
                }
                return bi;
            },
            'parseTextures': function(bf, bg) {
                function bh(bf, bg) {
                    return 'number' == typeof bf ? bf : (console['warn']('THREE.ObjectLoader.parseTexture:\x20Constant\x20should\x20be\x20in\x20numeric\x20form.', bf),
                    bg[bf]);
                }
                var bi = {};
                if (void 0x0 !== bf)
                    for (var bF = 0x0, bG = bf['length']; bF < bG; bF++) {
                        var bH, bI = bf[bF];
                        void 0x0 === bI['image'] && console['warn']('THREE.ObjectLoader:\x20No\x20\x22image\x22\x20specified\x20for', bI['uuid']),
                        void 0x0 === bg[bI['image']] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20image', bI['image']),
                        (bH = Array['isArray'](bg[bI['image']]) ? new O3(bg[bI['image']]) : new lW(bg[bI['image']]))['needsUpdate'] = !0x0,
                        bH['uuid'] = bI['uuid'],
                        void 0x0 !== bI['name'] && (bH['name'] = bI['name']),
                        void 0x0 !== bI['mapping'] && (bH['mapping'] = bh(bI['mapping'], aPt)),
                        void 0x0 !== bI['offset'] && bH['offset']['fromArray'](bI['offset']),
                        void 0x0 !== bI['repeat'] && bH['repeat']['fromArray'](bI['repeat']),
                        void 0x0 !== bI['center'] && bH['center']['fromArray'](bI['center']),
                        void 0x0 !== bI['rotation'] && (bH['rotation'] = bI['rotation']),
                        void 0x0 !== bI['wrap'] && (bH['wrapS'] = bh(bI['wrap'][0x0], aPu),
                        bH['wrapT'] = bh(bI['wrap'][0x1], aPu)),
                        void 0x0 !== bI['format'] && (bH['format'] = bI['format']),
                        void 0x0 !== bI['type'] && (bH['type'] = bI['type']),
                        void 0x0 !== bI['encoding'] && (bH['encoding'] = bI['encoding']),
                        void 0x0 !== bI['minFilter'] && (bH['minFilter'] = bh(bI['minFilter'], aPv)),
                        void 0x0 !== bI['magFilter'] && (bH['magFilter'] = bh(bI['magFilter'], aPv)),
                        void 0x0 !== bI['anisotropy'] && (bH['anisotropy'] = bI['anisotropy']),
                        void 0x0 !== bI['flipY'] && (bH['flipY'] = bI['flipY']),
                        void 0x0 !== bI['premultiplyAlpha'] && (bH['premultiplyAlpha'] = bI['premultiplyAlpha']),
                        void 0x0 !== bI['unpackAlignment'] && (bH['unpackAlignment'] = bI['unpackAlignment']),
                        bi[bI['uuid']] = bH;
                    }
                return bi;
            },
            'parseObject': function(bf, bg, bh) {
                var bi;
                function bF(bf) {
                    return void 0x0 === bg[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20geometry', bf),
                    bg[bf];
                }
                function bG(bf) {
                    if (void 0x0 !== bf) {
                        if (Array['isArray'](bf)) {
                            for (var bg = [], bi = 0x0, bF = bf['length']; bi < bF; bi++) {
                                var bG = bf[bi];
                                void 0x0 === bh[bG] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bG),
                                bg['push'](bh[bG]);
                            }
                            return bg;
                        }
                        return void 0x0 === bh[bf] && console['warn']('THREE.ObjectLoader:\x20Undefined\x20material', bf),
                        bh[bf];
                    }
                }
                switch (bf['type']) {
                case 'Scene':
                    bi = new aea(),
                    void 0x0 !== bf['background'] && Number['isInteger'](bf['background']) && (bi['background'] = new w7(bf['background'])),
                    void 0x0 !== bf['fog'] && ('Fog' === bf['fog']['type'] ? bi['fog'] = new ae6(bf['fog']['color'],bf['fog']['near'],bf['fog']['far']) : 'FogExp2' === bf['fog']['type'] && (bi['fog'] = new ae3(bf['fog']['color'],bf['fog']['density'])));
                    break;
                case 'PerspectiveCamera':
                    bi = new a68(bf['fov'],bf['aspect'],bf['near'],bf['far']),
                    void 0x0 !== bf['focus'] && (bi['focus'] = bf['focus']),
                    void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']),
                    void 0x0 !== bf['filmGauge'] && (bi['filmGauge'] = bf['filmGauge']),
                    void 0x0 !== bf['filmOffset'] && (bi['filmOffset'] = bf['filmOffset']),
                    void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
                    break;
                case 'OrthographicCamera':
                    bi = new aJN(bf['left'],bf['right'],bf['top'],bf['bottom'],bf['near'],bf['far']),
                    void 0x0 !== bf['zoom'] && (bi['zoom'] = bf['zoom']),
                    void 0x0 !== bf['view'] && (bi['view'] = Object['assign']({}, bf['view']));
                    break;
                case 'AmbientLight':
                    bi = new aJY(bf['color'],bf['intensity']);
                    break;
                case 'DirectionalLight':
                    bi = new aJV(bf['color'],bf['intensity']);
                    break;
                case 'PointLight':
                    bi = new aJH(bf['color'],bf['intensity'],bf['distance'],bf['decay']);
                    break;
                case 'RectAreaLight':
                    bi = new aK1(bf['color'],bf['intensity'],bf['width'],bf['height']);
                    break;
                case 'SpotLight':
                    bi = new aJz(bf['color'],bf['intensity'],bf['distance'],bf['angle'],bf['penumbra'],bf['decay']);
                    break;
                case 'HemisphereLight':
                    bi = new aJs(bf['color'],bf['groundColor'],bf['intensity']);
                    break;
                case 'SkinnedMesh':
                    console['warn']('THREE.ObjectLoader.parseObject()\x20does\x20not\x20support\x20SkinnedMesh\x20yet.');
                case 'Mesh':
                    var bH = bF(bf['geometry'])
                      , bI = bG(bf['material']);
                    bi = bH['bones'] && bH['bones']['length'] > 0x0 ? new aep(bH,bI) : new KY(bH,bI),
                    void 0x0 !== bf['drawMode'] && bi['setDrawMode'](bf['drawMode']);
                    break;
                case 'LOD':
                    bi = new aeo();
                    break;
                case 'Line':
                    bi = new aeA(bF(bf['geometry']),bG(bf['material']),bf['mode']);
                    break;
                case 'LineLoop':
                    bi = new aeH(bF(bf['geometry']),bG(bf['material']));
                    break;
                case 'LineSegments':
                    bi = new aeE(bF(bf['geometry']),bG(bf['material']));
                    break;
                case 'PointCloud':
                case 'Points':
                    bi = new aeM(bF(bf['geometry']),bG(bf['material']));
                    break;
                case 'Sprite':
                    bi = new ael(bG(bf['material']));
                    break;
                case 'Group':
                    bi = new a66();
                    break;
                default:
                    bi = new yT();
                }
                if (bi['uuid'] = bf['uuid'],
                void 0x0 !== bf['name'] && (bi['name'] = bf['name']),
                void 0x0 !== bf['matrix'] ? (bi['matrix']['fromArray'](bf['matrix']),
                void 0x0 !== bf['matrixAutoUpdate'] && (bi['matrixAutoUpdate'] = bf['matrixAutoUpdate']),
                bi['matrixAutoUpdate'] && bi['matrix']['decompose'](bi['position'], bi['quaternion'], bi['scale'])) : (void 0x0 !== bf['position'] && bi['position']['fromArray'](bf['position']),
                void 0x0 !== bf['rotation'] && bi['rotation']['fromArray'](bf['rotation']),
                void 0x0 !== bf['quaternion'] && bi['quaternion']['fromArray'](bf['quaternion']),
                void 0x0 !== bf['scale'] && bi['scale']['fromArray'](bf['scale'])),
                void 0x0 !== bf['castShadow'] && (bi['castShadow'] = bf['castShadow']),
                void 0x0 !== bf['receiveShadow'] && (bi['receiveShadow'] = bf['receiveShadow']),
                bf['shadow'] && (void 0x0 !== bf['shadow']['bias'] && (bi['shadow']['bias'] = bf['shadow']['bias']),
                void 0x0 !== bf['shadow']['radius'] && (bi['shadow']['radius'] = bf['shadow']['radius']),
                void 0x0 !== bf['shadow']['mapSize'] && bi['shadow']['mapSize']['fromArray'](bf['shadow']['mapSize']),
                void 0x0 !== bf['shadow']['camera'] && (bi['shadow']['camera'] = this['parseObject'](bf['shadow']['camera']))),
                void 0x0 !== bf['visible'] && (bi['visible'] = bf['visible']),
                void 0x0 !== bf['frustumCulled'] && (bi['frustumCulled'] = bf['frustumCulled']),
                void 0x0 !== bf['renderOrder'] && (bi['renderOrder'] = bf['renderOrder']),
                void 0x0 !== bf['userData'] && (bi['userData'] = bf['userData']),
                void 0x0 !== bf['layers'] && (bi['layers']['mask'] = bf['layers']),
                void 0x0 !== bf['children'])
                    for (var bJ = bf['children'], bK = 0x0; bK < bJ['length']; bK++)
                        bi['add'](this['parseObject'](bJ[bK], bg, bh));
                if ('LOD' === bf['type'])
                    for (var bL = bf['levels'], bM = 0x0; bM < bL['length']; bM++) {
                        var bN = bL[bM]
                          , bO = bi['getObjectByProperty']('uuid', bN['object']);
                        void 0x0 !== bO && bi['addLevel'](bO, bN['distance']);
                    }
                return bi;
            }
        });
        var aPo, aPp, aPq, aPr, aPs, aPt = {
            'UVMapping': cE,
            'CubeReflectionMapping': cF,
            'CubeRefractionMapping': cG,
            'EquirectangularReflectionMapping': cH,
            'EquirectangularRefractionMapping': cI,
            'SphericalReflectionMapping': cJ,
            'CubeUVReflectionMapping': cK,
            'CubeUVRefractionMapping': cL
        }, aPu = {
            'RepeatWrapping': cM,
            'ClampToEdgeWrapping': cN,
            'MirroredRepeatWrapping': cO
        }, aPv = {
            'NearestFilter': cP,
            'NearestMipMapNearestFilter': cQ,
            'NearestMipMapLinearFilter': cR,
            'LinearFilter': cS,
            'LinearMipMapNearestFilter': cT,
            'LinearMipMapLinearFilter': cU
        };
        function aPw(bf) {
            'undefined' == typeof createImageBitmap && console['warn']('THREE.ImageBitmapLoader:\x20createImageBitmap()\x20not\x20supported.'),
            'undefined' == typeof fetch && console['warn']('THREE.ImageBitmapLoader:\x20fetch()\x20not\x20supported.'),
            this['manager'] = void 0x0 !== bf ? bf : aCt,
            this['options'] = void 0x0;
        }
        function aPy() {
            this['type'] = 'ShapePath',
            this['color'] = new w7(),
            this['subPaths'] = [],
            this['currentPath'] = null;
        }
        function aPz(bf) {
            this['type'] = 'Font',
            this['data'] = bf;
        }
        function aPB(bf, bg, bh, bi, bF) {
            var bG = bF['glyphs'][bf] || bF['glyphs']['?'];
            if (bG) {
                var bH, bI, bJ, bK, bL, bM, bN, bO, bP = new aPy();
                if (bG['o'])
                    for (var bQ = bG['_cachedOutline'] || (bG['_cachedOutline'] = bG['o']['split']('\x20')), bR = 0x0, bS = bQ['length']; bR < bS; ) {
                        switch (bQ[bR++]) {
                        case 'm':
                            bH = bQ[bR++] * bg + bh,
                            bI = bQ[bR++] * bg + bi,
                            bP['moveTo'](bH, bI);
                            break;
                        case 'l':
                            bH = bQ[bR++] * bg + bh,
                            bI = bQ[bR++] * bg + bi,
                            bP['lineTo'](bH, bI);
                            break;
                        case 'q':
                            bJ = bQ[bR++] * bg + bh,
                            bK = bQ[bR++] * bg + bi,
                            bL = bQ[bR++] * bg + bh,
                            bM = bQ[bR++] * bg + bi,
                            bP['quadraticCurveTo'](bL, bM, bJ, bK);
                            break;
                        case 'b':
                            bJ = bQ[bR++] * bg + bh,
                            bK = bQ[bR++] * bg + bi,
                            bL = bQ[bR++] * bg + bh,
                            bM = bQ[bR++] * bg + bi,
                            bN = bQ[bR++] * bg + bh,
                            bO = bQ[bR++] * bg + bi,
                            bP['bezierCurveTo'](bL, bM, bN, bO, bJ, bK);
                        }
                    }
                return {
                    'offsetX': bG['ha'] * bg,
                    'path': bP
                };
            }
        }
        function aPU(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aPW() {}
        aPw['prototype'] = {
            'constructor': aPw,
            'setOptions': function(bf) {
                return this['options'] = bf,
                this;
            },
            'load': function(bf, bg, bh, bi) {
                void 0x0 === bf && (bf = ''),
                void 0x0 !== this['path'] && (bf = this['path'] + bf),
                bf = this['manager']['resolveURL'](bf);
                var bF = this
                  , bG = aCa['get'](bf);
                if (void 0x0 !== bG)
                    return bF['manager']['itemStart'](bf),
                    setTimeout(function() {
                        bg && bg(bG),
                        bF['manager']['itemEnd'](bf);
                    }, 0x0),
                    bG;
                fetch(bf)['then'](function(bf) {
                    return bf['blob']();
                })['then'](function(bf) {
                    return void 0x0 === bF['options'] ? createImageBitmap(bf) : createImageBitmap(bf, bF['options']);
                })['then'](function(bh) {
                    aCa['add'](bf, bh),
                    bg && bg(bh),
                    bF['manager']['itemEnd'](bf);
                })['catch'](function(bg) {
                    bi && bi(bg),
                    bF['manager']['itemError'](bf),
                    bF['manager']['itemEnd'](bf);
                }),
                bF['manager']['itemStart'](bf);
            },
            'setCrossOrigin': function() {
                return this;
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        },
        Object['assign'](aPy['prototype'], {
            'moveTo': function(bf, bg) {
                this['currentPath'] = new aJl(),
                this['subPaths']['push'](this['currentPath']),
                this['currentPath']['moveTo'](bf, bg);
            },
            'lineTo': function(bf, bg) {
                this['currentPath']['lineTo'](bf, bg);
            },
            'quadraticCurveTo': function(bf, bg, bh, bi) {
                this['currentPath']['quadraticCurveTo'](bf, bg, bh, bi);
            },
            'bezierCurveTo': function(bf, bg, bh, bi, bF, bG) {
                this['currentPath']['bezierCurveTo'](bf, bg, bh, bi, bF, bG);
            },
            'splineThru': function(bf) {
                this['currentPath']['splineThru'](bf);
            },
            'toShapes': function(bf, bg) {
                function bh(bf) {
                    for (var bg = [], bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                        var bF = bf[bh]
                          , bG = new aJn();
                        bG['curves'] = bF['curves'],
                        bg['push'](bG);
                    }
                    return bg;
                }
                function bi(bf, bg) {
                    for (var bh = bg['length'], bi = !0x1, bF = bh - 0x1, bG = 0x0; bG < bh; bF = bG++) {
                        var bH = bg[bF]
                          , bI = bg[bG]
                          , bJ = bI['x'] - bH['x']
                          , bK = bI['y'] - bH['y'];
                        if (Math['abs'](bK) > Number['EPSILON']) {
                            if (bK < 0x0 && (bH = bg[bG],
                            bJ = -bJ,
                            bI = bg[bF],
                            bK = -bK),
                            bf['y'] < bH['y'] || bf['y'] > bI['y'])
                                continue;
                            if (bf['y'] === bH['y']) {
                                if (bf['x'] === bH['x'])
                                    return !0x0;
                            } else {
                                var bL = bK * (bf['x'] - bH['x']) - bJ * (bf['y'] - bH['y']);
                                if (0x0 === bL)
                                    return !0x0;
                                if (bL < 0x0)
                                    continue;
                                bi = !bi;
                            }
                        } else {
                            if (bf['y'] !== bH['y'])
                                continue;
                            if (bI['x'] <= bf['x'] && bf['x'] <= bH['x'] || bH['x'] <= bf['x'] && bf['x'] <= bI['x'])
                                return !0x0;
                        }
                    }
                    return bi;
                }
                var bF = apU['isClockWise']
                  , bG = this['subPaths'];
                if (0x0 === bG['length'])
                    return [];
                if (!0x0 === bg)
                    return bh(bG);
                var bH, bI, bJ, bK = [];
                if (0x1 === bG['length'])
                    return bI = bG[0x0],
                    (bJ = new aJn())['curves'] = bI['curves'],
                    bK['push'](bJ),
                    bK;
                var bL = !bF(bG[0x0]['getPoints']());
                bL = bf ? !bL : bL;
                var bM, bN, bO = [], bP = [], bQ = [], bR = 0x0;
                bP[bR] = void 0x0,
                bQ[bR] = [];
                for (var bS = 0x0, bT = bG['length']; bS < bT; bS++)
                    bH = bF(bM = (bI = bG[bS])['getPoints']()),
                    (bH = bf ? !bH : bH) ? (!bL && bP[bR] && bR++,
                    bP[bR] = {
                        's': new aJn(),
                        'p': bM
                    },
                    bP[bR]['s']['curves'] = bI['curves'],
                    bL && bR++,
                    bQ[bR] = []) : bQ[bR]['push']({
                        'h': bI,
                        'p': bM[0x0]
                    });
                if (!bP[0x0])
                    return bh(bG);
                if (bP['length'] > 0x1) {
                    for (var bU = !0x1, bV = [], bW = 0x0, bX = bP['length']; bW < bX; bW++)
                        bO[bW] = [];
                    for (bW = 0x0,
                    bX = bP['length']; bW < bX; bW++)
                        for (var bY = bQ[bW], bZ = 0x0; bZ < bY['length']; bZ++) {
                            for (var c0 = bY[bZ], c1 = !0x0, c2 = 0x0; c2 < bP['length']; c2++)
                                bi(c0['p'], bP[c2]['p']) && (bW !== c2 && bV['push']({
                                    'froms': bW,
                                    'tos': c2,
                                    'hole': bZ
                                }),
                                c1 ? (c1 = !0x1,
                                bO[c2]['push'](c0)) : bU = !0x0);
                            c1 && bO[bW]['push'](c0);
                        }
                    bV['length'] > 0x0 && (bU || (bQ = bO));
                }
                bS = 0x0;
                for (var c3 = bP['length']; bS < c3; bS++) {
                    bJ = bP[bS]['s'],
                    bK['push'](bJ);
                    for (var c4 = 0x0, c5 = (bN = bQ[bS])['length']; c4 < c5; c4++)
                        bJ['holes']['push'](bN[c4]['h']);
                }
                return bK;
            }
        }),
        Object['assign'](aPz['prototype'], {
            'isFont': !0x0,
            'generateShapes': function(bf, bg) {
                void 0x0 === bg && (bg = 0x64);
                for (var bh = [], bi = function(bf, bg, bh) {
                    for (var bi = Array['from'] ? Array['from'](bf) : String(bf)['split'](''), bF = bg / bh['resolution'], bG = (bh['boundingBox']['yMax'] - bh['boundingBox']['yMin'] + bh['underlineThickness']) * bF, bH = [], bI = 0x0, bJ = 0x0, bK = 0x0; bK < bi['length']; bK++) {
                        var bL = bi[bK];
                        if ('\x0a' === bL)
                            bI = 0x0,
                            bJ -= bG;
                        else {
                            var bM = aPB(bL, bF, bI, bJ, bh);
                            bI += bM['offsetX'],
                            bH['push'](bM['path']);
                        }
                    }
                    return bH;
                }(bf, bg, this['data']), bF = 0x0, bG = bi['length']; bF < bG; bF++)
                    Array['prototype']['push']['apply'](bh, bi[bF]['toShapes']());
                return bh;
            }
        }),
        Object['assign'](aPU['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = this
                  , bG = new aCv(this['manager']);
                bG['setPath'](this['path']),
                bG['load'](bf, function(bf) {
                    var bh;
                    try {
                        bh = JSON['parse'](bf);
                    } catch (aRA) {
                        console['warn']('THREE.FontLoader:\x20typeface.js\x20support\x20is\x20being\x20deprecated.\x20Use\x20typeface.json\x20instead.'),
                        bh = JSON['parse'](bf['substring'](0x41, bf['length'] - 0x2));
                    }
                    var bi = bF['parse'](bh);
                    bg && bg(bi);
                }, bh, bi);
            },
            'parse': function(bf) {
                return new aPz(bf);
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        aPW['Handlers'] = {
            'handlers': [],
            'add': function(bf, bg) {
                this['handlers']['push'](bf, bg);
            },
            'get': function(bf) {
                for (var bg = this['handlers'], bh = 0x0, bi = bg['length']; bh < bi; bh += 0x2) {
                    var bF = bg[bh]
                      , bG = bg[bh + 0x1];
                    if (bF['test'](bf))
                        return bG;
                }
                return null;
            }
        },
        Object['assign'](aPW['prototype'], {
            'crossOrigin': 'anonymous',
            'onLoadStart': function() {},
            'onLoadProgress': function() {},
            'onLoadComplete': function() {},
            'initMaterials': function(bf, bg, bh) {
                for (var bi = [], bF = 0x0; bF < bf['length']; ++bF)
                    bi[bF] = this['createMaterial'](bf[bF], bg, bh);
                return bi;
            },
            'createMaterial': (aPo = {
                'NoBlending': c1,
                'NormalBlending': c2,
                'AdditiveBlending': c3,
                'SubtractiveBlending': c4,
                'MultiplyBlending': c5,
                'CustomBlending': c6
            },
            aPp = new w7(),
            aPq = new aCH(),
            aPr = new aK6(),
            function(bf, bg, bh) {
                var bi = {};
                function bF(bf, bF, bG, bH, bI) {
                    var bJ, bK = bg + bf, bL = aPW['Handlers']['get'](bK);
                    null !== bL ? bJ = bL['load'](bK) : (aPq['setCrossOrigin'](bh),
                    bJ = aPq['load'](bK)),
                    void 0x0 !== bF && (bJ['repeat']['fromArray'](bF),
                    0x1 !== bF[0x0] && (bJ['wrapS'] = cM),
                    0x1 !== bF[0x1] && (bJ['wrapT'] = cM)),
                    void 0x0 !== bG && bJ['offset']['fromArray'](bG),
                    void 0x0 !== bH && ('repeat' === bH[0x0] && (bJ['wrapS'] = cM),
                    'mirror' === bH[0x0] && (bJ['wrapS'] = cO),
                    'repeat' === bH[0x1] && (bJ['wrapT'] = cM),
                    'mirror' === bH[0x1] && (bJ['wrapT'] = cO)),
                    void 0x0 !== bI && (bJ['anisotropy'] = bI);
                    var bM = e2['generateUUID']();
                    return bi[bM] = bJ,
                    bM;
                }
                var bG = {
                    'uuid': e2['generateUUID'](),
                    'type': 'MeshLambertMaterial'
                };
                for (var bH in bf) {
                    var bI = bf[bH];
                    switch (bH) {
                    case 'DbgColor':
                    case 'DbgIndex':
                    case 'opticalDensity':
                    case 'illumination':
                        break;
                    case 'DbgName':
                        bG['name'] = bI;
                        break;
                    case 'blending':
                        bG['blending'] = aPo[bI];
                        break;
                    case 'colorAmbient':
                    case 'mapAmbient':
                        console['warn']('THREE.Loader.createMaterial:', bH, 'is\x20no\x20longer\x20supported.');
                        break;
                    case 'colorDiffuse':
                        bG['color'] = aPp['fromArray'](bI)['getHex']();
                        break;
                    case 'colorSpecular':
                        bG['specular'] = aPp['fromArray'](bI)['getHex']();
                        break;
                    case 'colorEmissive':
                        bG['emissive'] = aPp['fromArray'](bI)['getHex']();
                        break;
                    case 'specularCoef':
                        bG['shininess'] = bI;
                        break;
                    case 'shading':
                        'basic' === bI['toLowerCase']() && (bG['type'] = 'MeshBasicMaterial'),
                        'phong' === bI['toLowerCase']() && (bG['type'] = 'MeshPhongMaterial'),
                        'standard' === bI['toLowerCase']() && (bG['type'] = 'MeshStandardMaterial');
                        break;
                    case 'mapDiffuse':
                        bG['map'] = bF(bI, bf['mapDiffuseRepeat'], bf['mapDiffuseOffset'], bf['mapDiffuseWrap'], bf['mapDiffuseAnisotropy']);
                        break;
                    case 'mapDiffuseRepeat':
                    case 'mapDiffuseOffset':
                    case 'mapDiffuseWrap':
                    case 'mapDiffuseAnisotropy':
                        break;
                    case 'mapEmissive':
                        bG['emissiveMap'] = bF(bI, bf['mapEmissiveRepeat'], bf['mapEmissiveOffset'], bf['mapEmissiveWrap'], bf['mapEmissiveAnisotropy']);
                        break;
                    case 'mapEmissiveRepeat':
                    case 'mapEmissiveOffset':
                    case 'mapEmissiveWrap':
                    case 'mapEmissiveAnisotropy':
                        break;
                    case 'mapLight':
                        bG['lightMap'] = bF(bI, bf['mapLightRepeat'], bf['mapLightOffset'], bf['mapLightWrap'], bf['mapLightAnisotropy']);
                        break;
                    case 'mapLightRepeat':
                    case 'mapLightOffset':
                    case 'mapLightWrap':
                    case 'mapLightAnisotropy':
                        break;
                    case 'mapAO':
                        bG['aoMap'] = bF(bI, bf['mapAORepeat'], bf['mapAOOffset'], bf['mapAOWrap'], bf['mapAOAnisotropy']);
                        break;
                    case 'mapAORepeat':
                    case 'mapAOOffset':
                    case 'mapAOWrap':
                    case 'mapAOAnisotropy':
                        break;
                    case 'mapBump':
                        bG['bumpMap'] = bF(bI, bf['mapBumpRepeat'], bf['mapBumpOffset'], bf['mapBumpWrap'], bf['mapBumpAnisotropy']);
                        break;
                    case 'mapBumpScale':
                        bG['bumpScale'] = bI;
                        break;
                    case 'mapBumpRepeat':
                    case 'mapBumpOffset':
                    case 'mapBumpWrap':
                    case 'mapBumpAnisotropy':
                        break;
                    case 'mapNormal':
                        bG['normalMap'] = bF(bI, bf['mapNormalRepeat'], bf['mapNormalOffset'], bf['mapNormalWrap'], bf['mapNormalAnisotropy']);
                        break;
                    case 'mapNormalFactor':
                        bG['normalScale'] = bI;
                        break;
                    case 'mapNormalRepeat':
                    case 'mapNormalOffset':
                    case 'mapNormalWrap':
                    case 'mapNormalAnisotropy':
                        break;
                    case 'mapSpecular':
                        bG['specularMap'] = bF(bI, bf['mapSpecularRepeat'], bf['mapSpecularOffset'], bf['mapSpecularWrap'], bf['mapSpecularAnisotropy']);
                        break;
                    case 'mapSpecularRepeat':
                    case 'mapSpecularOffset':
                    case 'mapSpecularWrap':
                    case 'mapSpecularAnisotropy':
                        break;
                    case 'mapMetalness':
                        bG['metalnessMap'] = bF(bI, bf['mapMetalnessRepeat'], bf['mapMetalnessOffset'], bf['mapMetalnessWrap'], bf['mapMetalnessAnisotropy']);
                        break;
                    case 'mapMetalnessRepeat':
                    case 'mapMetalnessOffset':
                    case 'mapMetalnessWrap':
                    case 'mapMetalnessAnisotropy':
                        break;
                    case 'mapRoughness':
                        bG['roughnessMap'] = bF(bI, bf['mapRoughnessRepeat'], bf['mapRoughnessOffset'], bf['mapRoughnessWrap'], bf['mapRoughnessAnisotropy']);
                        break;
                    case 'mapRoughnessRepeat':
                    case 'mapRoughnessOffset':
                    case 'mapRoughnessWrap':
                    case 'mapRoughnessAnisotropy':
                        break;
                    case 'mapAlpha':
                        bG['alphaMap'] = bF(bI, bf['mapAlphaRepeat'], bf['mapAlphaOffset'], bf['mapAlphaWrap'], bf['mapAlphaAnisotropy']);
                        break;
                    case 'mapAlphaRepeat':
                    case 'mapAlphaOffset':
                    case 'mapAlphaWrap':
                    case 'mapAlphaAnisotropy':
                        break;
                    case 'flipSided':
                        bG['side'] = bU;
                        break;
                    case 'doubleSided':
                        bG['side'] = bV;
                        break;
                    case 'transparency':
                        console['warn']('THREE.Loader.createMaterial:\x20transparency\x20has\x20been\x20renamed\x20to\x20opacity'),
                        bG['opacity'] = bI;
                        break;
                    case 'depthTest':
                    case 'depthWrite':
                    case 'colorWrite':
                    case 'opacity':
                    case 'reflectivity':
                    case 'transparent':
                    case 'visible':
                    case 'wireframe':
                        bG[bH] = bI;
                        break;
                    case 'vertexColors':
                        !0x0 === bI && (bG['vertexColors'] = c0),
                        'face' === bI && (bG['vertexColors'] = bZ);
                        break;
                    default:
                        console['error']('THREE.Loader.createMaterial:\x20Unsupported', bH, bI);
                    }
                }
                return 'MeshBasicMaterial' === bG['type'] && delete bG['emissive'],
                'MeshPhongMaterial' !== bG['type'] && delete bG['specular'],
                bG['opacity'] < 0x1 && (bG['transparent'] = !0x0),
                aPr['setTextures'](bi),
                aPr['parse'](bG);
            }
            )
        });
        var aS8 = {
            'getContext': function() {
                return void 0x0 === aPs && (aPs = new (window['AudioContext'] || window['webkitAudioContext'])()),
                aPs;
            },
            'setContext': function(bf) {
                aPs = bf;
            }
        };
        function aSa(bf) {
            this['manager'] = void 0x0 !== bf ? bf : aCt;
        }
        function aSc() {
            this['coefficients'] = [];
            for (var bf = 0x0; bf < 0x9; bf++)
                this['coefficients']['push'](new eK());
        }
        function aSe(bf, bg) {
            aJp['call'](this, void 0x0, bg),
            this['sh'] = void 0x0 !== bf ? bf : new aSc();
        }
        function aSh(bf, bg, bh) {
            aSe['call'](this, void 0x0, bh);
            var bi = new w7()['set'](bf)
              , bF = new w7()['set'](bg)
              , bG = new eK(bi['r'],bi['g'],bi['b'])
              , bH = new eK(bF['r'],bF['g'],bF['b'])
              , bI = Math['sqrt'](Math['PI'])
              , bJ = bI * Math['sqrt'](0.75);
            this['sh']['coefficients'][0x0]['copy'](bG)['add'](bH)['multiplyScalar'](bI),
            this['sh']['coefficients'][0x1]['copy'](bG)['sub'](bH)['multiplyScalar'](bJ);
        }
        function aSr(bf, bg) {
            aSe['call'](this, void 0x0, bg);
            var bh = new w7()['set'](bf);
            this['sh']['coefficients'][0x0]['set'](bh['r'], bh['g'], bh['b'])['multiplyScalar'](0x2 * Math['sqrt'](Math['PI']));
        }
        function aSv() {
            this['type'] = 'StereoCamera',
            this['aspect'] = 0x1,
            this['eyeSep'] = 0.064,
            this['cameraL'] = new a68(),
            this['cameraL']['layers']['enable'](0x1),
            this['cameraL']['matrixAutoUpdate'] = !0x1,
            this['cameraR'] = new a68(),
            this['cameraR']['layers']['enable'](0x2),
            this['cameraR']['matrixAutoUpdate'] = !0x1;
        }
        Object['assign'](aSa['prototype'], {
            'load': function(bf, bg, bh, bi) {
                var bF = new aCv(this['manager']);
                bF['setResponseType']('arraybuffer'),
                bF['setPath'](this['path']),
                bF['load'](bf, function(bf) {
                    var bh = bf['slice'](0x0);
                    aS8['getContext']()['decodeAudioData'](bh, function(bf) {
                        bg(bf);
                    });
                }, bh, bi);
            },
            'setPath': function(bf) {
                return this['path'] = bf,
                this;
            }
        }),
        Object['assign'](aSc['prototype'], {
            'isSphericalHarmonics3': !0x0,
            'set': function(bf) {
                for (var bg = 0x0; bg < 0x9; bg++)
                    this['coefficients'][bg]['copy'](bf[bg]);
                return this;
            },
            'zero': function() {
                for (var bf = 0x0; bf < 0x9; bf++)
                    this['coefficients'][bf]['set'](0x0, 0x0, 0x0);
                return this;
            },
            'getAt': function(bf, bg) {
                var bh = bf['x']
                  , bi = bf['y']
                  , bF = bf['z']
                  , bG = this['coefficients'];
                return bg = 0.282095 * bG[0x0],
                bg += 0.488603 * bG[0x1] * bi,
                bg += 0.488603 * bG[0x2] * bF,
                bg += 0.488603 * bG[0x3] * bh,
                bg += 1.092548 * bG[0x4] * (bh * bi),
                bg += 1.092548 * bG[0x5] * (bi * bF),
                bg += 0.315392 * bG[0x6] * (0x3 * bF * bF - 0x1),
                bg += 1.092548 * bG[0x7] * (bh * bF),
                bg += 0.546274 * bG[0x8] * (bh * bh - bi * bi);
            },
            'getIrradianceAt': function(bf, bg) {
                var bh = bf['x']
                  , bi = bf['y']
                  , bF = bf['z']
                  , bG = this['coefficients'];
                return bg = 0.886227 * bG[0x0],
                bg += 0x2 * bG[0x1] * 0.511664 * bi,
                bg += 0x2 * bG[0x2] * 0.511664 * bF,
                bg += 0x2 * bG[0x3] * 0.511664 * bh,
                bg += 0x2 * bG[0x4] * 0.429043 * bh * bi,
                bg += 0x2 * bG[0x5] * 0.429043 * bi * bF,
                bg += bG[0x6] * (0.743125 * bF * bF - 0.247708),
                bg += 0x2 * bG[0x7] * 0.429043 * bh * bF,
                bg += 0.429043 * bG[0x8] * (bh * bh - bi * bi);
            },
            'add': function(bf) {
                for (var bg = 0x0; bg < 0x9; bg++)
                    this['coefficients'][bg]['add'](bf['coefficients'][bg]);
                return this;
            },
            'scale': function(bf) {
                for (var bg = 0x0; bg < 0x9; bg++)
                    this['coefficients'][bg]['multiplyScalar'](bf);
                return this;
            },
            'lerp': function(bf, bg) {
                for (var bh = 0x0; bh < 0x9; bh++)
                    this['coefficients'][bh]['lerp'](bf['coefficients'][bh], bg);
                return this;
            },
            'equals': function(bf) {
                for (var bg = 0x0; bg < 0x9; bg++)
                    if (!this['coefficients'][bg]['equals'](bf['coefficients'][bg]))
                        return !0x1;
                return !0x0;
            },
            'copy': function(bf) {
                return this['set'](bf['coefficients']);
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'fromArray': function(bf) {
                for (var bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++)
                    bg[bh]['fromArray'](bf, 0x3 * bh);
                return this;
            },
            'toArray': function() {
                for (var bf = [], bg = this['coefficients'], bh = 0x0; bh < 0x9; bh++)
                    bg[bh]['toArray'](bf, 0x3 * bh);
                return bf;
            }
        }),
        Object['assign'](aSc, {
            'getBasisAt': function(bf, bg) {
                var bh = bf['x']
                  , bi = bf['y']
                  , bF = bf['z'];
                bg[0x0] = 0.282095,
                bg[0x1] = 0.488603 * bi,
                bg[0x2] = 0.488603 * bF,
                bg[0x3] = 0.488603 * bh,
                bg[0x4] = 1.092548 * bh * bi,
                bg[0x5] = 1.092548 * bi * bF,
                bg[0x6] = 0.315392 * (0x3 * bF * bF - 0x1),
                bg[0x7] = 1.092548 * bh * bF,
                bg[0x8] = 0.546274 * (bh * bh - bi * bi);
            }
        }),
        aSe['prototype'] = Object['assign'](Object['create'](aJp['prototype']), {
            'constructor': aSe,
            'isLightProbe': !0x0,
            'copy': function(bf) {
                return aJp['prototype']['copy']['call'](this, bf),
                this['sh']['copy'](bf['sh']),
                this['intensity'] = bf['intensity'],
                this;
            },
            'toJSON': function(bf) {
                return aJp['prototype']['toJSON']['call'](this, bf);
            }
        }),
        aSh['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
            'constructor': aSh,
            'isHemisphereLightProbe': !0x0,
            'copy': function(bf) {
                return aSe['prototype']['copy']['call'](this, bf),
                this;
            },
            'toJSON': function(bf) {
                return aSe['prototype']['toJSON']['call'](this, bf);
            }
        }),
        aSr['prototype'] = Object['assign'](Object['create'](aSe['prototype']), {
            'constructor': aSr,
            'isAmbientLightProbe': !0x0,
            'copy': function(bf) {
                return aSe['prototype']['copy']['call'](this, bf),
                this;
            },
            'toJSON': function(bf) {
                return aSe['prototype']['toJSON']['call'](this, bf);
            }
        }),
        Object['assign'](aSv['prototype'], {
            'update': function() {
                var bf, bg, bh, bi, bF, bG, bH, bI, bJ = new mR(), bK = new mR();
                return function(bL) {
                    if (bf !== this || bg !== bL['focus'] || bh !== bL['fov'] || bi !== bL['aspect'] * this['aspect'] || bF !== bL['near'] || bG !== bL['far'] || bH !== bL['zoom'] || bI !== this['eyeSep']) {
                        bf = this,
                        bg = bL['focus'],
                        bh = bL['fov'],
                        bi = bL['aspect'] * this['aspect'],
                        bF = bL['near'],
                        bG = bL['far'],
                        bH = bL['zoom'];
                        var bM, bN, bO = bL['projectionMatrix']['clone'](), bP = (bI = this['eyeSep'] / 0x2) * bF / bg, bQ = bF * Math['tan'](e2['DEG2RAD'] * bh * 0.5) / bH;
                        bK['elements'][0xc] = -bI,
                        bJ['elements'][0xc] = bI,
                        bM = -bQ * bi + bP,
                        bN = bQ * bi + bP,
                        bO['elements'][0x0] = 0x2 * bF / (bN - bM),
                        bO['elements'][0x8] = (bN + bM) / (bN - bM),
                        this['cameraL']['projectionMatrix']['copy'](bO),
                        bM = -bQ * bi - bP,
                        bN = bQ * bi - bP,
                        bO['elements'][0x0] = 0x2 * bF / (bN - bM),
                        bO['elements'][0x8] = (bN + bM) / (bN - bM),
                        this['cameraR']['projectionMatrix']['copy'](bO);
                    }
                    this['cameraL']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bK),
                    this['cameraR']['matrixWorld']['copy'](bL['matrixWorld'])['multiply'](bJ);
                }
                ;
            }()
        });
        var aTB = 0x5a
          , aTC = 0x1;
        function aTD(bf, bg, bh, bi) {
            yT['call'](this),
            this['type'] = 'CubeCamera';
            var bF = new a68(aTB,aTC,bf,bg);
            bF['up']['set'](0x0, -0x1, 0x0),
            bF['lookAt'](new eK(0x1,0x0,0x0)),
            this['add'](bF);
            var bG = new a68(aTB,aTC,bf,bg);
            bG['up']['set'](0x0, -0x1, 0x0),
            bG['lookAt'](new eK(-0x1,0x0,0x0)),
            this['add'](bG);
            var bH = new a68(aTB,aTC,bf,bg);
            bH['up']['set'](0x0, 0x0, 0x1),
            bH['lookAt'](new eK(0x0,0x1,0x0)),
            this['add'](bH);
            var bI = new a68(aTB,aTC,bf,bg);
            bI['up']['set'](0x0, 0x0, -0x1),
            bI['lookAt'](new eK(0x0,-0x1,0x0)),
            this['add'](bI);
            var bJ = new a68(aTB,aTC,bf,bg);
            bJ['up']['set'](0x0, -0x1, 0x0),
            bJ['lookAt'](new eK(0x0,0x0,0x1)),
            this['add'](bJ);
            var bK = new a68(aTB,aTC,bf,bg);
            bK['up']['set'](0x0, -0x1, 0x0),
            bK['lookAt'](new eK(0x0,0x0,-0x1)),
            this['add'](bK),
            bi = bi || {
                'format': d8,
                'magFilter': cS,
                'minFilter': cS
            },
            this['renderTarget'] = new mk(bh,bh,bi),
            this['renderTarget']['texture']['name'] = 'CubeCamera',
            this['update'] = function(bf, bg) {
                null === this['parent'] && this['updateMatrixWorld']();
                var bh = bf['getRenderTarget']()
                  , bi = this['renderTarget']
                  , bL = bi['texture']['generateMipmaps'];
                bi['texture']['generateMipmaps'] = !0x1,
                bf['setRenderTarget'](bi, 0x0),
                bf['render'](bg, bF),
                bf['setRenderTarget'](bi, 0x1),
                bf['render'](bg, bG),
                bf['setRenderTarget'](bi, 0x2),
                bf['render'](bg, bH),
                bf['setRenderTarget'](bi, 0x3),
                bf['render'](bg, bI),
                bf['setRenderTarget'](bi, 0x4),
                bf['render'](bg, bJ),
                bi['texture']['generateMipmaps'] = bL,
                bf['setRenderTarget'](bi, 0x5),
                bf['render'](bg, bK),
                bf['setRenderTarget'](bh);
            }
            ,
            this['clear'] = function(bf, bg, bh, bi) {
                for (var bF = bf['getRenderTarget'](), bG = this['renderTarget'], bH = 0x0; bH < 0x6; bH++)
                    bf['setRenderTarget'](bG, bH),
                    bf['clear'](bg, bh, bi);
                bf['setRenderTarget'](bF);
            }
            ;
        }
        function aU0(bf) {
            this['autoStart'] = void 0x0 === bf || bf,
            this['startTime'] = 0x0,
            this['oldTime'] = 0x0,
            this['elapsedTime'] = 0x0,
            this['running'] = !0x1;
        }
        function aU2() {
            yT['call'](this),
            this['type'] = 'AudioListener',
            this['context'] = aS8['getContext'](),
            this['gain'] = this['context']['createGain'](),
            this['gain']['connect'](this['context']['destination']),
            this['filter'] = null,
            this['timeDelta'] = 0x0;
        }
        function aU3(bf) {
            yT['call'](this),
            this['type'] = 'Audio',
            this['listener'] = bf,
            this['context'] = bf['context'],
            this['gain'] = this['context']['createGain'](),
            this['gain']['connect'](bf['getInput']()),
            this['autoplay'] = !0x1,
            this['buffer'] = null,
            this['detune'] = 0x0,
            this['loop'] = !0x1,
            this['startTime'] = 0x0,
            this['offset'] = 0x0,
            this['playbackRate'] = 0x1,
            this['isPlaying'] = !0x1,
            this['hasPlaybackControl'] = !0x0,
            this['sourceType'] = 'empty',
            this['filters'] = [];
        }
        function aU5(bf) {
            aU3['call'](this, bf),
            this['panner'] = this['context']['createPanner'](),
            this['panner']['panningModel'] = 'HRTF',
            this['panner']['connect'](this['gain']);
        }
        function aU7(bf, bg) {
            this['analyser'] = bf['context']['createAnalyser'](),
            this['analyser']['fftSize'] = void 0x0 !== bg ? bg : 0x800,
            this['data'] = new Uint8Array(this['analyser']['frequencyBinCount']),
            bf['getOutput']()['connect'](this['analyser']);
        }
        function aUa(bf, bg, bh) {
            this['binding'] = bf,
            this['valueSize'] = bh;
            var bi, bF = Float64Array;
            switch (bg) {
            case 'quaternion':
                bi = this['_slerp'];
                break;
            case 'string':
            case 'bool':
                bF = Array,
                bi = this['_select'];
                break;
            default:
                bi = this['_lerp'];
            }
            this['buffer'] = new bF(0x4 * bh),
            this['_mixBufferRegion'] = bi,
            this['cumulativeWeight'] = 0x0,
            this['useCount'] = 0x0,
            this['referenceCount'] = 0x0;
        }
        aTD['prototype'] = Object['create'](yT['prototype']),
        aTD['prototype']['constructor'] = aTD,
        Object['assign'](aU0['prototype'], {
            'start': function() {
                this['startTime'] = ('undefined' == typeof performance ? Date : performance)['now'](),
                this['oldTime'] = this['startTime'],
                this['elapsedTime'] = 0x0,
                this['running'] = !0x0;
            },
            'stop': function() {
                this['getElapsedTime'](),
                this['running'] = !0x1,
                this['autoStart'] = !0x1;
            },
            'getElapsedTime': function() {
                return this['getDelta'](),
                this['elapsedTime'];
            },
            'getDelta': function() {
                var bf = 0x0;
                if (this['autoStart'] && !this['running'])
                    return this['start'](),
                    0x0;
                if (this['running']) {
                    var bg = ('undefined' == typeof performance ? Date : performance)['now']();
                    bf = (bg - this['oldTime']) / 0x3e8,
                    this['oldTime'] = bg,
                    this['elapsedTime'] += bf;
                }
                return bf;
            }
        }),
        aU2['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aU2,
            'getInput': function() {
                return this['gain'];
            },
            'removeFilter': function() {
                return null !== this['filter'] && (this['gain']['disconnect'](this['filter']),
                this['filter']['disconnect'](this['context']['destination']),
                this['gain']['connect'](this['context']['destination']),
                this['filter'] = null),
                this;
            },
            'getFilter': function() {
                return this['filter'];
            },
            'setFilter': function(bf) {
                return null !== this['filter'] ? (this['gain']['disconnect'](this['filter']),
                this['filter']['disconnect'](this['context']['destination'])) : this['gain']['disconnect'](this['context']['destination']),
                this['filter'] = bf,
                this['gain']['connect'](this['filter']),
                this['filter']['connect'](this['context']['destination']),
                this;
            },
            'getMasterVolume': function() {
                return this['gain']['gain']['value'];
            },
            'setMasterVolume': function(bf) {
                return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01),
                this;
            },
            'updateMatrixWorld': function() {
                var bf = new eK()
                  , bg = new eF()
                  , bh = new eK()
                  , bi = new eK()
                  , bF = new aU0();
                return function(bG) {
                    yT['prototype']['updateMatrixWorld']['call'](this, bG);
                    var bH = this['context']['listener']
                      , bI = this['up'];
                    if (this['timeDelta'] = bF['getDelta'](),
                    this['matrixWorld']['decompose'](bf, bg, bh),
                    bi['set'](0x0, 0x0, -0x1)['applyQuaternion'](bg),
                    bH['positionX']) {
                        var bJ = this['context']['currentTime'] + this['timeDelta'];
                        bH['positionX']['linearRampToValueAtTime'](bf['x'], bJ),
                        bH['positionY']['linearRampToValueAtTime'](bf['y'], bJ),
                        bH['positionZ']['linearRampToValueAtTime'](bf['z'], bJ),
                        bH['forwardX']['linearRampToValueAtTime'](bi['x'], bJ),
                        bH['forwardY']['linearRampToValueAtTime'](bi['y'], bJ),
                        bH['forwardZ']['linearRampToValueAtTime'](bi['z'], bJ),
                        bH['upX']['linearRampToValueAtTime'](bI['x'], bJ),
                        bH['upY']['linearRampToValueAtTime'](bI['y'], bJ),
                        bH['upZ']['linearRampToValueAtTime'](bI['z'], bJ);
                    } else
                        bH['setPosition'](bf['x'], bf['y'], bf['z']),
                        bH['setOrientation'](bi['x'], bi['y'], bi['z'], bI['x'], bI['y'], bI['z']);
                }
                ;
            }()
        }),
        aU3['prototype'] = Object['assign'](Object['create'](yT['prototype']), {
            'constructor': aU3,
            'getOutput': function() {
                return this['gain'];
            },
            'setNodeSource': function(bf) {
                return this['hasPlaybackControl'] = !0x1,
                this['sourceType'] = 'audioNode',
                this['source'] = bf,
                this['connect'](),
                this;
            },
            'setMediaElementSource': function(bf) {
                return this['hasPlaybackControl'] = !0x1,
                this['sourceType'] = 'mediaNode',
                this['source'] = this['context']['createMediaElementSource'](bf),
                this['connect'](),
                this;
            },
            'setBuffer': function(bf) {
                return this['buffer'] = bf,
                this['sourceType'] = 'buffer',
                this['autoplay'] && this['play'](),
                this;
            },
            'play': function() {
                if (!0x0 !== this['isPlaying']) {
                    if (!0x1 !== this['hasPlaybackControl']) {
                        var bf = this['context']['createBufferSource']();
                        return bf['buffer'] = this['buffer'],
                        bf['loop'] = this['loop'],
                        bf['onended'] = this['onEnded']['bind'](this),
                        this['startTime'] = this['context']['currentTime'],
                        bf['start'](this['startTime'], this['offset']),
                        this['isPlaying'] = !0x0,
                        this['source'] = bf,
                        this['setDetune'](this['detune']),
                        this['setPlaybackRate'](this['playbackRate']),
                        this['connect']();
                    }
                    console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
                } else
                    console['warn']('THREE.Audio:\x20Audio\x20is\x20already\x20playing.');
            },
            'pause': function() {
                if (!0x1 !== this['hasPlaybackControl'])
                    return !0x0 === this['isPlaying'] && (this['source']['stop'](),
                    this['source']['onended'] = null,
                    this['offset'] += (this['context']['currentTime'] - this['startTime']) * this['playbackRate'],
                    this['isPlaying'] = !0x1),
                    this;
                console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
            },
            'stop': function() {
                if (!0x1 !== this['hasPlaybackControl'])
                    return this['source']['stop'](),
                    this['source']['onended'] = null,
                    this['offset'] = 0x0,
                    this['isPlaying'] = !0x1,
                    this;
                console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
            },
            'connect': function() {
                if (this['filters']['length'] > 0x0) {
                    this['source']['connect'](this['filters'][0x0]);
                    for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++)
                        this['filters'][bf - 0x1]['connect'](this['filters'][bf]);
                    this['filters'][this['filters']['length'] - 0x1]['connect'](this['getOutput']());
                } else
                    this['source']['connect'](this['getOutput']());
                return this;
            },
            'disconnect': function() {
                if (this['filters']['length'] > 0x0) {
                    this['source']['disconnect'](this['filters'][0x0]);
                    for (var bf = 0x1, bg = this['filters']['length']; bf < bg; bf++)
                        this['filters'][bf - 0x1]['disconnect'](this['filters'][bf]);
                    this['filters'][this['filters']['length'] - 0x1]['disconnect'](this['getOutput']());
                } else
                    this['source']['disconnect'](this['getOutput']());
                return this;
            },
            'getFilters': function() {
                return this['filters'];
            },
            'setFilters': function(bf) {
                return bf || (bf = []),
                !0x0 === this['isPlaying'] ? (this['disconnect'](),
                this['filters'] = bf,
                this['connect']()) : this['filters'] = bf,
                this;
            },
            'setDetune': function(bf) {
                if (this['detune'] = bf,
                void 0x0 !== this['source']['detune'])
                    return !0x0 === this['isPlaying'] && this['source']['detune']['setTargetAtTime'](this['detune'], this['context']['currentTime'], 0.01),
                    this;
            },
            'getDetune': function() {
                return this['detune'];
            },
            'getFilter': function() {
                return this['getFilters']()[0x0];
            },
            'setFilter': function(bf) {
                return this['setFilters'](bf ? [bf] : []);
            },
            'setPlaybackRate': function(bf) {
                if (!0x1 !== this['hasPlaybackControl'])
                    return this['playbackRate'] = bf,
                    !0x0 === this['isPlaying'] && this['source']['playbackRate']['setTargetAtTime'](this['playbackRate'], this['context']['currentTime'], 0.01),
                    this;
                console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
            },
            'getPlaybackRate': function() {
                return this['playbackRate'];
            },
            'onEnded': function() {
                this['isPlaying'] = !0x1;
            },
            'getLoop': function() {
                return !0x1 === this['hasPlaybackControl'] ? (console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.'),
                !0x1) : this['loop'];
            },
            'setLoop': function(bf) {
                if (!0x1 !== this['hasPlaybackControl'])
                    return this['loop'] = bf,
                    !0x0 === this['isPlaying'] && (this['source']['loop'] = this['loop']),
                    this;
                console['warn']('THREE.Audio:\x20this\x20Audio\x20has\x20no\x20playback\x20control.');
            },
            'getVolume': function() {
                return this['gain']['gain']['value'];
            },
            'setVolume': function(bf) {
                return this['gain']['gain']['setTargetAtTime'](bf, this['context']['currentTime'], 0.01),
                this;
            }
        }),
        aU5['prototype'] = Object['assign'](Object['create'](aU3['prototype']), {
            'constructor': aU5,
            'getOutput': function() {
                return this['panner'];
            },
            'getRefDistance': function() {
                return this['panner']['refDistance'];
            },
            'setRefDistance': function(bf) {
                return this['panner']['refDistance'] = bf,
                this;
            },
            'getRolloffFactor': function() {
                return this['panner']['rolloffFactor'];
            },
            'setRolloffFactor': function(bf) {
                return this['panner']['rolloffFactor'] = bf,
                this;
            },
            'getDistanceModel': function() {
                return this['panner']['distanceModel'];
            },
            'setDistanceModel': function(bf) {
                return this['panner']['distanceModel'] = bf,
                this;
            },
            'getMaxDistance': function() {
                return this['panner']['maxDistance'];
            },
            'setMaxDistance': function(bf) {
                return this['panner']['maxDistance'] = bf,
                this;
            },
            'setDirectionalCone': function(bf, bg, bh) {
                return this['panner']['coneInnerAngle'] = bf,
                this['panner']['coneOuterAngle'] = bg,
                this['panner']['coneOuterGain'] = bh,
                this;
            },
            'updateMatrixWorld': function() {
                var bf = new eK()
                  , bg = new eF()
                  , bh = new eK()
                  , bi = new eK();
                return function(bF) {
                    if (yT['prototype']['updateMatrixWorld']['call'](this, bF),
                    !0x0 !== this['hasPlaybackControl'] || !0x1 !== this['isPlaying']) {
                        this['matrixWorld']['decompose'](bf, bg, bh),
                        bi['set'](0x0, 0x0, 0x1)['applyQuaternion'](bg);
                        var bG = this['panner'];
                        if (bG['positionX']) {
                            var bH = this['context']['currentTime'] + this['listener']['timeDelta'];
                            bG['positionX']['linearRampToValueAtTime'](bf['x'], bH),
                            bG['positionY']['linearRampToValueAtTime'](bf['y'], bH),
                            bG['positionZ']['linearRampToValueAtTime'](bf['z'], bH),
                            bG['orientationX']['linearRampToValueAtTime'](bi['x'], bH),
                            bG['orientationY']['linearRampToValueAtTime'](bi['y'], bH),
                            bG['orientationZ']['linearRampToValueAtTime'](bi['z'], bH);
                        } else
                            bG['setPosition'](bf['x'], bf['y'], bf['z']),
                            bG['setOrientation'](bi['x'], bi['y'], bi['z']);
                    }
                }
                ;
            }()
        }),
        Object['assign'](aU7['prototype'], {
            'getFrequencyData': function() {
                return this['analyser']['getByteFrequencyData'](this['data']),
                this['data'];
            },
            'getAverageFrequency': function() {
                for (var bf = 0x0, bg = this['getFrequencyData'](), bh = 0x0; bh < bg['length']; bh++)
                    bf += bg[bh];
                return bf / bg['length'];
            }
        }),
        Object['assign'](aUa['prototype'], {
            'accumulate': function(bf, bg) {
                var bh = this['buffer']
                  , bi = this['valueSize']
                  , bF = bf * bi + bi
                  , bG = this['cumulativeWeight'];
                if (0x0 === bG) {
                    for (var bH = 0x0; bH !== bi; ++bH)
                        bh[bF + bH] = bh[bH];
                    bG = bg;
                } else {
                    var bI = bg / (bG += bg);
                    this['_mixBufferRegion'](bh, bF, 0x0, bI, bi);
                }
                this['cumulativeWeight'] = bG;
            },
            'apply': function(bf) {
                var bg = this['valueSize']
                  , bh = this['buffer']
                  , bi = bf * bg + bg
                  , bF = this['cumulativeWeight']
                  , bG = this['binding'];
                if (this['cumulativeWeight'] = 0x0,
                bF < 0x1) {
                    var bH = 0x3 * bg;
                    this['_mixBufferRegion'](bh, bi, bH, 0x1 - bF, bg);
                }
                for (var bI = bg, bJ = bg + bg; bI !== bJ; ++bI)
                    if (bh[bI] !== bh[bI + bg]) {
                        bG['setValue'](bh, bi);
                        break;
                    }
            },
            'saveOriginalState': function() {
                var bf = this['binding']
                  , bg = this['buffer']
                  , bh = this['valueSize']
                  , bi = 0x3 * bh;
                bf['getValue'](bg, bi);
                for (var bF = bh, bG = bi; bF !== bG; ++bF)
                    bg[bF] = bg[bi + bF % bh];
                this['cumulativeWeight'] = 0x0;
            },
            'restoreOriginalState': function() {
                var bf = 0x3 * this['valueSize'];
                this['binding']['setValue'](this['buffer'], bf);
            },
            '_select': function(bf, bg, bh, bi, bF) {
                if (bi >= 0.5)
                    for (var bG = 0x0; bG !== bF; ++bG)
                        bf[bg + bG] = bf[bh + bG];
            },
            '_slerp': function(bf, bg, bh, bi) {
                eF['slerpFlat'](bf, bg, bf, bg, bf, bh, bi);
            },
            '_lerp': function(bf, bg, bh, bi, bF) {
                for (var bG = 0x1 - bi, bH = 0x0; bH !== bF; ++bH) {
                    var bI = bg + bH;
                    bf[bI] = bf[bI] * bG + bf[bh + bH] * bi;
                }
            }
        });
        var aVE, aVF, aVG, aVH, aVI, aVJ, aVK, aVL, aVM, aVN, aVO, aVP, aVQ, aVR, aVS;
        function aVT(bf, bg, bh) {
            var bi = bh || aVY['parseTrackName'](bg);
            this['_targetGroup'] = bf,
            this['_bindings'] = bf['subscribe_'](bg, bi);
        }
        function aVY(bf, bg, bh) {
            this['path'] = bg,
            this['parsedPath'] = bh || aVY['parseTrackName'](bg),
            this['node'] = aVY['findNode'](bf, this['parsedPath']['nodeName']) || bf,
            this['rootNode'] = bf;
        }
        function aW2() {
            this['uuid'] = e2['generateUUID'](),
            this['_objects'] = Array['prototype']['slice']['call'](arguments),
            this['nCachedObjects_'] = 0x0;
            var bf = {};
            this['_indicesByUUID'] = bf;
            for (var bg = 0x0, bh = arguments['length']; bg !== bh; ++bg)
                bf[arguments[bg]['uuid']] = bg;
            this['_paths'] = [],
            this['_parsedPaths'] = [],
            this['_bindings'] = [],
            this['_bindingsIndicesByPath'] = {};
            var bi = this;
            this['stats'] = {
                'objects': {
                    get 'total'() {
                        return bi['_objects']['length'];
                    },
                    get 'inUse'() {
                        return this['total'] - bi['nCachedObjects_'];
                    }
                },
                get 'bindingsPerObject'() {
                    return bi['_bindings']['length'];
                }
            };
        }
        function aW7(bf, bg, bh) {
            this['_mixer'] = bf,
            this['_clip'] = bg,
            this['_localRoot'] = bh || null;
            for (var bi = bg['tracks'], bF = bi['length'], bG = new Array(bF), bH = {
                'endingStart': dK,
                'endingEnd': dK
            }, bI = 0x0; bI !== bF; ++bI) {
                var bJ = bi[bI]['createInterpolant'](null);
                bG[bI] = bJ,
                bJ['settings'] = bH;
            }
            this['_interpolantSettings'] = bH,
            this['_interpolants'] = bG,
            this['_propertyBindings'] = new Array(bF),
            this['_cacheIndex'] = null,
            this['_byClipCacheIndex'] = null,
            this['_timeScaleInterpolant'] = null,
            this['_weightInterpolant'] = null,
            this['loop'] = dF,
            this['_loopCount'] = -0x1,
            this['_startTime'] = null,
            this['time'] = 0x0,
            this['timeScale'] = 0x1,
            this['_effectiveTimeScale'] = 0x1,
            this['weight'] = 0x1,
            this['_effectiveWeight'] = 0x1,
            this['repetitions'] = 0x1 / 0x0,
            this['paused'] = !0x1,
            this['enabled'] = !0x0,
            this['clampWhenFinished'] = !0x1,
            this['zeroSlopeAtStart'] = !0x0,
            this['zeroSlopeAtEnd'] = !0x0;
        }
        function aWh(bf) {
            this['_root'] = bf,
            this['_initMemoryManager'](),
            this['_accuIndex'] = 0x0,
            this['time'] = 0x0,
            this['timeScale'] = 0x1;
        }
        function aWj(bf) {
            'string' == typeof bf && (console['warn']('THREE.Uniform:\x20Type\x20parameter\x20is\x20no\x20longer\x20needed.'),
            bf = arguments[0x1]),
            this['value'] = bf;
        }
        function aWl(bf, bg, bh) {
            aeb['call'](this, bf, bg),
            this['meshPerAttribute'] = bh || 0x1;
        }
        function aWp(bf, bg, bh, bi) {
            this['ray'] = new KP(bf,bg),
            this['near'] = bh || 0x0,
            this['far'] = bi || 0x1 / 0x0,
            this['params'] = {
                'Mesh': {},
                'Line': {},
                'LOD': {},
                'Points': {
                    'threshold': 0x1
                },
                'Sprite': {}
            },
            Object['defineProperties'](this['params'], {
                'PointCloud': {
                    'get': function() {
                        return console['warn']('THREE.Raycaster:\x20params.PointCloud\x20has\x20been\x20renamed\x20to\x20params.Points.'),
                        this['Points'];
                    }
                }
            });
        }
        function aWu(bf, bg) {
            return bf['distance'] - bg['distance'];
        }
        function aWx(bf, bg, bh, bi) {
            if (!0x1 !== bf['visible'] && (bf['raycast'](bg, bh),
            !0x0 === bi))
                for (var bF = bf['children'], bG = 0x0, bH = bF['length']; bG < bH; bG++)
                    aWx(bF[bG], bg, bh, !0x0);
        }
        function aWF(bf, bg, bh) {
            return this['radius'] = void 0x0 !== bf ? bf : 0x1,
            this['phi'] = void 0x0 !== bg ? bg : 0x0,
            this['theta'] = void 0x0 !== bh ? bh : 0x0,
            this;
        }
        function aWJ(bf, bg, bh) {
            return this['radius'] = void 0x0 !== bf ? bf : 0x1,
            this['theta'] = void 0x0 !== bg ? bg : 0x0,
            this['y'] = void 0x0 !== bh ? bh : 0x0,
            this;
        }
        function aWN(bf, bg) {
            this['min'] = void 0x0 !== bf ? bf : new eC(0x1 / 0x0,0x1 / 0x0),
            this['max'] = void 0x0 !== bg ? bg : new eC(-0x1 / 0x0,-0x1 / 0x0);
        }
        function aWQ(bf, bg) {
            this['start'] = void 0x0 !== bf ? bf : new eK(),
            this['end'] = void 0x0 !== bg ? bg : new eK();
        }
        function aWT(bf) {
            yT['call'](this),
            this['material'] = bf,
            this['render'] = function() {}
            ;
        }
        function aWV(bf, bg, bh, bi) {
            this['object'] = bf,
            this['size'] = void 0x0 !== bg ? bg : 0x1;
            var bF = void 0x0 !== bh ? bh : 0xff0000
              , bG = void 0x0 !== bi ? bi : 0x1
              , bH = 0x0
              , bI = this['object']['geometry'];
            bI && bI['isGeometry'] ? bH = 0x3 * bI['faces']['length'] : bI && bI['isBufferGeometry'] && (bH = bI['attributes']['normal']['count']);
            var bJ = new Gf()
              , bK = new Be(0x2 * bH * 0x3,0x3);
            bJ['addAttribute']('position', bK),
            aeE['call'](this, bJ, new aey({
                'color': bF,
                'linewidth': bG
            })),
            this['matrixAutoUpdate'] = !0x1,
            this['update']();
        }
        function aX6(bf, bg) {
            yT['call'](this),
            this['light'] = bf,
            this['light']['updateMatrixWorld'](),
            this['matrix'] = bf['matrixWorld'],
            this['matrixAutoUpdate'] = !0x1,
            this['color'] = bg;
            for (var bh = new Gf(), bi = [0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, -0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, 0x0, 0x0, 0x0, 0x0, -0x1, 0x1], bF = 0x0, bG = 0x1; bF < 0x20; bF++,
            bG++) {
                var bH = bF / 0x20 * Math['PI'] * 0x2
                  , bI = bG / 0x20 * Math['PI'] * 0x2;
                bi['push'](Math['cos'](bH), Math['sin'](bH), 0x1, Math['cos'](bI), Math['sin'](bI), 0x1);
            }
            bh['addAttribute']('position', new Be(bi,0x3));
            var bJ = new aey({
                'fog': !0x1
            });
            this['cone'] = new aeE(bh,bJ),
            this['add'](this['cone']),
            this['update']();
        }
        function aXg(bf) {
            for (var bg = function bf(bg) {
                var bh = [];
                bg && bg['isBone'] && bh['push'](bg);
                for (var bi = 0x0; bi < bg['children']['length']; bi++)
                    bh['push']['apply'](bh, bf(bg['children'][bi]));
                return bh;
            }(bf), bh = new Gf(), bi = [], bF = [], bG = new w7(0x0,0x0,0x1), bH = new w7(0x0,0x1,0x0), bI = 0x0; bI < bg['length']; bI++) {
                var bJ = bg[bI];
                bJ['parent'] && bJ['parent']['isBone'] && (bi['push'](0x0, 0x0, 0x0),
                bi['push'](0x0, 0x0, 0x0),
                bF['push'](bG['r'], bG['g'], bG['b']),
                bF['push'](bH['r'], bH['g'], bH['b']));
            }
            bh['addAttribute']('position', new Be(bi,0x3)),
            bh['addAttribute']('color', new Be(bF,0x3));
            var bK = new aey({
                'vertexColors': c0,
                'depthTest': !0x1,
                'depthWrite': !0x1,
                'transparent': !0x0
            });
            aeE['call'](this, bh, bK),
            this['root'] = bf,
            this['bones'] = bg,
            this['matrix'] = bf['matrixWorld'],
            this['matrixAutoUpdate'] = !0x1;
        }
        function aXu(bf, bg, bh) {
            this['light'] = bf,
            this['light']['updateMatrixWorld'](),
            this['color'] = bh;
            var bi = new asZ(bg,0x4,0x2)
              , bF = new KW({
                'wireframe': !0x0,
                'fog': !0x1
            });
            KY['call'](this, bi, bF),
            this['matrix'] = this['light']['matrixWorld'],
            this['matrixAutoUpdate'] = !0x1,
            this['update']();
        }
        function aXA(bf, bg) {
            this['type'] = 'RectAreaLightHelper',
            this['light'] = bf,
            this['color'] = bg;
            var bh = new Gf();
            bh['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0],0x3)),
            bh['computeBoundingSphere']();
            var bi = new aey({
                'fog': !0x1
            });
            aeA['call'](this, bh, bi);
            var bF = new Gf();
            bF['addAttribute']('position', new Be([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, 0x1, -0x1, 0x0],0x3)),
            bF['computeBoundingSphere'](),
            this['add'](new KY(bF,new KW({
                'side': bU,
                'fog': !0x1
            }))),
            this['update']();
        }
        function aXG(bf, bg, bh) {
            yT['call'](this),
            this['light'] = bf,
            this['light']['updateMatrixWorld'](),
            this['matrix'] = bf['matrixWorld'],
            this['matrixAutoUpdate'] = !0x1,
            this['color'] = bh;
            var bi = new ahA(bg);
            bi['rotateY'](0.5 * Math['PI']),
            this['material'] = new KW({
                'wireframe': !0x0,
                'fog': !0x1
            }),
            void 0x0 === this['color'] && (this['material']['vertexColors'] = c0);
            var bF = bi['getAttribute']('position')
              , bG = new Float32Array(0x3 * bF['count']);
            bi['addAttribute']('color', new AI(bG,0x3)),
            this['add'](new KY(bi,this['material'])),
            this['update']();
        }
        function aXN(bf, bg) {
            this['lightProbe'] = bf,
            this['size'] = bg;
            var bh = {
                'GAMMA_OUTPUT': ''
            }
              , bi = new KN({
                'defines': bh,
                'uniforms': {
                    'sh': {
                        'value': this['lightProbe']['sh']['coefficients']
                    },
                    'intensity': {
                        'value': this['lightProbe']['intensity']
                    }
                },
                'vertexShader': ['varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vNormal\x20=\x20normalize(\x20normalMatrix\x20*\x20normal\x20);', '\x09gl_Position\x20=\x20projectionMatrix\x20*\x20modelViewMatrix\x20*\x20vec4(\x20position,\x201.0\x20);', '}']['join']('\x0a'),
                'fragmentShader': ['#define\x20RECIPROCAL_PI\x200.318309886', 'vec3\x20inverseTransformDirection(\x20in\x20vec3\x20normal,\x20in\x20mat4\x20matrix\x20)\x20{', '\x09//\x20matrix\x20is\x20assumed\x20to\x20be\x20orthogonal', '\x09return\x20normalize(\x20(\x20vec4(\x20normal,\x200.0\x20)\x20*\x20matrix\x20).xyz\x20);', '}', 'vec3\x20linearToOutput(\x20in\x20vec3\x20a\x20)\x20{', '\x09#ifdef\x20GAMMA_OUTPUT', '\x09\x09return\x20pow(\x20a,\x20vec3(\x201.0\x20/\x20float(\x20GAMMA_FACTOR\x20)\x20)\x20);', '\x09#else', '\x09\x09return\x20a;', '\x09#endif', '}', '//\x20source:\x20https://graphics.stanford.edu/papers/envmap/envmap.pdf', 'vec3\x20shGetIrradianceAt(\x20in\x20vec3\x20normal,\x20in\x20vec3\x20shCoefficients[\x209\x20]\x20)\x20{', '\x09//\x20normal\x20is\x20assumed\x20to\x20have\x20unit\x20length', '\x09float\x20x\x20=\x20normal.x,\x20y\x20=\x20normal.y,\x20z\x20=\x20normal.z;', '\x09//\x20band\x200', '\x09vec3\x20result\x20=\x20shCoefficients[\x200\x20]\x20*\x200.886227;', '\x09//\x20band\x201', '\x09result\x20+=\x20shCoefficients[\x201\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x202\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x203\x20]\x20*\x202.0\x20*\x200.511664\x20*\x20x;', '\x09//\x20band\x202', '\x09result\x20+=\x20shCoefficients[\x204\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20y;', '\x09result\x20+=\x20shCoefficients[\x205\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20y\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x206\x20]\x20*\x20(\x200.743125\x20*\x20z\x20*\x20z\x20-\x200.247708\x20);', '\x09result\x20+=\x20shCoefficients[\x207\x20]\x20*\x202.0\x20*\x200.429043\x20*\x20x\x20*\x20z;', '\x09result\x20+=\x20shCoefficients[\x208\x20]\x20*\x200.429043\x20*\x20(\x20x\x20*\x20x\x20-\x20y\x20*\x20y\x20);', '\x09return\x20result;', '}', 'uniform\x20vec3\x20sh[\x209\x20];\x20//\x20sh\x20coefficients', 'uniform\x20float\x20intensity;\x20//\x20light\x20probe\x20intensity', 'varying\x20vec3\x20vNormal;', 'void\x20main()\x20{', '\x09vec3\x20normal\x20=\x20normalize(\x20vNormal\x20);', '\x09vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal,\x20viewMatrix\x20);', '\x09vec3\x20irradiance\x20=\x20shGetIrradianceAt(\x20worldNormal,\x20sh\x20);', '\x09vec3\x20outgoingLight\x20=\x20RECIPROCAL_PI\x20*\x20irradiance\x20*\x20intensity;', '\x09outgoingLight\x20=\x20linearToOutput(\x20outgoingLight\x20);', '\x09gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x201.0\x20);', '}']['join']('\x0a')
            })
              , bF = new asZ(0x1,0x20,0x10);
            KY['call'](this, bF, bi),
            this['onBeforeRender']();
        }
        function aXT(bf, bg, bh, bi) {
            bf = bf || 0xa,
            bg = bg || 0xa,
            bh = new w7(void 0x0 !== bh ? bh : 0x444444),
            bi = new w7(void 0x0 !== bi ? bi : 0x888888);
            for (var bF = bg / 0x2, bG = bf / bg, bH = bf / 0x2, bI = [], bJ = [], bK = 0x0, bL = 0x0, bM = -bH; bK <= bg; bK++,
            bM += bG) {
                bI['push'](-bH, 0x0, bM, bH, 0x0, bM),
                bI['push'](bM, 0x0, -bH, bM, 0x0, bH);
                var bN = bK === bF ? bh : bi;
                bN['toArray'](bJ, bL),
                bL += 0x3,
                bN['toArray'](bJ, bL),
                bL += 0x3,
                bN['toArray'](bJ, bL),
                bL += 0x3,
                bN['toArray'](bJ, bL),
                bL += 0x3;
            }
            var bO = new Gf();
            bO['addAttribute']('position', new Be(bI,0x3)),
            bO['addAttribute']('color', new Be(bJ,0x3));
            var bP = new aey({
                'vertexColors': c0
            });
            aeE['call'](this, bO, bP);
        }
        function aY9(bf, bg, bh, bi, bF, bG) {
            bf = bf || 0xa,
            bg = bg || 0x10,
            bh = bh || 0x8,
            bi = bi || 0x40,
            bF = new w7(void 0x0 !== bF ? bF : 0x444444),
            bG = new w7(void 0x0 !== bG ? bG : 0x888888);
            var bH, bI, bJ, bK, bL, bM, bN, bO = [], bP = [];
            for (bK = 0x0; bK <= bg; bK++)
                bJ = bK / bg * (0x2 * Math['PI']),
                bH = Math['sin'](bJ) * bf,
                bI = Math['cos'](bJ) * bf,
                bO['push'](0x0, 0x0, 0x0),
                bO['push'](bH, 0x0, bI),
                bN = 0x1 & bK ? bF : bG,
                bP['push'](bN['r'], bN['g'], bN['b']),
                bP['push'](bN['r'], bN['g'], bN['b']);
            for (bK = 0x0; bK <= bh; bK++)
                for (bN = 0x1 & bK ? bF : bG,
                bM = bf - bf / bh * bK,
                bL = 0x0; bL < bi; bL++)
                    bJ = bL / bi * (0x2 * Math['PI']),
                    bH = Math['sin'](bJ) * bM,
                    bI = Math['cos'](bJ) * bM,
                    bO['push'](bH, 0x0, bI),
                    bP['push'](bN['r'], bN['g'], bN['b']),
                    bJ = (bL + 0x1) / bi * (0x2 * Math['PI']),
                    bH = Math['sin'](bJ) * bM,
                    bI = Math['cos'](bJ) * bM,
                    bO['push'](bH, 0x0, bI),
                    bP['push'](bN['r'], bN['g'], bN['b']);
            var bQ = new Gf();
            bQ['addAttribute']('position', new Be(bO,0x3)),
            bQ['addAttribute']('color', new Be(bP,0x3));
            var bR = new aey({
                'vertexColors': c0
            });
            aeE['call'](this, bQ, bR);
        }
        function aYr(bf, bg, bh, bi) {
            this['audio'] = bf,
            this['range'] = bg || 0x1,
            this['divisionsInnerAngle'] = bh || 0x10,
            this['divisionsOuterAngle'] = bi || 0x2;
            var bF = new Gf()
              , bG = this['divisionsInnerAngle'] + 0x2 * this['divisionsOuterAngle']
              , bH = new Float32Array(0x3 * (0x3 * bG + 0x3));
            bF['addAttribute']('position', new AI(bH,0x3));
            var bI = new aey({
                'color': 0xff00
            })
              , bJ = new aey({
                'color': 0xffff00
            });
            aeA['call'](this, bF, [bJ, bI]),
            this['update']();
        }
        function aYB(bf, bg, bh, bi) {
            this['object'] = bf,
            this['size'] = void 0x0 !== bg ? bg : 0x1;
            var bF = void 0x0 !== bh ? bh : 0xffff00
              , bG = void 0x0 !== bi ? bi : 0x1
              , bH = 0x0
              , bI = this['object']['geometry'];
            bI && bI['isGeometry'] ? bH = bI['faces']['length'] : console['warn']('THREE.FaceNormalsHelper:\x20only\x20THREE.Geometry\x20is\x20supported.\x20Use\x20THREE.VertexNormalsHelper,\x20instead.');
            var bJ = new Gf()
              , bK = new Be(0x2 * bH * 0x3,0x3);
            bJ['addAttribute']('position', bK),
            aeE['call'](this, bJ, new aey({
                'color': bF,
                'linewidth': bG
            })),
            this['matrixAutoUpdate'] = !0x1,
            this['update']();
        }
        function aYM(bf, bg, bh) {
            yT['call'](this),
            this['light'] = bf,
            this['light']['updateMatrixWorld'](),
            this['matrix'] = bf['matrixWorld'],
            this['matrixAutoUpdate'] = !0x1,
            this['color'] = bh,
            void 0x0 === bg && (bg = 0x1);
            var bi = new Gf();
            bi['addAttribute']('position', new Be([-bg, bg, 0x0, bg, bg, 0x0, bg, -bg, 0x0, -bg, -bg, 0x0, -bg, bg, 0x0],0x3));
            var bF = new aey({
                'fog': !0x1
            });
            this['lightPlane'] = new aeA(bi,bF),
            this['add'](this['lightPlane']),
            (bi = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x0, 0x1],0x3)),
            this['targetLine'] = new aeA(bi,bF),
            this['add'](this['targetLine']),
            this['update']();
        }
        function aYS(bf) {
            var bg = new Gf()
              , bh = new aey({
                'color': 0xffffff,
                'vertexColors': bZ
            })
              , bi = []
              , bF = []
              , bG = {}
              , bH = new w7(0xffaa00)
              , bI = new w7(0xff0000)
              , bJ = new w7(0xaaff)
              , bK = new w7(0xffffff)
              , bL = new w7(0x333333);
            function bM(bf, bg, bh) {
                bN(bf, bh),
                bN(bg, bh);
            }
            function bN(bf, bg) {
                bi['push'](0x0, 0x0, 0x0),
                bF['push'](bg['r'], bg['g'], bg['b']),
                void 0x0 === bG[bf] && (bG[bf] = []),
                bG[bf]['push'](bi['length'] / 0x3 - 0x1);
            }
            bM('n1', 'n2', bH),
            bM('n2', 'n4', bH),
            bM('n4', 'n3', bH),
            bM('n3', 'n1', bH),
            bM('f1', 'f2', bH),
            bM('f2', 'f4', bH),
            bM('f4', 'f3', bH),
            bM('f3', 'f1', bH),
            bM('n1', 'f1', bH),
            bM('n2', 'f2', bH),
            bM('n3', 'f3', bH),
            bM('n4', 'f4', bH),
            bM('p', 'n1', bI),
            bM('p', 'n2', bI),
            bM('p', 'n3', bI),
            bM('p', 'n4', bI),
            bM('u1', 'u2', bJ),
            bM('u2', 'u3', bJ),
            bM('u3', 'u1', bJ),
            bM('c', 't', bK),
            bM('p', 'c', bL),
            bM('cn1', 'cn2', bL),
            bM('cn3', 'cn4', bL),
            bM('cf1', 'cf2', bL),
            bM('cf3', 'cf4', bL),
            bg['addAttribute']('position', new Be(bi,0x3)),
            bg['addAttribute']('color', new Be(bF,0x3)),
            aeE['call'](this, bg, bh),
            this['camera'] = bf,
            this['camera']['updateProjectionMatrix'] && this['camera']['updateProjectionMatrix'](),
            this['matrix'] = bf['matrixWorld'],
            this['matrixAutoUpdate'] = !0x1,
            this['pointMap'] = bG,
            this['update']();
        }
        function aZb(bf, bg) {
            this['object'] = bf,
            void 0x0 === bg && (bg = 0xffff00);
            var bh = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7])
              , bi = new Float32Array(0x18)
              , bF = new Gf();
            bF['setIndex'](new AI(bh,0x1)),
            bF['addAttribute']('position', new AI(bi,0x3)),
            aeE['call'](this, bF, new aey({
                'color': bg
            })),
            this['matrixAutoUpdate'] = !0x1,
            this['update']();
        }
        function aZh(bf, bg) {
            this['type'] = 'Box3Helper',
            this['box'] = bf;
            var bh = void 0x0 !== bg ? bg : 0xffff00
              , bi = new Uint16Array([0x0, 0x1, 0x1, 0x2, 0x2, 0x3, 0x3, 0x0, 0x4, 0x5, 0x5, 0x6, 0x6, 0x7, 0x7, 0x4, 0x0, 0x4, 0x1, 0x5, 0x2, 0x6, 0x3, 0x7])
              , bF = new Gf();
            bF['setIndex'](new AI(bi,0x1)),
            bF['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, -0x1, -0x1, -0x1, -0x1, 0x1, -0x1, -0x1],0x3)),
            aeE['call'](this, bF, new aey({
                'color': bh
            })),
            this['geometry']['computeBoundingSphere']();
        }
        function aZn(bf, bg, bh) {
            this['type'] = 'PlaneHelper',
            this['plane'] = bf,
            this['size'] = void 0x0 === bg ? 0x1 : bg;
            var bi = void 0x0 !== bh ? bh : 0xffff00
              , bF = new Gf();
            bF['addAttribute']('position', new Be([0x1, -0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1, 0x1, 0x1, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0],0x3)),
            bF['computeBoundingSphere'](),
            aeA['call'](this, bF, new aey({
                'color': bi
            }));
            var bG = new Gf();
            bG['addAttribute']('position', new Be([0x1, 0x1, 0x1, -0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, 0x1, 0x1, -0x1, -0x1, 0x1, 0x1, -0x1, 0x1],0x3)),
            bG['computeBoundingSphere'](),
            this['add'](new KY(bG,new KW({
                'color': bi,
                'opacity': 0.2,
                'transparent': !0x0,
                'depthWrite': !0x1
            })));
        }
        function aZu(bf, bg, bh, bi, bF, bG) {
            yT['call'](this),
            void 0x0 === bf && (bf = new eK(0x0,0x0,0x1)),
            void 0x0 === bg && (bg = new eK(0x0,0x0,0x0)),
            void 0x0 === bh && (bh = 0x1),
            void 0x0 === bi && (bi = 0xffff00),
            void 0x0 === bF && (bF = 0.2 * bh),
            void 0x0 === bG && (bG = 0.2 * bF),
            void 0x0 === aVP && ((aVP = new Gf())['addAttribute']('position', new Be([0x0, 0x0, 0x0, 0x0, 0x1, 0x0],0x3)),
            (aVQ = new avp(0x0,0.5,0x1,0x5,0x1))['translate'](0x0, -0.5, 0x0)),
            this['position']['copy'](bg),
            this['line'] = new aeA(aVP,new aey({
                'color': bi
            })),
            this['line']['matrixAutoUpdate'] = !0x1,
            this['add'](this['line']),
            this['cone'] = new KY(aVQ,new KW({
                'color': bi
            })),
            this['cone']['matrixAutoUpdate'] = !0x1,
            this['add'](this['cone']),
            this['setDirection'](bf),
            this['setLength'](bh, bF, bG);
        }
        function aZB(bf) {
            var bg = [0x0, 0x0, 0x0, bf = bf || 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, bf]
              , bh = new Gf();
            bh['addAttribute']('position', new Be(bg,0x3)),
            bh['addAttribute']('color', new Be([0x1, 0x0, 0x0, 0x1, 0.6, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0.6, 0x1],0x3));
            var bi = new aey({
                'vertexColors': c0
            });
            aeE['call'](this, bh, bi);
        }
        function aZG(bf, bg, bh, bi, bF, bG, bH) {
            return console['warn']('THREE.Face4\x20has\x20been\x20removed.\x20A\x20THREE.Face3\x20will\x20be\x20created\x20instead.'),
            new xS(bf,bg,bh,bF,bG,bH);
        }
        Object['assign'](aVT['prototype'], {
            'getValue': function(bf, bg) {
                this['bind']();
                var bh = this['_targetGroup']['nCachedObjects_']
                  , bi = this['_bindings'][bh];
                void 0x0 !== bi && bi['getValue'](bf, bg);
            },
            'setValue': function(bf, bg) {
                for (var bh = this['_bindings'], bi = this['_targetGroup']['nCachedObjects_'], bF = bh['length']; bi !== bF; ++bi)
                    bh[bi]['setValue'](bf, bg);
            },
            'bind': function() {
                for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg)
                    bf[bg]['bind']();
            },
            'unbind': function() {
                for (var bf = this['_bindings'], bg = this['_targetGroup']['nCachedObjects_'], bh = bf['length']; bg !== bh; ++bg)
                    bf[bg]['unbind']();
            }
        }),
        Object['assign'](aVY, {
            'Composite': aVT,
            'create': function(bf, bg, bh) {
                return bf && bf['isAnimationObjectGroup'] ? new aVY['Composite'](bf,bg,bh) : new aVY(bf,bg,bh);
            },
            'sanitizeNodeName': (aVM = new RegExp('[\x5c[\x5c]\x5c.:\x5c/]','g'),
            function(bf) {
                return bf['replace'](/\s/g, '_')['replace'](aVM, '');
            }
            ),
            'parseTrackName': (aVE = '[^\x5c[\x5c]\x5c.:\x5c/]',
            aVF = '[^' + '\x5c[\x5c]\x5c.:\x5c/'['replace']('\x5c.', '') + ']',
            aVG = /((?:WC+[\/:])*)/['source']['replace']('WC', aVE),
            aVH = /(WCOD+)?/['source']['replace']('WCOD', aVF),
            aVI = /(?:\.(WC+)(?:\[(.+)\])?)?/['source']['replace']('WC', aVE),
            aVJ = /\.(WC+)(?:\[(.+)\])?/['source']['replace']('WC', aVE),
            aVK = new RegExp('^' + aVG + aVH + aVI + aVJ + '$'),
            aVL = ['material', 'materials', 'bones'],
            function(bf) {
                var bg = aVK['exec'](bf);
                if (!bg)
                    throw new Error('PropertyBinding:\x20Cannot\x20parse\x20trackName:\x20' + bf);
                var bh = {
                    'nodeName': bg[0x2],
                    'objectName': bg[0x3],
                    'objectIndex': bg[0x4],
                    'propertyName': bg[0x5],
                    'propertyIndex': bg[0x6]
                }
                  , bi = bh['nodeName'] && bh['nodeName']['lastIndexOf']('.');
                if (void 0x0 !== bi && -0x1 !== bi) {
                    var bF = bh['nodeName']['substring'](bi + 0x1);
                    -0x1 !== aVL['indexOf'](bF) && (bh['nodeName'] = bh['nodeName']['substring'](0x0, bi),
                    bh['objectName'] = bF);
                }
                if (null === bh['propertyName'] || 0x0 === bh['propertyName']['length'])
                    throw new Error('PropertyBinding:\x20can\x20not\x20parse\x20propertyName\x20from\x20trackName:\x20' + bf);
                return bh;
            }
            ),
            'findNode': function(bf, bg) {
                if (!bg || '' === bg || 'root' === bg || '.' === bg || -0x1 === bg || bg === bf['name'] || bg === bf['uuid'])
                    return bf;
                if (bf['skeleton']) {
                    var bh = bf['skeleton']['getBoneByName'](bg);
                    if (void 0x0 !== bh)
                        return bh;
                }
                if (bf['children']) {
                    var bi = function(bf) {
                        for (var bh = 0x0; bh < bf['length']; bh++) {
                            var bF = bf[bh];
                            if (bF['name'] === bg || bF['uuid'] === bg)
                                return bF;
                            var bG = bi(bF['children']);
                            if (bG)
                                return bG;
                        }
                        return null;
                    }
                      , bF = bi(bf['children']);
                    if (bF)
                        return bF;
                }
                return null;
            }
        }),
        Object['assign'](aVY['prototype'], {
            '_getValue_unavailable': function() {},
            '_setValue_unavailable': function() {},
            'BindingType': {
                'Direct': 0x0,
                'EntireArray': 0x1,
                'ArrayElement': 0x2,
                'HasFromToArray': 0x3
            },
            'Versioning': {
                'None': 0x0,
                'NeedsUpdate': 0x1,
                'MatrixWorldNeedsUpdate': 0x2
            },
            'GetterByBindingType': [function(bf, bg) {
                bf[bg] = this['node'][this['propertyName']];
            }
            , function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                    bf[bg++] = bh[bi];
            }
            , function(bf, bg) {
                bf[bg] = this['resolvedProperty'][this['propertyIndex']];
            }
            , function(bf, bg) {
                this['resolvedProperty']['toArray'](bf, bg);
            }
            ],
            'SetterByBindingTypeAndVersioning': [[function(bf, bg) {
                this['targetObject'][this['propertyName']] = bf[bg];
            }
            , function(bf, bg) {
                this['targetObject'][this['propertyName']] = bf[bg],
                this['targetObject']['needsUpdate'] = !0x0;
            }
            , function(bf, bg) {
                this['targetObject'][this['propertyName']] = bf[bg],
                this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }
            ], [function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                    bh[bi] = bf[bg++];
            }
            , function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                    bh[bi] = bf[bg++];
                this['targetObject']['needsUpdate'] = !0x0;
            }
            , function(bf, bg) {
                for (var bh = this['resolvedProperty'], bi = 0x0, bF = bh['length']; bi !== bF; ++bi)
                    bh[bi] = bf[bg++];
                this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }
            ], [function(bf, bg) {
                this['resolvedProperty'][this['propertyIndex']] = bf[bg];
            }
            , function(bf, bg) {
                this['resolvedProperty'][this['propertyIndex']] = bf[bg],
                this['targetObject']['needsUpdate'] = !0x0;
            }
            , function(bf, bg) {
                this['resolvedProperty'][this['propertyIndex']] = bf[bg],
                this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }
            ], [function(bf, bg) {
                this['resolvedProperty']['fromArray'](bf, bg);
            }
            , function(bf, bg) {
                this['resolvedProperty']['fromArray'](bf, bg),
                this['targetObject']['needsUpdate'] = !0x0;
            }
            , function(bf, bg) {
                this['resolvedProperty']['fromArray'](bf, bg),
                this['targetObject']['matrixWorldNeedsUpdate'] = !0x0;
            }
            ]],
            'getValue': function(bf, bg) {
                this['bind'](),
                this['getValue'](bf, bg);
            },
            'setValue': function(bf, bg) {
                this['bind'](),
                this['setValue'](bf, bg);
            },
            'bind': function() {
                var bf = this['node']
                  , bg = this['parsedPath']
                  , bh = bg['objectName']
                  , bi = bg['propertyName']
                  , bF = bg['propertyIndex'];
                if (bf || (bf = aVY['findNode'](this['rootNode'], bg['nodeName']) || this['rootNode'],
                this['node'] = bf),
                this['getValue'] = this['_getValue_unavailable'],
                this['setValue'] = this['_setValue_unavailable'],
                bf) {
                    if (bh) {
                        var bG = bg['objectIndex'];
                        switch (bh) {
                        case 'materials':
                            if (!bf['material'])
                                return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material\x20as\x20node\x20does\x20not\x20have\x20a\x20material.', this);
                            if (!bf['material']['materials'])
                                return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20material.materials\x20as\x20node.material\x20does\x20not\x20have\x20a\x20materials\x20array.', this);
                            bf = bf['material']['materials'];
                            break;
                        case 'bones':
                            if (!bf['skeleton'])
                                return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20bones\x20as\x20node\x20does\x20not\x20have\x20a\x20skeleton.', this);
                            bf = bf['skeleton']['bones'];
                            for (var bH = 0x0; bH < bf['length']; bH++)
                                if (bf[bH]['name'] === bG) {
                                    bG = bH;
                                    break;
                                }
                            break;
                        default:
                            if (void 0x0 === bf[bh])
                                return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20objectName\x20of\x20node\x20undefined.', this);
                            bf = bf[bh];
                        }
                        if (void 0x0 !== bG) {
                            if (void 0x0 === bf[bG])
                                return void console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20bind\x20to\x20objectIndex\x20of\x20objectName,\x20but\x20is\x20undefined.', this, bf);
                            bf = bf[bG];
                        }
                    }
                    var bI = bf[bi];
                    if (void 0x0 !== bI) {
                        var bJ = this['Versioning']['None'];
                        this['targetObject'] = bf,
                        void 0x0 !== bf['needsUpdate'] ? bJ = this['Versioning']['NeedsUpdate'] : void 0x0 !== bf['matrixWorldNeedsUpdate'] && (bJ = this['Versioning']['MatrixWorldNeedsUpdate']);
                        var bK = this['BindingType']['Direct'];
                        if (void 0x0 !== bF) {
                            if ('morphTargetInfluences' === bi) {
                                if (!bf['geometry'])
                                    return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.', this);
                                if (bf['geometry']['isBufferGeometry']) {
                                    if (!bf['geometry']['morphAttributes'])
                                        return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphAttributes.', this);
                                    for (bH = 0x0; bH < this['node']['geometry']['morphAttributes']['position']['length']; bH++)
                                        if (bf['geometry']['morphAttributes']['position'][bH]['name'] === bF) {
                                            bF = bH;
                                            break;
                                        }
                                } else {
                                    if (!bf['geometry']['morphTargets'])
                                        return void console['error']('THREE.PropertyBinding:\x20Can\x20not\x20bind\x20to\x20morphTargetInfluences\x20because\x20node\x20does\x20not\x20have\x20a\x20geometry.morphTargets.', this);
                                    for (bH = 0x0; bH < this['node']['geometry']['morphTargets']['length']; bH++)
                                        if (bf['geometry']['morphTargets'][bH]['name'] === bF) {
                                            bF = bH;
                                            break;
                                        }
                                }
                            }
                            bK = this['BindingType']['ArrayElement'],
                            this['resolvedProperty'] = bI,
                            this['propertyIndex'] = bF;
                        } else
                            void 0x0 !== bI['fromArray'] && void 0x0 !== bI['toArray'] ? (bK = this['BindingType']['HasFromToArray'],
                            this['resolvedProperty'] = bI) : Array['isArray'](bI) ? (bK = this['BindingType']['EntireArray'],
                            this['resolvedProperty'] = bI) : this['propertyName'] = bi;
                        this['getValue'] = this['GetterByBindingType'][bK],
                        this['setValue'] = this['SetterByBindingTypeAndVersioning'][bK][bJ];
                    } else {
                        var bL = bg['nodeName'];
                        console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20property\x20for\x20track:\x20' + bL + '.' + bi + '\x20but\x20it\x20wasn\x27t\x20found.', bf);
                    }
                } else
                    console['error']('THREE.PropertyBinding:\x20Trying\x20to\x20update\x20node\x20for\x20track:\x20' + this['path'] + '\x20but\x20it\x20wasn\x27t\x20found.');
            },
            'unbind': function() {
                this['node'] = null,
                this['getValue'] = this['_getValue_unbound'],
                this['setValue'] = this['_setValue_unbound'];
            }
        }),
        Object['assign'](aVY['prototype'], {
            '_getValue_unbound': aVY['prototype']['getValue'],
            '_setValue_unbound': aVY['prototype']['setValue']
        }),
        Object['assign'](aW2['prototype'], {
            'isAnimationObjectGroup': !0x0,
            'add': function() {
                for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_paths'], bG = this['_parsedPaths'], bH = this['_bindings'], bI = bH['length'], bJ = void 0x0, bK = 0x0, bL = arguments['length']; bK !== bL; ++bK) {
                    var bM = arguments[bK]
                      , bN = bM['uuid']
                      , bO = bi[bN];
                    if (void 0x0 === bO) {
                        bO = bg++,
                        bi[bN] = bO,
                        bf['push'](bM);
                        for (var bP = 0x0, bQ = bI; bP !== bQ; ++bP)
                            bH[bP]['push'](new aVY(bM,bF[bP],bG[bP]));
                    } else if (bO < bh) {
                        bJ = bf[bO];
                        var bR = --bh
                          , bS = bf[bR];
                        bi[bS['uuid']] = bO,
                        bf[bO] = bS,
                        bi[bN] = bR,
                        bf[bR] = bM;
                        for (bP = 0x0,
                        bQ = bI; bP !== bQ; ++bP) {
                            var bT = bH[bP]
                              , bU = bT[bR]
                              , bV = bT[bO];
                            bT[bO] = bU,
                            void 0x0 === bV && (bV = new aVY(bM,bF[bP],bG[bP])),
                            bT[bR] = bV;
                        }
                    } else
                        bf[bO] !== bJ && console['error']('THREE.AnimationObjectGroup:\x20Different\x20objects\x20with\x20the\x20same\x20UUID\x20detected.\x20Clean\x20the\x20caches\x20or\x20recreate\x20your\x20infrastructure\x20when\x20reloading\x20scenes.');
                }
                this['nCachedObjects_'] = bh;
            },
            'remove': function() {
                for (var bf = this['_objects'], bg = this['nCachedObjects_'], bh = this['_indicesByUUID'], bi = this['_bindings'], bF = bi['length'], bG = 0x0, bH = arguments['length']; bG !== bH; ++bG) {
                    var bI = arguments[bG]
                      , bJ = bI['uuid']
                      , bK = bh[bJ];
                    if (void 0x0 !== bK && bK >= bg) {
                        var bL = bg++
                          , bM = bf[bL];
                        bh[bM['uuid']] = bK,
                        bf[bK] = bM,
                        bh[bJ] = bL,
                        bf[bL] = bI;
                        for (var bN = 0x0, bO = bF; bN !== bO; ++bN) {
                            var bP = bi[bN]
                              , bQ = bP[bL]
                              , bR = bP[bK];
                            bP[bK] = bQ,
                            bP[bL] = bR;
                        }
                    }
                }
                this['nCachedObjects_'] = bg;
            },
            'uncache': function() {
                for (var bf = this['_objects'], bg = bf['length'], bh = this['nCachedObjects_'], bi = this['_indicesByUUID'], bF = this['_bindings'], bG = bF['length'], bH = 0x0, bI = arguments['length']; bH !== bI; ++bH) {
                    var bJ = arguments[bH]['uuid']
                      , bK = bi[bJ];
                    if (void 0x0 !== bK)
                        if (delete bi[bJ],
                        bK < bh) {
                            var bL = --bh
                              , bM = bf[bL]
                              , bN = bf[bS = --bg];
                            bi[bM['uuid']] = bK,
                            bf[bK] = bM,
                            bi[bN['uuid']] = bL,
                            bf[bL] = bN,
                            bf['pop']();
                            for (var bO = 0x0, bP = bG; bO !== bP; ++bO) {
                                var bQ = (bT = bF[bO])[bL]
                                  , bR = bT[bS];
                                bT[bK] = bQ,
                                bT[bL] = bR,
                                bT['pop']();
                            }
                        } else {
                            var bS;
                            bi[(bN = bf[bS = --bg])['uuid']] = bK,
                            bf[bK] = bN,
                            bf['pop']();
                            for (bO = 0x0,
                            bP = bG; bO !== bP; ++bO) {
                                var bT;
                                (bT = bF[bO])[bK] = bT[bS],
                                bT['pop']();
                            }
                        }
                }
                this['nCachedObjects_'] = bh;
            },
            'subscribe_': function(bf, bg) {
                var bh = this['_bindingsIndicesByPath']
                  , bi = bh[bf]
                  , bF = this['_bindings'];
                if (void 0x0 !== bi)
                    return bF[bi];
                var bG = this['_paths']
                  , bH = this['_parsedPaths']
                  , bI = this['_objects']
                  , bJ = bI['length']
                  , bK = this['nCachedObjects_']
                  , bL = new Array(bJ);
                bi = bF['length'],
                bh[bf] = bi,
                bG['push'](bf),
                bH['push'](bg),
                bF['push'](bL);
                for (var bM = bK, bN = bI['length']; bM !== bN; ++bM) {
                    var bO = bI[bM];
                    bL[bM] = new aVY(bO,bf,bg);
                }
                return bL;
            },
            'unsubscribe_': function(bf) {
                var bg = this['_bindingsIndicesByPath']
                  , bh = bg[bf];
                if (void 0x0 !== bh) {
                    var bi = this['_paths']
                      , bF = this['_parsedPaths']
                      , bG = this['_bindings']
                      , bH = bG['length'] - 0x1
                      , bI = bG[bH];
                    bg[bf[bH]] = bh,
                    bG[bh] = bI,
                    bG['pop'](),
                    bF[bh] = bF[bH],
                    bF['pop'](),
                    bi[bh] = bi[bH],
                    bi['pop']();
                }
            }
        }),
        Object['assign'](aW7['prototype'], {
            'play': function() {
                return this['_mixer']['_activateAction'](this),
                this;
            },
            'stop': function() {
                return this['_mixer']['_deactivateAction'](this),
                this['reset']();
            },
            'reset': function() {
                return this['paused'] = !0x1,
                this['enabled'] = !0x0,
                this['time'] = 0x0,
                this['_loopCount'] = -0x1,
                this['_startTime'] = null,
                this['stopFading']()['stopWarping']();
            },
            'isRunning': function() {
                return this['enabled'] && !this['paused'] && 0x0 !== this['timeScale'] && null === this['_startTime'] && this['_mixer']['_isActiveAction'](this);
            },
            'isScheduled': function() {
                return this['_mixer']['_isActiveAction'](this);
            },
            'startAt': function(bf) {
                return this['_startTime'] = bf,
                this;
            },
            'setLoop': function(bf, bg) {
                return this['loop'] = bf,
                this['repetitions'] = bg,
                this;
            },
            'setEffectiveWeight': function(bf) {
                return this['weight'] = bf,
                this['_effectiveWeight'] = this['enabled'] ? bf : 0x0,
                this['stopFading']();
            },
            'getEffectiveWeight': function() {
                return this['_effectiveWeight'];
            },
            'fadeIn': function(bf) {
                return this['_scheduleFading'](bf, 0x0, 0x1);
            },
            'fadeOut': function(bf) {
                return this['_scheduleFading'](bf, 0x1, 0x0);
            },
            'crossFadeFrom': function(bf, bg, bh) {
                if (bf['fadeOut'](bg),
                this['fadeIn'](bg),
                bh) {
                    var bi = this['_clip']['duration']
                      , bF = bf['_clip']['duration']
                      , bG = bF / bi
                      , bH = bi / bF;
                    bf['warp'](0x1, bG, bg),
                    this['warp'](bH, 0x1, bg);
                }
                return this;
            },
            'crossFadeTo': function(bf, bg, bh) {
                return bf['crossFadeFrom'](this, bg, bh);
            },
            'stopFading': function() {
                var bf = this['_weightInterpolant'];
                return null !== bf && (this['_weightInterpolant'] = null,
                this['_mixer']['_takeBackControlInterpolant'](bf)),
                this;
            },
            'setEffectiveTimeScale': function(bf) {
                return this['timeScale'] = bf,
                this['_effectiveTimeScale'] = this['paused'] ? 0x0 : bf,
                this['stopWarping']();
            },
            'getEffectiveTimeScale': function() {
                return this['_effectiveTimeScale'];
            },
            'setDuration': function(bf) {
                return this['timeScale'] = this['_clip']['duration'] / bf,
                this['stopWarping']();
            },
            'syncWith': function(bf) {
                return this['time'] = bf['time'],
                this['timeScale'] = bf['timeScale'],
                this['stopWarping']();
            },
            'halt': function(bf) {
                return this['warp'](this['_effectiveTimeScale'], 0x0, bf);
            },
            'warp': function(bf, bg, bh) {
                var bi = this['_mixer']
                  , bF = bi['time']
                  , bG = this['_timeScaleInterpolant']
                  , bH = this['timeScale'];
                null === bG && (bG = bi['_lendControlInterpolant'](),
                this['_timeScaleInterpolant'] = bG);
                var bI = bG['parameterPositions']
                  , bJ = bG['sampleValues'];
                return bI[0x0] = bF,
                bI[0x1] = bF + bh,
                bJ[0x0] = bf / bH,
                bJ[0x1] = bg / bH,
                this;
            },
            'stopWarping': function() {
                var bf = this['_timeScaleInterpolant'];
                return null !== bf && (this['_timeScaleInterpolant'] = null,
                this['_mixer']['_takeBackControlInterpolant'](bf)),
                this;
            },
            'getMixer': function() {
                return this['_mixer'];
            },
            'getClip': function() {
                return this['_clip'];
            },
            'getRoot': function() {
                return this['_localRoot'] || this['_mixer']['_root'];
            },
            '_update': function(bf, bg, bh, bi) {
                if (this['enabled']) {
                    var bF = this['_startTime'];
                    if (null !== bF) {
                        var bG = (bf - bF) * bh;
                        if (bG < 0x0 || 0x0 === bh)
                            return;
                        this['_startTime'] = null,
                        bg = bh * bG;
                    }
                    bg *= this['_updateTimeScale'](bf);
                    var bH = this['_updateTime'](bg)
                      , bI = this['_updateWeight'](bf);
                    if (bI > 0x0)
                        for (var bJ = this['_interpolants'], bK = this['_propertyBindings'], bL = 0x0, bM = bJ['length']; bL !== bM; ++bL)
                            bJ[bL]['evaluate'](bH),
                            bK[bL]['accumulate'](bi, bI);
                } else
                    this['_updateWeight'](bf);
            },
            '_updateWeight': function(bf) {
                var bg = 0x0;
                if (this['enabled']) {
                    bg = this['weight'];
                    var bh = this['_weightInterpolant'];
                    if (null !== bh) {
                        var bi = bh['evaluate'](bf)[0x0];
                        bg *= bi,
                        bf > bh['parameterPositions'][0x1] && (this['stopFading'](),
                        0x0 === bi && (this['enabled'] = !0x1));
                    }
                }
                return this['_effectiveWeight'] = bg,
                bg;
            },
            '_updateTimeScale': function(bf) {
                var bg = 0x0;
                if (!this['paused']) {
                    bg = this['timeScale'];
                    var bh = this['_timeScaleInterpolant'];
                    if (null !== bh)
                        bg *= bh['evaluate'](bf)[0x0],
                        bf > bh['parameterPositions'][0x1] && (this['stopWarping'](),
                        0x0 === bg ? this['paused'] = !0x0 : this['timeScale'] = bg);
                }
                return this['_effectiveTimeScale'] = bg,
                bg;
            },
            '_updateTime': function(bf) {
                var bg = this['time'] + bf
                  , bh = this['_clip']['duration']
                  , bi = this['loop']
                  , bF = this['_loopCount']
                  , bG = bi === dG;
                if (0x0 === bf)
                    return -0x1 === bF ? bg : bG && 0x1 == (0x1 & bF) ? bh - bg : bg;
                if (bi === dE) {
                    -0x1 === bF && (this['_loopCount'] = 0x0,
                    this['_setEndings'](!0x0, !0x0, !0x1));
                    b3t: {
                        if (bg >= bh)
                            bg = bh;
                        else {
                            if (!(bg < 0x0)) {
                                this['time'] = bg;
                                break b3t;
                            }
                            bg = 0x0;
                        }
                        this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1,
                        this['time'] = bg,
                        this['_mixer']['dispatchEvent']({
                            'type': 'finished',
                            'action': this,
                            'direction': bf < 0x0 ? -0x1 : 0x1
                        });
                    }
                } else {
                    if (-0x1 === bF && (bf >= 0x0 ? (bF = 0x0,
                    this['_setEndings'](!0x0, 0x0 === this['repetitions'], bG)) : this['_setEndings'](0x0 === this['repetitions'], !0x0, bG)),
                    bg >= bh || bg < 0x0) {
                        var bH = Math['floor'](bg / bh);
                        bg -= bh * bH,
                        bF += Math['abs'](bH);
                        var bI = this['repetitions'] - bF;
                        if (bI <= 0x0)
                            this['clampWhenFinished'] ? this['paused'] = !0x0 : this['enabled'] = !0x1,
                            bg = bf > 0x0 ? bh : 0x0,
                            this['time'] = bg,
                            this['_mixer']['dispatchEvent']({
                                'type': 'finished',
                                'action': this,
                                'direction': bf > 0x0 ? 0x1 : -0x1
                            });
                        else {
                            if (0x1 === bI) {
                                var bJ = bf < 0x0;
                                this['_setEndings'](bJ, !bJ, bG);
                            } else
                                this['_setEndings'](!0x1, !0x1, bG);
                            this['_loopCount'] = bF,
                            this['time'] = bg,
                            this['_mixer']['dispatchEvent']({
                                'type': 'loop',
                                'action': this,
                                'loopDelta': bH
                            });
                        }
                    } else
                        this['time'] = bg;
                    if (bG && 0x1 == (0x1 & bF))
                        return bh - bg;
                }
                return bg;
            },
            '_setEndings': function(bf, bg, bh) {
                var bi = this['_interpolantSettings'];
                bh ? (bi['endingStart'] = dL,
                bi['endingEnd'] = dL) : (bi['endingStart'] = bf ? this['zeroSlopeAtStart'] ? dL : dK : dM,
                bi['endingEnd'] = bg ? this['zeroSlopeAtEnd'] ? dL : dK : dM);
            },
            '_scheduleFading': function(bf, bg, bh) {
                var bi = this['_mixer']
                  , bF = bi['time']
                  , bG = this['_weightInterpolant'];
                null === bG && (bG = bi['_lendControlInterpolant'](),
                this['_weightInterpolant'] = bG);
                var bH = bG['parameterPositions']
                  , bI = bG['sampleValues'];
                return bH[0x0] = bF,
                bI[0x0] = bg,
                bH[0x1] = bF + bf,
                bI[0x1] = bh,
                this;
            }
        }),
        aWh['prototype'] = Object['assign'](Object['create'](bi['prototype']), {
            'constructor': aWh,
            '_bindAction': function(bf, bg) {
                var bh = bf['_localRoot'] || this['_root']
                  , bi = bf['_clip']['tracks']
                  , bF = bi['length']
                  , bG = bf['_propertyBindings']
                  , bH = bf['_interpolants']
                  , bI = bh['uuid']
                  , bJ = this['_bindingsByRootAndName']
                  , bK = bJ[bI];
                void 0x0 === bK && (bK = {},
                bJ[bI] = bK);
                for (var bL = 0x0; bL !== bF; ++bL) {
                    var bM = bi[bL]
                      , bN = bM['name']
                      , bO = bK[bN];
                    if (void 0x0 !== bO)
                        bG[bL] = bO;
                    else {
                        if (void 0x0 !== (bO = bG[bL])) {
                            null === bO['_cacheIndex'] && (++bO['referenceCount'],
                            this['_addInactiveBinding'](bO, bI, bN));
                            continue;
                        }
                        var bP = bg && bg['_propertyBindings'][bL]['binding']['parsedPath'];
                        ++(bO = new aUa(aVY['create'](bh, bN, bP),bM['ValueTypeName'],bM['getValueSize']()))['referenceCount'],
                        this['_addInactiveBinding'](bO, bI, bN),
                        bG[bL] = bO;
                    }
                    bH[bL]['resultBuffer'] = bO['buffer'];
                }
            },
            '_activateAction': function(bf) {
                if (!this['_isActiveAction'](bf)) {
                    if (null === bf['_cacheIndex']) {
                        var bg = (bf['_localRoot'] || this['_root'])['uuid']
                          , bh = bf['_clip']['uuid']
                          , bi = this['_actionsByClip'][bh];
                        this['_bindAction'](bf, bi && bi['knownActions'][0x0]),
                        this['_addInactiveAction'](bf, bh, bg);
                    }
                    for (var bF = bf['_propertyBindings'], bG = 0x0, bH = bF['length']; bG !== bH; ++bG) {
                        var bI = bF[bG];
                        0x0 == bI['useCount']++ && (this['_lendBinding'](bI),
                        bI['saveOriginalState']());
                    }
                    this['_lendAction'](bf);
                }
            },
            '_deactivateAction': function(bf) {
                if (this['_isActiveAction'](bf)) {
                    for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
                        var bF = bg[bh];
                        0x0 == --bF['useCount'] && (bF['restoreOriginalState'](),
                        this['_takeBackBinding'](bF));
                    }
                    this['_takeBackAction'](bf);
                }
            },
            '_initMemoryManager': function() {
                this['_actions'] = [],
                this['_nActiveActions'] = 0x0,
                this['_actionsByClip'] = {},
                this['_bindings'] = [],
                this['_nActiveBindings'] = 0x0,
                this['_bindingsByRootAndName'] = {},
                this['_controlInterpolants'] = [],
                this['_nActiveControlInterpolants'] = 0x0;
                var bf = this;
                this['stats'] = {
                    'actions': {
                        get 'total'() {
                            return bf['_actions']['length'];
                        },
                        get 'inUse'() {
                            return bf['_nActiveActions'];
                        }
                    },
                    'bindings': {
                        get 'total'() {
                            return bf['_bindings']['length'];
                        },
                        get 'inUse'() {
                            return bf['_nActiveBindings'];
                        }
                    },
                    'controlInterpolants': {
                        get 'total'() {
                            return bf['_controlInterpolants']['length'];
                        },
                        get 'inUse'() {
                            return bf['_nActiveControlInterpolants'];
                        }
                    }
                };
            },
            '_isActiveAction': function(bf) {
                var bg = bf['_cacheIndex'];
                return null !== bg && bg < this['_nActiveActions'];
            },
            '_addInactiveAction': function(bf, bg, bh) {
                var bi = this['_actions']
                  , bF = this['_actionsByClip']
                  , bG = bF[bg];
                if (void 0x0 === bG)
                    bG = {
                        'knownActions': [bf],
                        'actionByRoot': {}
                    },
                    bf['_byClipCacheIndex'] = 0x0,
                    bF[bg] = bG;
                else {
                    var bH = bG['knownActions'];
                    bf['_byClipCacheIndex'] = bH['length'],
                    bH['push'](bf);
                }
                bf['_cacheIndex'] = bi['length'],
                bi['push'](bf),
                bG['actionByRoot'][bh] = bf;
            },
            '_removeInactiveAction': function(bf) {
                var bg = this['_actions']
                  , bh = bg[bg['length'] - 0x1]
                  , bi = bf['_cacheIndex'];
                bh['_cacheIndex'] = bi,
                bg[bi] = bh,
                bg['pop'](),
                bf['_cacheIndex'] = null;
                var bF = bf['_clip']['uuid']
                  , bG = this['_actionsByClip']
                  , bH = bG[bF]
                  , bI = bH['knownActions']
                  , bJ = bI[bI['length'] - 0x1]
                  , bK = bf['_byClipCacheIndex'];
                bJ['_byClipCacheIndex'] = bK,
                bI[bK] = bJ,
                bI['pop'](),
                bf['_byClipCacheIndex'] = null,
                delete bH['actionByRoot'][(bf['_localRoot'] || this['_root'])['uuid']],
                0x0 === bI['length'] && delete bG[bF],
                this['_removeInactiveBindingsForAction'](bf);
            },
            '_removeInactiveBindingsForAction': function(bf) {
                for (var bg = bf['_propertyBindings'], bh = 0x0, bi = bg['length']; bh !== bi; ++bh) {
                    var bF = bg[bh];
                    0x0 == --bF['referenceCount'] && this['_removeInactiveBinding'](bF);
                }
            },
            '_lendAction': function(bf) {
                var bg = this['_actions']
                  , bh = bf['_cacheIndex']
                  , bi = this['_nActiveActions']++
                  , bF = bg[bi];
                bf['_cacheIndex'] = bi,
                bg[bi] = bf,
                bF['_cacheIndex'] = bh,
                bg[bh] = bF;
            },
            '_takeBackAction': function(bf) {
                var bg = this['_actions']
                  , bh = bf['_cacheIndex']
                  , bi = --this['_nActiveActions']
                  , bF = bg[bi];
                bf['_cacheIndex'] = bi,
                bg[bi] = bf,
                bF['_cacheIndex'] = bh,
                bg[bh] = bF;
            },
            '_addInactiveBinding': function(bf, bg, bh) {
                var bi = this['_bindingsByRootAndName']
                  , bF = bi[bg]
                  , bG = this['_bindings'];
                void 0x0 === bF && (bF = {},
                bi[bg] = bF),
                bF[bh] = bf,
                bf['_cacheIndex'] = bG['length'],
                bG['push'](bf);
            },
            '_removeInactiveBinding': function(bf) {
                var bg = this['_bindings']
                  , bh = bf['binding']
                  , bi = bh['rootNode']['uuid']
                  , bF = bh['path']
                  , bG = this['_bindingsByRootAndName']
                  , bH = bG[bi]
                  , bI = bg[bg['length'] - 0x1]
                  , bJ = bf['_cacheIndex'];
                bI['_cacheIndex'] = bJ,
                bg[bJ] = bI,
                bg['pop'](),
                delete bH[bF];
                b4Z: {
                    for (var bK in bH)
                        break b4Z;
                    delete bG[bi];
                }
            },
            '_lendBinding': function(bf) {
                var bg = this['_bindings']
                  , bh = bf['_cacheIndex']
                  , bi = this['_nActiveBindings']++
                  , bF = bg[bi];
                bf['_cacheIndex'] = bi,
                bg[bi] = bf,
                bF['_cacheIndex'] = bh,
                bg[bh] = bF;
            },
            '_takeBackBinding': function(bf) {
                var bg = this['_bindings']
                  , bh = bf['_cacheIndex']
                  , bi = --this['_nActiveBindings']
                  , bF = bg[bi];
                bf['_cacheIndex'] = bi,
                bg[bi] = bf,
                bF['_cacheIndex'] = bh,
                bg[bh] = bF;
            },
            '_lendControlInterpolant': function() {
                var bf = this['_controlInterpolants']
                  , bg = this['_nActiveControlInterpolants']++
                  , bh = bf[bg];
                return void 0x0 === bh && ((bh = new axX(new Float32Array(0x2),new Float32Array(0x2),0x1,this['_controlInterpolantsResultBuffer']))['__cacheIndex'] = bg,
                bf[bg] = bh),
                bh;
            },
            '_takeBackControlInterpolant': function(bf) {
                var bg = this['_controlInterpolants']
                  , bh = bf['__cacheIndex']
                  , bi = --this['_nActiveControlInterpolants']
                  , bF = bg[bi];
                bf['__cacheIndex'] = bi,
                bg[bi] = bf,
                bF['__cacheIndex'] = bh,
                bg[bh] = bF;
            },
            '_controlInterpolantsResultBuffer': new Float32Array(0x1),
            'clipAction': function(bf, bg) {
                var bh = bg || this['_root']
                  , bi = bh['uuid']
                  , bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf
                  , bG = null !== bF ? bF['uuid'] : bf
                  , bH = this['_actionsByClip'][bG]
                  , bI = null;
                if (void 0x0 !== bH) {
                    var bJ = bH['actionByRoot'][bi];
                    if (void 0x0 !== bJ)
                        return bJ;
                    bI = bH['knownActions'][0x0],
                    null === bF && (bF = bI['_clip']);
                }
                if (null === bF)
                    return null;
                var bK = new aW7(this,bF,bg);
                return this['_bindAction'](bK, bI),
                this['_addInactiveAction'](bK, bG, bi),
                bK;
            },
            'existingAction': function(bf, bg) {
                var bh = bg || this['_root']
                  , bi = bh['uuid']
                  , bF = 'string' == typeof bf ? ayK['findByName'](bh, bf) : bf
                  , bG = bF ? bF['uuid'] : bf
                  , bH = this['_actionsByClip'][bG];
                return void 0x0 !== bH && bH['actionByRoot'][bi] || null;
            },
            'stopAllAction': function() {
                var bf = this['_actions']
                  , bg = this['_nActiveActions']
                  , bh = this['_bindings']
                  , bi = this['_nActiveBindings'];
                this['_nActiveActions'] = 0x0,
                this['_nActiveBindings'] = 0x0;
                for (var bF = 0x0; bF !== bg; ++bF)
                    bf[bF]['reset']();
                for (bF = 0x0; bF !== bi; ++bF)
                    bh[bF]['useCount'] = 0x0;
                return this;
            },
            'update': function(bf) {
                bf *= this['timeScale'];
                for (var bg = this['_actions'], bh = this['_nActiveActions'], bi = this['time'] += bf, bF = Math['sign'](bf), bG = this['_accuIndex'] ^= 0x1, bH = 0x0; bH !== bh; ++bH) {
                    bg[bH]['_update'](bi, bf, bF, bG);
                }
                var bI = this['_bindings']
                  , bJ = this['_nActiveBindings'];
                for (bH = 0x0; bH !== bJ; ++bH)
                    bI[bH]['apply'](bG);
                return this;
            },
            'getRoot': function() {
                return this['_root'];
            },
            'uncacheClip': function(bf) {
                var bg = this['_actions']
                  , bh = bf['uuid']
                  , bi = this['_actionsByClip']
                  , bF = bi[bh];
                if (void 0x0 !== bF) {
                    for (var bG = bF['knownActions'], bH = 0x0, bI = bG['length']; bH !== bI; ++bH) {
                        var bJ = bG[bH];
                        this['_deactivateAction'](bJ);
                        var bK = bJ['_cacheIndex']
                          , bL = bg[bg['length'] - 0x1];
                        bJ['_cacheIndex'] = null,
                        bJ['_byClipCacheIndex'] = null,
                        bL['_cacheIndex'] = bK,
                        bg[bK] = bL,
                        bg['pop'](),
                        this['_removeInactiveBindingsForAction'](bJ);
                    }
                    delete bi[bh];
                }
            },
            'uncacheRoot': function(bf) {
                var bg = bf['uuid']
                  , bh = this['_actionsByClip'];
                for (var bi in bh) {
                    var bF = bh[bi]['actionByRoot'][bg];
                    void 0x0 !== bF && (this['_deactivateAction'](bF),
                    this['_removeInactiveAction'](bF));
                }
                var bG = this['_bindingsByRootAndName'][bg];
                if (void 0x0 !== bG)
                    for (var bH in bG) {
                        var bI = bG[bH];
                        bI['restoreOriginalState'](),
                        this['_removeInactiveBinding'](bI);
                    }
            },
            'uncacheAction': function(bf, bg) {
                var bh = this['existingAction'](bf, bg);
                null !== bh && (this['_deactivateAction'](bh),
                this['_removeInactiveAction'](bh));
            }
        }),
        aWj['prototype']['clone'] = function() {
            return new aWj(void 0x0 === this['value']['clone'] ? this['value'] : this['value']['clone']());
        }
        ,
        aWl['prototype'] = Object['assign'](Object['create'](aeb['prototype']), {
            'constructor': aWl,
            'isInstancedInterleavedBuffer': !0x0,
            'copy': function(bf) {
                return aeb['prototype']['copy']['call'](this, bf),
                this['meshPerAttribute'] = bf['meshPerAttribute'],
                this;
            }
        }),
        Object['assign'](aWp['prototype'], {
            'linePrecision': 0x1,
            'set': function(bf, bg) {
                this['ray']['set'](bf, bg);
            },
            'setFromCamera': function(bf, bg) {
                bg && bg['isPerspectiveCamera'] ? (this['ray']['origin']['setFromMatrixPosition'](bg['matrixWorld']),
                this['ray']['direction']['set'](bf['x'], bf['y'], 0.5)['unproject'](bg)['sub'](this['ray']['origin'])['normalize']()) : bg && bg['isOrthographicCamera'] ? (this['ray']['origin']['set'](bf['x'], bf['y'], (bg['near'] + bg['far']) / (bg['near'] - bg['far']))['unproject'](bg),
                this['ray']['direction']['set'](0x0, 0x0, -0x1)['transformDirection'](bg['matrixWorld'])) : console['error']('THREE.Raycaster:\x20Unsupported\x20camera\x20type.');
            },
            'intersectObject': function(bf, bg, bh) {
                var bi = bh || [];
                return aWx(bf, this, bi, bg),
                bi['sort'](aWu),
                bi;
            },
            'intersectObjects': function(bf, bg, bh) {
                var bi = bh || [];
                if (!0x1 === Array['isArray'](bf))
                    return console['warn']('THREE.Raycaster.intersectObjects:\x20objects\x20is\x20not\x20an\x20Array.'),
                    bi;
                for (var bF = 0x0, bG = bf['length']; bF < bG; bF++)
                    aWx(bf[bF], this, bi, bg);
                return bi['sort'](aWu),
                bi;
            }
        }),
        Object['assign'](aWF['prototype'], {
            'set': function(bf, bg, bh) {
                return this['radius'] = bf,
                this['phi'] = bg,
                this['theta'] = bh,
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['radius'] = bf['radius'],
                this['phi'] = bf['phi'],
                this['theta'] = bf['theta'],
                this;
            },
            'makeSafe': function() {
                return this['phi'] = Math['max'](0.000001, Math['min'](Math['PI'] - 0.000001, this['phi'])),
                this;
            },
            'setFromVector3': function(bf) {
                return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
            },
            'setFromCartesianCoords': function(bf, bg, bh) {
                return this['radius'] = Math['sqrt'](bf * bf + bg * bg + bh * bh),
                0x0 === this['radius'] ? (this['theta'] = 0x0,
                this['phi'] = 0x0) : (this['theta'] = Math['atan2'](bf, bh),
                this['phi'] = Math['acos'](e2['clamp'](bg / this['radius'], -0x1, 0x1))),
                this;
            }
        }),
        Object['assign'](aWJ['prototype'], {
            'set': function(bf, bg, bh) {
                return this['radius'] = bf,
                this['theta'] = bg,
                this['y'] = bh,
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['radius'] = bf['radius'],
                this['theta'] = bf['theta'],
                this['y'] = bf['y'],
                this;
            },
            'setFromVector3': function(bf) {
                return this['setFromCartesianCoords'](bf['x'], bf['y'], bf['z']);
            },
            'setFromCartesianCoords': function(bf, bg, bh) {
                return this['radius'] = Math['sqrt'](bf * bf + bh * bh),
                this['theta'] = Math['atan2'](bf, bh),
                this['y'] = bg,
                this;
            }
        }),
        Object['assign'](aWN['prototype'], {
            'set': function(bf, bg) {
                return this['min']['copy'](bf),
                this['max']['copy'](bg),
                this;
            },
            'setFromPoints': function(bf) {
                this['makeEmpty']();
                for (var bg = 0x0, bh = bf['length']; bg < bh; bg++)
                    this['expandByPoint'](bf[bg]);
                return this;
            },
            'setFromCenterAndSize': function() {
                var bf = new eC();
                return function(bg, bh) {
                    var bi = bf['copy'](bh)['multiplyScalar'](0.5);
                    return this['min']['copy'](bg)['sub'](bi),
                    this['max']['copy'](bg)['add'](bi),
                    this;
                }
                ;
            }(),
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['min']['copy'](bf['min']),
                this['max']['copy'](bf['max']),
                this;
            },
            'makeEmpty': function() {
                return this['min']['x'] = this['min']['y'] = 0x1 / 0x0,
                this['max']['x'] = this['max']['y'] = -0x1 / 0x0,
                this;
            },
            'isEmpty': function() {
                return this['max']['x'] < this['min']['x'] || this['max']['y'] < this['min']['y'];
            },
            'getCenter': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getCenter()\x20target\x20is\x20now\x20required'),
                bf = new eC()),
                this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['addVectors'](this['min'], this['max'])['multiplyScalar'](0.5);
            },
            'getSize': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Box2:\x20.getSize()\x20target\x20is\x20now\x20required'),
                bf = new eC()),
                this['isEmpty']() ? bf['set'](0x0, 0x0) : bf['subVectors'](this['max'], this['min']);
            },
            'expandByPoint': function(bf) {
                return this['min']['min'](bf),
                this['max']['max'](bf),
                this;
            },
            'expandByVector': function(bf) {
                return this['min']['sub'](bf),
                this['max']['add'](bf),
                this;
            },
            'expandByScalar': function(bf) {
                return this['min']['addScalar'](-bf),
                this['max']['addScalar'](bf),
                this;
            },
            'containsPoint': function(bf) {
                return !(bf['x'] < this['min']['x'] || bf['x'] > this['max']['x'] || bf['y'] < this['min']['y'] || bf['y'] > this['max']['y']);
            },
            'containsBox': function(bf) {
                return this['min']['x'] <= bf['min']['x'] && bf['max']['x'] <= this['max']['x'] && this['min']['y'] <= bf['min']['y'] && bf['max']['y'] <= this['max']['y'];
            },
            'getParameter': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.getParameter()\x20target\x20is\x20now\x20required'),
                bg = new eC()),
                bg['set']((bf['x'] - this['min']['x']) / (this['max']['x'] - this['min']['x']), (bf['y'] - this['min']['y']) / (this['max']['y'] - this['min']['y']));
            },
            'intersectsBox': function(bf) {
                return !(bf['max']['x'] < this['min']['x'] || bf['min']['x'] > this['max']['x'] || bf['max']['y'] < this['min']['y'] || bf['min']['y'] > this['max']['y']);
            },
            'clampPoint': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Box2:\x20.clampPoint()\x20target\x20is\x20now\x20required'),
                bg = new eC()),
                bg['copy'](bf)['clamp'](this['min'], this['max']);
            },
            'distanceToPoint': function() {
                var bf = new eC();
                return function(bg) {
                    return bf['copy'](bg)['clamp'](this['min'], this['max'])['sub'](bg)['length']();
                }
                ;
            }(),
            'intersect': function(bf) {
                return this['min']['max'](bf['min']),
                this['max']['min'](bf['max']),
                this;
            },
            'union': function(bf) {
                return this['min']['min'](bf['min']),
                this['max']['max'](bf['max']),
                this;
            },
            'translate': function(bf) {
                return this['min']['add'](bf),
                this['max']['add'](bf),
                this;
            },
            'equals': function(bf) {
                return bf['min']['equals'](this['min']) && bf['max']['equals'](this['max']);
            }
        }),
        Object['assign'](aWQ['prototype'], {
            'set': function(bf, bg) {
                return this['start']['copy'](bf),
                this['end']['copy'](bg),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            },
            'copy': function(bf) {
                return this['start']['copy'](bf['start']),
                this['end']['copy'](bf['end']),
                this;
            },
            'getCenter': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.getCenter()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                bf['addVectors'](this['start'], this['end'])['multiplyScalar'](0.5);
            },
            'delta': function(bf) {
                return void 0x0 === bf && (console['warn']('THREE.Line3:\x20.delta()\x20target\x20is\x20now\x20required'),
                bf = new eK()),
                bf['subVectors'](this['end'], this['start']);
            },
            'distanceSq': function() {
                return this['start']['distanceToSquared'](this['end']);
            },
            'distance': function() {
                return this['start']['distanceTo'](this['end']);
            },
            'at': function(bf, bg) {
                return void 0x0 === bg && (console['warn']('THREE.Line3:\x20.at()\x20target\x20is\x20now\x20required'),
                bg = new eK()),
                this['delta'](bg)['multiplyScalar'](bf)['add'](this['start']);
            },
            'closestPointToPointParameter': (aVN = new eK(),
            aVO = new eK(),
            function(bf, bg) {
                aVN['subVectors'](bf, this['start']),
                aVO['subVectors'](this['end'], this['start']);
                var bh = aVO['dot'](aVO)
                  , bi = aVO['dot'](aVN) / bh;
                return bg && (bi = e2['clamp'](bi, 0x0, 0x1)),
                bi;
            }
            ),
            'closestPointToPoint': function(bf, bg, bh) {
                var bi = this['closestPointToPointParameter'](bf, bg);
                return void 0x0 === bh && (console['warn']('THREE.Line3:\x20.closestPointToPoint()\x20target\x20is\x20now\x20required'),
                bh = new eK()),
                this['delta'](bh)['multiplyScalar'](bi)['add'](this['start']);
            },
            'applyMatrix4': function(bf) {
                return this['start']['applyMatrix4'](bf),
                this['end']['applyMatrix4'](bf),
                this;
            },
            'equals': function(bf) {
                return bf['start']['equals'](this['start']) && bf['end']['equals'](this['end']);
            }
        }),
        aWT['prototype'] = Object['create'](yT['prototype']),
        aWT['prototype']['constructor'] = aWT,
        aWT['prototype']['isImmediateRenderObject'] = !0x0,
        aWV['prototype'] = Object['create'](aeE['prototype']),
        aWV['prototype']['constructor'] = aWV,
        aWV['prototype']['update'] = function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eO();
            return function() {
                var bi = ['a', 'b', 'c'];
                this['object']['updateMatrixWorld'](!0x0),
                bh['getNormalMatrix'](this['object']['matrixWorld']);
                var bF = this['object']['matrixWorld']
                  , bG = this['geometry']['attributes']['position']
                  , bH = this['object']['geometry'];
                if (bH && bH['isGeometry'])
                    for (var bI = bH['vertices'], bJ = bH['faces'], bK = 0x0, bL = 0x0, bM = bJ['length']; bL < bM; bL++)
                        for (var bN = bJ[bL], bO = 0x0, bP = bN['vertexNormals']['length']; bO < bP; bO++) {
                            var bQ = bI[bN[bi[bO]]]
                              , bR = bN['vertexNormals'][bO];
                            bf['copy'](bQ)['applyMatrix4'](bF),
                            bg['copy'](bR)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf),
                            bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']),
                            bK += 0x1,
                            bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']),
                            bK += 0x1;
                        }
                else if (bH && bH['isBufferGeometry']) {
                    var bS = bH['attributes']['position']
                      , bT = bH['attributes']['normal'];
                    for (bK = 0x0,
                    bO = 0x0,
                    bP = bS['count']; bO < bP; bO++)
                        bf['set'](bS['getX'](bO), bS['getY'](bO), bS['getZ'](bO))['applyMatrix4'](bF),
                        bg['set'](bT['getX'](bO), bT['getY'](bO), bT['getZ'](bO)),
                        bg['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf),
                        bG['setXYZ'](bK, bf['x'], bf['y'], bf['z']),
                        bK += 0x1,
                        bG['setXYZ'](bK, bg['x'], bg['y'], bg['z']),
                        bK += 0x1;
                }
                bG['needsUpdate'] = !0x0;
            }
            ;
        }(),
        aX6['prototype'] = Object['create'](yT['prototype']),
        aX6['prototype']['constructor'] = aX6,
        aX6['prototype']['dispose'] = function() {
            this['cone']['geometry']['dispose'](),
            this['cone']['material']['dispose']();
        }
        ,
        aX6['prototype']['update'] = function() {
            var bf = new eK();
            return function() {
                this['light']['updateMatrixWorld']();
                var bg = this['light']['distance'] ? this['light']['distance'] : 0x3e8
                  , bh = bg * Math['tan'](this['light']['angle']);
                this['cone']['scale']['set'](bh, bh, bg),
                bf['setFromMatrixPosition'](this['light']['target']['matrixWorld']),
                this['cone']['lookAt'](bf),
                void 0x0 !== this['color'] ? this['cone']['material']['color']['set'](this['color']) : this['cone']['material']['color']['copy'](this['light']['color']);
            }
            ;
        }(),
        aXg['prototype'] = Object['create'](aeE['prototype']),
        aXg['prototype']['constructor'] = aXg,
        aXg['prototype']['updateMatrixWorld'] = function() {
            var bf = new eK()
              , bg = new mR()
              , bh = new mR();
            return function(bi) {
                var bF = this['bones']
                  , bG = this['geometry']
                  , bH = bG['getAttribute']('position');
                bh['getInverse'](this['root']['matrixWorld']);
                for (var bI = 0x0, bJ = 0x0; bI < bF['length']; bI++) {
                    var bK = bF[bI];
                    bK['parent'] && bK['parent']['isBone'] && (bg['multiplyMatrices'](bh, bK['matrixWorld']),
                    bf['setFromMatrixPosition'](bg),
                    bH['setXYZ'](bJ, bf['x'], bf['y'], bf['z']),
                    bg['multiplyMatrices'](bh, bK['parent']['matrixWorld']),
                    bf['setFromMatrixPosition'](bg),
                    bH['setXYZ'](bJ + 0x1, bf['x'], bf['y'], bf['z']),
                    bJ += 0x2);
                }
                bG['getAttribute']('position')['needsUpdate'] = !0x0,
                yT['prototype']['updateMatrixWorld']['call'](this, bi);
            }
            ;
        }(),
        aXu['prototype'] = Object['create'](KY['prototype']),
        aXu['prototype']['constructor'] = aXu,
        aXu['prototype']['dispose'] = function() {
            this['geometry']['dispose'](),
            this['material']['dispose']();
        }
        ,
        aXu['prototype']['update'] = function() {
            void 0x0 !== this['color'] ? this['material']['color']['set'](this['color']) : this['material']['color']['copy'](this['light']['color']);
        }
        ,
        aXA['prototype'] = Object['create'](aeA['prototype']),
        aXA['prototype']['constructor'] = aXA,
        aXA['prototype']['update'] = function() {
            if (this['scale']['set'](0.5 * this['light']['width'], 0.5 * this['light']['height'], 0x1),
            void 0x0 !== this['color'])
                this['material']['color']['set'](this['color']),
                this['children'][0x0]['material']['color']['set'](this['color']);
            else {
                this['material']['color']['copy'](this['light']['color'])['multiplyScalar'](this['light']['intensity']);
                var bf = this['material']['color']
                  , bg = Math['max'](bf['r'], bf['g'], bf['b']);
                bg > 0x1 && bf['multiplyScalar'](0x1 / bg),
                this['children'][0x0]['material']['color']['copy'](this['material']['color']);
            }
        }
        ,
        aXA['prototype']['dispose'] = function() {
            this['geometry']['dispose'](),
            this['material']['dispose'](),
            this['children'][0x0]['geometry']['dispose'](),
            this['children'][0x0]['material']['dispose']();
        }
        ,
        aXG['prototype'] = Object['create'](yT['prototype']),
        aXG['prototype']['constructor'] = aXG,
        aXG['prototype']['dispose'] = function() {
            this['children'][0x0]['geometry']['dispose'](),
            this['children'][0x0]['material']['dispose']();
        }
        ,
        aXG['prototype']['update'] = function() {
            var bf = new eK()
              , bg = new w7()
              , bh = new w7();
            return function() {
                var bi = this['children'][0x0];
                if (void 0x0 !== this['color'])
                    this['material']['color']['set'](this['color']);
                else {
                    var bF = bi['geometry']['getAttribute']('color');
                    bg['copy'](this['light']['color']),
                    bh['copy'](this['light']['groundColor']);
                    for (var bG = 0x0, bH = bF['count']; bG < bH; bG++) {
                        var bI = bG < bH / 0x2 ? bg : bh;
                        bF['setXYZ'](bG, bI['r'], bI['g'], bI['b']);
                    }
                    bF['needsUpdate'] = !0x0;
                }
                bi['lookAt'](bf['setFromMatrixPosition'](this['light']['matrixWorld'])['negate']());
            }
            ;
        }(),
        aXN['prototype'] = Object['create'](KY['prototype']),
        aXN['prototype']['constructor'] = aXN,
        aXN['prototype']['dispose'] = function() {
            this['geometry']['dispose'](),
            this['material']['dispose']();
        }
        ,
        aXN['prototype']['onBeforeRender'] = function() {
            this['position']['copy'](this['lightProbe']['position']),
            this['scale']['set'](0x1, 0x1, 0x1)['multiplyScalar'](this['size']),
            this['material']['uniforms']['intensity']['value'] = this['lightProbe']['intensity'];
        }
        ,
        aXT['prototype'] = Object['assign'](Object['create'](aeE['prototype']), {
            'constructor': aXT,
            'copy': function(bf) {
                return aeE['prototype']['copy']['call'](this, bf),
                this['geometry']['copy'](bf['geometry']),
                this['material']['copy'](bf['material']),
                this;
            },
            'clone': function() {
                return new this['constructor']()['copy'](this);
            }
        }),
        aY9['prototype'] = Object['create'](aeE['prototype']),
        aY9['prototype']['constructor'] = aY9,
        aYr['prototype'] = Object['create'](aeA['prototype']),
        aYr['prototype']['constructor'] = aYr,
        aYr['prototype']['update'] = function() {
            var bf, bg, bh = this['audio'], bi = this['range'], bF = this['divisionsInnerAngle'], bG = this['divisionsOuterAngle'], bH = e2['degToRad'](bh['panner']['coneInnerAngle']), bI = e2['degToRad'](bh['panner']['coneOuterAngle']), bJ = bH / 0x2, bK = bI / 0x2, bL = 0x0, bM = 0x0, bN = this['geometry'], bO = bN['attributes']['position'];
            function bP(bh, bF, bG, bH) {
                var bI = (bF - bh) / bG;
                for (bO['setXYZ'](bL, 0x0, 0x0, 0x0),
                bM++,
                bf = bh; bf < bF; bf += bI)
                    bg = bL + bM,
                    bO['setXYZ'](bg, Math['sin'](bf) * bi, 0x0, Math['cos'](bf) * bi),
                    bO['setXYZ'](bg + 0x1, Math['sin'](Math['min'](bf + bI, bF)) * bi, 0x0, Math['cos'](Math['min'](bf + bI, bF)) * bi),
                    bO['setXYZ'](bg + 0x2, 0x0, 0x0, 0x0),
                    bM += 0x3;
                bN['addGroup'](bL, bM, bH),
                bL += bM,
                bM = 0x0;
            }
            bN['clearGroups'](),
            bP(-bK, -bJ, bG, 0x0),
            bP(-bJ, bJ, bF, 0x1),
            bP(bJ, bK, bG, 0x0),
            bO['needsUpdate'] = !0x0,
            bH === bI && (this['material'][0x0]['visible'] = !0x1);
        }
        ,
        aYr['prototype']['dispose'] = function() {
            this['geometry']['dispose'](),
            this['material'][0x0]['dispose'](),
            this['material'][0x1]['dispose']();
        }
        ,
        aYB['prototype'] = Object['create'](aeE['prototype']),
        aYB['prototype']['constructor'] = aYB,
        aYB['prototype']['update'] = function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eO();
            return function() {
                this['object']['updateMatrixWorld'](!0x0),
                bh['getNormalMatrix'](this['object']['matrixWorld']);
                for (var bi = this['object']['matrixWorld'], bF = this['geometry']['attributes']['position'], bG = this['object']['geometry'], bH = bG['vertices'], bI = bG['faces'], bJ = 0x0, bK = 0x0, bL = bI['length']; bK < bL; bK++) {
                    var bM = bI[bK]
                      , bN = bM['normal'];
                    bf['copy'](bH[bM['a']])['add'](bH[bM['b']])['add'](bH[bM['c']])['divideScalar'](0x3)['applyMatrix4'](bi),
                    bg['copy'](bN)['applyMatrix3'](bh)['normalize']()['multiplyScalar'](this['size'])['add'](bf),
                    bF['setXYZ'](bJ, bf['x'], bf['y'], bf['z']),
                    bJ += 0x1,
                    bF['setXYZ'](bJ, bg['x'], bg['y'], bg['z']),
                    bJ += 0x1;
                }
                bF['needsUpdate'] = !0x0;
            }
            ;
        }(),
        aYM['prototype'] = Object['create'](yT['prototype']),
        aYM['prototype']['constructor'] = aYM,
        aYM['prototype']['dispose'] = function() {
            this['lightPlane']['geometry']['dispose'](),
            this['lightPlane']['material']['dispose'](),
            this['targetLine']['geometry']['dispose'](),
            this['targetLine']['material']['dispose']();
        }
        ,
        aYM['prototype']['update'] = function() {
            var bf = new eK()
              , bg = new eK()
              , bh = new eK();
            return function() {
                bf['setFromMatrixPosition'](this['light']['matrixWorld']),
                bg['setFromMatrixPosition'](this['light']['target']['matrixWorld']),
                bh['subVectors'](bg, bf),
                this['lightPlane']['lookAt'](bg),
                void 0x0 !== this['color'] ? (this['lightPlane']['material']['color']['set'](this['color']),
                this['targetLine']['material']['color']['set'](this['color'])) : (this['lightPlane']['material']['color']['copy'](this['light']['color']),
                this['targetLine']['material']['color']['copy'](this['light']['color'])),
                this['targetLine']['lookAt'](bg),
                this['targetLine']['scale']['z'] = bh['length']();
            }
            ;
        }(),
        aYS['prototype'] = Object['create'](aeE['prototype']),
        aYS['prototype']['constructor'] = aYS,
        aYS['prototype']['update'] = function() {
            var bf, bg, bh = new eK(), bi = new a67();
            function bF(bF, bG, bH, bI) {
                bh['set'](bG, bH, bI)['unproject'](bi);
                var bJ = bg[bF];
                if (void 0x0 !== bJ)
                    for (var bK = bf['getAttribute']('position'), bL = 0x0, bM = bJ['length']; bL < bM; bL++)
                        bK['setXYZ'](bJ[bL], bh['x'], bh['y'], bh['z']);
            }
            return function() {
                bf = this['geometry'],
                bg = this['pointMap'];
                bi['projectionMatrixInverse']['copy'](this['camera']['projectionMatrixInverse']),
                bF('c', 0x0, 0x0, -0x1),
                bF('t', 0x0, 0x0, 0x1),
                bF('n1', -0x1, -0x1, -0x1),
                bF('n2', 0x1, -0x1, -0x1),
                bF('n3', -0x1, 0x1, -0x1),
                bF('n4', 0x1, 0x1, -0x1),
                bF('f1', -0x1, -0x1, 0x1),
                bF('f2', 0x1, -0x1, 0x1),
                bF('f3', -0x1, 0x1, 0x1),
                bF('f4', 0x1, 0x1, 0x1),
                bF('u1', 0.7, 1.1, -0x1),
                bF('u2', -0.7, 1.1, -0x1),
                bF('u3', 0x0, 0x2, -0x1),
                bF('cf1', -0x1, 0x0, 0x1),
                bF('cf2', 0x1, 0x0, 0x1),
                bF('cf3', 0x0, -0x1, 0x1),
                bF('cf4', 0x0, 0x1, 0x1),
                bF('cn1', -0x1, 0x0, -0x1),
                bF('cn2', 0x1, 0x0, -0x1),
                bF('cn3', 0x0, -0x1, -0x1),
                bF('cn4', 0x0, 0x1, -0x1),
                bf['getAttribute']('position')['needsUpdate'] = !0x0;
            }
            ;
        }(),
        aZb['prototype'] = Object['create'](aeE['prototype']),
        aZb['prototype']['constructor'] = aZb,
        aZb['prototype']['update'] = function() {
            var bf = new mB();
            return function(bg) {
                if (void 0x0 !== bg && console['warn']('THREE.BoxHelper:\x20.update()\x20has\x20no\x20longer\x20arguments.'),
                void 0x0 !== this['object'] && bf['setFromObject'](this['object']),
                !bf['isEmpty']()) {
                    var bh = bf['min']
                      , bi = bf['max']
                      , bF = this['geometry']['attributes']['position']
                      , bG = bF['array'];
                    bG[0x0] = bi['x'],
                    bG[0x1] = bi['y'],
                    bG[0x2] = bi['z'],
                    bG[0x3] = bh['x'],
                    bG[0x4] = bi['y'],
                    bG[0x5] = bi['z'],
                    bG[0x6] = bh['x'],
                    bG[0x7] = bh['y'],
                    bG[0x8] = bi['z'],
                    bG[0x9] = bi['x'],
                    bG[0xa] = bh['y'],
                    bG[0xb] = bi['z'],
                    bG[0xc] = bi['x'],
                    bG[0xd] = bi['y'],
                    bG[0xe] = bh['z'],
                    bG[0xf] = bh['x'],
                    bG[0x10] = bi['y'],
                    bG[0x11] = bh['z'],
                    bG[0x12] = bh['x'],
                    bG[0x13] = bh['y'],
                    bG[0x14] = bh['z'],
                    bG[0x15] = bi['x'],
                    bG[0x16] = bh['y'],
                    bG[0x17] = bh['z'],
                    bF['needsUpdate'] = !0x0,
                    this['geometry']['computeBoundingSphere']();
                }
            }
            ;
        }(),
        aZb['prototype']['setFromObject'] = function(bf) {
            return this['object'] = bf,
            this['update'](),
            this;
        }
        ,
        aZb['prototype']['copy'] = function(bf) {
            return aeE['prototype']['copy']['call'](this, bf),
            this['object'] = bf['object'],
            this;
        }
        ,
        aZb['prototype']['clone'] = function() {
            return new this['constructor']()['copy'](this);
        }
        ,
        aZh['prototype'] = Object['create'](aeE['prototype']),
        aZh['prototype']['constructor'] = aZh,
        aZh['prototype']['updateMatrixWorld'] = function(bf) {
            var bg = this['box'];
            bg['isEmpty']() || (bg['getCenter'](this['position']),
            bg['getSize'](this['scale']),
            this['scale']['multiplyScalar'](0.5),
            yT['prototype']['updateMatrixWorld']['call'](this, bf));
        }
        ,
        aZn['prototype'] = Object['create'](aeA['prototype']),
        aZn['prototype']['constructor'] = aZn,
        aZn['prototype']['updateMatrixWorld'] = function(bf) {
            var bg = -this['plane']['constant'];
            Math['abs'](bg) < 1e-8 && (bg = 1e-8),
            this['scale']['set'](0.5 * this['size'], 0.5 * this['size'], bg),
            this['children'][0x0]['material']['side'] = bg < 0x0 ? bU : bT,
            this['lookAt'](this['plane']['normal']),
            yT['prototype']['updateMatrixWorld']['call'](this, bf);
        }
        ,
        aZu['prototype'] = Object['create'](yT['prototype']),
        aZu['prototype']['constructor'] = aZu,
        aZu['prototype']['setDirection'] = (aVS = new eK(),
        function(bf) {
            bf['y'] > 0.99999 ? this['quaternion']['set'](0x0, 0x0, 0x0, 0x1) : bf['y'] < -0.99999 ? this['quaternion']['set'](0x1, 0x0, 0x0, 0x0) : (aVS['set'](bf['z'], 0x0, -bf['x'])['normalize'](),
            aVR = Math['acos'](bf['y']),
            this['quaternion']['setFromAxisAngle'](aVS, aVR));
        }
        ),
        aZu['prototype']['setLength'] = function(bf, bg, bh) {
            void 0x0 === bg && (bg = 0.2 * bf),
            void 0x0 === bh && (bh = 0.2 * bg),
            this['line']['scale']['set'](0x1, Math['max'](0x0, bf - bg), 0x1),
            this['line']['updateMatrix'](),
            this['cone']['scale']['set'](bh, bg, bh),
            this['cone']['position']['y'] = bf,
            this['cone']['updateMatrix']();
        }
        ,
        aZu['prototype']['setColor'] = function(bf) {
            this['line']['material']['color']['copy'](bf),
            this['cone']['material']['color']['copy'](bf);
        }
        ,
        aZu['prototype']['copy'] = function(bf) {
            return yT['prototype']['copy']['call'](this, bf, !0x1),
            this['line']['copy'](bf['line']),
            this['cone']['copy'](bf['cone']),
            this;
        }
        ,
        aZu['prototype']['clone'] = function() {
            return new this['constructor']()['copy'](this);
        }
        ,
        aZB['prototype'] = Object['create'](aeE['prototype']),
        aZB['prototype']['constructor'] = aZB;
        var b9a = 0x0
          , b9b = 0x1;
        function b9c(bf) {
            return console['warn']('THREE.MeshFaceMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'),
            bf;
        }
        function b9e(bf) {
            return void 0x0 === bf && (bf = []),
            console['warn']('THREE.MultiMaterial\x20has\x20been\x20removed.\x20Use\x20an\x20Array\x20instead.'),
            bf['isMultiMaterial'] = !0x0,
            bf['materials'] = bf,
            bf['clone'] = function() {
                return bf['slice']();
            }
            ,
            bf;
        }
        function b9g(bf, bg) {
            return console['warn']('THREE.PointCloud\x20has\x20been\x20renamed\x20to\x20THREE.Points.'),
            new aeM(bf,bg);
        }
        function b9j(bf) {
            return console['warn']('THREE.Particle\x20has\x20been\x20renamed\x20to\x20THREE.Sprite.'),
            new ael(bf);
        }
        function b9l(bf, bg) {
            return console['warn']('THREE.ParticleSystem\x20has\x20been\x20renamed\x20to\x20THREE.Points.'),
            new aeM(bf,bg);
        }
        function b9o(bf) {
            return console['warn']('THREE.PointCloudMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'),
            new aeK(bf);
        }
        function b9q(bf) {
            return console['warn']('THREE.ParticleBasicMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'),
            new aeK(bf);
        }
        function b9s(bf) {
            return console['warn']('THREE.ParticleSystemMaterial\x20has\x20been\x20renamed\x20to\x20THREE.PointsMaterial.'),
            new aeK(bf);
        }
        function b9u(bf, bg, bh) {
            return console['warn']('THREE.Vertex\x20has\x20been\x20removed.\x20Use\x20THREE.Vector3\x20instead.'),
            new eK(bf,bg,bh);
        }
        function b9y(bf, bg) {
            return console['warn']('THREE.DynamicBufferAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.BufferAttribute().setDynamic(\x20true\x20)\x20instead.'),
            new AI(bf,bg)['setDynamic'](!0x0);
        }
        function b9B(bf, bg) {
            return console['warn']('THREE.Int8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int8BufferAttribute()\x20instead.'),
            new AM(bf,bg);
        }
        function b9E(bf, bg) {
            return console['warn']('THREE.Uint8Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8BufferAttribute()\x20instead.'),
            new AQ(bf,bg);
        }
        function b9H(bf, bg) {
            return console['warn']('THREE.Uint8ClampedAttribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint8ClampedBufferAttribute()\x20instead.'),
            new AU(bf,bg);
        }
        function b9K(bf, bg) {
            return console['warn']('THREE.Int16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int16BufferAttribute()\x20instead.'),
            new AY(bf,bg);
        }
        function b9N(bf, bg) {
            return console['warn']('THREE.Uint16Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint16BufferAttribute()\x20instead.'),
            new B2(bf,bg);
        }
        function b9Q(bf, bg) {
            return console['warn']('THREE.Int32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Int32BufferAttribute()\x20instead.'),
            new B6(bf,bg);
        }
        function b9T(bf, bg) {
            return console['warn']('THREE.Uint32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Uint32BufferAttribute()\x20instead.'),
            new Ba(bf,bg);
        }
        function b9W(bf, bg) {
            return console['warn']('THREE.Float32Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float32BufferAttribute()\x20instead.'),
            new Be(bf,bg);
        }
        function b9Z(bf, bg) {
            return console['warn']('THREE.Float64Attribute\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Float64BufferAttribute()\x20instead.'),
            new Bi(bf,bg);
        }
        function ba2(bf) {
            console['warn']('THREE.ClosedSplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'),
            aGw['call'](this, bf),
            this['type'] = 'catmullrom',
            this['closed'] = !0x0;
        }
        function ba4(bf) {
            console['warn']('THREE.SplineCurve3\x20has\x20been\x20deprecated.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'),
            aGw['call'](this, bf),
            this['type'] = 'catmullrom';
        }
        function ba6(bf) {
            console['warn']('THREE.Spline\x20has\x20been\x20removed.\x20Use\x20THREE.CatmullRomCurve3\x20instead.'),
            aGw['call'](this, bf),
            this['type'] = 'catmullrom';
        }
        function ba8(bf) {
            return console['warn']('THREE.AxisHelper\x20has\x20been\x20renamed\x20to\x20THREE.AxesHelper.'),
            new aZB(bf);
        }
        function baa(bf, bg) {
            return console['warn']('THREE.BoundingBoxHelper\x20has\x20been\x20deprecated.\x20Creating\x20a\x20THREE.BoxHelper\x20instead.'),
            new aZb(bf,bg);
        }
        function bad(bf, bg) {
            return console['warn']('THREE.EdgesHelper\x20has\x20been\x20removed.\x20Use\x20THREE.EdgesGeometry\x20instead.'),
            new aeE(new auW(bf['geometry']),new aey({
                'color': void 0x0 !== bg ? bg : 0xffffff
            }));
        }
        function bag(bf, bg) {
            return console['warn']('THREE.WireframeHelper\x20has\x20been\x20removed.\x20Use\x20THREE.WireframeGeometry\x20instead.'),
            new aeE(new afx(bf['geometry']),new aey({
                'color': void 0x0 !== bg ? bg : 0xffffff
            }));
        }
        function baj(bf) {
            return console['warn']('THREE.XHRLoader\x20has\x20been\x20renamed\x20to\x20THREE.FileLoader.'),
            new aCv(bf);
        }
        function bal(bf) {
            return console['warn']('THREE.BinaryTextureLoader\x20has\x20been\x20renamed\x20to\x20THREE.DataTextureLoader.'),
            new aCB(bf);
        }
        aCJ['create'] = function(bf, bg) {
            return console['log']('THREE.Curve.create()\x20has\x20been\x20deprecated'),
            bf['prototype'] = Object['create'](aCJ['prototype']),
            bf['prototype']['constructor'] = bf,
            bf['prototype']['getPoint'] = bg,
            bf;
        }
        ,
        Object['assign'](aJk['prototype'], {
            'createPointsGeometry': function(bf) {
                console['warn']('THREE.CurvePath:\x20.createPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
                var bg = this['getPoints'](bf);
                return this['createGeometry'](bg);
            },
            'createSpacedPointsGeometry': function(bf) {
                console['warn']('THREE.CurvePath:\x20.createSpacedPointsGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
                var bg = this['getSpacedPoints'](bf);
                return this['createGeometry'](bg);
            },
            'createGeometry': function(bf) {
                console['warn']('THREE.CurvePath:\x20.createGeometry()\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.Geometry().setFromPoints(\x20points\x20)\x20instead.');
                for (var bg = new AH(), bh = 0x0, bi = bf['length']; bh < bi; bh++) {
                    var bF = bf[bh];
                    bg['vertices']['push'](new eK(bF['x'],bF['y'],bF['z'] || 0x0));
                }
                return bg;
            }
        }),
        Object['assign'](aJl['prototype'], {
            'fromPoints': function(bf) {
                console['warn']('THREE.Path:\x20.fromPoints()\x20has\x20been\x20renamed\x20to\x20.setFromPoints().'),
                this['setFromPoints'](bf);
            }
        }),
        ba2['prototype'] = Object['create'](aGw['prototype']),
        ba4['prototype'] = Object['create'](aGw['prototype']),
        ba6['prototype'] = Object['create'](aGw['prototype']),
        Object['assign'](ba6['prototype'], {
            'initFromArray': function() {
                console['error']('THREE.Spline:\x20.initFromArray()\x20has\x20been\x20removed.');
            },
            'getControlPointsArray': function() {
                console['error']('THREE.Spline:\x20.getControlPointsArray()\x20has\x20been\x20removed.');
            },
            'reparametrizeByArcLength': function() {
                console['error']('THREE.Spline:\x20.reparametrizeByArcLength()\x20has\x20been\x20removed.');
            }
        }),
        aXT['prototype']['setColors'] = function() {
            console['error']('THREE.GridHelper:\x20setColors()\x20has\x20been\x20deprecated,\x20pass\x20them\x20in\x20the\x20constructor\x20instead.');
        }
        ,
        aXg['prototype']['update'] = function() {
            console['error']('THREE.SkeletonHelper:\x20update()\x20no\x20longer\x20needs\x20to\x20be\x20called.');
        }
        ,
        Object['assign'](aPW['prototype'], {
            'extractUrlBase': function(bf) {
                return console['warn']('THREE.Loader:\x20.extractUrlBase()\x20has\x20been\x20deprecated.\x20Use\x20THREE.LoaderUtils.extractUrlBase()\x20instead.'),
                aMX['extractUrlBase'](bf);
            }
        }),
        Object['assign'](aNJ['prototype'], {
            'setTexturePath': function(bf) {
                return console['warn']('THREE.ObjectLoader:\x20.setTexturePath()\x20has\x20been\x20renamed\x20to\x20.setResourcePath().'),
                this['setResourcePath'](bf);
            }
        }),
        Object['assign'](aWN['prototype'], {
            'center': function(bf) {
                return console['warn']('THREE.Box2:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'),
                this['getCenter'](bf);
            },
            'empty': function() {
                return console['warn']('THREE.Box2:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'),
                this['isEmpty']();
            },
            'isIntersectionBox': function(bf) {
                return console['warn']('THREE.Box2:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'),
                this['intersectsBox'](bf);
            },
            'size': function(bf) {
                return console['warn']('THREE.Box2:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'),
                this['getSize'](bf);
            }
        }),
        Object['assign'](mB['prototype'], {
            'center': function(bf) {
                return console['warn']('THREE.Box3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'),
                this['getCenter'](bf);
            },
            'empty': function() {
                return console['warn']('THREE.Box3:\x20.empty()\x20has\x20been\x20renamed\x20to\x20.isEmpty().'),
                this['isEmpty']();
            },
            'isIntersectionBox': function(bf) {
                return console['warn']('THREE.Box3:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'),
                this['intersectsBox'](bf);
            },
            'isIntersectionSphere': function(bf) {
                return console['warn']('THREE.Box3:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'),
                this['intersectsSphere'](bf);
            },
            'size': function(bf) {
                return console['warn']('THREE.Box3:\x20.size()\x20has\x20been\x20renamed\x20to\x20.getSize().'),
                this['getSize'](bf);
            }
        }),
        aWQ['prototype']['center'] = function(bf) {
            return console['warn']('THREE.Line3:\x20.center()\x20has\x20been\x20renamed\x20to\x20.getCenter().'),
            this['getCenter'](bf);
        }
        ,
        Object['assign'](e2, {
            'random16': function() {
                return console['warn']('THREE.Math:\x20.random16()\x20has\x20been\x20deprecated.\x20Use\x20Math.random()\x20instead.'),
                Math['random']();
            },
            'nearestPowerOfTwo': function(bf) {
                return console['warn']('THREE.Math:\x20.nearestPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.floorPowerOfTwo().'),
                e2['floorPowerOfTwo'](bf);
            },
            'nextPowerOfTwo': function(bf) {
                return console['warn']('THREE.Math:\x20.nextPowerOfTwo()\x20has\x20been\x20renamed\x20to\x20.ceilPowerOfTwo().'),
                e2['ceilPowerOfTwo'](bf);
            }
        }),
        Object['assign'](eO['prototype'], {
            'flattenToArrayOffset': function(bf, bg) {
                return console['warn']('THREE.Matrix3:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'),
                this['toArray'](bf, bg);
            },
            'multiplyVector3': function(bf) {
                return console['warn']('THREE.Matrix3:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix3(\x20matrix\x20)\x20instead.'),
                bf['applyMatrix3'](this);
            },
            'multiplyVector3Array': function() {
                console['error']('THREE.Matrix3:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
            },
            'applyToBuffer': function(bf) {
                return console['warn']('THREE.Matrix3:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'),
                this['applyToBufferAttribute'](bf);
            },
            'applyToVector3Array': function() {
                console['error']('THREE.Matrix3:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
            }
        }),
        Object['assign'](mR['prototype'], {
            'extractPosition': function(bf) {
                return console['warn']('THREE.Matrix4:\x20.extractPosition()\x20has\x20been\x20renamed\x20to\x20.copyPosition().'),
                this['copyPosition'](bf);
            },
            'flattenToArrayOffset': function(bf, bg) {
                return console['warn']('THREE.Matrix4:\x20.flattenToArrayOffset()\x20has\x20been\x20deprecated.\x20Use\x20.toArray()\x20instead.'),
                this['toArray'](bf, bg);
            },
            'getPosition': function() {
                var bf;
                return function() {
                    return void 0x0 === bf && (bf = new eK()),
                    console['warn']('THREE.Matrix4:\x20.getPosition()\x20has\x20been\x20removed.\x20Use\x20Vector3.setFromMatrixPosition(\x20matrix\x20)\x20instead.'),
                    bf['setFromMatrixColumn'](this, 0x3);
                }
                ;
            }(),
            'setRotationFromQuaternion': function(bf) {
                return console['warn']('THREE.Matrix4:\x20.setRotationFromQuaternion()\x20has\x20been\x20renamed\x20to\x20.makeRotationFromQuaternion().'),
                this['makeRotationFromQuaternion'](bf);
            },
            'multiplyToArray': function() {
                console['warn']('THREE.Matrix4:\x20.multiplyToArray()\x20has\x20been\x20removed.');
            },
            'multiplyVector3': function(bf) {
                return console['warn']('THREE.Matrix4:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'),
                bf['applyMatrix4'](this);
            },
            'multiplyVector4': function(bf) {
                return console['warn']('THREE.Matrix4:\x20.multiplyVector4()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'),
                bf['applyMatrix4'](this);
            },
            'multiplyVector3Array': function() {
                console['error']('THREE.Matrix4:\x20.multiplyVector3Array()\x20has\x20been\x20removed.');
            },
            'rotateAxis': function(bf) {
                console['warn']('THREE.Matrix4:\x20.rotateAxis()\x20has\x20been\x20removed.\x20Use\x20Vector3.transformDirection(\x20matrix\x20)\x20instead.'),
                bf['transformDirection'](this);
            },
            'crossVector': function(bf) {
                return console['warn']('THREE.Matrix4:\x20.crossVector()\x20has\x20been\x20removed.\x20Use\x20vector.applyMatrix4(\x20matrix\x20)\x20instead.'),
                bf['applyMatrix4'](this);
            },
            'translate': function() {
                console['error']('THREE.Matrix4:\x20.translate()\x20has\x20been\x20removed.');
            },
            'rotateX': function() {
                console['error']('THREE.Matrix4:\x20.rotateX()\x20has\x20been\x20removed.');
            },
            'rotateY': function() {
                console['error']('THREE.Matrix4:\x20.rotateY()\x20has\x20been\x20removed.');
            },
            'rotateZ': function() {
                console['error']('THREE.Matrix4:\x20.rotateZ()\x20has\x20been\x20removed.');
            },
            'rotateByAxis': function() {
                console['error']('THREE.Matrix4:\x20.rotateByAxis()\x20has\x20been\x20removed.');
            },
            'applyToBuffer': function(bf) {
                return console['warn']('THREE.Matrix4:\x20.applyToBuffer()\x20has\x20been\x20removed.\x20Use\x20matrix.applyToBufferAttribute(\x20attribute\x20)\x20instead.'),
                this['applyToBufferAttribute'](bf);
            },
            'applyToVector3Array': function() {
                console['error']('THREE.Matrix4:\x20.applyToVector3Array()\x20has\x20been\x20removed.');
            },
            'makeFrustum': function(bf, bg, bh, bi, bF, bG) {
                return console['warn']('THREE.Matrix4:\x20.makeFrustum()\x20has\x20been\x20removed.\x20Use\x20.makePerspective(\x20left,\x20right,\x20top,\x20bottom,\x20near,\x20far\x20)\x20instead.'),
                this['makePerspective'](bf, bg, bi, bh, bF, bG);
            }
        }),
        mH['prototype']['isIntersectionLine'] = function(bf) {
            return console['warn']('THREE.Plane:\x20.isIntersectionLine()\x20has\x20been\x20renamed\x20to\x20.intersectsLine().'),
            this['intersectsLine'](bf);
        }
        ,
        eF['prototype']['multiplyVector3'] = function(bf) {
            return console['warn']('THREE.Quaternion:\x20.multiplyVector3()\x20has\x20been\x20removed.\x20Use\x20is\x20now\x20vector.applyQuaternion(\x20quaternion\x20)\x20instead.'),
            bf['applyQuaternion'](this);
        }
        ,
        Object['assign'](KP['prototype'], {
            'isIntersectionBox': function(bf) {
                return console['warn']('THREE.Ray:\x20.isIntersectionBox()\x20has\x20been\x20renamed\x20to\x20.intersectsBox().'),
                this['intersectsBox'](bf);
            },
            'isIntersectionPlane': function(bf) {
                return console['warn']('THREE.Ray:\x20.isIntersectionPlane()\x20has\x20been\x20renamed\x20to\x20.intersectsPlane().'),
                this['intersectsPlane'](bf);
            },
            'isIntersectionSphere': function(bf) {
                return console['warn']('THREE.Ray:\x20.isIntersectionSphere()\x20has\x20been\x20renamed\x20to\x20.intersectsSphere().'),
                this['intersectsSphere'](bf);
            }
        }),
        Object['assign'](KS['prototype'], {
            'area': function() {
                return console['warn']('THREE.Triangle:\x20.area()\x20has\x20been\x20renamed\x20to\x20.getArea().'),
                this['getArea']();
            },
            'barycoordFromPoint': function(bf, bg) {
                return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'),
                this['getBarycoord'](bf, bg);
            },
            'midpoint': function(bf) {
                return console['warn']('THREE.Triangle:\x20.midpoint()\x20has\x20been\x20renamed\x20to\x20.getMidpoint().'),
                this['getMidpoint'](bf);
            },
            'normal': function(bf) {
                return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'),
                this['getNormal'](bf);
            },
            'plane': function(bf) {
                return console['warn']('THREE.Triangle:\x20.plane()\x20has\x20been\x20renamed\x20to\x20.getPlane().'),
                this['getPlane'](bf);
            }
        }),
        Object['assign'](KS, {
            'barycoordFromPoint': function(bf, bg, bh, bi, bF) {
                return console['warn']('THREE.Triangle:\x20.barycoordFromPoint()\x20has\x20been\x20renamed\x20to\x20.getBarycoord().'),
                KS['getBarycoord'](bf, bg, bh, bi, bF);
            },
            'normal': function(bf, bg, bh, bi) {
                return console['warn']('THREE.Triangle:\x20.normal()\x20has\x20been\x20renamed\x20to\x20.getNormal().'),
                KS['getNormal'](bf, bg, bh, bi);
            }
        }),
        Object['assign'](aJn['prototype'], {
            'extractAllPoints': function(bf) {
                return console['warn']('THREE.Shape:\x20.extractAllPoints()\x20has\x20been\x20removed.\x20Use\x20.extractPoints()\x20instead.'),
                this['extractPoints'](bf);
            },
            'extrude': function(bf) {
                return console['warn']('THREE.Shape:\x20.extrude()\x20has\x20been\x20removed.\x20Use\x20ExtrudeGeometry()\x20instead.'),
                new aqg(this,bf);
            },
            'makeGeometry': function(bf) {
                return console['warn']('THREE.Shape:\x20.makeGeometry()\x20has\x20been\x20removed.\x20Use\x20ShapeGeometry()\x20instead.'),
                new auo(this,bf);
            }
        }),
        Object['assign'](eC['prototype'], {
            'fromAttribute': function(bf, bg, bh) {
                return console['warn']('THREE.Vector2:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'),
                this['fromBufferAttribute'](bf, bg, bh);
            },
            'distanceToManhattan': function(bf) {
                return console['warn']('THREE.Vector2:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'),
                this['manhattanDistanceTo'](bf);
            },
            'lengthManhattan': function() {
                return console['warn']('THREE.Vector2:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'),
                this['manhattanLength']();
            }
        }),
        Object['assign'](eK['prototype'], {
            'setEulerFromRotationMatrix': function() {
                console['error']('THREE.Vector3:\x20.setEulerFromRotationMatrix()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromRotationMatrix()\x20instead.');
            },
            'setEulerFromQuaternion': function() {
                console['error']('THREE.Vector3:\x20.setEulerFromQuaternion()\x20has\x20been\x20removed.\x20Use\x20Euler.setFromQuaternion()\x20instead.');
            },
            'getPositionFromMatrix': function(bf) {
                return console['warn']('THREE.Vector3:\x20.getPositionFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixPosition().'),
                this['setFromMatrixPosition'](bf);
            },
            'getScaleFromMatrix': function(bf) {
                return console['warn']('THREE.Vector3:\x20.getScaleFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixScale().'),
                this['setFromMatrixScale'](bf);
            },
            'getColumnFromMatrix': function(bf, bg) {
                return console['warn']('THREE.Vector3:\x20.getColumnFromMatrix()\x20has\x20been\x20renamed\x20to\x20.setFromMatrixColumn().'),
                this['setFromMatrixColumn'](bg, bf);
            },
            'applyProjection': function(bf) {
                return console['warn']('THREE.Vector3:\x20.applyProjection()\x20has\x20been\x20removed.\x20Use\x20.applyMatrix4(\x20m\x20)\x20instead.'),
                this['applyMatrix4'](bf);
            },
            'fromAttribute': function(bf, bg, bh) {
                return console['warn']('THREE.Vector3:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'),
                this['fromBufferAttribute'](bf, bg, bh);
            },
            'distanceToManhattan': function(bf) {
                return console['warn']('THREE.Vector3:\x20.distanceToManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanDistanceTo().'),
                this['manhattanDistanceTo'](bf);
            },
            'lengthManhattan': function() {
                return console['warn']('THREE.Vector3:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'),
                this['manhattanLength']();
            }
        }),
        Object['assign'](m7['prototype'], {
            'fromAttribute': function(bf, bg, bh) {
                return console['warn']('THREE.Vector4:\x20.fromAttribute()\x20has\x20been\x20renamed\x20to\x20.fromBufferAttribute().'),
                this['fromBufferAttribute'](bf, bg, bh);
            },
            'lengthManhattan': function() {
                return console['warn']('THREE.Vector4:\x20.lengthManhattan()\x20has\x20been\x20renamed\x20to\x20.manhattanLength().'),
                this['manhattanLength']();
            }
        }),
        Object['assign'](AH['prototype'], {
            'computeTangents': function() {
                console['error']('THREE.Geometry:\x20.computeTangents()\x20has\x20been\x20removed.');
            },
            'computeLineDistances': function() {
                console['error']('THREE.Geometry:\x20.computeLineDistances()\x20has\x20been\x20removed.\x20Use\x20THREE.Line.computeLineDistances()\x20instead.');
            }
        }),
        Object['assign'](yT['prototype'], {
            'getChildByName': function(bf) {
                return console['warn']('THREE.Object3D:\x20.getChildByName()\x20has\x20been\x20renamed\x20to\x20.getObjectByName().'),
                this['getObjectByName'](bf);
            },
            'renderDepth': function() {
                console['warn']('THREE.Object3D:\x20.renderDepth\x20has\x20been\x20removed.\x20Use\x20.renderOrder,\x20instead.');
            },
            'translate': function(bf, bg) {
                return console['warn']('THREE.Object3D:\x20.translate()\x20has\x20been\x20removed.\x20Use\x20.translateOnAxis(\x20axis,\x20distance\x20)\x20instead.'),
                this['translateOnAxis'](bg, bf);
            },
            'getWorldRotation': function() {
                console['error']('THREE.Object3D:\x20.getWorldRotation()\x20has\x20been\x20removed.\x20Use\x20THREE.Object3D.getWorldQuaternion(\x20target\x20)\x20instead.');
            }
        }),
        Object['defineProperties'](yT['prototype'], {
            'eulerOrder': {
                'get': function() {
                    return console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'),
                    this['rotation']['order'];
                },
                'set': function(bf) {
                    console['warn']('THREE.Object3D:\x20.eulerOrder\x20is\x20now\x20.rotation.order.'),
                    this['rotation']['order'] = bf;
                }
            },
            'useQuaternion': {
                'get': function() {
                    console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
                },
                'set': function() {
                    console['warn']('THREE.Object3D:\x20.useQuaternion\x20has\x20been\x20removed.\x20The\x20library\x20now\x20uses\x20quaternions\x20by\x20default.');
                }
            }
        }),
        Object['defineProperties'](aeo['prototype'], {
            'objects': {
                'get': function() {
                    return console['warn']('THREE.LOD:\x20.objects\x20has\x20been\x20renamed\x20to\x20.levels.'),
                    this['levels'];
                }
            }
        }),
        Object['defineProperty'](aes['prototype'], 'useVertexTexture', {
            'get': function() {
                console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
            },
            'set': function() {
                console['warn']('THREE.Skeleton:\x20useVertexTexture\x20has\x20been\x20removed.');
            }
        }),
        aep['prototype']['initBones'] = function() {
            console['error']('THREE.SkinnedMesh:\x20initBones()\x20has\x20been\x20removed.');
        }
        ,
        Object['defineProperty'](aCJ['prototype'], '__arcLengthDivisions', {
            'get': function() {
                return console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'),
                this['arcLengthDivisions'];
            },
            'set': function(bf) {
                console['warn']('THREE.Curve:\x20.__arcLengthDivisions\x20is\x20now\x20.arcLengthDivisions.'),
                this['arcLengthDivisions'] = bf;
            }
        }),
        a68['prototype']['setLens'] = function(bf, bg) {
            console['warn']('THREE.PerspectiveCamera.setLens\x20is\x20deprecated.\x20Use\x20.setFocalLength\x20and\x20.filmGauge\x20for\x20a\x20photographic\x20setup.'),
            void 0x0 !== bg && (this['filmGauge'] = bg),
            this['setFocalLength'](bf);
        }
        ,
        Object['defineProperties'](aJp['prototype'], {
            'onlyShadow': {
                'set': function() {
                    console['warn']('THREE.Light:\x20.onlyShadow\x20has\x20been\x20removed.');
                }
            },
            'shadowCameraFov': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraFov\x20is\x20now\x20.shadow.camera.fov.'),
                    this['shadow']['camera']['fov'] = bf;
                }
            },
            'shadowCameraLeft': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraLeft\x20is\x20now\x20.shadow.camera.left.'),
                    this['shadow']['camera']['left'] = bf;
                }
            },
            'shadowCameraRight': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraRight\x20is\x20now\x20.shadow.camera.right.'),
                    this['shadow']['camera']['right'] = bf;
                }
            },
            'shadowCameraTop': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraTop\x20is\x20now\x20.shadow.camera.top.'),
                    this['shadow']['camera']['top'] = bf;
                }
            },
            'shadowCameraBottom': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraBottom\x20is\x20now\x20.shadow.camera.bottom.'),
                    this['shadow']['camera']['bottom'] = bf;
                }
            },
            'shadowCameraNear': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraNear\x20is\x20now\x20.shadow.camera.near.'),
                    this['shadow']['camera']['near'] = bf;
                }
            },
            'shadowCameraFar': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowCameraFar\x20is\x20now\x20.shadow.camera.far.'),
                    this['shadow']['camera']['far'] = bf;
                }
            },
            'shadowCameraVisible': {
                'set': function() {
                    console['warn']('THREE.Light:\x20.shadowCameraVisible\x20has\x20been\x20removed.\x20Use\x20new\x20THREE.CameraHelper(\x20light.shadow.camera\x20)\x20instead.');
                }
            },
            'shadowBias': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowBias\x20is\x20now\x20.shadow.bias.'),
                    this['shadow']['bias'] = bf;
                }
            },
            'shadowDarkness': {
                'set': function() {
                    console['warn']('THREE.Light:\x20.shadowDarkness\x20has\x20been\x20removed.');
                }
            },
            'shadowMapWidth': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowMapWidth\x20is\x20now\x20.shadow.mapSize.width.'),
                    this['shadow']['mapSize']['width'] = bf;
                }
            },
            'shadowMapHeight': {
                'set': function(bf) {
                    console['warn']('THREE.Light:\x20.shadowMapHeight\x20is\x20now\x20.shadow.mapSize.height.'),
                    this['shadow']['mapSize']['height'] = bf;
                }
            }
        }),
        Object['defineProperties'](AI['prototype'], {
            'length': {
                'get': function() {
                    return console['warn']('THREE.BufferAttribute:\x20.length\x20has\x20been\x20deprecated.\x20Use\x20.count\x20instead.'),
                    this['array']['length'];
                }
            },
            'copyIndicesArray': function() {
                console['error']('THREE.BufferAttribute:\x20.copyIndicesArray()\x20has\x20been\x20removed.');
            }
        }),
        Object['assign'](Gf['prototype'], {
            'addIndex': function(bf) {
                console['warn']('THREE.BufferGeometry:\x20.addIndex()\x20has\x20been\x20renamed\x20to\x20.setIndex().'),
                this['setIndex'](bf);
            },
            'addDrawCall': function(bf, bg, bh) {
                void 0x0 !== bh && console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20no\x20longer\x20supports\x20indexOffset.'),
                console['warn']('THREE.BufferGeometry:\x20.addDrawCall()\x20is\x20now\x20.addGroup().'),
                this['addGroup'](bf, bg);
            },
            'clearDrawCalls': function() {
                console['warn']('THREE.BufferGeometry:\x20.clearDrawCalls()\x20is\x20now\x20.clearGroups().'),
                this['clearGroups']();
            },
            'computeTangents': function() {
                console['warn']('THREE.BufferGeometry:\x20.computeTangents()\x20has\x20been\x20removed.');
            },
            'computeOffsets': function() {
                console['warn']('THREE.BufferGeometry:\x20.computeOffsets()\x20has\x20been\x20removed.');
            }
        }),
        Object['defineProperties'](Gf['prototype'], {
            'drawcalls': {
                'get': function() {
                    return console['error']('THREE.BufferGeometry:\x20.drawcalls\x20has\x20been\x20renamed\x20to\x20.groups.'),
                    this['groups'];
                }
            },
            'offsets': {
                'get': function() {
                    return console['warn']('THREE.BufferGeometry:\x20.offsets\x20has\x20been\x20renamed\x20to\x20.groups.'),
                    this['groups'];
                }
            }
        }),
        Object['assign'](aqj['prototype'], {
            'getArrays': function() {
                console['error']('THREE.ExtrudeBufferGeometry:\x20.getArrays()\x20has\x20been\x20removed.');
            },
            'addShapeList': function() {
                console['error']('THREE.ExtrudeBufferGeometry:\x20.addShapeList()\x20has\x20been\x20removed.');
            },
            'addShape': function() {
                console['error']('THREE.ExtrudeBufferGeometry:\x20.addShape()\x20has\x20been\x20removed.');
            }
        }),
        Object['defineProperties'](aWj['prototype'], {
            'dynamic': {
                'set': function() {
                    console['warn']('THREE.Uniform:\x20.dynamic\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.');
                }
            },
            'onUpdate': {
                'value': function() {
                    return console['warn']('THREE.Uniform:\x20.onUpdate()\x20has\x20been\x20removed.\x20Use\x20object.onBeforeRender()\x20instead.'),
                    this;
                }
            }
        }),
        Object['defineProperties'](Kf['prototype'], {
            'wrapAround': {
                'get': function() {
                    console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
                },
                'set': function() {
                    console['warn']('THREE.Material:\x20.wrapAround\x20has\x20been\x20removed.');
                }
            },
            'overdraw': {
                'get': function() {
                    console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
                },
                'set': function() {
                    console['warn']('THREE.Material:\x20.overdraw\x20has\x20been\x20removed.');
                }
            },
            'wrapRGB': {
                'get': function() {
                    return console['warn']('THREE.Material:\x20.wrapRGB\x20has\x20been\x20removed.'),
                    new w7();
                }
            },
            'shading': {
                'get': function() {
                    console['error']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.');
                },
                'set': function(bf) {
                    console['warn']('THREE.' + this['type'] + ':\x20.shading\x20has\x20been\x20removed.\x20Use\x20the\x20boolean\x20.flatShading\x20instead.'),
                    this['flatShading'] = bf === bW;
                }
            }
        }),
        Object['defineProperties'](awX['prototype'], {
            'metal': {
                'get': function() {
                    return console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead.'),
                    !0x1;
                },
                'set': function() {
                    console['warn']('THREE.MeshPhongMaterial:\x20.metal\x20has\x20been\x20removed.\x20Use\x20THREE.MeshStandardMaterial\x20instead');
                }
            }
        }),
        Object['defineProperties'](KN['prototype'], {
            'derivatives': {
                'get': function() {
                    return console['warn']('THREE.ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'),
                    this['extensions']['derivatives'];
                },
                'set': function(bf) {
                    console['warn']('THREE.\x20ShaderMaterial:\x20.derivatives\x20has\x20been\x20moved\x20to\x20.extensions.derivatives.'),
                    this['extensions']['derivatives'] = bf;
                }
            }
        }),
        Object['assign'](a8U['prototype'], {
            'clearTarget': function(bf, bg, bh, bi) {
                console['warn']('THREE.WebGLRenderer:\x20.clearTarget()\x20has\x20been\x20deprecated.\x20Use\x20.setRenderTarget()\x20and\x20.clear()\x20instead.'),
                this['setRenderTarget'](bf),
                this['clear'](bg, bh, bi);
            },
            'animate': function(bf) {
                console['warn']('THREE.WebGLRenderer:\x20.animate()\x20is\x20now\x20.setAnimationLoop().'),
                this['setAnimationLoop'](bf);
            },
            'getCurrentRenderTarget': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.getCurrentRenderTarget()\x20is\x20now\x20.getRenderTarget().'),
                this['getRenderTarget']();
            },
            'getMaxAnisotropy': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.getMaxAnisotropy()\x20is\x20now\x20.capabilities.getMaxAnisotropy().'),
                this['capabilities']['getMaxAnisotropy']();
            },
            'getPrecision': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.getPrecision()\x20is\x20now\x20.capabilities.precision.'),
                this['capabilities']['precision'];
            },
            'resetGLState': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.resetGLState()\x20is\x20now\x20.state.reset().'),
                this['state']['reset']();
            },
            'supportsFloatTextures': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_float\x27\x20).'),
                this['extensions']['get']('OES_texture_float');
            },
            'supportsHalfFloatTextures': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsHalfFloatTextures()\x20is\x20now\x20.extensions.get(\x20\x27OES_texture_half_float\x27\x20).'),
                this['extensions']['get']('OES_texture_half_float');
            },
            'supportsStandardDerivatives': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsStandardDerivatives()\x20is\x20now\x20.extensions.get(\x20\x27OES_standard_derivatives\x27\x20).'),
                this['extensions']['get']('OES_standard_derivatives');
            },
            'supportsCompressedTextureS3TC': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTextureS3TC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_s3tc\x27\x20).'),
                this['extensions']['get']('WEBGL_compressed_texture_s3tc');
            },
            'supportsCompressedTexturePVRTC': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsCompressedTexturePVRTC()\x20is\x20now\x20.extensions.get(\x20\x27WEBGL_compressed_texture_pvrtc\x27\x20).'),
                this['extensions']['get']('WEBGL_compressed_texture_pvrtc');
            },
            'supportsBlendMinMax': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsBlendMinMax()\x20is\x20now\x20.extensions.get(\x20\x27EXT_blend_minmax\x27\x20).'),
                this['extensions']['get']('EXT_blend_minmax');
            },
            'supportsVertexTextures': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsVertexTextures()\x20is\x20now\x20.capabilities.vertexTextures.'),
                this['capabilities']['vertexTextures'];
            },
            'supportsInstancedArrays': function() {
                return console['warn']('THREE.WebGLRenderer:\x20.supportsInstancedArrays()\x20is\x20now\x20.extensions.get(\x20\x27ANGLE_instanced_arrays\x27\x20).'),
                this['extensions']['get']('ANGLE_instanced_arrays');
            },
            'enableScissorTest': function(bf) {
                console['warn']('THREE.WebGLRenderer:\x20.enableScissorTest()\x20is\x20now\x20.setScissorTest().'),
                this['setScissorTest'](bf);
            },
            'initMaterial': function() {
                console['warn']('THREE.WebGLRenderer:\x20.initMaterial()\x20has\x20been\x20removed.');
            },
            'addPrePlugin': function() {
                console['warn']('THREE.WebGLRenderer:\x20.addPrePlugin()\x20has\x20been\x20removed.');
            },
            'addPostPlugin': function() {
                console['warn']('THREE.WebGLRenderer:\x20.addPostPlugin()\x20has\x20been\x20removed.');
            },
            'updateShadowMap': function() {
                console['warn']('THREE.WebGLRenderer:\x20.updateShadowMap()\x20has\x20been\x20removed.');
            },
            'setFaceCulling': function() {
                console['warn']('THREE.WebGLRenderer:\x20.setFaceCulling()\x20has\x20been\x20removed.');
            },
            'allocTextureUnit': function() {
                console['warn']('THREE.WebGLRenderer:\x20.allocTextureUnit()\x20has\x20been\x20removed.');
            },
            'setTexture': function() {
                console['warn']('THREE.WebGLRenderer:\x20.setTexture()\x20has\x20been\x20removed.');
            },
            'setTexture2D': function() {
                console['warn']('THREE.WebGLRenderer:\x20.setTexture2D()\x20has\x20been\x20removed.');
            },
            'setTextureCube': function() {
                console['warn']('THREE.WebGLRenderer:\x20.setTextureCube()\x20has\x20been\x20removed.');
            }
        }),
        Object['defineProperties'](a8U['prototype'], {
            'shadowMapEnabled': {
                'get': function() {
                    return this['shadowMap']['enabled'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMapEnabled\x20is\x20now\x20.shadowMap.enabled.'),
                    this['shadowMap']['enabled'] = bf;
                }
            },
            'shadowMapType': {
                'get': function() {
                    return this['shadowMap']['type'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMapType\x20is\x20now\x20.shadowMap.type.'),
                    this['shadowMap']['type'] = bf;
                }
            },
            'shadowMapCullFace': {
                'get': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                },
                'set': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMapCullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                }
            }
        }),
        Object['defineProperties'](ZZ['prototype'], {
            'cullFace': {
                'get': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                },
                'set': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMap.cullFace\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                }
            },
            'renderReverseSided': {
                'get': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                },
                'set': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderReverseSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                }
            },
            'renderSingleSided': {
                'get': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                },
                'set': function() {
                    console['warn']('THREE.WebGLRenderer:\x20.shadowMap.renderSingleSided\x20has\x20been\x20removed.\x20Set\x20Material.shadowSide\x20instead.');
                }
            }
        }),
        Object['defineProperties'](mk['prototype'], {
            'activeCubeFace': {
                'set': function() {
                    console['warn']('THREE.WebGLRenderTargetCube:\x20.activeCubeFace\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20second\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
                }
            },
            'activeMipMapLevel': {
                'set': function() {
                    console['warn']('THREE.WebGLRenderTargetCube:\x20.activeMipMapLevel\x20has\x20been\x20removed.\x20It\x20is\x20now\x20the\x20third\x20parameter\x20of\x20WebGLRenderer.setRenderTarget().');
                }
            }
        }),
        Object['defineProperties'](mc['prototype'], {
            'wrapS': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'),
                    this['texture']['wrapS'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.wrapS\x20is\x20now\x20.texture.wrapS.'),
                    this['texture']['wrapS'] = bf;
                }
            },
            'wrapT': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'),
                    this['texture']['wrapT'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.wrapT\x20is\x20now\x20.texture.wrapT.'),
                    this['texture']['wrapT'] = bf;
                }
            },
            'magFilter': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'),
                    this['texture']['magFilter'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.magFilter\x20is\x20now\x20.texture.magFilter.'),
                    this['texture']['magFilter'] = bf;
                }
            },
            'minFilter': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'),
                    this['texture']['minFilter'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.minFilter\x20is\x20now\x20.texture.minFilter.'),
                    this['texture']['minFilter'] = bf;
                }
            },
            'anisotropy': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'),
                    this['texture']['anisotropy'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.anisotropy\x20is\x20now\x20.texture.anisotropy.'),
                    this['texture']['anisotropy'] = bf;
                }
            },
            'offset': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'),
                    this['texture']['offset'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.offset\x20is\x20now\x20.texture.offset.'),
                    this['texture']['offset'] = bf;
                }
            },
            'repeat': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'),
                    this['texture']['repeat'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.repeat\x20is\x20now\x20.texture.repeat.'),
                    this['texture']['repeat'] = bf;
                }
            },
            'format': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'),
                    this['texture']['format'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.format\x20is\x20now\x20.texture.format.'),
                    this['texture']['format'] = bf;
                }
            },
            'type': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'),
                    this['texture']['type'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.type\x20is\x20now\x20.texture.type.'),
                    this['texture']['type'] = bf;
                }
            },
            'generateMipmaps': {
                'get': function() {
                    return console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'),
                    this['texture']['generateMipmaps'];
                },
                'set': function(bf) {
                    console['warn']('THREE.WebGLRenderTarget:\x20.generateMipmaps\x20is\x20now\x20.texture.generateMipmaps.'),
                    this['texture']['generateMipmaps'] = bf;
                }
            }
        }),
        Object['defineProperties'](a7d['prototype'], {
            'standing': {
                'set': function() {
                    console['warn']('THREE.WebVRManager:\x20.standing\x20has\x20been\x20removed.');
                }
            },
            'userHeight': {
                'set': function() {
                    console['warn']('THREE.WebVRManager:\x20.userHeight\x20has\x20been\x20removed.');
                }
            }
        }),
        aU3['prototype']['load'] = function(bf) {
            console['warn']('THREE.Audio:\x20.load\x20has\x20been\x20deprecated.\x20Use\x20THREE.AudioLoader\x20instead.');
            var bg = this;
            return new aSa()['load'](bf, function(bf) {
                bg['setBuffer'](bf);
            }),
            this;
        }
        ,
        aU7['prototype']['getData'] = function() {
            return console['warn']('THREE.AudioAnalyser:\x20.getData()\x20is\x20now\x20.getFrequencyData().'),
            this['getFrequencyData']();
        }
        ,
        aTD['prototype']['updateCubeMap'] = function(bf, bg) {
            return console['warn']('THREE.CubeCamera:\x20.updateCubeMap()\x20is\x20now\x20.update().'),
            this['update'](bf, bg);
        }
        ;
        var bcr = {
            'merge': function(bf, bg, bh) {
                var bi;
                console['warn']('THREE.GeometryUtils:\x20.merge()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.merge(\x20geometry2,\x20matrix,\x20materialIndexOffset\x20)\x20instead.'),
                bg['isMesh'] && (bg['matrixAutoUpdate'] && bg['updateMatrix'](),
                bi = bg['matrix'],
                bg = bg['geometry']),
                bf['merge'](bg, bi, bh);
            },
            'center': function(bf) {
                return console['warn']('THREE.GeometryUtils:\x20.center()\x20has\x20been\x20moved\x20to\x20Geometry.\x20Use\x20geometry.center()\x20instead.'),
                bf['center']();
            }
        };
        function bcx() {
            console['error']('THREE.CanvasRenderer\x20has\x20been\x20removed');
        }
        function bcy() {
            console['error']('THREE.JSONLoader\x20has\x20been\x20removed.');
        }
        lR['crossOrigin'] = void 0x0,
        lR['loadTexture'] = function(bf, bg, bh, bi) {
            console['warn']('THREE.ImageUtils.loadTexture\x20has\x20been\x20deprecated.\x20Use\x20THREE.TextureLoader()\x20instead.');
            var bF = new aCH();
            bF['setCrossOrigin'](this['crossOrigin']);
            var bG = bF['load'](bf, bh, void 0x0, bi);
            return bg && (bG['mapping'] = bg),
            bG;
        }
        ,
        lR['loadTextureCube'] = function(bf, bg, bh, bi) {
            console['warn']('THREE.ImageUtils.loadTextureCube\x20has\x20been\x20deprecated.\x20Use\x20THREE.CubeTextureLoader()\x20instead.');
            var bF = new aCF();
            bF['setCrossOrigin'](this['crossOrigin']);
            var bG = bF['load'](bf, bh, void 0x0, bi);
            return bg && (bG['mapping'] = bg),
            bG;
        }
        ,
        lR['loadCompressedTexture'] = function() {
            console['error']('THREE.ImageUtils.loadCompressedTexture\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
        }
        ,
        lR['loadCompressedTextureCube'] = function() {
            console['error']('THREE.ImageUtils.loadCompressedTextureCube\x20has\x20been\x20removed.\x20Use\x20THREE.DDSLoader\x20instead.');
        }
        ;
        var bcL = {
            'createMultiMaterialObject': function() {
                console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
            },
            'detach': function() {
                console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
            },
            'attach': function() {
                console['error']('THREE.SceneUtils\x20has\x20been\x20moved\x20to\x20/examples/js/utils/SceneUtils.js');
            }
        };
        function bcM() {
            console['error']('THREE.LensFlare\x20has\x20been\x20moved\x20to\x20/examples/js/objects/Lensflare.js');
        }
    }
    , function(bcN, bcO, bcP) {
        'use strict';
        function bcQ(bcN) {
            switch (Object['prototype']['toString']['call'](bcN)) {
            case '[object\x20Error]':
            case '[object\x20Exception]':
            case '[object\x20DOMException]':
                return !0x0;
            default:
                return bcN instanceof Error;
            }
        }
        function bcS(bcN) {
            return '[object\x20ErrorEvent]' === Object['prototype']['toString']['call'](bcN);
        }
        function bcU(bcN) {
            return '[object\x20DOMError]' === Object['prototype']['toString']['call'](bcN);
        }
        function bcW(bcN) {
            return '[object\x20DOMException]' === Object['prototype']['toString']['call'](bcN);
        }
        function bcY(bcN) {
            return '[object\x20String]' === Object['prototype']['toString']['call'](bcN);
        }
        function bd0(bcN) {
            return null === bcN || 'object' != typeof bcN && 'function' != typeof bcN;
        }
        function bd2(bcN) {
            return '[object\x20Object]' === Object['prototype']['toString']['call'](bcN);
        }
        function bd4(bcN) {
            return '[object\x20RegExp]' === Object['prototype']['toString']['call'](bcN);
        }
        function bd6(bcN) {
            return !(!bcN || !bcN['then'] || 'function' != typeof bcN['then']);
        }
        function bd8(bcN) {
            return bd2(bcN) && 'nativeEvent'in bcN && 'preventDefault'in bcN && 'stopPropagation'in bcN;
        }
        bcP['d'](bcO, 'c', function() {
            return bcQ;
        }),
        bcP['d'](bcO, 'd', function() {
            return bcS;
        }),
        bcP['d'](bcO, 'a', function() {
            return bcU;
        }),
        bcP['d'](bcO, 'b', function() {
            return bcW;
        }),
        bcP['d'](bcO, 'h', function() {
            return bcY;
        }),
        bcP['d'](bcO, 'f', function() {
            return bd0;
        }),
        bcP['d'](bcO, 'e', function() {
            return bd2;
        }),
        bcP['d'](bcO, 'g', function() {
            return bd4;
        }),
        bcP['d'](bcO, 'j', function() {
            return bd6;
        }),
        bcP['d'](bcO, 'i', function() {
            return bd8;
        });
    }
    , function(bda, bdb, bdc) {
        'use strict';
        (function(bda) {
            bdc['d'](bdb, 'a', function() {
                return bdg;
            }),
            bdc['d'](bdb, 'd', function() {
                return bdn;
            }),
            bdc['d'](bdb, 'c', function() {
                return bdt;
            }),
            bdc['d'](bdb, 'b', function() {
                return bdQ;
            });
            var bde = bdc(0x5)
              , bdf = bdc(0x26);
            function bdg(bda, bdb, bdc) {
                if (bdb in bda) {
                    var bde = bda[bdb]
                      , bdf = bdc(bde);
                    if ('function' == typeof bdf)
                        try {
                            bdf['prototype'] = bdf['prototype'] || {},
                            Object['defineProperties'](bdf, {
                                '__sentry__': {
                                    'enumerable': !0x1,
                                    'value': !0x0
                                },
                                '__sentry_original__': {
                                    'enumerable': !0x1,
                                    'value': bde
                                },
                                '__sentry_wrapped__': {
                                    'enumerable': !0x1,
                                    'value': bdf
                                }
                            });
                        } catch (bdm) {}
                    bda[bdb] = bdf;
                }
            }
            function bdn(bda) {
                return Object['keys'](bda)['map'](function(bdb) {
                    return encodeURIComponent(bdb) + '=' + encodeURIComponent(bda[bdb]);
                })['join']('&');
            }
            function bdq(bda) {
                return function(bda) {
                    return ~-encodeURI(bda)['split'](/%..|./)['length'];
                }(JSON['stringify'](bda));
            }
            function bdt(bda, bdb, bdc) {
                void 0x0 === bdb && (bdb = 0x3),
                void 0x0 === bdc && (bdc = 0x19000);
                var bde = bdQ(bda, bdb);
                return bdq(bde) > bdc ? bdt(bda, bdb - 0x1, bdc) : bde;
            }
            function bdy(bdb, bdc) {
                return 'domain' === bdc && 'object' == typeof bdb && bdb['_events'] ? '[Domain]' : 'domainEmitter' === bdc ? '[DomainEmitter]' : void 0x0 !== bda && bdb === bda ? '[Global]' : 'undefined' != typeof window && bdb === window ? '[Window]' : 'undefined' != typeof document && bdb === document ? '[Document]' : 'undefined' != typeof Event && bdb instanceof Event ? Object['getPrototypeOf'](bdb) ? bdb['constructor']['name'] : 'Event' : Object(bde['i'])(bdb) ? '[SyntheticEvent]' : Number['isNaN'](bdb) ? '[NaN]' : void 0x0 === bdb ? '[undefined]' : 'function' == typeof bdb ? '[Function:\x20' + (bdb['name'] || '<unknown-function-name>') + ']' : bdb;
            }
            function bdB(bda, bdb, bdc, bdg) {
                if (void 0x0 === bdc && (bdc = 0x1 / 0x0),
                void 0x0 === bdg && (bdg = new bdf['a']()),
                0x0 === bdc)
                    return function(bda) {
                        var bdb = Object['prototype']['toString']['call'](bda);
                        if ('string' == typeof bda)
                            return bda;
                        if ('[object\x20Object]' === bdb)
                            return '[Object]';
                        if ('[object\x20Array]' === bdb)
                            return '[Array]';
                        var bdc = bdy(bda);
                        return Object(bde['f'])(bdc) ? bdc : bdb;
                    }(bdb);
                if (null != bdb && 'function' == typeof bdb['toJSON'])
                    return bdb['toJSON']();
                var bdn = bdy(bdb, bda);
                if (Object(bde['f'])(bdn))
                    return bdn;
                var bdq = Object(bde['c'])(bdb) ? function(bda) {
                    var bdb = {
                        'message': bda['message'],
                        'name': bda['name'],
                        'stack': bda['stack']
                    };
                    for (var bdc in bda)
                        Object['prototype']['hasOwnProperty']['call'](bda, bdc) && (bdb[bdc] = bda[bdc]);
                    return bdb;
                }(bdb) : bdb
                  , bdt = Array['isArray'](bdb) ? [] : {};
                if (bdg['memoize'](bdb))
                    return '[Circular\x20~]';
                for (var bdP in bdq)
                    Object['prototype']['hasOwnProperty']['call'](bdq, bdP) && (bdt[bdP] = bdB(bdP, bdq[bdP], bdc - 0x1, bdg));
                return bdg['unmemoize'](bdb),
                bdt;
            }
            function bdQ(bda, bdb) {
                try {
                    return JSON['parse'](JSON['stringify'](bda, function(bda, bdc) {
                        return bdB(bda, bdc, bdb);
                    }));
                } catch (bdV) {
                    return '**non-serializable**';
                }
            }
        }
        ['call'](this, bdc(0x15)));
    }
    , function(bdW, bdX, bdY) {
        (function(bdX) {
            bdW['exports']['isNode'] = void 0x0 !== bdX && void 0x0 !== bdX['release'] && -0x1 !== bdX['release']['name']['search'](/node|io.js/),
            bdW['exports']['isProd'] = bdW['exports']['isNode'] ? !!bdX['env']['IS_PROD'] : '127.0.0.1' !== location['hostname'] && 'localhost' !== location['hostname'] && !location['hostname']['startsWith']('192.168.'),
            bdW['exports']['enableHttps'] = bdW['exports']['isProd'],
            bdW['exports']['serverTickRate'] = 0x3e8 / 0x1e,
            bdW['exports']['serverSendRate'] = 0x64,
            bdW['exports']['clientSendRate'] = 0x3e8 / 0x1e,
            bdW['exports']['dltMx'] = Math['round'](0x3e8 / 0x1e),
            bdW['exports']['streamUpdate'] = 0x2710,
            bdW['exports']['maxPlayers'] = 0x8,
            bdW['exports']['serverSpread'] = 0x3,
            bdW['exports']['minServerSpace'] = 0x3,
            bdW['exports']['gamesPerServer'] = 0x3,
            bdW['exports']['serverBrowserRate'] = 0x2710,
            bdW['exports']['maxPlayersTotal'] = bdW['exports']['maxPlayers'] * bdW['exports']['gamesPerServer'] + 0x28,
            bdW['exports']['kickTimer'] = 0x15f90,
            bdW['exports']['isNode'] ? (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050',
            bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker_prod' == bdX['env']['VULTR_SCHEME'] || 'krunker_social' == bdX['env']['VULTR_SCHEME'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060') : (bdW['exports']['matchmakerURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://matchmaker.krunker.io' : 'https://matchmaker_beta.krunker.io' : 'http://127.0.0.1:5050',
            bdW['exports']['apiURL'] = bdW['exports']['isProd'] ? 'krunker.io' == location['hostname'] ? 'https://api.krunker.io' : 'https://api_beta.krunker.io' : 'http://127.0.0.1:5060'),
            bdW['exports']['needsRestart'] = !0x1,
            bdW['exports']['useLooseClient'] = !0x1,
            bdW['exports']['rewardTime'] = 0x1499700,
            bdW['exports']['rewardMinLvl'] = 0x8,
            bdW['exports']['compRegions'] = [{
                'name': 'EU',
                'icon': 'eu',
                'data': [{
                    'name': 'KRUNKEUR',
                    'prize': 0x578,
                    'roster': ['VoKUS', 'ronics', 'AlexDoubleU', 'Nitrahh']
                }, {
                    'name': 'UUED\x20GUMMID',
                    'prize': 0x258,
                    'roster': ['kiiturii', 'WasabiS', 'xXNONUTTERXx', 'BLNCR']
                }, {
                    'name': 'Nine',
                    'prize': 0x0,
                    'roster': ['Chupacabra', 'The_Zionist', 'Tatsuu', 'ZR1']
                }, {
                    'name': 'DOOM',
                    'prize': 0x0,
                    'roster': ['Viiper', 'Jbusom', 'Tahha', 'kari:D']
                }, {
                    'name': 'OxicPoonTang',
                    'prize': 0x0,
                    'roster': ['cato818', 'Amuu123', 'Darebydare', 'Fortysevens']
                }]
            }, {
                'name': 'NA',
                'icon': 'na',
                'data': [{
                    'name': 'nV',
                    'prize': 0x578,
                    'roster': ['RandomExport', 'Rickabonkers', 'Kouka', 'TaylorFerguson']
                }, {
                    'name': 'BAKA',
                    'prize': 0x258,
                    'roster': ['4tapp', 'Gxngu', '魔42', 'Friendlies']
                }, {
                    'name': 'Krunky\x20Boys',
                    'prize': 0x0,
                    'roster': ['bububoosh', 'GGkns', 'chazzychaz', 'ev0xge0']
                }, {
                    'name': 'RIP\x20Theta',
                    'prize': 0x0,
                    'roster': ['UB_Caboose', 'Applechase', 'Predixtions', 'Visuall']
                }, {
                    'name': 'Nine\x20NA',
                    'prize': 0x0,
                    'roster': ['Aoqii', 'Keyown', 'TristanTu', 'Byto']
                }]
            }, {
                'name': 'OCE',
                'icon': 'oce',
                'data': [{
                    'name': 'Lore',
                    'prize': 0x578,
                    'roster': ['Mosswi', 'Agent_Chicken', 'Stazza', 'ShiraishiEZ']
                }, {
                    'name': 'Omen',
                    'prize': 0x258,
                    'roster': ['Equinoxian', 'iiBazza', 'vEternity', 'Equaus']
                }, {
                    'name': 'Tokgang',
                    'prize': 0x0,
                    'roster': ['caL_Tv', 'gymgoer31', 'maxmillion', 'peepoglad']
                }, {
                    'name': 'Lore\x20v2',
                    'prize': 0x0,
                    'roster': ['ZaneAU', 'JamemesG', 'riderrr', '*Void']
                }, {
                    'name': 'EXLE',
                    'prize': 0x0,
                    'roster': ['Tatti123', 'Kurocchi', 'F24CTAL', '-Gaze']
                }]
            }],
            bdW['exports']['queues'] = [{
                'id': 'r1v1',
                'name': 'windows.ranked.mode.r1v1'
            }, {
                'id': 'r2v2',
                'name': 'windows.ranked.mode.r2v2'
            }, {
                'id': 'r4v4',
                'name': 'windows.ranked.mode.r4v4'
            }],
            bdW['exports']['minRankedLevel'] = 0x14,
            bdW['exports']['endTimer'] = 0x61a8,
            bdW['exports']['endAnim'] = 0x1388,
            bdW['exports']['thirdPZ'] = 0xe,
            bdW['exports']['thirdPX'] = 0x5,
            bdW['exports']['serverConfig'] = [{
                'name': 'Players',
                'varN': 'maxPlayers',
                'def': 0x2,
                'max': 0xa,
                'maxF': 0x10,
                'min': 0x1,
                'step': 0x1
            }, {
                'name': 'Min\x20Players',
                'varN': 'minPlayers',
                'def': 0x0,
                'max': 0xa,
                'maxF': 0x10,
                'min': 0x0,
                'step': 0x1
            }, {
                'name': 'Lives',
                'varN': 'lives',
                'def': 0x0,
                'max': 0xa,
                'min': 0x0,
                'step': 0x1
            }, {
                'name': 'Minutes',
                'varN': 'gameTime',
                'def': 0x4,
                'max': 0x3c,
                'min': 0x0,
                'step': 0x1
            }, {
                'name': 'Warmup',
                'varN': 'warmupTime',
                'def': 0x0,
                'max': 0x4,
                'min': 0x0,
                'step': 0.1
            }, {
                'name': 'Score\x20Limit',
                'varN': 'scoreLimit',
                'def': 0x0,
                'max': 0x2710,
                'min': 0x0,
                'step': 0x64
            }, {
                'name': 'Gravity',
                'varN': 'gravMlt',
                'dontChange': !0x0,
                'def': 0x1,
                'max': 0x2,
                'min': 0.1,
                'step': 0.1
            }, {
                'name': 'Jump\x20Force',
                'varN': 'jumpMlt',
                'dontChange': !0x0,
                'def': 0x1,
                'max': 0x3,
                'min': 0.1,
                'step': 0.1
            }, {
                'name': 'Hitbox\x20Scale',
                'varN': 'hitBoxPad',
                'dontChange': !0x0,
                'def': 0x1,
                'max': 0x1,
                'min': 0x0,
                'step': 0.1
            }, {
                'name': 'Time\x20Scale',
                'varN': 'deltaMlt',
                'dontChange': !0x0,
                'def': 0x1,
                'max': 1.5,
                'min': 0.1,
                'step': 0.1
            }, {
                'name': 'Strafe\x20Speed',
                'varN': 'strafeSpd',
                'dontChange': !0x0,
                'def': 1.2,
                'max': 0x2,
                'min': 0x1,
                'step': 0.1
            }, {
                'name': 'Health\x20Multiplier',
                'varN': 'healthMlt',
                'dontChange': !0x0,
                'def': 0x1,
                'max': 0x3,
                'min': 0.1,
                'step': 0.1
            }, {
                'name': 'Weapon\x20Impulse',
                'varN': 'impulseMlt',
                'dontChange': !0x0,
                'def': 0x1,
                'max': 0x3,
                'min': 0x0,
                'step': 0.1
            }, {
                'name': 'Team\x201\x20Name',
                'varN': 'nameTeam1',
                'def': 'Team\x201',
                'hideE': !0x0,
                'input': !0x0
            }, {
                'name': 'Team\x202\x20Name',
                'varN': 'nameTeam2',
                'def': 'Team\x202',
                'hideE': !0x0,
                'input': !0x0
            }, {
                'name': 'Select\x20Team',
                'varN': 'selTeam',
                'def': !0x1,
                'bool': !0x0
            }, {
                'name': 'Spectating',
                'varN': 'allowSpect',
                'def': !0x0,
                'bool': !0x0
            }, {
                'name': 'Kill\x20Rewards',
                'varN': 'killRewards',
                'dontChange': !0x0,
                'def': !0x0,
                'bool': !0x0
            }, {
                'name': 'Headshots\x20Only',
                'varN': 'headshotOnly',
                'dontChange': !0x0,
                'def': !0x1,
                'bool': !0x0
            }, {
                'name': 'No\x20Secondaries',
                'varN': 'noSecondary',
                'dontChange': !0x0,
                'def': !0x1,
                'bool': !0x0
            }, {
                'name': 'Sliding',
                'varN': 'canSlide',
                'def': !0x0,
                'bool': !0x0
            }, {
                'name': 'Auto\x20Jump',
                'varN': 'autoJump',
                'def': !0x1,
                'bool': !0x0
            }, {
                'name': '3rd\x20Person',
                'varN': 'thirdPerson',
                'def': !0x1,
                'bool': !0x0
            }, {
                'name': 'Hide\x20Nametags',
                'varN': 'nameTags',
                'def': !0x1,
                'bool': !0x0
            }],
            bdW['exports']['prefabIDS'] = ['CUBE', 'CRATE', 'BARREL', 'LADDER', 'PLANE', 'SPAWN_POINT', 'CAMERA_POSITION', 'VEHICLE', 'STACK', 'RAMP', 'SCORE_ZONE', 'BILLBOARD', 'DEATH_ZONE', 'PARTICLES', 'OBJECTIVE', 'TREE', 'CONE', 'CONTAINER', 'GRASS', 'CONTAINERR', 'ACIDBARREL', 'DOOR', 'WINDOW', 'FLAG', 'POINT_GATE', 'CHECK_POINT', 'WEAPON_PICKUP', 'TELEPORTER', 'TEDDY', 'TRIGGER', 'SIGN'],
            bdW['exports']['textureIDS'] = ['WALL', 'DIRT', 'FLOOR', 'GRID', 'GREY', 'DEFAULT', 'ROOF', 'FLAG', 'GRASS', 'CHECK', 'LINES', 'BRICK', 'LINK'],
            bdW['exports']['objectLimit'] = 0xdac,
            bdW['exports']['objectLimitF'] = 0x1770,
            bdW['exports']['spawnLimit'] = 0x14,
            bdW['exports']['billboardCnt'] = 0x5,
            bdW['exports']['signLimit'] = 0xa,
            bdW['exports']['signTextLimit'] = 0x5dc,
            bdW['exports']['signFontMax'] = 0x78,
            bdW['exports']['signFontMin'] = 0xa,
            bdW['exports']['followURLS'] = ['https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/sidney.devries/', 'https://www.instagram.com/vincent.de.vries/'],
            bdW['exports']['gravity'] = 0.00015,
            bdW['exports']['deathY'] = -0x64,
            bdW['exports']['skyScale'] = 0x4650,
            bdW['exports']['shadowDst'] = 0x4b0,
            bdW['exports']['shadowRes'] = 0x400,
            bdW['exports']['shadowOff'] = 0.004,
            bdW['exports']['lightDistance'] = 0x1f4,
            bdW['exports']['cornerPad'] = 0x1,
            bdW['exports']['cornerScl'] = 2.5,
            bdW['exports']['cornerH'] = 0x7,
            bdW['exports']['wallH'] = 0x5,
            bdW['exports']['wallW'] = 0.8,
            bdW['exports']['propsH'] = ['crate', 'barrel', 'cone', 'stack', 'acidbarrel', 'teddy'],
            bdW['exports']['propsCPY'] = {
                'teddy': -0x3
            },
            bdW['exports']['propsCP'] = {
                'barrel': -0x1,
                'teddy': -3.6,
                'cone': -0x2
            },
            bdW['exports']['crateScale'] = 0x6,
            bdW['exports']['stackScale'] = 0x6,
            bdW['exports']['teddyScale'] = 0x6,
            bdW['exports']['barrelScale'] = 0x4,
            bdW['exports']['acidbarrelScale'] = bdW['exports']['barrelScale'],
            bdW['exports']['treeScale'] = 0xa,
            bdW['exports']['doorScale'] = 0x5,
            bdW['exports']['windowScale'] = 0x6,
            bdW['exports']['coneScale'] = 0x4,
            bdW['exports']['containerScale'] = 0x7,
            bdW['exports']['containerrScale'] = bdW['exports']['containerScale'],
            bdW['exports']['grassScale'] = 0x20,
            bdW['exports']['vehicleScale'] = 0x14,
            bdW['exports']['barrelMlt'] = 0x1,
            bdW['exports']['ladderWidth'] = 3.2,
            bdW['exports']['ladderScale'] = 0.5,
            bdW['exports']['terrainGrid'] = 0x8,
            bdW['exports']['maxTerrainS'] = 0xfa0,
            bdW['exports']['otherSoundMlt'] = 0.55,
            bdW['exports']['maxParticles'] = 0x64,
            bdW['exports']['explosionRange'] = 0xc8,
            bdW['exports']['chatMaxLength'] = 0x46,
            bdW['exports']['chatInterval'] = 0x320,
            bdW['exports']['voiceChatInterval'] = 0x7d0,
            bdW['exports']['voiceChatMaxLength'] = 0x5,
            bdW['exports']['movDirs'] = [];
            for (var bdY = 0x0; 0x8 > bdY; ++bdY)
                bdW['exports']['movDirs']['push'](-Math['PI'] + (bdY + 0x1) * Math['PI'] / 0x4);
            bdW['exports']['interpolation'] = 1.1,
            bdW['exports']['stateHistory'] = 0x3e8,
            bdW['exports']['syncFreq'] = 0x3e8,
            bdW['exports']['pingCount'] = 0xa,
            bdW['exports']['mouseSens'] = 0.0024,
            bdW['exports']['camChaseTrn'] = 0.0022,
            bdW['exports']['camChaseSpd'] = 0.0012,
            bdW['exports']['camChaseSen'] = 0.2,
            bdW['exports']['camChaseDst'] = 0x18,
            bdW['exports']['specMinD'] = 0xa,
            bdW['exports']['specMaxD'] = 0xa0,
            bdW['exports']['menuCamDist'] = 0xc8,
            bdW['exports']['menuCamAngle'] = -0.5,
            bdW['exports']['menuCamSpeed'] = 0.1,
            bdW['exports']['idleAnimS'] = 0.0015,
            bdW['exports']['animMult'] = 1.2,
            bdW['exports']['leanPull'] = 0.99,
            bdW['exports']['leanSens'] = 0.05,
            bdW['exports']['leanMax'] = 0.16,
            bdW['exports']['leanPullZ'] = 0.99,
            bdW['exports']['leanMltZ'] = 0.03,
            bdW['exports']['bobMltY'] = 0.024,
            bdW['exports']['bobMltZ'] = 0.02,
            bdW['exports']['bobPullY'] = 0.985,
            bdW['exports']['bobPullZ'] = 0.99,
            bdW['exports']['landPull'] = 0.994,
            bdW['exports']['landPullV'] = 0.985,
            bdW['exports']['landOff'] = 0.15,
            bdW['exports']['aimAnimMlt'] = 0.18,
            bdW['exports']['aimSlow'] = 0.55,
            bdW['exports']['aimJumpSlow'] = 0.85,
            bdW['exports']['stepAnim'] = 0.075,
            bdW['exports']['stepMlt'] = 0.25,
            bdW['exports']['stepPull'] = 0.995,
            bdW['exports']['hpSegments'] = 0x7,
            bdW['exports']['maxHealth'] = 0x64,
            bdW['exports']['passiveInc'] = 0x1f4,
            bdW['exports']['cameraHeight'] = 1.5,
            bdW['exports']['playerSpeed'] = 0.00042,
            bdW['exports']['slippingSpeed'] = 0.0003,
            bdW['exports']['ladderSpeed'] = 0.035,
            bdW['exports']['ladderDecel'] = 0.97,
            bdW['exports']['slideDecel'] = 0.999,
            bdW['exports']['slideTime'] = 0x15e,
            bdW['exports']['terrainSlideDecel'] = 0.9996,
            bdW['exports']['groundDecel'] = 0.99,
            bdW['exports']['terrainDecel'] = 0.99,
            bdW['exports']['terrainSlipDecel'] = 0.99,
            bdW['exports']['airSpeed'] = 0.000047,
            bdW['exports']['airDecel'] = 0.9996,
            bdW['exports']['jumpVel'] = 0.072,
            bdW['exports']['jumpPush'] = 0.1,
            bdW['exports']['decelMin'] = 0.0001,
            bdW['exports']['climbHeight'] = 0x3,
            bdW['exports']['wpnSpin'] = 0.018,
            bdW['exports']['terrainSlideThreshold'] = 1.2,
            bdW['exports']['terrainGravityMlt'] = 1.85,
            bdW['exports']['playerSlideVelMlt'] = 1.2,
            bdW['exports']['playerTerrainSlideVelMlt'] = 0.4,
            bdW['exports']['playerSlippingJumpCooldown'] = 0x1f4,
            bdW['exports']['materialDens'] = {
                'flesh': 0.2,
                'default': 0.5
            },
            bdW['exports']['nameOffset'] = 0.6,
            bdW['exports']['nameOffsetHat'] = 0.8,
            bdW['exports']['maxNameLength'] = 0xe,
            bdW['exports']['maxPassLength'] = 0x10,
            bdW['exports']['playerHeight'] = 0xb,
            bdW['exports']['chestWidth'] = 2.6,
            bdW['exports']['chestScale'] = 1.3,
            bdW['exports']['armScale'] = 1.3,
            bdW['exports']['legScale'] = 1.3,
            bdW['exports']['uArmLength'] = 2.7,
            bdW['exports']['armInset'] = -0.1,
            bdW['exports']['lArmLength'] = 2.7,
            bdW['exports']['headScale'] = 0x2,
            bdW['exports']['armOff'] = -0.8,
            bdW['exports']['legHeight'] = 4.2,
            bdW['exports']['playerScale'] = (0x2 * bdW['exports']['armScale'] + bdW['exports']['chestWidth'] + bdW['exports']['armInset']) / 0x2,
            bdW['exports']['hitBoxPad'] = 0x1,
            bdW['exports']['tracerMinDst'] = 0x14,
            bdW['exports']['tracerMaxDst'] = 0x1f4,
            bdW['exports']['tracerChance'] = 0x1,
            bdW['exports']['crouchLean'] = -0.1 * Math['PI'],
            bdW['exports']['crouchDst'] = 0x3,
            bdW['exports']['crouchSlow'] = 0.3,
            bdW['exports']['crouchSpeed'] = 0.007,
            bdW['exports']['crouchJump'] = 0.25,
            bdW['exports']['crouchSpread'] = 0.55,
            bdW['exports']['crouchAnim'] = 0.0008,
            bdW['exports']['crouchAnimMlt'] = 0.5,
            bdW['exports']['spreadMove'] = 0x19,
            bdW['exports']['spreadFall'] = 0x1e,
            bdW['exports']['spreadRecover'] = 0.985,
            bdW['exports']['spreadAdj'] = 0.00063,
            bdW['exports']['spreadMlt'] = 0xf0,
            bdW['exports']['recoilMlt'] = 0.3,
            bdW['exports']['flagMsg'] = 'You\x20have\x20the\x20Flag',
            bdW['exports']['flagMsgE'] = 'Enemy\x20has\x20your\x20Flag',
            bdW['exports']['flagMsgRC'] = 'Enemy\x20has\x20your\x20Flag',
            bdW['exports']['flagZoneS'] = 0x18,
            bdW['exports']['flagZoneH'] = 0x24,
            bdW['exports']['flagScale'] = 0xc,
            bdW['exports']['flagOff'] = 0x6,
            bdW['exports']['flagHOff'] = 0xf,
            bdW['exports']['interactTimer'] = 0x64,
            bdW['exports']['pickupZoneX'] = 0xc,
            bdW['exports']['pickupZoneZ'] = 0x4,
            bdW['exports']['pickupZoneH'] = 0x2,
            bdW['exports']['pickupScale'] = 0x6,
            bdW['exports']['pickupOff'] = 0x1,
            bdW['exports']['maxLevel'] = 0x66,
            bdW['exports']['assistTime'] = 0x1388,
            bdW['exports']['assistScore'] = 0x19,
            bdW['exports']['assistMin'] = 0x14,
            bdW['exports']['medalAnim'] = 0x3e8,
            bdW['exports']['medalDelay'] = 0x384,
            bdW['exports']['scoreStreak'] = 0x7d0,
            bdW['exports']['feedTimer'] = 0x7d0,
            bdW['exports']['spinTimer'] = 0x708,
            bdW['exports']['endStats'] = ['sid', 'name', 'score', 'kills', 'deaths', 'reward'],
            bdW['exports']['endForm'] = {
                'reward': function(bdW) {
                    return bdW ? '<span\x20style=\x27color:#F8C55C\x27>+' + bdW + '</span>\x20KR' : 'NONE';
                },
                'time': function(bdW, bdX, bdY) {
                    return bdY['timer'] || 'DNF';
                },
                'infected': function(bdW, bdX, bdY) {
                    return bdY['convs'];
                },
                'found': function(bdW, bdX, bdY) {
                    return bdY['convs'];
                },
                'weapon': function(bdW, bdX, bdY) {
                    return bdY['weaponTier'];
                }
            },
            bdW['exports']['hitLife'] = 0x7d0,
            bdW['exports']['regenDelay'] = 0x1388,
            bdW['exports']['regenVal'] = 0.1,
            bdW['exports']['sprayTimer'] = 0x3e8,
            bdW['exports']['sprayRange'] = 0x19,
            bdW['exports']['sprayScale'] = 0xf,
            bdW['exports']['deathDelay'] = 0xaf0,
            bdW['exports']['deathFollowD'] = 0x64,
            bdW['exports']['suicides'] = ['uninstall\x20life', 'toaster\x20bath', 'alt\x20f4', 'not\x20alive', 'neck\x20rope', 'scooter\x20ankle', 'death.exe'],
            bdW['exports']['taunts'] = [{
                'id': 'taunt_0',
                'tm': 0x1f4
            }, {
                'id': 'taunt_1',
                'tm': 0x3e8
            }, {
                'id': 'taunt_2',
                'tm': 0x8fc
            }, {
                'id': 'taunt_3',
                'tm': 0xc80
            }],
            bdW['exports']['fov'] = 0x46,
            bdW['exports']['viewDist'] = 0x7d0,
            bdW['exports']['nameVisRate'] = 0xc8,
            bdW['exports']['worldUV'] = 0x3c,
            bdW['exports']['ambientVal'] = 0.5,
            bdW['exports']['ambD'] = 0x2,
            bdW['exports']['ambMlt'] = 0xf,
            bdW['exports']['ambOff'] = 0.09,
            bdW['exports']['ambScale'] = 0xa,
            bdW['exports']['ambDiv'] = 0x14,
            bdW['exports']['ambSFactor'] = 0x1,
            bdW['exports']['ambBleed'] = 0x0,
            bdW['exports']['boosterSpd'] = 0.002,
            bdW['exports']['borderH'] = 0x3e8,
            bdW['exports']['soundScapes'] = {
                'Default': 0x1,
                'City': 0x2,
                'Desert': 0x3,
                'Market': 0x4
            },
            bdW['exports']['mapTabs'] = [{
                'n': 'Hot',
                'c': 0x4e,
                't': 'recent'
            }, {
                'n': 'New',
                'c': 0x3c,
                't': 'initialdate'
            }, {
                'n': 'Favorites',
                'c': 0x24,
                't': 'votes'
            }, {
                'n': 'My\x20Maps',
                'c': 0x2d,
                'sendID': !0x0,
                't': 'votes'
            }, {
                'n': 'Search',
                'search': !0x0,
                't': 'votes'
            }],
            bdW['exports']['modTabs'] = [{
                'n': 'Hot',
                't': 'recent'
            }, {
                'n': 'New',
                't': 'initialdate'
            }, {
                'n': 'Favorites',
                't': 'votes'
            }, {
                'n': 'My\x20Mods',
                'sendID': !0x0,
                't': 'votes'
            }, {
                'n': 'Search',
                'search': !0x0,
                't': 'votes'
            }],
            bdW['exports']['saleMax'] = 0x989680,
            bdW['exports']['saleGrace'] = 0x927c0,
            bdW['exports']['marketMinLVl'] = 0x14,
            bdW['exports']['verClans'] = ['DEV', 'FaZe', 'Lore', 'nV', 'Oxic', 'Verb', 'Omen', 'ロリ幼女', 'VOID', 'JBP', 'PHIL', 'TIMP', '24/7', 'g59'],
            bdW['exports']['rankVar'] = 0.03,
            bdW['exports']['newDataInterval'] = 0x1d4c0,
            bdW['exports']['socials'] = ['leaders', 'profile', 'maps', 'tourney', 'market'],
            bdW['exports']['marketQueries'] = {
                'market': {
                    'btn': 'Info',
                    'checkItem': function(bdW) {
                        return !!bdW['funds'];
                    }
                },
                'inventory': {
                    'btn': 'List\x20to\x20Sell',
                    'checkItem': function(bdW) {
                        return !bdW['funds'] && bdW['cnt'];
                    }
                },
                'sales': {
                    'btn': 'Unlist',
                    'checkItem': function(bdW) {
                        return !!bdW['funds'];
                    }
                }
            },
            bdW['exports']['leaderQueries'] = ['player_score', 'player_kills', 'player_wins', 'player_timeplayed', 'player_funds', 'player_clan'],
            bdW['exports']['leaderCal'] = {
                'player_score': function(bdX) {
                    var bdY = Math['max'](0x1, Math['floor'](bdW['exports']['rankVar'] * Math['sqrt'](bdX)));
                    return '<span\x20class=\x27floatR\x27><img\x20src=\x27./img/levels/' + Math['max'](Math['min'](bdW['exports']['maxLevel'] - 0x1, bdY['roundToNearest'](0x2) - 0x1), 0x0) + '.png\x27\x20class=\x27rnkIcon\x27>' + bdY + '</span>';
                },
                'player_kills': function(bdW) {
                    return bdW + '<span\x20class=\x27lName\x27>\x20kills</span>';
                },
                'player_wins': function(bdW) {
                    return bdW + '<span\x20class=\x27lName\x27>\x20wins</span>';
                },
                'player_funds': function(bdW) {
                    return '<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + bdW['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',') + '</span>\x20KR';
                },
                'player_timeplayed': function(bdW) {
                    var bdX = bdW / 0x3e8 / 0x3c
                      , bdY = parseInt(bdX % 0x3c);
                    bdX /= 0x3c;
                    var bep = parseInt(bdX % 0x18);
                    bdX /= 0x18;
                    var beq = parseInt(bdX);
                    return (beq ? beq + 'd\x20' : '') + (bep ? bep + 'h\x20' : '') + (bdY || 0x0) + 'm\x20';
                }
            },
            bdW['exports']['regionNames'] = {
                'local': 'Local',
                'us-nj': 'New\x20York',
                'us-il': 'Chicago',
                'us-tx': 'Dallas',
                'us-wa': 'Seattle',
                'us-ca-la': 'Los\x20Angeles',
                'us-ga': 'Atlanta',
                'nl-ams': 'Amsterdam',
                'gb-lon': 'London',
                'de-fra': 'Frankfurt',
                'us-ca-sv': 'Silicon\x20Valley',
                'au-syd': 'Sydney',
                'fr-par': 'Paris',
                'jb-hnd': 'Tokyo',
                'us-fl': 'Miami',
                'sgp': 'Singapore'
            },
            bdW['exports']['langNames'] = {
                'en': 'English',
                'es': 'Spanish',
                'de': 'German',
                'kr': 'Korean'
            },
            bdW['exports']['skinColors'] = [0x805c4a, 0xa77860, 0xd38d6f, 0xcc997e, 0xedbfa6];
        }
        ['call'](this, bdY(0xe)));
    }
    , function(ber, bes, bet) {
        (function(bes) {
            const bev = bet(0x7)
              , bew = bet(0x23);
            ber['exports']['keyboardMap'] = ['', '', '', 'CANCEL', '', '', 'HELP', '', 'BACK_SPACE', 'TAB', '', '', 'CLEAR', 'ENTER', 'ENTER_SPECIAL', '', 'SHIFT', 'CONTROL', 'ALT', 'PAUSE', 'CAPS_LOCK', 'KANA', 'EISU', 'JUNJA', 'FINAL', 'HANJA', '', 'ESCAPE', 'CONVERT', 'NONCONVERT', 'ACCEPT', 'MODECHANGE', 'SPACE', 'PAGE_UP', 'PAGE_DOWN', 'END', 'HOME', 'LEFT', 'UP', 'RIGHT', 'DOWN', 'SELECT', 'PRINT', 'EXECUTE', 'PRINTSCREEN', 'INSERT', 'DELETE', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'COLON', 'SEMICOLON', 'LESS_THAN', 'EQUALS', 'GREATER_THAN', 'QUESTION_MARK', 'AT', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'OS_KEY', '', 'CONTEXT_MENU', '', 'SLEEP', 'NUMPAD0', 'NUMPAD1', 'NUMPAD2', 'NUMPAD3', 'NUMPAD4', 'NUMPAD5', 'NUMPAD6', 'NUMPAD7', 'NUMPAD8', 'NUMPAD9', 'MULTIPLY', 'ADD', 'SEPARATOR', 'SUBTRACT', 'DECIMAL', 'DIVIDE', 'F1', 'F2', 'F3', 'F4', 'F5', 'F6', 'F7', 'F8', 'F9', 'F10', 'F11', 'F12', 'F13', 'F14', 'F15', 'F16', 'F17', 'F18', 'F19', 'F20', 'F21', 'F22', 'F23', 'F24', '', '', '', '', '', '', '', '', 'NUM_LOCK', 'SCROLL_LOCK', 'WIN_OEM_FJ_JISHO', 'WIN_OEM_FJ_MASSHOU', 'WIN_OEM_FJ_TOUROKU', 'WIN_OEM_FJ_LOYA', 'WIN_OEM_FJ_ROYA', '', '', '', '', '', '', '', '', '', 'CIRCUMFLEX', 'EXCLAMATION', 'DOUBLE_QUOTE', 'HASH', 'DOLLAR', 'PERCENT', 'AMPERSAND', 'UNDERSCORE', 'OPEN_PAREN', 'CLOSE_PAREN', 'ASTERISK', 'PLUS', 'PIPE', 'HYPHEN_MINUS', 'OPEN_CURLY_BRACKET', 'CLOSE_CURLY_BRACKET', 'TILDE', '', '', '', '', 'VOLUME_MUTE', 'VOLUME_DOWN', 'VOLUME_UP', '', '', 'SEMICOLON', 'EQUALS', 'COMMA', 'MINUS', 'PERIOD', 'SLASH', 'BACK_QUOTE', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'OPEN_BRACKET', 'BACK_SLASH', 'CLOSE_BRACKET', 'QUOTE', '', 'META', 'ALTGR', '', 'WIN_ICO_HELP', 'WIN_ICO_00', '', 'WIN_ICO_CLEAR', '', '', 'WIN_OEM_RESET', 'WIN_OEM_JUMP', 'WIN_OEM_PA1', 'WIN_OEM_PA2', 'WIN_OEM_PA3', 'WIN_OEM_WSCTRL', 'WIN_OEM_CUSEL', 'WIN_OEM_ATTN', 'WIN_OEM_FINISH', 'WIN_OEM_COPY', 'WIN_OEM_AUTO', 'WIN_OEM_ENLW', 'WIN_OEM_BACKTAB', 'ATTN', 'CRSEL', 'EXSEL', 'EREOF', 'PLAY', 'ZOOM', '', 'PA1', 'WIN_OEM_CLEAR', ''],
            ber['exports']['getB64Size'] = function() {}
            ,
            Number['prototype']['round'] = function(ber) {
                return +this['toFixed'](ber);
            }
            ,
            String['prototype']['escape'] = function() {
                return (this + '')['replace'](/[\\"']/g, '\x5c$&')['replace'](/\u0000/g, '\x5c0');
            }
            ,
            Number['prototype']['roundToNearest'] = function(ber) {
                return 0x0 < this ? Math['ceil'](this / ber) * ber : 0x0 > this ? Math['floor'](this / ber) * ber : this;
            }
            ,
            ber['exports']['capFirst'] = function(ber) {
                return ber['charAt'](0x0)['toUpperCase']() + ber['slice'](0x1);
            }
            ,
            ber['exports']['isURL'] = function(ber) {
                try {
                    return /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%@_.~+&:]*)*(\?[;&a-z\d%@_.,~+&:=-]*)?(\#[-a-z\d_]*)?$/i['test'](ber);
                } catch (beB) {}
                return !0x1;
            }
            ,
            ber['exports']['arrayAverage'] = function(ber) {
                for (var bes = 0x0, bet = 0x0; bet < ber['length']; bet++)
                    bes += ber[bet];
                return bes / ber['length'];
            }
            ,
            ber['exports']['countInArray'] = function(ber, bes) {
                for (var bet = 0x0, bev = 0x0; bev < ber['length']; bev++)
                    ber[bev] === bes && bet++;
                return bet;
            }
            ,
            ber['exports']['formatNum'] = function(ber, bes=0x1) {
                var bet = Math['floor'](Math['log'](Math['abs'](ber)) / Math['log'](0x3e8))
                  , bev = 'kmb'[bet - 0x1];
                return bev ? (ber / Math['pow'](0x3e8, bet))['toFixed'](bes) + bev : '' + ber;
            }
            ,
            ber['exports']['randInt'] = function(ber, bes) {
                return Math['floor'](Math['random']() * (bes - ber + 0x1)) + ber;
            }
            ,
            ber['exports']['randFloat'] = function(ber, bes) {
                return Math['random']() * (bes - ber) + ber;
            }
            ,
            ber['exports']['getRandom'] = function(bes) {
                return bes[ber['exports']['randInt'](0x0, bes['length'] - 0x1)];
            }
            ,
            ber['exports']['getDistance'] = function(ber, bes, bet, bev) {
                return Math['sqrt']((bet -= ber) * bet + (bev -= bes) * bev);
            }
            ,
            ber['exports']['getDistance3D'] = function(ber, bes, bet, bev, bew, bf1) {
                var bf2 = ber - bev
                  , bf3 = bes - bew
                  , bf4 = bet - bf1;
                return Math['sqrt'](bf2 * bf2 + bf3 * bf3 + bf4 * bf4);
            }
            ,
            ber['exports']['getAnglesSSS'] = function(ber, bes, bet) {
                var bev = Math['acos']((bes * bes + bet * bet - ber * ber) / (0x2 * bes * bet))
                  , bew = Math['acos']((bet * bet + ber * ber - bes * bes) / (0x2 * bet * ber))
                  , bfa = Math['PI'] - bev - bew;
                return [-bev - Math['PI'] / 0x2, bew, bfa];
            }
            ,
            ber['exports']['getXDir'] = function(bes, bet, bev, bew, bff, bfg) {
                var bfh = Math['abs'](bet - bff)
                  , bfi = ber['exports']['getDistance3D'](bes, bet, bev, bew, bff, bfg);
                return Math['asin'](bfh / bfi) * (bet > bff ? -0x1 : 0x1);
            }
            ,
            ber['exports']['getAngleDst'] = function(ber, bes) {
                return Math['atan2'](Math['sin'](bes - ber), Math['cos'](ber - bes));
            }
            ,
            ber['exports']['getAngleDist2'] = function(ber, bes) {
                var bet = Math['abs'](bes - ber) % (0x2 * Math['PI']);
                return bet > Math['PI'] ? 0x2 * Math['PI'] - bet : bet;
            }
            ,
            ber['exports']['toRad'] = function(ber) {
                return ber * (Math['PI'] / 0xb4);
            }
            ,
            ber['exports']['getDirection'] = function(ber, bes, bet, bev) {
                return Math['atan2'](bes - bev, ber - bet);
            }
            ,
            ber['exports']['lerp'] = function(ber, bes, bet) {
                return ber + (bes - ber) * bet;
            }
            ,
            ber['exports']['orderByScore'] = function(ber, bes) {
                return bes['score'] - ber['score'];
            }
            ,
            ber['exports']['orderByKills'] = function(ber, bes) {
                return bes['kills'] - ber['kills'];
            }
            ,
            ber['exports']['orderByDst'] = function(ber, bes) {
                return ber['dst'] - bes['dst'];
            }
            ,
            ber['exports']['orderByNum'] = function(ber, bes) {
                return ber - bes;
            }
            ,
            ber['exports']['capFirst'] = function(ber) {
                return ber['charAt'](0x0)['toUpperCase']() + ber['slice'](0x1);
            }
            ,
            ber['exports']['truncateText'] = function(ber, bes) {
                return ber['length'] > bes ? ber['substring'](0x0, bes) + '...' : ber;
            }
            ,
            ber['exports']['cleanseString'] = function(ber) {
                return ber ? ber['replace'](/['"]+/g, '') : ber;
            }
            ,
            ber['exports']['randomString'] = function(ber) {
                for (var bes = '', bet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789', bev = 0x0; bev < ber; bev++)
                    bes += bet['charAt'](Math['floor'](Math['random']() * bet['length']));
                return bes;
            }
            ,
            ber['exports']['formatNumCash'] = function(ber) {
                return parseFloat(Math['round'](0x64 * ber) / 0x64)['toFixed'](0x2);
            }
            ,
            ber['exports']['getKeyName'] = function(bes) {
                return 0x4e20 == bes ? 'SCROLL' : 0x2710 < bes ? 'M' + (bes - 0x2710) : ber['exports']['keyboardMap'][bes];
            }
            ;
            var bfO = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            ber['exports']['getDate'] = function(ber) {
                if (!ber)
                    return 'None';
                ber = ber['split'](/[-A-Z :\.]/i);
                var bes = new Date(ber[0x0],--ber[0x1],ber[0x2],ber[0x3],ber[0x4],ber[0x5])
                  , bet = new Date(bes['getTime']());
                return bet['getDate']() + '\x20' + bfO[bet['getMonth']()] + '\x20' + bet['getFullYear']();
            }
            ,
            ber['exports']['getTime'] = function(ber, bes) {
                if ('inf' == ber)
                    return 'Infinite';
                var bet = parseInt(ber % 0x3e8 / 0x64)
                  , bev = parseInt(ber / 0x3e8 % 0x3c)
                  , bew = parseInt(ber / 0xea60 % 0x3c);
                return (bew = 0xa > bew ? '0' + bew : bew) + ':' + (bev = 0xa > bev ? '0' + bev : bev) + (bes ? '.' + bet : '');
            }
            ,
            ber['exports']['commaFormatNum'] = function(ber) {
                return ber['toString']()['replace'](/\B(?=(\d{3})+(?!\d))/g, ',');
            }
            ,
            ber['exports']['getReadableTime'] = function(ber, bes) {
                var bet = Math['floor'](ber / 0x3e8)
                  , bev = Math['floor'](bet / 0x3c);
                bet %= 0x3c;
                var bew = Math['floor'](bev / 0x3c);
                bev %= 0x3c;
                var bfO = Math['floor'](bew / 0x18);
                return (bfO ? bfO + 'd\x20' : '') + ((bew %= 0x18) ? bew + 'h\x20' : '') + (bev || 0x0) + 'm\x20' + (bes ? bet + 's' : '');
            }
            ,
            ber['exports']['getTimeH'] = function(ber) {
                parseInt(ber % 0x3e8 / 0x64);
                var bes = Math['floor'](ber / 0x3e8 % 0x3c)
                  , bet = Math['floor'](ber / 0xea60 % 0x3c)
                  , bev = Math['floor'](ber / 0x36ee80 % 0x18);
                return (bev = 0xa > bev ? '0' + bev : bev) + ':' + (bet = 0xa > bet ? '0' + bet : bet) + ':' + (bes = 0xa > bes ? '0' + bes : bes);
            }
            ,
            ber['exports']['scrambleS'] = function(ber) {
                return ber && ber['replace'] ? ber['replace'](/.(.)?/g, '$1') + ('d' + ber)['replace'](/.(.)?/g, '$1') : ber;
            }
            ,
            ber['exports']['sanitizeStr'] = function(ber) {
                return ber && ber['replace'] ? ber['replace'](/<|>|&/g, '')['replace'](/[^\x00-\x7F]/g, '') : ber;
            }
            ,
            ber['exports']['fixTo'] = function(ber, bes) {
                return parseFloat(ber['toFixed'](bes));
            }
            ,
            ber['exports']['limit'] = function(ber, bes) {
                return ber < -bes ? -bes : ber > bes ? bes : ber;
            }
            ,
            ber['exports']['limitMM'] = function(ber, bes, bet) {
                return ber < bes ? bes : ber > bet ? bet : ber;
            }
            ,
            ber['exports']['cropVal'] = function(ber, bes) {
                return ber <= bes && ber >= -bes ? 0x0 : ber;
            }
            ,
            ber['exports']['isNumber'] = function(ber) {
                return null != ber && 'number' == typeof ber && !isNaN(ber) && isFinite(ber);
            }
            ,
            ber['exports']['arrayInts'] = function(bes) {
                for (var bet = 0x0; bet < bes['length']; ++bet)
                    if (!ber['exports']['isNumber'](bes[bet]))
                        return !0x1;
                return !0x0;
            }
            ,
            ber['exports']['isArray'] = function(ber) {
                return !!ber && ber['constructor'] === Array;
            }
            ,
            ber['exports']['isString'] = function(ber) {
                return ber && 'string' == typeof ber;
            }
            ,
            ber['exports']['emptyString'] = function(ber) {
                return !ber || 0x0 === ber['length'] || /^\s*$/['test'](ber) || !ber['trim']();
            }
            ,
            ber['exports']['compareString'] = function(ber, bes) {
                return 0x0 <= ber['toLowerCase']()['indexOf'](bes['toLowerCase']()) || 0x0 <= bes['toLowerCase']()['indexOf'](ber['toLowerCase']());
            }
            ;
            ber['exports']['lineInRect'] = function(ber, bes, bet, bev, bew, bfO, bgx, bgy, bgz, bgA, bgB, bgC) {
                var bgD = (bgx - ber) * bev
                  , bgE = (bgA - ber) * bev
                  , bgF = (bgz - bet) * bfO
                  , bgG = (bgC - bet) * bfO
                  , bgH = (bgy - bes) * bew
                  , bgI = (bgB - bes) * bew
                  , bgJ = Math['max'](Math['max'](Math['min'](bgD, bgE), Math['min'](bgF, bgG)), Math['min'](bgH, bgI))
                  , bgK = Math['min'](Math['min'](Math['max'](bgD, bgE), Math['max'](bgF, bgG)), Math['max'](bgH, bgI));
                return !(0x0 > bgK) && !(bgJ > bgK) && bgJ;
            }
            ,
            ber['exports']['pointInBox3D'] = function(ber, bes, bet, bev, bew) {
                return bew = bew || 0x0,
                ber >= bev['x'] - bev['width'] - bew && ber <= bev['x'] + bev['width'] + bew && bes >= bev['y'] - bev['height'] - bew && bes <= bev['y'] + bev['height'] + bew && bet >= bev['z'] - bev['length'] - bew && bet <= bev['z'] + bev['length'] + bew;
            }
            ,
            ber['exports']['similar'] = function(ber, bes, bet) {
                return bet = bet || 0x0,
                Math['abs'](ber - bes) <= bet;
            }
            ,
            ber['exports']['pointInBox'] = function(ber, bes, bet, bev, bew, bfO, bgZ) {
                return bgZ ? ber >= bet && ber <= bew && bes >= bev && bes <= bfO : ber > bet && ber < bew && bes > bev && bes < bfO;
            }
            ,
            ber['exports']['sharePos'] = function(ber, bes, bet) {
                return bet = bet || 0x0,
                Math['abs'](ber['x'] - bes['x']) <= bet && Math['abs'](ber['y'] - bes['y']) <= bet && Math['abs'](ber['z'] - bes['z']) <= bet && Math['abs'](ber['d'] - bes['d']) <= bet;
            }
            ,
            ber['exports']['cdv'] = {
                'x': 'width',
                'y': 'height',
                'z': 'length'
            },
            ber['exports']['boxIntersection'] = function(bes, bet, bev, bew, bfO) {
                var bh8 = ber['exports']['cdv'][bev]
                  , bh9 = ber['exports']['cdv'][bew]
                  , bha = bes[bev] - bes[bh8] - 0.1
                  , bhb = bet[bev] - bet[bh8] - 0.1
                  , bhc = bes[bev] + bes[bh8] + 0.1
                  , bhd = bet[bev] + bet[bh8] + 0.1
                  , bhe = bes[bew] - bes[bh9] - 0.1
                  , bhf = bet[bew] - bet[bh9] - 0.1
                  , bhg = bes[bew] + bes[bh9] + 0.1
                  , bhh = bet[bew] + bet[bh9] + 0.1
                  , bhi = Math['max'](bha, bhb)
                  , bhj = Math['min'](bhc, bhd);
                if (bhj >= bhi) {
                    var bhk = Math['max'](bhe, bhf)
                      , bhl = Math['min'](bhg, bhh);
                    if (bhl >= bhk) {
                        for (var bhm = [{
                            [bev]: bhi,
                            [bew]: bhk,
                            'd': bfO[0x0]
                        }, {
                            [bev]: bhj,
                            [bew]: bhl,
                            'd': bfO[0x1]
                        }, {
                            [bev]: bhi,
                            [bew]: bhl,
                            'd': bfO[0x2]
                        }, {
                            [bev]: bhj,
                            [bew]: bhk,
                            'd': bfO[0x3]
                        }], bhn = bhm['length'] - 0x1; 0x0 <= bhn; --bhn)
                            (bhm[bhn][bev] == bhc && bhm[bhn][bev] == bhd || bhm[bhn][bev] == bha && bhm[bhn][bev] == bhb || bhm[bhn][bew] == bhg && bhm[bhn][bew] == bhh || bhm[bhn][bew] == bhe && bhm[bhn][bew] == bhf || ber['exports']['pointInBox'](bhm[bhn][bev], bhm[bhn][bew], bha, bhe, bhc, bhg) || ber['exports']['pointInBox'](bhm[bhn][bev], bhm[bhn][bew], bhb, bhf, bhd, bhh)) && (bhm[bhn]['dontUse'] = !0x0);
                        return bhm;
                    }
                }
                return null;
            }
            ,
            ber['exports']['boxCornerIntersection'] = function(bes, bet, bev, bew) {
                for (var bfO = ber['exports']['cdv'][bev], bht = ber['exports']['cdv'][bew], bhu = bes[bev] - bes[bfO], bhv = bet[bev] - bet[bfO], bhw = bes[bev] + bes[bfO], bhx = bet[bev] + bet[bfO], bhy = bes[bew] - bes[bht], bhz = bet[bew] - bet[bht], bhA = bes[bew] + bes[bht], bhB = bet[bew] + bet[bht], bhC = [{
                    [bev]: bhu,
                    [bew]: bhy,
                    'd': Math['PI'] / 0x2
                }, {
                    [bev]: bhu,
                    [bew]: bhA,
                    'd': Math['PI']
                }, {
                    [bev]: bhw,
                    [bew]: bhy,
                    'd': 0x0
                }, {
                    [bev]: bhw,
                    [bew]: bhA,
                    'd': -Math['PI'] / 0x2
                }], bhD = bhC['length'] - 0x1; 0x0 <= bhD; --bhD)
                    bhC[bhD]['i'] = bhD,
                    ber['exports']['pointInBox'](bhC[bhD][bev], bhC[bhD][bew], bhv, bhz, bhx, bhB, !0x0) || bhC['splice'](bhD, 0x1);
                return bhC['length'] ? bhC : null;
            }
            ,
            ber['exports']['getIntersection'] = function(bes, bet, bev) {
                var bew = ber['exports']['cdv'][bev]
                  , bfO = bes[bev] - bes[bew]
                  , bhJ = bet[bev] - bet[bew]
                  , bhK = bes[bev] + bes[bew]
                  , bhL = bet[bev] + bet[bew]
                  , bhM = Math['max'](bfO, bhJ)
                  , bhN = Math['min'](bhK, bhL);
                if (bhN >= bhM) {
                    var bhO = (bhN - bhM) / 0x2;
                    return {
                        [bev]: bhM + bhO,
                        [bew]: bhO
                    };
                }
                return null;
            }
            ,
            ber['exports']['limitRectVal'] = function(bes, bet, bev) {
                var bew = ber['exports']['cdv'][bev];
                if (bes[bev] - bes[bew] < bet[bev] - bet[bew]) {
                    var bfO = (bet[bev] - bet[bew] - (bes[bev] - bes[bew])) / 0x2;
                    bes[bew] -= bfO,
                    bes[bev] += bfO;
                }
                if (bes[bev] + bes[bew] > bet[bev] + bet[bew]) {
                    bfO = (bes[bev] + bes[bew] - (bet[bev] + bet[bew])) / 0x2;
                    bes[bew] -= bfO,
                    bes[bev] -= bfO;
                }
            }
            ,
            ber['exports']['getMaxRect'] = function(bes, bet, bev) {
                for (var bew, bfO, bhZ, bi0, bi1 = ber['exports']['cdv'][bet], bi2 = ber['exports']['cdv'][bev], bi3 = 0x0; bi3 < bes['length']; ++bi3)
                    bew = null == bew ? bes[bi3][bet] - bes[bi3][bi1] : Math['min'](bes[bi3][bet] - bes[bi3][bi1], bew),
                    bhZ = null == bhZ ? bes[bi3][bet] + bes[bi3][bi1] : Math['max'](bes[bi3][bet] + bes[bi3][bi1], bhZ),
                    bfO = null == bfO ? bes[bi3][bev] - bes[bi3][bi2] : Math['min'](bes[bi3][bev] - bes[bi3][bi2], bfO),
                    bi0 = null == bi0 ? bes[bi3][bev] + bes[bi3][bi2] : Math['max'](bes[bi3][bev] + bes[bi3][bi2], bi0);
                return {
                    [bet]: (bew + bhZ) / 0x2,
                    [bev]: (bfO + bi0) / 0x2,
                    [bi1]: Math['abs'](bhZ - bew) / 0x2,
                    [bi2]: Math['abs'](bi0 - bfO) / 0x2
                };
            }
            ,
            ber['exports']['limitRect'] = function(bes, bet, bev, bew, bfO, bi9, bia, bib) {
                var bic = ber['exports']['getMaxRect'](bi9, bia, bib)
                  , bid = ber['exports']['cdv'][bia]
                  , bie = ber['exports']['cdv'][bib]
                  , bif = {};
                if (bif[bia] = bes,
                bif[bib] = bet,
                bif[bid] = bev,
                bif[bie] = bew,
                ber['exports']['limitRectVal'](bif, bic, bia),
                ber['exports']['limitRectVal'](bif, bic, bib),
                0x0 == bfO || bfO == Math['PI']) {
                    var big = bif[bid];
                    bif[bid] = bif[bie],
                    bif[bie] = big;
                }
                return bif;
            }
            ,
            ber['exports']['progressOnLine'] = function(ber, bes, bet, bev, bew, bfO) {
                var bin = bet - ber
                  , bio = bev - bes
                  , bip = Math['sqrt'](bin * bin + bio * bio);
                return ((bin /= bip) * (bew - ber) + (bio /= bip) * (bfO - bes)) / Math['sqrt'](Math['pow'](bet - ber, 0x2) + Math['pow'](bev - bes, 0x2));
            }
            ,
            ber['exports']['generateSID'] = function(ber) {
                for (var bes = 0x0, bet = !0x0; bet; ) {
                    bet = !0x1,
                    bes++;
                    for (var bev = 0x0; bev < ber['length']; ++bev)
                        if (ber[bev]['sid'] == bes) {
                            bet = !0x0;
                            break;
                        }
                }
                return bes;
            }
            ,
            ber['exports']['levelIconId'] = function(ber) {
                return Math['max'](Math['min'](bev['maxLevel'] - 0x1, ber['roundToNearest'](0x2) - 0x1), 0x0);
            }
            ,
            ber['exports']['copyToClipboard'] = function(ber) {
                const bes = document['createElement']('textarea');
                bes['value'] = ber,
                bes['setAttribute']('readonly', ''),
                bes['style']['position'] = 'absolute',
                bes['style']['left'] = '-9999px',
                document['body']['appendChild'](bes);
                const bet = !!(0x0 < document['getSelection']()['rangeCount']) && document['getSelection']()['getRangeAt'](0x0);
                bes['select'](),
                document['execCommand']('copy'),
                document['body']['removeChild'](bes),
                bet && (document['getSelection']()['removeAllRanges'](),
                document['getSelection']()['addRange'](bet));
            }
            ;
            var biy = function(ber, bes) {
                return ber['concat'](bes);
            };
            Array['prototype']['flatMap'] = function(ber) {
                return function(ber, bes) {
                    return bes['map'](ber)['reduce'](biy, []);
                }(ber, this);
            }
            ;
            var biE = bet(0x2a);
            ber['exports']['UTIK'] = function(bes, bet) {
                let bev = biE['encode'](bes)
                  , bew = new Uint8Array(bev['length'] + 0x2);
                return bew['set'](ber['exports']['xsMe'](bet), bew['length'] - 0x2),
                bew['set'](bev, 0x0),
                bew;
            }
            ,
            ber['exports']['MqhgxSS'] = function(bes) {
                bes = new Uint8Array(bes);
                let bet = ber['exports']['iiEdBL'](bes[bes['length'] - 0x2], bes[bes['length'] - 0x1])
                  , bev = bes['slice'](0x0, bes['length'] - 0x2);
                return [biE['decode'](bev), bet];
            }
            ,
            ber['exports']['xBFN'] = function(ber, bes) {
                return 0xff & ber + bes;
            }
            ,
            ber['exports']['xsMe'] = function(ber) {
                return [0xf & ber >> 0x4, 0xf & ber];
            }
            ,
            ber['exports']['iiEdBL'] = function(ber, bes) {
                return (ber << 0x4) + bes;
            }
            ,
            ber['exports']['restartIfNeeded'] = function(ber) {
                if (bev['needsRestart']) {
                    for (var bet in ber['sockets']) {
                        var bew = ber['sockets'][bet];
                        bew['send']('error', 'GAME\x20UPDATING'),
                        bew['close']();
                    }
                    setTimeout(function() {
                        bes['exit']();
                    }, 0x3e8);
                }
            }
            ,
            ber['exports']['thumbnailSize'] = function(ber) {
                return parseInt(0.75 * ber['replace'](/=/g, '')['length']) / 0x3e8;
            }
            ,
            ber['exports']['hexToRGB'] = ber=>ber['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (ber,bes,bet,bev)=>'#' + bes + bes + bet + bet + bev + bev)['substring'](0x1)['match'](/.{2}/g)['map'](ber=>parseInt(ber, 0x10)),
            ber['exports']['versionifyUrl'] = function(ber) {
                return ber + '?build=' + bew;
            }
            ,
            ber['exports']['getPreview'] = function(bes, bet) {
                return ber['exports']['versionifyUrl']('./textures/previews/' + (bes['type'] && 0x3 > bes['type'] ? 'cosmetics/' + bes['type'] + '_' + bes['id'] + (bes['tex'] ? '_' + bes['tex'] : '') : bet['types'][bes['type'] || 0x0] + (bes['type'] && 0x3 == bes['type'] ? bes['id'] + (bes['tex'] ? '_' + bes['tex'] : '') : (bes['weapon'] || 0x0) + '_' + (null == bes['mid'] ? null == bes['pat'] ? bes['tex'] ? bes['tex'] : bes['id'] : 'c' + bes['pat'] : 'm' + bes['mid'] + (null == bes['midT'] ? '' : '_' + bes['midT']['split']('_')['slice'](-0x1)[0x0])))) + '.png');
            }
            ,
            ber['exports']['isDropbox'] = function(ber) {
                return /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?(dropbox|dropboxusercontent|dl\.dropboxusercontent)\.com\//g['test'](ber);
            }
            ,
            ber['exports']['ctxText'] = function(ber, bes, bet, bev, bew) {
                ber['save'](),
                ber['translate'](~~bev, ~~bew),
                ber['fillStyle'] = bet,
                ber['strokeStyle'] = 'rgba(0,\x200,\x200,\x200.5)',
                ber['lineWidth'] = 0x1,
                ber['strokeText'](bes, 0x0, 0x0),
                ber['fillText'](bes, 0x0, 0x0),
                ber['restore']();
            }
            ,
            ber['exports']['getLines'] = function(ber, bes, bet) {
                for (var bev = bes['split']('\x20'), bew = [], bfO = bev[0x0], biy = 0x1; biy < bev['length']; biy++) {
                    var biE = bev[biy];
                    ber['measureText'](bfO + '\x20' + biE)['width'] < bet ? bfO += '\x20' + biE : (bew['push'](bfO),
                    bfO = biE);
                }
                return bew['push'](bfO),
                bew;
            }
            ,
            ber['exports']['createCanvasText'] = function(bes, bet, bew, bfO, biy, biE, bjo, bjp) {
                var bjq = 0x0
                  , bjr = 0x0;
                bet > bes ? (bjq = 0x1,
                bjr = bes / bet) : bet < bes ? (bjq = bet / bes,
                bjr = 0x1) : (bjq = 0x1,
                bjr = 0x1);
                var bjs = document['createElement']('canvas')
                  , bjt = bjs['getContext']('2d');
                bjs['width'] = 0x400 * bjr,
                bjs['height'] = 0x400 * bjq,
                bjo || (bjt['fillStyle'] = biE,
                bjt['fillRect'](0x0, 0x0, bjs['width'], bjs['height']));
                var bju = bfO;
                bjt['font'] = bju + 'px\x20GameFont',
                bew = bew['substring'](0x0, bev['signTextLimit'] - 0x1),
                bjt['textAlign'] = 0x2 == bjp ? 'right' : 0x1 == bjp ? 'center' : 'left';
                var bjv = 0x2 * bju
                  , bjw = bjt['measureText']('M')['width'] / 0x2;
                bjw = 0x2 == bjp ? bjs['width'] - bjw : 0x1 == bjp ? bjs['width'] / 0x2 : bjw;
                for (var bjx = 1.2 * bjt['measureText']('M')['width'], bjy = bew['split']('\x5cn'), bjz = null, bjA = 0x0; bjA < bjy['length']; ++bjA) {
                    bjz = ber['exports']['getLines'](bjt, bjy[bjA], bjs['width'] - bju);
                    for (var bjB = 0x0; bjB < bjz['length'] && (ber['exports']['ctxText'](bjt, bjz[bjB], biy, bjw, bjv),
                    !((bjv += bjx) > bjs['height'])); ++bjB)
                        ;
                }
                return bjs;
            }
            ;
        }
        ['call'](this, bet(0xe)));
    }
    , function(bjC, bjD, bjE) {
        'use strict';
        (function(bjC) {
            bjE['d'](bjD, 'a', function() {
                return bjL;
            }),
            bjE['d'](bjD, 'b', function() {
                return bkR;
            }),
            bjE['d'](bjD, 'c', function() {
                return bkY;
            });
            var bjG = bjE(0x0)
              , bjH = bjE(0x2)
              , bjI = bjE(0x18)
              , bjJ = bjE(0xa)
              , bjK = 0x3
              , bjL = function() {
                function bjC(bjC, bjD, bjE) {
                    void 0x0 === bjD && (bjD = new bjJ['a']()),
                    void 0x0 === bjE && (bjE = bjK),
                    this['_version'] = bjE,
                    this['_stack'] = [],
                    this['_stack']['push']({
                        'client': bjC,
                        'scope': bjD
                    });
                }
                return bjC['prototype']['_invokeClient'] = function(bjC) {
                    for (var bjD, bjE = [], bjH = 0x1; bjH < arguments['length']; bjH++)
                        bjE[bjH - 0x1] = arguments[bjH];
                    var bjI = this['getStackTop']();
                    bjI && bjI['client'] && bjI['client'][bjC] && (bjD = bjI['client'])[bjC]['apply'](bjD, bjG['d'](bjE, [bjI['scope']]));
                }
                ,
                bjC['prototype']['isOlderThan'] = function(bjC) {
                    return this['_version'] < bjC;
                }
                ,
                bjC['prototype']['bindClient'] = function(bjC) {
                    this['getStackTop']()['client'] = bjC;
                }
                ,
                bjC['prototype']['pushScope'] = function() {
                    var bjC = this['getStack']()
                      , bjD = 0x0 < bjC['length'] ? bjC[bjC['length'] - 0x1]['scope'] : void 0x0
                      , bjE = bjJ['a']['clone'](bjD);
                    return this['getStack']()['push']({
                        'client': this['getClient'](),
                        'scope': bjE
                    }),
                    bjE;
                }
                ,
                bjC['prototype']['popScope'] = function() {
                    return void 0x0 !== this['getStack']()['pop']();
                }
                ,
                bjC['prototype']['withScope'] = function(bjC) {
                    var bjD = this['pushScope']();
                    try {
                        bjC(bjD);
                    } finally {
                        this['popScope']();
                    }
                }
                ,
                bjC['prototype']['getClient'] = function() {
                    return this['getStackTop']()['client'];
                }
                ,
                bjC['prototype']['getScope'] = function() {
                    return this['getStackTop']()['scope'];
                }
                ,
                bjC['prototype']['getStack'] = function() {
                    return this['_stack'];
                }
                ,
                bjC['prototype']['getStackTop'] = function() {
                    return this['_stack'][this['_stack']['length'] - 0x1];
                }
                ,
                bjC['prototype']['captureException'] = function(bjC, bjD) {
                    var bjE = this['_lastEventId'] = Object(bjH['g'])();
                    return this['_invokeClient']('captureException', bjC, bjG['a']({}, bjD, {
                        'event_id': bjE
                    })),
                    bjE;
                }
                ,
                bjC['prototype']['captureMessage'] = function(bjC, bjD, bjE) {
                    var bjI = this['_lastEventId'] = Object(bjH['g'])();
                    return this['_invokeClient']('captureMessage', bjC, bjD, bjG['a']({}, bjE, {
                        'event_id': bjI
                    })),
                    bjI;
                }
                ,
                bjC['prototype']['captureEvent'] = function(bjC, bjD) {
                    var bjE = this['_lastEventId'] = Object(bjH['g'])();
                    return this['_invokeClient']('captureEvent', bjC, bjG['a']({}, bjD, {
                        'event_id': bjE
                    })),
                    bjE;
                }
                ,
                bjC['prototype']['lastEventId'] = function() {
                    return this['_lastEventId'];
                }
                ,
                bjC['prototype']['addBreadcrumb'] = function(bjC, bjD) {
                    var bjE = this['getStackTop']();
                    if (bjE['scope'] && bjE['client']) {
                        var bjI = bjE['client']['getOptions'] && bjE['client']['getOptions']() || {}
                          , bjJ = bjI['beforeBreadcrumb']
                          , bjK = void 0x0 === bjJ ? null : bjJ
                          , bjL = bjI['maxBreadcrumbs']
                          , bkj = void 0x0 === bjL ? 0x1e : bjL;
                        if (!(0x0 >= bkj)) {
                            var bkk = new Date()['getTime']() / 0x3e8
                              , bkl = bjG['a']({
                                'timestamp': bkk
                            }, bjC)
                              , bkm = bjK ? Object(bjH['b'])(function() {
                                return bjK(bkl, bjD);
                            }) : bkl;
                            null === bkm || bjE['scope']['addBreadcrumb'](bkm, Math['min'](bkj, 0x64));
                        }
                    }
                }
                ,
                bjC['prototype']['setUser'] = function(bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['scope']['setUser'](bjC);
                }
                ,
                bjC['prototype']['setTags'] = function(bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['scope']['setTags'](bjC);
                }
                ,
                bjC['prototype']['setExtras'] = function(bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['scope']['setExtras'](bjC);
                }
                ,
                bjC['prototype']['setTag'] = function(bjC, bjD) {
                    var bjE = this['getStackTop']();
                    bjE['scope'] && bjE['scope']['setTag'](bjC, bjD);
                }
                ,
                bjC['prototype']['setExtra'] = function(bjC, bjD) {
                    var bjE = this['getStackTop']();
                    bjE['scope'] && bjE['scope']['setExtra'](bjC, bjD);
                }
                ,
                bjC['prototype']['setContext'] = function(bjC, bjD) {
                    var bjE = this['getStackTop']();
                    bjE['scope'] && bjE['scope']['setContext'](bjC, bjD);
                }
                ,
                bjC['prototype']['configureScope'] = function(bjC) {
                    var bjD = this['getStackTop']();
                    bjD['scope'] && bjD['client'] && bjC(bjD['scope']);
                }
                ,
                bjC['prototype']['run'] = function(bjC) {
                    var bjD = bkN(this);
                    try {
                        bjC(this);
                    } finally {
                        bkN(bjD);
                    }
                }
                ,
                bjC['prototype']['getIntegration'] = function(bjC) {
                    var bjD = this['getClient']();
                    if (!bjD)
                        return null;
                    try {
                        return bjD['getIntegration'](bjC);
                    } catch (bkI) {
                        return bjI['a']['warn']('Cannot\x20retrieve\x20integration\x20' + bjC['id'] + '\x20from\x20the\x20current\x20Hub'),
                        null;
                    }
                }
                ,
                bjC['prototype']['traceHeaders'] = function() {
                    var bjC = this['getStackTop']();
                    if (bjC['scope'] && bjC['client']) {
                        var bjD = bjC['scope']['getSpan']();
                        if (bjD)
                            return {
                                'sentry-trace': bjD['toTraceparent']()
                            };
                    }
                    return {};
                }
                ,
                bjC;
            }();
            function bkL() {
                var bjC = Object(bjH['e'])();
                return bjC['__SENTRY__'] = bjC['__SENTRY__'] || {
                    'hub': void 0x0
                },
                bjC;
            }
            function bkN(bjC) {
                var bjD = bkL()
                  , bjE = bkY(bjD);
                return bl0(bjD, bjC),
                bjE;
            }
            function bkR() {
                var bjD = bkL();
                (!bkW(bjD) || bkY(bjD)['isOlderThan'](bjK)) && bl0(bjD, new bjL());
                try {
                    var bjE = Object(bjH['c'])(bjC, 'domain')['active'];
                    if (!bjE)
                        return bkY(bjD);
                    if (!bkW(bjE) || bkY(bjE)['isOlderThan'](bjK)) {
                        var bjG = bkY(bjD)['getStackTop']();
                        bl0(bjE, new bjL(bjG['client'],bjJ['a']['clone'](bjG['scope'])));
                    }
                    return bkY(bjE);
                } catch (bkV) {
                    return bkY(bjD);
                }
            }
            function bkW(bjC) {
                return !!(bjC && bjC['__SENTRY__'] && bjC['__SENTRY__']['hub']);
            }
            function bkY(bjC) {
                return bjC && bjC['__SENTRY__'] && bjC['__SENTRY__']['hub'] ? bjC['__SENTRY__']['hub'] : (bjC['__SENTRY__'] = bjC['__SENTRY__'] || {},
                bjC['__SENTRY__']['hub'] = new bjL(),
                bjC['__SENTRY__']['hub']);
            }
            function bl0(bjC, bjD) {
                return !!bjC && (bjC['__SENTRY__'] = bjC['__SENTRY__'] || {},
                bjC['__SENTRY__']['hub'] = bjD,
                !0x0);
            }
        }
        ['call'](this, bjE(0x40)(bjC)));
    }
    , function(bl3, bl4, bl5) {
        'use strict';
        bl5['d'](bl4, 'a', function() {
            return blc;
        }),
        bl5['d'](bl4, 'b', function() {
            return blU;
        });
        var bl6 = bl5(0x0)
          , bl7 = bl5(0x49)
          , bl8 = bl5(0x5)
          , bl9 = bl5(0x6)
          , bla = bl5(0x2)
          , blb = bl5(0xd)
          , blc = function() {
            function bl3() {
                this['_notifyingListeners'] = !0x1,
                this['_scopeListeners'] = [],
                this['_eventProcessors'] = [],
                this['_breadcrumbs'] = [],
                this['_user'] = {},
                this['_tags'] = {},
                this['_extra'] = {},
                this['_context'] = {};
            }
            return bl3['prototype']['addScopeListener'] = function(bl3) {
                this['_scopeListeners']['push'](bl3);
            }
            ,
            bl3['prototype']['addEventProcessor'] = function(bl3) {
                return this['_eventProcessors']['push'](bl3),
                this;
            }
            ,
            bl3['prototype']['_notifyScopeListeners'] = function() {
                var bl3 = this;
                this['_notifyingListeners'] || (this['_notifyingListeners'] = !0x0,
                setTimeout(function() {
                    bl3['_scopeListeners']['forEach'](function(bl4) {
                        bl4(bl3);
                    }),
                    bl3['_notifyingListeners'] = !0x1;
                }));
            }
            ,
            bl3['prototype']['_notifyEventProcessors'] = function(bl3, bl4, bl5, bl9) {
                var bla = this;
                return void 0x0 === bl9 && (bl9 = 0x0),
                new bl7['a'](function(bl7, blb) {
                    var blc = bl3[bl9];
                    if (null === bl4 || 'function' != typeof blc)
                        bl7(bl4);
                    else {
                        var blq = blc(bl6['a']({}, bl4), bl5);
                        Object(bl8['j'])(blq) ? blq['then'](function(bl4) {
                            return bla['_notifyEventProcessors'](bl3, bl4, bl5, bl9 + 0x1)['then'](bl7);
                        })['catch'](blb) : bla['_notifyEventProcessors'](bl3, blq, bl5, bl9 + 0x1)['then'](bl7)['catch'](blb);
                    }
                }
                );
            }
            ,
            bl3['prototype']['setUser'] = function(bl3) {
                return this['_user'] = Object(bl9['b'])(bl3),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setTags'] = function(bl3) {
                return this['_tags'] = bl6['a']({}, this['_tags'], Object(bl9['b'])(bl3)),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setTag'] = function(bl3, bl4) {
                var bl5;
                return this['_tags'] = bl6['a']({}, this['_tags'], ((bl5 = {})[bl3] = Object(bl9['b'])(bl4),
                bl5)),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setExtras'] = function(bl3) {
                return this['_extra'] = bl6['a']({}, this['_extra'], Object(bl9['b'])(bl3)),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setExtra'] = function(bl3, bl4) {
                var bl5;
                return this['_extra'] = bl6['a']({}, this['_extra'], ((bl5 = {})[bl3] = Object(bl9['b'])(bl4),
                bl5)),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setFingerprint'] = function(bl3) {
                return this['_fingerprint'] = Object(bl9['b'])(bl3),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setLevel'] = function(bl3) {
                return this['_level'] = Object(bl9['b'])(bl3),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setTransaction'] = function(bl3) {
                return this['_transaction'] = bl3,
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setContext'] = function(bl3, bl4) {
                return this['_context'][bl3] = bl4 ? Object(bl9['b'])(bl4) : void 0x0,
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['setSpan'] = function(bl3) {
                return this['_span'] = bl3,
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['startSpan'] = function(bl3) {
                var bl4 = new blb['a']();
                return bl4['setParent'](bl3),
                this['setSpan'](bl4),
                bl4;
            }
            ,
            bl3['prototype']['getSpan'] = function() {
                return this['_span'];
            }
            ,
            bl3['clone'] = function(bl4) {
                var bl5 = new bl3();
                return Object['assign'](bl5, bl4, {
                    '_scopeListeners': []
                }),
                bl4 && (bl5['_breadcrumbs'] = bl6['d'](bl4['_breadcrumbs']),
                bl5['_tags'] = bl6['a']({}, bl4['_tags']),
                bl5['_extra'] = bl6['a']({}, bl4['_extra']),
                bl5['_context'] = bl6['a']({}, bl4['_context']),
                bl5['_user'] = bl4['_user'],
                bl5['_level'] = bl4['_level'],
                bl5['_span'] = bl4['_span'],
                bl5['_transaction'] = bl4['_transaction'],
                bl5['_fingerprint'] = bl4['_fingerprint'],
                bl5['_eventProcessors'] = bl6['d'](bl4['_eventProcessors'])),
                bl5;
            }
            ,
            bl3['prototype']['clear'] = function() {
                return this['_breadcrumbs'] = [],
                this['_tags'] = {},
                this['_extra'] = {},
                this['_user'] = {},
                this['_context'] = {},
                this['_level'] = void 0x0,
                this['_transaction'] = void 0x0,
                this['_fingerprint'] = void 0x0,
                this['_span'] = void 0x0,
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['addBreadcrumb'] = function(bl3, bl4) {
                var bl5 = new Date()['getTime']() / 0x3e8
                  , bl7 = bl6['a']({
                    'timestamp': bl5
                }, bl3);
                return this['_breadcrumbs'] = void 0x0 !== bl4 && 0x0 <= bl4 ? bl6['d'](this['_breadcrumbs'], [Object(bl9['b'])(bl7)])['slice'](-bl4) : bl6['d'](this['_breadcrumbs'], [Object(bl9['b'])(bl7)]),
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['clearBreadcrumbs'] = function() {
                return this['_breadcrumbs'] = [],
                this['_notifyScopeListeners'](),
                this;
            }
            ,
            bl3['prototype']['_applyFingerprint'] = function(bl3) {
                bl3['fingerprint'] = bl3['fingerprint'] ? Array['isArray'](bl3['fingerprint']) ? bl3['fingerprint'] : [bl3['fingerprint']] : [],
                this['_fingerprint'] && (bl3['fingerprint'] = bl3['fingerprint']['concat'](this['_fingerprint'])),
                bl3['fingerprint'] && !bl3['fingerprint']['length'] && delete bl3['fingerprint'];
            }
            ,
            bl3['prototype']['applyToEvent'] = function(bl3, bl4) {
                return this['_extra'] && Object['keys'](this['_extra'])['length'] && (bl3['extra'] = bl6['a']({}, this['_extra'], bl3['extra'])),
                this['_tags'] && Object['keys'](this['_tags'])['length'] && (bl3['tags'] = bl6['a']({}, this['_tags'], bl3['tags'])),
                this['_user'] && Object['keys'](this['_user'])['length'] && (bl3['user'] = bl6['a']({}, this['_user'], bl3['user'])),
                this['_context'] && Object['keys'](this['_context'])['length'] && (bl3['contexts'] = bl6['a']({}, this['_context'], bl3['contexts'])),
                this['_level'] && (bl3['level'] = this['_level']),
                this['_transaction'] && (bl3['transaction'] = this['_transaction']),
                this['_span'] && (bl3['contexts'] = bl3['contexts'] || {},
                bl3['contexts']['trace'] = this['_span']),
                this['_applyFingerprint'](bl3),
                bl3['breadcrumbs'] = bl6['d'](bl3['breadcrumbs'] || [], this['_breadcrumbs']),
                bl3['breadcrumbs'] = 0x0 < bl3['breadcrumbs']['length'] ? bl3['breadcrumbs'] : void 0x0,
                this['_notifyEventProcessors'](bl6['d'](blS(), this['_eventProcessors']), bl3, bl4);
            }
            ,
            bl3;
        }();
        function blS() {
            var bl3 = Object(bla['e'])();
            return bl3['__SENTRY__'] = bl3['__SENTRY__'] || {},
            bl3['__SENTRY__']['globalEventProcessors'] = bl3['__SENTRY__']['globalEventProcessors'] || [],
            bl3['__SENTRY__']['globalEventProcessors'];
        }
        function blU(bl3) {
            blS()['push'](bl3);
        }
    }
    , function(blW, blX) {
        var blY = {}['toString'];
        blW['exports'] = Array['isArray'] || function(blW) {
            return '[object\x20Array]' == blY['call'](blW);
        }
        ;
    }
    , function(bm0, bm1, bm2) {
        var bm3 = bm2(0xb);
        bm1['createCodec'] = bmi,
        bm1['install'] = function(bm0) {
            for (var bm1 in bm0)
                bmd['prototype'][bm1] = bmf(bmd['prototype'][bm1], bm0[bm1]);
        }
        ,
        bm1['filter'] = function(bm0) {
            return bm3(bm0) ? function(bm0) {
                function bm1(bm0, bm1) {
                    return bm1(bm0);
                }
                return bm0 = bm0['slice'](),
                function(bm2) {
                    return bm0['reduce'](bm1, bm2);
                }
                ;
            }(bm0) : bm0;
        }
        ;
        var bmc = bm2(0x3);
        function bmd(bm0) {
            return this instanceof bmd ? (this['options'] = bm0,
            void this['init']()) : new bmd(bm0);
        }
        function bmf(bm0, bm1) {
            return bm0 && bm1 ? function() {
                return bm0['apply'](this, arguments),
                bm1['apply'](this, arguments);
            }
            : bm0 || bm1;
        }
        function bmi(bm0) {
            return new bmd(bm0);
        }
        bmd['prototype']['init'] = function() {
            var bm0 = this['options'];
            return bm0 && bm0['uint8array'] && (this['bufferish'] = bmc['Uint8Array']),
            this;
        }
        ,
        bm1['preset'] = bmi({
            'preset': !0x0
        });
    }
    , function(bml, bmm, bmn) {
        'use strict';
        bmn['d'](bmm, 'a', function() {
            return bmq;
        });
        var bmo = bmn(0x2)
          , bmp = /^[ \t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \t]*$/
          , bmq = function() {
            function bml(bml, bmm, bmn, bmp) {
                void 0x0 === bml && (bml = Object(bmo['g'])()),
                void 0x0 === bmm && (bmm = Object(bmo['g'])()['substring'](0x10)),
                this['_traceId'] = bml,
                this['_spanId'] = bmm,
                this['_sampled'] = bmn,
                this['_parent'] = bmp;
            }
            return bml['prototype']['setParent'] = function(bml) {
                return this['_parent'] = bml,
                this;
            }
            ,
            bml['prototype']['setSampled'] = function(bml) {
                return this['_sampled'] = bml,
                this;
            }
            ,
            bml['fromTraceparent'] = function(bmm) {
                var bmn = bmm['match'](bmp);
                if (bmn) {
                    var bmo;
                    '1' === bmn[0x3] ? bmo = !0x0 : '0' === bmn[0x3] && (bmo = !0x1);
                    var bmq = new bml(bmn[0x1],bmn[0x2],bmo);
                    return new bml(bmn[0x1],void 0x0,bmo,bmq);
                }
            }
            ,
            bml['prototype']['toTraceparent'] = function() {
                var bml = '';
                return !0x0 === this['_sampled'] ? bml = '-1' : !0x1 === this['_sampled'] && (bml = '-0'),
                this['_traceId'] + '-' + this['_spanId'] + bml;
            }
            ,
            bml['prototype']['toJSON'] = function() {
                return {
                    'parent': this['_parent'] && this['_parent']['toJSON']() || void 0x0,
                    'sampled': this['_sampled'],
                    'span_id': this['_spanId'],
                    'trace_id': this['_traceId']
                };
            }
            ,
            bml;
        }();
    }
    , function(bmD, bmE) {
        var bmF, bmG, bmH = bmD['exports'] = {};
        function bmI() {
            throw new Error('setTimeout\x20has\x20not\x20been\x20defined');
        }
        function bmJ() {
            throw new Error('clearTimeout\x20has\x20not\x20been\x20defined');
        }
        function bmK(bmD) {
            if (bmF === setTimeout)
                return setTimeout(bmD, 0x0);
            if ((bmF === bmI || !bmF) && setTimeout)
                return bmF = setTimeout,
                setTimeout(bmD, 0x0);
            try {
                return bmF(bmD, 0x0);
            } catch (bmM) {
                try {
                    return bmF['call'](null, bmD, 0x0);
                } catch (bmN) {
                    return bmF['call'](this, bmD, 0x0);
                }
            }
        }
        !function() {
            try {
                bmF = 'function' == typeof setTimeout ? setTimeout : bmI;
            } catch (bmO) {
                bmF = bmI;
            }
            try {
                bmG = 'function' == typeof clearTimeout ? clearTimeout : bmJ;
            } catch (bmP) {
                bmG = bmJ;
            }
        }();
        var bmQ, bmR = [], bmS = !0x1, bmT = -0x1;
        function bmU() {
            bmS && bmQ && (bmS = !0x1,
            bmQ['length'] ? bmR = bmQ['concat'](bmR) : bmT = -0x1,
            bmR['length'] && bmV());
        }
        function bmV() {
            if (!bmS) {
                var bmD = bmK(bmU);
                bmS = !0x0;
                for (var bmE = bmR['length']; bmE; ) {
                    for (bmQ = bmR,
                    bmR = []; ++bmT < bmE; )
                        bmQ && bmQ[bmT]['run']();
                    bmT = -0x1,
                    bmE = bmR['length'];
                }
                bmQ = null,
                bmS = !0x1,
                function(bmD) {
                    if (bmG === clearTimeout)
                        return clearTimeout(bmD);
                    if ((bmG === bmJ || !bmG) && clearTimeout)
                        return bmG = clearTimeout,
                        clearTimeout(bmD);
                    try {
                        bmG(bmD);
                    } catch (bmZ) {
                        try {
                            return bmG['call'](null, bmD);
                        } catch (bn0) {
                            return bmG['call'](this, bmD);
                        }
                    }
                }(bmD);
            }
        }
        function bn1(bmD, bmE) {
            this['fun'] = bmD,
            this['array'] = bmE;
        }
        function bn4() {}
        bmH['nextTick'] = function(bmD) {
            var bmE = Array(arguments['length'] - 0x1);
            if (0x1 < arguments['length'])
                for (var bmF = 0x1; bmF < arguments['length']; bmF++)
                    bmE[bmF - 0x1] = arguments[bmF];
            bmR['push'](new bn1(bmD,bmE)),
            0x1 !== bmR['length'] || bmS || bmK(bmV);
        }
        ,
        bn1['prototype']['run'] = function() {
            this['fun']['apply'](null, this['array']);
        }
        ,
        bmH['title'] = 'browser',
        bmH['browser'] = !0x0,
        bmH['env'] = {},
        bmH['argv'] = [],
        bmH['version'] = '',
        bmH['versions'] = {},
        bmH['on'] = bn4,
        bmH['addListener'] = bn4,
        bmH['once'] = bn4,
        bmH['off'] = bn4,
        bmH['removeListener'] = bn4,
        bmH['removeAllListeners'] = bn4,
        bmH['emit'] = bn4,
        bmH['prependListener'] = bn4,
        bmH['prependOnceListener'] = bn4,
        bmH['listeners'] = function() {
            return [];
        }
        ,
        bmH['binding'] = function() {
            throw new Error('process.binding\x20is\x20not\x20supported');
        }
        ,
        bmH['cwd'] = function() {
            return '/';
        }
        ,
        bmH['chdir'] = function() {
            throw new Error('process.chdir\x20is\x20not\x20supported');
        }
        ,
        bmH['umask'] = function() {
            return 0x0;
        }
        ;
    }
    , function(bn8, bn9, bna) {
        var bnb = bna(0x10)['ExtBuffer']
          , bnc = bna(0x31)
          , bnd = bna(0x32)
          , bne = bna(0xc);
        function bnf() {
            var bn8 = this['options'];
            return this['encode'] = function(bn8) {
                var bn9 = bnd['getWriteType'](bn8);
                return function(bn8, bna) {
                    var bnb = bn9[typeof bna];
                    if (!bnb)
                        throw new Error('Unsupported\x20type\x20\x22' + typeof bna + '\x22:\x20' + bna);
                    bnb(bn8, bna);
                }
                ;
            }(bn8),
            bn8 && bn8['preset'] && bnc['setExtPackers'](this),
            this;
        }
        bne['install']({
            'addExtPacker': function(bn8, bn9, bna) {
                function bnc(bn9) {
                    return bna && (bn9 = bna(bn9)),
                    new bnb(bn9,bn8);
                }
                bna = bne['filter'](bna);
                var bnd = bn9['name'];
                if (bnd && 'Object' !== bnd) {
                    var bnf = this['extPackers'] || (this['extPackers'] = {});
                    bnf[bnd] = bnc;
                } else {
                    var bnt = this['extEncoderList'] || (this['extEncoderList'] = []);
                    bnt['unshift']([bn9, bnc]);
                }
            },
            'getExtPacker': function(bn8) {
                var bn9 = this['extPackers'] || (this['extPackers'] = {})
                  , bna = bn8['constructor']
                  , bnb = bna && bna['name'] && bn9[bna['name']];
                if (bnb)
                    return bnb;
                for (var bnc, bnd = this['extEncoderList'] || (this['extEncoderList'] = []), bne = bnd['length'], bnf = 0x0; bnf < bne; bnf++)
                    if (bnc = bnd[bnf],
                    bna === bnc[0x0])
                        return bnc[0x1];
            },
            'init': bnf
        }),
        bn9['preset'] = bnf['call'](bne['preset']);
    }
    , function(bnC, bnD, bnE) {
        bnD['ExtBuffer'] = function bnC(bnD, bnE) {
            return this instanceof bnC ? (this['buffer'] = bnH['from'](bnD),
            void (this['type'] = bnE)) : new bnC(bnD,bnE);
        }
        ;
        var bnH = bnE(0x3);
    }
    , function(bnI, bnJ) {
        bnJ['read'] = function(bnI, bnJ, bnM, bnN, bnO) {
            var bnP, bnQ, bnR = 0x8 * bnO - bnN - 0x1, bnS = (0x1 << bnR) - 0x1, bnT = bnS >> 0x1, bnU = -0x7, bnV = bnM ? bnO - 0x1 : 0x0, bnW = bnM ? -0x1 : 0x1, bnX = bnI[bnJ + bnV];
            for (bnV += bnW,
            bnP = bnX & (0x1 << -bnU) - 0x1,
            bnX >>= -bnU,
            bnU += bnR; 0x0 < bnU; bnP = 0x100 * bnP + bnI[bnJ + bnV],
            bnV += bnW,
            bnU -= 0x8)
                ;
            for (bnQ = bnP & (0x1 << -bnU) - 0x1,
            bnP >>= -bnU,
            bnU += bnN; 0x0 < bnU; bnQ = 0x100 * bnQ + bnI[bnJ + bnV],
            bnV += bnW,
            bnU -= 0x8)
                ;
            if (0x0 === bnP)
                bnP = 0x1 - bnT;
            else {
                if (bnP === bnS)
                    return bnQ ? NaN : 0x1 / 0x0 * (bnX ? -0x1 : 0x1);
                bnQ += Math['pow'](0x2, bnN),
                bnP -= bnT;
            }
            return (bnX ? -0x1 : 0x1) * bnQ * Math['pow'](0x2, bnP - bnN);
        }
        ,
        bnJ['write'] = function(bnI, bnJ, bo0, bo1, bo2, bo3) {
            var bo4, bo5, bo6, bo7 = 0x8 * bo3 - bo2 - 0x1, bo8 = (0x1 << bo7) - 0x1, bo9 = bo8 >> 0x1, boa = 0x17 === bo2 ? Math['pow'](0x2, -0x18) - Math['pow'](0x2, -0x4d) : 0x0, bob = bo1 ? 0x0 : bo3 - 0x1, boc = bo1 ? 0x1 : -0x1, bod = 0x0 > bnJ || 0x0 === bnJ && 0x0 > 0x1 / bnJ ? 0x1 : 0x0;
            for (bnJ = Math['abs'](bnJ),
            isNaN(bnJ) || bnJ === 0x1 / 0x0 ? (bo5 = isNaN(bnJ) ? 0x1 : 0x0,
            bo4 = bo8) : (bo4 = Math['floor'](Math['log'](bnJ) / Math['LN2']),
            0x1 > bnJ * (bo6 = Math['pow'](0x2, -bo4)) && (bo4--,
            bo6 *= 0x2),
            0x2 <= (bnJ += 0x1 <= bo4 + bo9 ? boa / bo6 : boa * Math['pow'](0x2, 0x1 - bo9)) * bo6 && (bo4++,
            bo6 /= 0x2),
            bo4 + bo9 >= bo8 ? (bo5 = 0x0,
            bo4 = bo8) : 0x1 <= bo4 + bo9 ? (bo5 = (bnJ * bo6 - 0x1) * Math['pow'](0x2, bo2),
            bo4 += bo9) : (bo5 = bnJ * Math['pow'](0x2, bo9 - 0x1) * Math['pow'](0x2, bo2),
            bo4 = 0x0)); 0x8 <= bo2; bnI[bo0 + bob] = 0xff & bo5,
            bob += boc,
            bo5 /= 0x100,
            bo2 -= 0x8)
                ;
            for (bo4 = bo4 << bo2 | bo5,
            bo7 += bo2; 0x0 < bo7; bnI[bo0 + bob] = 0xff & bo4,
            bob += boc,
            bo4 /= 0x100,
            bo7 -= 0x8)
                ;
            bnI[bo0 + bob - boc] |= 0x80 * bod;
        }
        ;
    }
    , function(boe, bof, bog) {
        var boh, boi = bog(0x30);
        bof['copy'] = boo,
        bof['slice'] = bow,
        bof['toString'] = function() {
            return (!bom && bok['isBuffer'](this) ? this['toString'] : boi['toString'])['apply'](this, arguments);
        }
        ,
        bof['write'] = (boh = 'write',
        function() {
            var boe = this[boh] || boi[boh];
            return boe['apply'](this, arguments);
        }
        );
        var bok = bog(0x3)
          , bol = bok['global']
          , bom = bok['hasBuffer'] && 'TYPED_ARRAY_SUPPORT'in bol
          , bon = bom && !bol['TYPED_ARRAY_SUPPORT'];
        function boo(boe, bof, bog, boh) {
            var bol = bok['isBuffer'](this)
              , bom = bok['isBuffer'](boe);
            if (bol && bom)
                return this['copy'](boe, bof, bog, boh);
            if (!bon && !bol && !bom && bok['isView'](this) && bok['isView'](boe)) {
                var boo = bog || null != boh ? bow['call'](this, bog, boh) : this;
                return boe['set'](boo, bof),
                boo['length'];
            }
            return boi['copy']['call'](this, boe, bof, bog, boh);
        }
        function bow(boe, bof) {
            var bog = this['slice'] || !bon && this['subarray'];
            if (bog)
                return bog['call'](this, boe, bof);
            var boh = bok['alloc']['call'](this, bof - boe);
            return boo['call'](this, boh, 0x0, boe, bof),
            boh;
        }
    }
    , function(boB, boC, boD) {
        (function(boB) {
            !function(boC) {
                function boD(boB, boD, boJ) {
                    function boK(boB, boC, boD, boO) {
                        return this instanceof boK ? function(boB, boC, boD, boO, boT) {
                            if (bqp && bqq && (boC instanceof bqq && (boC = new bqp(boC)),
                            boO instanceof bqq && (boO = new bqp(boO))),
                            !(boC || boD || boO || bqn))
                                return void (boB['buffer'] = bq0(bqr, 0x0));
                            if (!bpQ(boC, boD)) {
                                var boU = bqn || Array;
                                boT = boD,
                                boO = boC,
                                boD = 0x0,
                                boC = new boU(0x8);
                            }
                            boB['buffer'] = boC,
                            boB['offset'] = boD |= 0x0,
                            void 0x0 === boO || ('string' == typeof boO ? function(boB, boC, boD, boO) {
                                var boT = 0x0
                                  , boU = boD['length']
                                  , bp1 = 0x0
                                  , bp2 = 0x0;
                                '-' === boD[0x0] && boT++;
                                for (var bp3, bp4 = boT; boT < boU && 0x0 <= (bp3 = parseInt(boD[boT++], boO)); )
                                    bp2 = bp2 * boO + bp3,
                                    bp1 = bp1 * boO + Math['floor'](bp2 / 0x100000000),
                                    bp2 %= 0x100000000;
                                bp4 && (bp1 = ~bp1,
                                bp2 ? bp2 = 0x100000000 - bp2 : bp1++),
                                bpa(boB, boC + bph, bp1),
                                bpa(boB, boC + bpi, bp2);
                            }(boC, boD, boO, boT || 0xa) : bpQ(boO, boT) ? bpU(boC, boD, boO, boT) : 'number' == typeof boT ? (bpa(boC, boD + bph, boO),
                            bpa(boC, boD + bpi, boT)) : 0x0 < boO ? bpn(boC, boD, boO) : 0x0 > boO ? bpo(boC, boD, boO) : bpU(boC, boD, bqr, 0x0));
                        }(this, boB, boC, boD, boO) : new boK(boB,boC,boD,boO);
                    }
                    function bp5() {
                        var boB = this['buffer']
                          , boC = this['offset']
                          , boD = bpe(boB, boC + bph)
                          , bp9 = bpe(boB, boC + bpi);
                        return boJ || (boD |= 0x0),
                        boD ? 0x100000000 * boD + bp9 : bp9;
                    }
                    function bpa(boB, boC, boD) {
                        boB[boC + bpm] = 0xff & boD,
                        boD >>= 0x8,
                        boB[boC + bpl] = 0xff & boD,
                        boD >>= 0x8,
                        boB[boC + bpk] = 0xff & boD,
                        boD >>= 0x8,
                        boB[boC + bpj] = 0xff & boD;
                    }
                    function bpe(boB, boC) {
                        return 0x1000000 * boB[boC + bpj] + (boB[boC + bpk] << 0x10) + (boB[boC + bpl] << 0x8) + boB[boC + bpm];
                    }
                    var bph = boD ? 0x0 : 0x4
                      , bpi = boD ? 0x4 : 0x0
                      , bpj = boD ? 0x0 : 0x3
                      , bpk = boD ? 0x1 : 0x2
                      , bpl = boD ? 0x2 : 0x1
                      , bpm = boD ? 0x3 : 0x0
                      , bpn = boD ? bq3 : bqd
                      , bpo = boD ? bq8 : bqi
                      , bpp = boK['prototype']
                      , bpq = 'is' + boB
                      , bpr = '_' + bpq;
                    return bpp['buffer'] = void 0x0,
                    bpp['offset'] = 0x0,
                    bpp[bpr] = !0x0,
                    bpp['toNumber'] = bp5,
                    bpp['toString'] = function(boB) {
                        var boC = this['buffer']
                          , boD = this['offset']
                          , bpv = bpe(boC, boD + bph)
                          , bpw = bpe(boC, boD + bpi)
                          , bpx = ''
                          , bpy = !boJ && 0x80000000 & bpv;
                        for (bpy && (bpv = ~bpv,
                        bpw = 0x100000000 - bpw),
                        boB = boB || 0xa; ; ) {
                            var bpz = bpv % boB * 0x100000000 + bpw;
                            if (bpv = Math['floor'](bpv / boB),
                            bpw = Math['floor'](bpz / boB),
                            bpx = (bpz % boB)['toString'](boB) + bpx,
                            !bpv && !bpw)
                                break;
                        }
                        return bpy && (bpx = '-' + bpx),
                        bpx;
                    }
                    ,
                    bpp['toJSON'] = bp5,
                    bpp['toArray'] = bpB,
                    bqo && (bpp['toBuffer'] = bpF),
                    bqp && (bpp['toArrayBuffer'] = bpK),
                    boK[bpq] = function(boB) {
                        return !(!boB || !boB[bpr]);
                    }
                    ,
                    boC[boB] = boK,
                    boK;
                }
                function bpB(boB) {
                    var boC = this['buffer']
                      , boD = this['offset'];
                    return bqn = null,
                    !0x1 !== boB && 0x0 === boD && 0x8 === boC['length'] && bqs(boC) ? boC : bq0(boC, boD);
                }
                function bpF(boC) {
                    var boD = this['buffer']
                      , bpB = this['offset'];
                    if (bqn = bqo,
                    !0x1 !== boC && 0x0 === bpB && 0x8 === boD['length'] && boB['isBuffer'](boD))
                        return boD;
                    var bpF = new bqo(0x8);
                    return bpU(bpF, 0x0, boD, bpB),
                    bpF;
                }
                function bpK(boB) {
                    var boC = this['buffer']
                      , boD = this['offset']
                      , bpB = boC['buffer'];
                    if (bqn = bqp,
                    !0x1 !== boB && 0x0 === boD && bpB instanceof bqq && 0x8 === bpB['byteLength'])
                        return bpB;
                    var bpF = new bqp(0x8);
                    return bpU(bpF, 0x0, boC, boD),
                    bpF['buffer'];
                }
                function bpQ(boB, boC) {
                    var boD = boB && boB['length'];
                    return boC |= 0x0,
                    boD && boC + 0x8 <= boD && 'string' != typeof boB[boC];
                }
                function bpU(boB, boC, boD, bpB) {
                    boC |= 0x0,
                    bpB |= 0x0;
                    for (var bpF = 0x0; 0x8 > bpF; bpF++)
                        boB[boC++] = 0xff & boD[bpB++];
                }
                function bq0(boB, boC) {
                    return Array['prototype']['slice']['call'](boB, boC, boC + 0x8);
                }
                function bq3(boB, boC, boD) {
                    for (var bpB = boC + 0x8; bpB > boC; )
                        boB[--bpB] = 0xff & boD,
                        boD /= 0x100;
                }
                function bq8(boB, boC, boD) {
                    var bpB = boC + 0x8;
                    for (boD++; bpB > boC; )
                        boB[--bpB] = 0xff ^ 0xff & -boD,
                        boD /= 0x100;
                }
                function bqd(boB, boC, boD) {
                    for (var bpB = boC + 0x8; boC < bpB; )
                        boB[boC++] = 0xff & boD,
                        boD /= 0x100;
                }
                function bqi(boB, boC, boD) {
                    var bpB = boC + 0x8;
                    for (boD++; boC < bpB; )
                        boB[boC++] = 0xff ^ 0xff & -boD,
                        boD /= 0x100;
                }
                var bqn, bqo = void 0x0 !== boB && boB, bqp = 'undefined' != typeof Uint8Array && Uint8Array, bqq = 'undefined' != typeof ArrayBuffer && ArrayBuffer, bqr = [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0], bqs = Array['isArray'] || function(boB) {
                    return !!boB && '[object\x20Array]' == Object['prototype']['toString']['call'](boB);
                }
                ;
                boD('Uint64BE', !0x0, !0x0),
                boD('Int64BE', !0x0, !0x1),
                boD('Uint64LE', !0x1, !0x0),
                boD('Int64LE', !0x1, !0x1);
            }('string' != typeof boC['nodeName'] ? boC : this || {});
        }
        ['call'](this, boD(0x1b)['Buffer']));
    }
    , function(bqu, bqv, bqw) {
        var bqx = bqw(0x10)['ExtBuffer']
          , bqy = bqw(0x34)
          , bqz = bqw(0x20)['readUint8']
          , bqA = bqw(0x35)
          , bqB = bqw(0xc);
        function bqC() {
            var bqu = this['options'];
            return this['decode'] = function(bqu) {
                var bqv = bqA['getReadToken'](bqu);
                return function(bqu) {
                    var bqw = bqz(bqu)
                      , bqx = bqv[bqw];
                    if (!bqx)
                        throw new Error('Invalid\x20type:\x20' + (bqw ? '0x' + bqw['toString'](0x10) : bqw));
                    return bqx(bqu);
                }
                ;
            }(bqu),
            bqu && bqu['preset'] && bqy['setExtUnpackers'](this),
            this;
        }
        bqB['install']({
            'addExtUnpacker': function(bqu, bqv) {
                (this['extUnpackers'] || (this['extUnpackers'] = []))[bqu] = bqB['filter'](bqv);
            },
            'getExtUnpacker': function(bqu) {
                return (this['extUnpackers'] || (this['extUnpackers'] = []))[bqu] || function(bqv) {
                    return new bqx(bqv,bqu);
                }
                ;
            },
            'init': bqC
        }),
        bqv['preset'] = bqC['call'](bqB['preset']);
    }
    , function(bqN, bqO) {
        var bqP = function() {
            return this;
        }();
        try {
            bqP = bqP || new Function('return\x20this')();
        } catch (bqQ) {
            'object' == typeof window && (bqP = window);
        }
        bqN['exports'] = bqP;
    }
    , function(bqR, bqS) {
        bqR['exports'] = [{
            'name': 'Sniper\x20Rifle',
            'src': 'weapon_1',
            'icon': 'icon_1',
            'sound': 'weapon_1',
            'animWhileAim': !0x0,
            'trail': !0x0,
            'flap': {
                'src': 'flap_0',
                'rot': 2.1,
                'scl': 0x1,
                'zOff': 0.43,
                'xOff': 0.17,
                'yOff': 0.53
            },
            'noAo': !0x0,
            'nAuto': !0x0,
            'type': 0x0,
            'scope': !0x0,
            'swapTime': 0x12c,
            'aimSpeed': 0x78,
            'spdMlt': 0.95,
            'ammo': 0x3,
            'reload': 0x5dc,
            'dmg': 0x64,
            'pierce': 0.2,
            'range': 0x3e8,
            'dropStart': 0xe6,
            'dmgDrop': 0x1e,
            'scale': 0.00115608717587935,
            'leftHoldY': -0.7,
            'rightHoldY': -0.75,
            'leftHoldZ': 2.4,
            'rightHoldZ': 0.4,
            'xOff': 0.8,
            'yOff': -0.68,
            'zOff': -1.8,
            'xOrg': 0x0,
            'yOrg': -0.55,
            'zOrg': -0.8,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0.1,
            'inspectR': 0.2,
            'inspectM': 0.1,
            'muzOff': 0x8,
            'muzMlt': 1.6,
            'rate': 0x384,
            'spread': 0x104,
            'zoom': 2.7,
            'leanMlt': 1.5,
            'recoil': 0.009,
            'recoilR': 0.02,
            'recover': 0.993,
            'recoverY': 0.997,
            'recoverF': 0.975,
            'recoilYM': 0.35,
            'recoilZ': 1.4,
            'recoilAnim': {
                'time': 0x118,
                'aimTime': 0x1f4,
                'recoilTweenY': 0.2
            },
            'jumpYM': 0.15,
            'rumble': 0.9,
            'rumbleDur': 0x1f4,
            'icnPad': 0x9
        }, {
            'name': 'Assault\x20Rifle',
            'src': 'weapon_2',
            'icon': 'icon_2',
            'sound': 'weapon_2',
            'noAo': !0x0,
            'swapWiggle': 0.3,
            'attach': 0x0,
            'attachYOff': -0.1,
            'attachZOff': -0.8,
            'zRot': 0x1,
            'type': 0x0,
            'swapTime': 0x12c,
            'aimSpeed': 0x82,
            'spdMlt': 0.95,
            'ammo': 0x1e,
            'rate': 0x6e,
            'reload': 0x4b0,
            'dmg': 0x17,
            'pierce': 0x1,
            'range': 0x2bc,
            'dmgDrop': 0x5,
            'scale': 0.00095745145728643,
            'leftHoldY': -0.45,
            'rightHoldY': -0.6,
            'leftHoldZ': 0.65,
            'rightHoldZ': -1.3,
            'xOff': 0x1,
            'yOff': -0.7,
            'yRot': 0.0018,
            'zOff': -3.6,
            'xOrg': 0x0,
            'yOrg': -0.625,
            'zOrg': -2.3,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0.1,
            'inspectR': 0.1,
            'inspectM': 1.5,
            'caseZOff': -1.7,
            'caseYOff': -0.2,
            'muzOff': 5.1,
            'muzOffY': -0.05,
            'muzMlt': 1.4,
            'spread': 0x64,
            'minSpread': 0x5,
            'zoom': 1.6,
            'leanMlt': 1.5,
            'recoil': 0.003,
            'recoilR': 0.02,
            'recover': 0.978,
            'recoverY': 0.995,
            'recoverF': 0.975,
            'jYMlt': 0.9,
            'recoilYM': 0.32,
            'recoilZ': 0x5,
            'recoilZM': -0.05,
            'aimRecMlt': 0.8,
            'recoilAnim': {
                'time': 0x12c,
                'recoilTweenY': 0.05
            },
            'jumpYM': 0.6,
            'rumble': 0.5,
            'icnPad': 0x5
        }, {
            'name': 'Pistol',
            'src': 'weapon_3',
            'icon': 'icon_3',
            'sound': 'weapon_3',
            'secondary': !0x0,
            'noAo': !0x0,
            'transp': !0x0,
            'nAuto': !0x0,
            'kill': ['', 0x4b],
            'swapWiggle': 0.3,
            'type': 0x1,
            'shine': 0xa,
            'swapTime': 0x15e,
            'aimSpeed': 0x78,
            'spdMlt': 1.05,
            'ammo': 0xa,
            'reload': 0x2bc,
            'dmg': 0x14,
            'range': 0x2bc,
            'dmgDrop': 0xa,
            'scale': 0.0003158947055276376,
            'leftHoldY': -1.1,
            'rightHoldY': -0.62,
            'leftHoldZ': -0.55,
            'rightHoldZ': -0.5,
            'xOff': 0.7,
            'yOff': -0.6,
            'zOff': -3.7,
            'xOrg': 0x0,
            'yRot': -0.005,
            'yOrg': -0.23,
            'zOrg': -3.9,
            'jYMlt': 0.1,
            'cLean': 0.3,
            'cRot': 0.3,
            'caseZOff': 0.2,
            'caseYOff': 0x0,
            'inspectR': 0.3,
            'inspectM': 0.8,
            'muzOff': 1.5,
            'muzOffY': 0x0,
            'muzMlt': 0.95,
            'rate': 0x96,
            'spread': 0x5a,
            'zoom': 1.4,
            'leanMlt': 0x1,
            'recoil': 0.006,
            'recoilR': 0.01,
            'recover': 0.98,
            'recoverY': 0.99,
            'recoverF': 0.98,
            'recoilYM': 0.2,
            'aimRecMlt': 0.4,
            'recoilZ': 3.6,
            'recoilZM': -0.4,
            'recoilAnim': {
                'time': 0xc8,
                'recoilTweenY': 0.2
            },
            'rumble': 0.4,
            'icnPad': -0xf
        }, {
            'name': 'Submachine\x20Gun',
            'src': 'weapon_4',
            'icon': 'icon_4',
            'sound': 'weapon_4',
            'swapWiggle': 0.5,
            'attach': 0x0,
            'attachYOff': -0.09,
            'attachZOff': -1.1,
            'zRot': 0.75,
            'noAo': !0x0,
            'type': 0x0,
            'shine': 0x32,
            'swapTime': 0x12c,
            'aimSpeed': 0x78,
            'spdMlt': 1.04,
            'ammo': 0x18,
            'reload': 0x3e8,
            'dmg': 0x12,
            'pierce': 0x1,
            'range': 0x2bc,
            'dmgDrop': 0xc,
            'scale': 0.000574897587939697,
            'leftHoldY': -0.4,
            'leftHoldX': -0.1,
            'rightHoldY': -0.5,
            'leftHoldZ': 1.1,
            'rightHoldZ': -0.95,
            'xOff': 0.85,
            'yOff': -0.86,
            'zOff': -0x3,
            'xOrg': 0x0,
            'yOrg': -0.59,
            'zOrg': -2.5,
            'cRot': 0.18,
            'cLean': 0.16,
            'inspectR': 0.2,
            'inspectM': 1.2,
            'caseYOff': -0.15,
            'caseZOff': -0.4,
            'muzOff': 2.15,
            'muzOffY': 0.1,
            'rate': 0x5a,
            'spread': 0x46,
            'minSpread': 0x5,
            'zoom': 1.65,
            'jYMlt': 0.8,
            'leanMlt': 0x1,
            'recoil': 0.0034,
            'recoilY': 0.77,
            'recoilR': 0.02,
            'recover': 0.975,
            'recoverY': 0.996,
            'recoverF': 0.975,
            'recoilZ': 3.2,
            'recoilZM': -0.1,
            'aimRecMlt': 0.7,
            'recoilAnim': {
                'time': 0xc8,
                'recoilTweenYM': 0.05,
                'recoilTweenY': 0.06
            },
            'expScale': 0.8,
            'rumble': 0.4,
            'icnPad': 0x0
        }, {
            'name': 'Revolver',
            'src': 'weapon_5',
            'icon': 'icon_5',
            'sound': 'weapon_5',
            'nAuto': !0x0,
            'noAo': !0x0,
            'nCase': !0x0,
            'transp': !0x0,
            'kill': ['', 0x32],
            'type': 0x0,
            'swapTime': 0xc8,
            'aimSpeed': 0x6e,
            'spdMlt': 1.04,
            'ammo': 0x6,
            'reload': 0x384,
            'dmg': 0x42,
            'pierce': 0.85,
            'dmgDrop': 0xa,
            'scale': 0.000515531266331653,
            'hDstOff': 0x2,
            'leftHoldY': -1.6,
            'rightHoldY': -0.8,
            'leftHoldZ': -0.6,
            'rightHoldZ': -0.72,
            'rotOff': -0.05,
            'xOff': 0.7,
            'yOff': -0.5,
            'zOff': -3.5,
            'xOrg': 0x0,
            'yOrg': -0.31,
            'zOrg': -3.5,
            'jYMlt': 0.96,
            'cLean': 0.2,
            'cRot': 0.1,
            'cDrop': 0.3,
            'inspectR': 0.1,
            'inspectM': 0.3,
            'muzOff': 2.75,
            'muzOffY': 0.2,
            'muzMlt': 0.95,
            'range': 0x2bc,
            'rate': 0x186,
            'spread': 0x64,
            'zoom': 1.45,
            'leanMlt': 1.6,
            'recoil': 0.013,
            'recoilR': 0.045,
            'recover': 0.982,
            'recoverY': 0.992,
            'recoverF': 0.98,
            'recoilYM': 0.6,
            'aimRecMlt': 0.55,
            'recoilZM': 0.01,
            'recoilZ': 3.4,
            'recoilAnim': {
                'time': 0x12c,
                'recoilTweenY': 0.33
            },
            'expScale': 0.9,
            'rumble': 0.7,
            'icnPad': -0xa
        }, {
            'name': 'Shotgun',
            'src': 'weapon_6',
            'icon': 'icon_6',
            'sound': 'weapon_6',
            'noAo': !0x0,
            'nAuto': !0x0,
            'nCase': !0x0,
            'transp': !0x0,
            'nRing': !0x0,
            'swapWiggle': 0.4,
            'shine': 0x23,
            'type': 0x0,
            'physRang': 0x23,
            'physPow': 0.085,
            'swapTime': 0x12c,
            'aimSpeed': 0x78,
            'spdMlt': 0x1,
            'ammo': 0x2,
            'reload': 0x44c,
            'dmg': 0x32,
            'dmgDrop': 0x32,
            'scale': 0.00082934281407035,
            'rightHoldX': 0.1,
            'leftHoldY': -0.5,
            'rightHoldY': -0.7,
            'leftHoldZ': 0.4,
            'rightHoldZ': -1.5,
            'xOff': 0.95,
            'yOff': -0.65,
            'zOff': -3.8,
            'xOrg': 0x0,
            'yOrg': -0.3,
            'zOrg': -2.8,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0.1,
            'jYMlt': 0.2,
            'inspectR': 0.1,
            'inspectM': 1.9,
            'muzOff': 0x6,
            'muzMlt': 1.8,
            'range': 0xf0,
            'rate': 0x190,
            'innac': 0x6e,
            'spread': 0x78,
            'shots': 0x5,
            'minSpread': 0x14,
            'zoom': 1.25,
            'leanMlt': 1.6,
            'recoil': 0.016,
            'recoilR': 0.015,
            'recover': 0.99,
            'recoverF': 0.97,
            'recoilZ': 0x2,
            'recoilZM': 0.2,
            'aimRecMlt': 0.5,
            'recoilYM': 0.6,
            'recoilAnim': {
                'time': 0x154,
                'recoilTweenY': 0.2
            },
            'jumpYM': 0.5,
            'rumble': 0.8,
            'icnPad': 0xa
        }, {
            'name': 'Light\x20Machine\x20Gun',
            'src': 'weapon_7',
            'icon': 'icon_7',
            'sound': 'weapon_7',
            'type': 0x0,
            'attach': 0x0,
            'swapWiggle': 0.3,
            'attachYOff': -0.085,
            'attachZOff': -0.7,
            'zRot': 0.75,
            'noAo': !0x0,
            'swapTime': 0x2bc,
            'aimSpeed': 0xc8,
            'spdMlt': 0.79,
            'ammo': 0x3c,
            'reload': 0xdac,
            'dmg': 0x14,
            'pierce': 0x1,
            'range': 0x2bc,
            'dmgDrop': 0xa,
            'jYMlt': 0.8,
            'scale': 0.0008856008924623108,
            'leftHoldY': -0.85,
            'leftHoldX': 0.4,
            'rightHoldY': -0.75,
            'leftHoldZ': 1.1,
            'rightHoldZ': -0.2,
            'yRot': -0.01,
            'xOff': 0.95,
            'yOff': -0.75,
            'zOff': -2.8,
            'xOrg': 0x0,
            'yOrg': -0.6,
            'zOrg': -1.8,
            'cLean': 0.1,
            'cRot': 0.1,
            'cDrop': 0.1,
            'inspectR': 0.2,
            'inspectM': 0.6,
            'caseInd': 0x2,
            'caseZOff': -0.5,
            'caseYOff': -0.1,
            'muzOff': 5.5,
            'muzOffY': -0.14,
            'muzMlt': 1.7,
            'rate': 0x78,
            'spread': 0x12c,
            'minSpread': 0xa,
            'zoom': 1.3,
            'leanMlt': 1.6,
            'recoil': 0.0032,
            'recoilR': 0.014,
            'recover': 0.98,
            'recoverY': 0.9975,
            'recoverF': 0.975,
            'recoilZ': 3.8,
            'recoilYM': 0.25,
            'recoilZ': 0x3,
            'recoilZM': -0.1,
            'aimRecMlt': 0.5,
            'recoilAnim': {
                'time': 0xc8,
                'recoilTweenY': 0.03
            },
            'jumpYM': 0.5,
            'expScale': 0.85,
            'rumble': 0.65,
            'icnPad': 0xa
        }, {
            'name': 'Semi\x20Auto',
            'src': 'weapon_8',
            'icon': 'icon_8',
            'sound': 'weapon_8',
            'attach': 0x0,
            'attachYOff': -0.08,
            'attachZOff': -1.55,
            'nAuto': !0x0,
            'zRot': 0.7,
            'type': 0x0,
            'noAo': !0x0,
            'swapWiggle': 0.4,
            'swapTime': 0x12c,
            'aimSpeed': 0x78,
            'spdMlt': 0x1,
            'ammo': 0x8,
            'reload': 0x5dc,
            'dmg': 0x22,
            'pierce': 0.2,
            'range': 0x3e8,
            'dmgDrop': 0x0,
            'scale': 0.00093686221105528,
            'leftHoldY': -0.5,
            'rightHoldY': -0.45,
            'leftHoldZ': 0.4,
            'rightHoldZ': -1.85,
            'jYMlt': 0.9,
            'xOff': 0.8,
            'yOff': -0.55,
            'zOff': -3.5,
            'xOrg': 0x0,
            'yOrg': -0.395,
            'yRot': -0.005,
            'zOrg': -3.4,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0.1,
            'inspectR': 0.2,
            'inspectM': 1.4,
            'muzOff': 0x4,
            'muzOffY': -0.05,
            'muzMlt': 1.1,
            'rate': 0x6e,
            'spread': 0xfa,
            'caseZOff': -1.3,
            'zoom': 2.1,
            'recoil': 0.01,
            'recoilR': 0.012,
            'recover': 0.98,
            'recoilY': 0.36,
            'recoverY': 0.994,
            'recoverF': 0.975,
            'recoilYM': 0.6,
            'recoilZ': 0x2,
            'recoilZM': 0.2,
            'aimRecMlt': 0.8,
            'recoilAnim': {
                'time': 0xfa,
                'recoilTweenY': 0.11
            },
            'jumpYM': 0.5,
            'rumble': 0.75,
            'icnPad': 0xa
        }, {
            'name': 'Rocket\x20Launcher',
            'src': 'weapon_9',
            'icon': 'icon_9',
            'sound': 'weapon_9',
            'nInsp': !0x0,
            'nSkill': !0x0,
            'nAuto': !0x0,
            'nCase': !0x0,
            'nRing': !0x0,
            'noAo': !0x0,
            'projectile': 0x0,
            'type': 0x0,
            'swapTime': 0x190,
            'swapWiggle': 0.4,
            'aimSpeed': 0xc8,
            'spdMlt': 0.9,
            'ammo': 0x1,
            'reload': 0x640,
            'scale': 0.00076263407035176,
            'leftHoldX': -0.1,
            'leftHoldY': -0.36,
            'rightHoldY': -0.3,
            'leftHoldZ': 1.2,
            'rightHoldX': -0.15,
            'rightHoldZ': -0.2,
            'jYMlt': 0.4,
            'xOff': 0.95,
            'yOff': -0.56,
            'zOff': -2.6,
            'xOrg': 0x0,
            'yOrg': -0.945,
            'zOrg': -0x3,
            'zRot': 0.9,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0.1,
            'muzOff': 0x5,
            'muzOffY': 0x0,
            'muzMlt': 1.5,
            'rate': 0x1,
            'spread': 0x78,
            'minSpread': 0xf,
            'zoom': 1.5,
            'leanMlt': 1.4,
            'landBob': 0.8,
            'recoil': 0.008,
            'recoilR': 0.012,
            'recover': 0.99,
            'recoverY': 0.998,
            'recoverF': 0.975,
            'recoilZ': 0x4,
            'recoilZM': -0.5,
            'aimRecMlt': 0.9,
            'recoilAnim': {
                'time': 0x190,
                'recoilTweenY': 0.25
            },
            'jumpYM': 0.3,
            'expScale': 0.7,
            'rumble': 0x1,
            'rumbleDur': 0x2ee,
            'icnPad': 0xa
        }, {
            'name': 'Akimbo\x20Uzi',
            'src': 'weapon_10',
            'icon': 'icon_10',
            'sound': 'weapon_10',
            'nInsp': !0x0,
            'noAim': !0x0,
            'akimbo': !0x0,
            'type': 0x0,
            'swapTime': 0x12c,
            'aimSpeed': 0x78,
            'spdMlt': 1.04,
            'ammo': 0x12,
            'reload': 0x4b0,
            'dmg': 0x12,
            'pierce': 0x1,
            'range': 0x2bc,
            'dmgDrop': 0xc,
            'scale': 0.9,
            'rightHoldY': -0.55,
            'leftHoldZ': 0.3,
            'leftHoldX': -0.25,
            'leftHoldY': -0.55,
            'rightHoldZ': 0.3,
            'rightHoldX': -0.25,
            'holdW': 1.3,
            'xOff': 1.5,
            'yOff': -0.95,
            'zOff': -3.3,
            'xOrg': 0x0,
            'yOrg': -0.62,
            'zOrg': -2.5,
            'zLnM': 0.4,
            'cLean': 0.1,
            'cRot': 0.1,
            'cDrop': 0.2,
            'caseYOff': -0.15,
            'caseZOff': -0.4,
            'muzOff': 3.6,
            'rate': 0x3c,
            'spread': 0x28,
            'spreadInc': 1.5,
            'minSpread': 0xa,
            'zoom': 1.5,
            'leanMlt': 0.6,
            'recoil': 0.0034,
            'recoilR': 0.015,
            'recover': 0.978,
            'recoverY': 0.996,
            'recoverF': 0.975,
            'recoilZ': 0x5,
            'recoilYM': 0.6,
            'recoilAnim': {
                'recoilTweenY': 0.01
            },
            'expScale': 0.7,
            'rumble': 0.4,
            'icnPad': -0x4
        }, {
            'name': 'Desert\x20Eagle',
            'src': 'weapon_11',
            'icon': 'icon_11',
            'sound': 'weapon_11',
            'secondary': !0x0,
            'minRec': 0xf,
            'nAuto': !0x0,
            'noAo': !0x0,
            'transp': !0x0,
            'kill': ['', 0x32],
            'type': 0x1,
            'swapTime': 0xc8,
            'aimSpeed': 0x78,
            'spdMlt': 0x1,
            'ammo': 0x6,
            'reload': 0x3e8,
            'dmg': 0x32,
            'pierce': 0.85,
            'dmgDrop': 0xa,
            'scale': 0.94,
            'leftHoldY': -0.9,
            'rightHoldY': -0.7,
            'leftHoldZ': -0.5,
            'rightHoldZ': -0.5,
            'holdW': 0.95,
            'xOff': 0x1,
            'yOff': -0.7,
            'zOff': -4.1,
            'xOrg': 0x0,
            'yOrg': -0.195,
            'zOrg': -3.8,
            'cLean': 0.3,
            'cRot': 0.3,
            'inspectR': 0.35,
            'inspectM': 0.9,
            'muzOff': 0x2,
            'muzMlt': 1.1,
            'range': 0x2bc,
            'rate': 0x190,
            'spread': 0x96,
            'jYMlt': 0.5,
            'zoom': 1.4,
            'leanMlt': 1.6,
            'recoil': 0.01,
            'recoilR': 0.01,
            'recover': 0.985,
            'recoverY': 0.996,
            'recoverF': 0.98,
            'recoilYM': 0.4,
            'aimRecMlt': 0.5,
            'recoilZ': 2.5,
            'recoilZM': 0.2,
            'recoilAnim': {
                'time': 0x122,
                'recoilTweenY': 0.35
            },
            'rumble': 0.8,
            'icnPad': -0xa
        }, {
            'name': 'Alien\x20Blaster',
            'src': 'weapon_13',
            'icon': 'icon_13',
            'sound': 'weapon_13',
            'secondary': !0x0,
            'nRing': !0x0,
            'nAuto': !0x0,
            'transp': !0x0,
            'nCase': !0x0,
            'minRec': 0x32,
            'kill': ['', 0x32],
            'type': 0x1,
            'swapTime': 0xc8,
            'aimSpeed': 0x78,
            'spdMlt': 0x1,
            'ammo': 0x4,
            'reload': 0x5dc,
            'dmg': 0x32,
            'pierce': 0.85,
            'dmgDrop': 0xa,
            'scale': 1.1,
            'leftHoldY': -0x1,
            'rightHoldY': -0.65,
            'leftHoldZ': -0.2,
            'rightHoldZ': -0.2,
            'xOff': 1.3,
            'yOff': -0.83,
            'zOff': -4.1,
            'xOrg': 0x0,
            'yRot': -0.01,
            'yOrg': -0.53,
            'zOrg': -3.8,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0x0,
            'inspectR': 0.1,
            'inspectM': 0.8,
            'holdW': 0.7,
            'muzOff': 2.2,
            'muzOffY': 0.1,
            'muzID': 0x3,
            'muzMlt': 1.1,
            'jYMlt': 0.8,
            'range': 0x2bc,
            'rate': 0xaa,
            'spread': 0x96,
            'zoom': 1.4,
            'leanMlt': 1.6,
            'recoil': 0.006,
            'recoilR': 0.01,
            'recover': 0.98,
            'recoverY': 0.99,
            'recoverF': 0.98,
            'recoilYM': 0.2,
            'recoilZ': 0x2,
            'aimRecMlt': 0.6,
            'recoilAnim': {
                'time': 0xc8,
                'recoilTweenY': 0.3
            },
            'rumble': 0.4,
            'icnPad': -0x8
        }, {
            'name': 'Combat\x20Knife',
            'icon': 'icon_0',
            'melee': !0x0,
            'nInsp': !0x0,
            'noSkins': !0x0,
            'holdW': 0.9,
            'swapWiggle': 0.3,
            'sounds': ['swish_0', 'swish_1'],
            'noAim': !0x0,
            'anim': function(bqR, bqS, bqV) {
                if (0x1 == bqV) {
                    bqR['handAnimInd'] = -0x1 * (bqR['handAnimInd'] || 0x1);
                    var bqW = !0x1;
                    bqR['meleeAnim']['anim'] && (bqR['meleeAnim']['anim']['stop'](),
                    bqW = 0x2 <= bqR['meleeAnim']['armM']),
                    bqR['resetMeleeAnim']();
                    var bqX = -1.2
                      , bqY = 0.7
                      , bqZ = -0.4;
                    bqW ? (bqX += 0.1,
                    bqR['meleeAnim']['weaR'] = bqX,
                    bqZ += 0.8,
                    bqR['meleeAnim']['armR'] = bqZ,
                    bqY += 0.2,
                    bqR['meleeAnim']['weaM'] = bqY,
                    bqR['meleeAnim']['flipW'] = Math['PI']) : bqX -= 0.4,
                    bqR['meleeAnim']['anim'] = new bqS['Tween'](bqR['meleeAnim'])['to']({
                        'armR': bqZ,
                        'lArm': 0x1,
                        'armT': bqW ? -0.2 : -0.8,
                        'armY': -0x3,
                        'armM': bqW ? -0xa : 0xd,
                        'armE': -0x2,
                        'weaR': bqX,
                        'weaM': bqY
                    }, 0xdc * (bqW ? 1.3 : 0x1))['easing'](bqS['Easing']['Cubic']['Out'])['onComplete'](function() {
                        bqR['meleeAnim']['anim'] = new bqS['Tween'](bqR['meleeAnim'])['to']({
                            'armR': 0x0,
                            'armT': 0x0,
                            'armY': 0x0,
                            'lArm': 0x0,
                            'armM': 0x0,
                            'armE': 0x0,
                            'weaR': 0x0,
                            'weaM': 0x0,
                            'flipW': 0x0
                        }, 0x15e)['easing'](bqS['Easing']['Cubic']['Out'])['start']();
                    })['start']();
                } else {
                    bqR['handAnimInd'] = -0x1 * (bqR['handAnimInd'] || 0x1);
                    var br0 = (0x1 == bqR['handAnimInd'] ? 'l' : 'r') + 'HndTween';
                    bqR[br0] && bqR[br0]['stop'](),
                    bqR[br0 + 'A'] = bqR[br0 + 'A'] || 0x0,
                    bqR[br0] = new bqS['Tween'](bqR)['to']({
                        [br0 + 'A']: 2.4
                    }, 0x1e)['easing'](bqS['Easing']['Linear']['None'])['onComplete'](function() {
                        bqR[br0] = new bqS['Tween'](bqR)['to']({
                            [br0 + 'A']: 0x0
                        }, 0xc8)['easing'](bqS['Easing']['Linear']['None'])['delay'](0x64)['start']();
                    })['start']();
                }
            },
            'type': 0x1,
            'swapTime': 0x15e,
            'aimSpeed': 0x78,
            'rate': 0xfa,
            'dmg': 0x32,
            'dmgDrop': 0x0,
            'range': 0xf,
            'spdMlt': 1.1,
            'spread': 0x64,
            'leftHoldY': -0.82,
            'leftHoldX': 1.5,
            'rightHoldX': -1.5,
            'rightHoldY': -0.82,
            'leftHoldZ': -0.5,
            'rightHoldZ': -0.5,
            'xOff': 0x0,
            'yOff': -0.6,
            'zOff': -3.6,
            'xOrg': 0.5,
            'yOrg': 0x0,
            'zOrg': -3.6,
            'zRM': 0.35,
            'zoom': 0x1,
            'leanMlt': 0.8,
            'recoil': 0.006,
            'recoilR': 0.01,
            'recover': 0.98,
            'recoverF': 0.98,
            'rumble': 0.4,
            'rumbleDur': 0x96,
            'icnPad': -0xa
        }, {
            'name': 'Crossbow',
            'src': 'weapon_17',
            'icon': 'icon_17',
            'sound': 'weapon_17',
            'noSkins': !0x0,
            'nInsp': !0x0,
            'nRing': !0x0,
            'nAuto': !0x0,
            'noAo': !0x0,
            'nCase': !0x0,
            'nMuz': !0x0,
            'attach': 0x0,
            'attachYOff': -0.1,
            'attachZOff': 0.65,
            'kill': ['', 0x64],
            'type': 0x0,
            'projectile': 0x1,
            'swapTime': 0xc8,
            'aimSpeed': 0x78,
            'spdMlt': 0x1,
            'ammo': 0x1,
            'reload': 0x3e8,
            'dmg': 0x64,
            'pierce': 0x0,
            'dmgDrop': 0x0,
            'scale': 0.0007303348040201011,
            'leftHoldY': -0.33,
            'rightHoldY': -0.28,
            'leftHoldZ': 2.2,
            'leftHoldX': 0x0,
            'rightHoldZ': 0.9,
            'xOff': 1.3,
            'yOff': -0.95,
            'zOff': -1.9,
            'xOrg': 0x0,
            'yOrg': -0.72,
            'zOrg': -0x1,
            'cLean': 0.1,
            'cRot': 0.1,
            'zRot': 0.9,
            'cDrop': 0.2,
            'holdW': 0.5,
            'muzOff': 2.2,
            'muzOffY': 0.1,
            'muzID': 0x3,
            'muzMlt': 1.1,
            'jYMlt': 0.95,
            'range': 0x2bc,
            'rate': 0x96,
            'spread': 0x12c,
            'zoom': 1.4,
            'leanMlt': 0.3,
            'recoil': 0.007,
            'recoilR': 0.01,
            'recover': 0.985,
            'recoverY': 0.996,
            'recoverF': 0.98,
            'recoilZ': 0x4,
            'recoilAnim': {
                'time': 0x12c,
                'recoilTweenY': 0.1
            },
            'rumble': 0.5,
            'icnPad': 0x9
        }, {
            'name': 'Famas',
            'src': 'weapon_15',
            'icon': 'icon_15',
            'sound': 'weapon_15',
            'noAo': !0x0,
            'nAuto': !0x0,
            'burst': {
                'c': 0x3,
                'r': 0x5a
            },
            'swapWiggle': 0.6,
            'attach': 0x0,
            'attachYOff': -0.1,
            'attachZOff': -0.5,
            'zRot': 0x1,
            'type': 0x0,
            'swapTime': 0x12c,
            'aimSpeed': 0x82,
            'spdMlt': 0.95,
            'ammo': 0x1e,
            'rate': 0x118,
            'reload': 0x4b0,
            'dmg': 0x1c,
            'pierce': 0x1,
            'range': 0x384,
            'dmgDrop': 0x5,
            'scale': 0.0008858419597989991,
            'leftHoldY': -0.45,
            'rightHoldY': -0.5,
            'leftHoldZ': 0.72,
            'rightHoldZ': -0x1,
            'xOff': 0x1,
            'yOff': -0.86,
            'yRot': 0.0018,
            'zOff': -0x3,
            'xOrg': 0x0,
            'yOrg': -1.14,
            'zOrg': -0x2,
            'cLean': 0.2,
            'cRot': 0.2,
            'cDrop': 0.1,
            'inspectR': 0.1,
            'inspectM': 1.5,
            'caseZOff': -1.7,
            'caseYOff': -0.2,
            'muzOff': 4.9,
            'muzOffY': -0.05,
            'muzMlt': 1.4,
            'spread': 0x5a,
            'minSpread': 0x5,
            'zoom': 1.5,
            'leanMlt': 1.5,
            'recoil': 0.0032,
            'recoilR': 0.02,
            'recover': 0.978,
            'recoverY': 0.995,
            'recoverF': 0.975,
            'jYMlt': 0.9,
            'recoilYM': 0.32,
            'recoilZ': 0x5,
            'recoilZM': 0.05,
            'aimRecMlt': 0.8,
            'recoilAnim': {
                'time': 0x12c,
                'recoilTweenY': 0.05
            },
            'jumpYM': 0.6,
            'rumble': 0.5,
            'expScale': 0.9,
            'icnPad': 0x9
        }],
        bqR['exports']['findWeaponBySrc'] = function(bqS) {
            for (var br2 = 0x0; br2 < bqR['exports']['length']; ++br2)
                if (bqR['exports'][br2]['src'] == 'weapon_' + bqS)
                    return bqR['exports'][br2];
            return null;
        }
        ,
        bqR['exports']['findIndexBySrc'] = function(bqS) {
            for (var br4 = 0x0; br4 < bqR['exports']['length']; ++br4)
                if (bqR['exports'][br4]['src'] == bqS)
                    return br4;
            return null;
        }
        ;
    }
    , function(br5, br6, br7) {
        var br8 = br7(0x4);
        const br9 = br7(0x7);
        br7(0x8);
        var bra = {};
        br5['exports']['getColor'] = function(br5, br6) {
            var br7 = br5 + '-' + (br6 || '')
              , br9 = bra[br7];
            return br9 || (br9 = new br8['Color'](br5),
            br6 && br9['multiplyScalar'](br6),
            bra[br7] = br9),
            br9;
        }
        ,
        br5['exports']['colorize'] = function(br6, br7, br8) {
            br7 = br8 || br5['exports']['getColor'](br7);
            for (var br9 = 0x0; br9 < br6['faces']['length']; ++br9)
                br6['faces'][br9]['vertexColors'][0x0] = br7,
                br6['faces'][br9]['vertexColors'][0x1] = br7,
                br6['faces'][br9]['vertexColors'][0x2] = br7;
        }
        ;
        var brj, brk = function(br5, br6, br7, br9) {
            for (var bra, brj = new br8['Vector2'](br6,br7)['multiplyScalar'](br9 || 0x1), brk = 0x0; brk < br5['faceVertexUvs']['length']; brk++) {
                bra = br5['faceVertexUvs'][brk];
                for (var brl = 0x0; brl < bra['length']; brl++)
                    for (var brm, brn = 0x0; 0x3 > brn; brn++)
                        (brm = bra[brl][brn]['multiply'](brj))['x'] = 0.5 + brm['x'] - brj['x'] / 0x2;
            }
        }, brl = function(br5, br6, br7, br8, br9, bra) {
            return br5 >= br7 - br9 && br5 <= br7 + br9 && br6 >= br8 - bra && br6 <= br8 + bra;
        }, brm = [], brn = ['a', 'b', 'c', 'd'];
        br5['exports']['generatePlane'] = function(br6, br7, bra, brH, brI, brJ) {
            br6 *= bra['ratio'] || 0x1;
            var brK = (bra['scale'] ? br6 + '_' + br7 + '_' : '') + (bra['scale'] || '') + (bra['tilesX'] || '') + (bra['tilesZ'] || '') + (bra['noise'] ? brH + '_' + brI + '_' + brJ : '') + (null == bra['colr'] ? '' : bra['colr']) + (bra['dark'] || '');
            if (!(brj = brm[brK])) {
                if (brj = new br8['PlaneGeometry'](0x1,0x1,bra['tilesX'] || 0x1,bra['tilesZ'] || 0x1),
                bra['noise']) {
                    for (var brL = {}, brM = bra['margin'] || 0x0, brN = 0x0; brN < brj['vertices']['length']; ++brN) {
                        var brO = brj['vertices'][brN]['x']
                          , brP = brj['vertices'][brN]['y'];
                        if (!bra['pinEdges'] || -0.5 != brO && 0.5 != brO && -0.5 != brP && 0.5 != brP)
                            if (bra['objects']) {
                                for (var brQ = 0x0; brQ < bra['objects']['length']; ++brQ)
                                    if (bra['objects'][brQ]['y'] - bra['objects'][brQ]['height'] <= brI + 0.1 && bra['objects'][brQ]['y'] + bra['objects'][brQ]['height'] > brI + bra['noise'] && brl(brJ + -brP * br6 * 0x2, brH + brO * br7 * 0x2, bra['objects'][brQ]['z'], bra['objects'][brQ]['x'], bra['objects'][brQ]['length'] + brM, bra['objects'][brQ]['width'] + brM)) {
                                        brj['vertices'][brN]['z'] = Math['random']() * bra['noise'] + 0x1,
                                        brL[brN] = br5['exports']['getColor'](bra['colr'], 0.6);
                                        break;
                                    }
                            } else
                                brj['vertices'][brN]['z'] = Math['random']() * bra['noise'];
                        brL[brN] || (brL[brN] = br5['exports']['getColor'](bra['colr']));
                    }
                    for (brN = 0x0; brN < brj['faces']['length']; brN++) {
                        for (var brR = brj['faces'][brN], brS = 0x0, brT = 0x0; 0x3 > brT; brT++)
                            brR['vertexColors'][brT] = brL[brR[brn[brT]]],
                            0x0 >= brj['vertices'][brR[brn[brT]]]['z'] && brS++;
                        0x3 <= brS && delete brj['faces'][brN];
                    }
                    brj['faces'] = brj['faces']['filter'](function(br5) {
                        return br5;
                    }),
                    brj['elementsNeedUpdate'] = !0x0;
                } else
                    br5['exports']['colorize'](brj, null, br5['exports']['getColor'](bra['colr'] || 0xffffff, bra['dark'] || 0x1));
                bra['scale'] && brk(brj, br7 / br9['worldUV'], br6 / br9['worldUV'], bra['scale']),
                brj['computeVertexNormals'](),
                brm[brK] = brj;
            }
            return brj;
        }
        ;
        var brV = [];
        br5['exports']['generateCube'] = function(br6, br7, bra, brl, brm) {
            br6 = br6 || [0x1, 0x1, 0x1, 0x1, 0x1, 0x1],
            brm['flipp'] = (br7 > bra || brl > bra) && 'floor_0' == brm['src'],
            brm['flippW'] = br7 > brl && 'floor_0' == brm['src'];
            for (var brn = (brm['scale'] ? br7 + '_' + bra + '_' + brl + '_' : '') + (null == brm['colr'] ? '' : brm['colr']) + (brm['scale'] || '') + (brm['flippW'] ? 'flw' : 'fnw') + (brm['flipp'] ? 'fl' : 'fn') + (brm['amb'] || '') + (brm['fAmb'] || '') + (brm['useScale'] || ''), bs2 = 0x0; bs2 < br6['length']; ++bs2)
                brn += '_' + br6[bs2];
            if (!(brj = brV[brn])) {
                brm['colr'] = null == brm['colr'] ? 0xffffff : brm['colr'];
                var bs3 = br5['exports']['getColor'](brm['colr'])
                  , bs4 = brm['amb'] ? br5['exports']['getColor'](brm['colr'], brm['amb']) : bs3;
                if (brm['fAmb']) {
                    var bs5 = bs3;
                    bs3 = bs4,
                    bs4 = bs5;
                }
                brj = new br8['Geometry']();
                var bs6, bs7 = [];
                br6[0x0] && ((bs6 = new br8['PlaneGeometry'](0x1,0x1))['rotateY'](Math['PI'] / 0x2),
                brm['flipp'] && bs6['rotateX'](Math['PI'] / 0x2),
                bs6['translate'](0.5, 0.5, 0x0),
                bs6['faces'][0x0]['vertexColors'] = [bs3, bs4, bs3],
                bs6['faces'][0x1]['vertexColors'] = [bs4, bs4, bs3],
                brm['scale'] && brk(bs6, (brm['flipp'] ? bra : brl) / br9['worldUV'], (brm['flipp'] ? brl : bra) / br9['worldUV'], brm['scale']),
                bs7['push'](bs6)),
                br6[0x1] && ((bs6 = new br8['PlaneGeometry'](0x1,0x1))['rotateY'](-Math['PI'] / 0x2),
                brm['flipp'] && bs6['rotateX'](Math['PI'] / 0x2),
                bs6['translate'](-0.5, 0.5, 0x0),
                bs6['faces'][0x0]['vertexColors'] = [bs3, bs4, bs3],
                bs6['faces'][0x1]['vertexColors'] = [bs4, bs4, bs3],
                brm['scale'] && brk(bs6, (brm['flipp'] ? bra : brl) / br9['worldUV'], (brm['flipp'] ? brl : bra) / br9['worldUV'], brm['scale']),
                bs7['push'](bs6)),
                br6[0x2] && ((bs6 = new br8['PlaneGeometry'](0x1,0x1))['rotateX'](-Math['PI'] / 0x2),
                brm['flippW'] && bs6['rotateY'](Math['PI'] / 0x2),
                bs6['translate'](0x0, 0x1, 0x0),
                bs6['faces'][0x0]['vertexColors'] = [bs3, bs3, bs3],
                bs6['faces'][0x1]['vertexColors'] = [bs3, bs3, bs3],
                brm['scale'] && brk(bs6, (brm['flippW'] ? brl : br7) / br9['worldUV'], (brm['flippW'] ? br7 : brl) / br9['worldUV'], brm['scale']),
                bs7['push'](bs6)),
                br6[0x3] && ((bs6 = new br8['PlaneGeometry'](0x1,0x1))['rotateX'](Math['PI'] / 0x2),
                brm['flippW'] && bs6['rotateY'](Math['PI'] / 0x2),
                bs6['translate'](0x0, 0x0, 0x0),
                bs6['faces'][0x0]['vertexColors'] = [bs4, bs4, bs4],
                bs6['faces'][0x1]['vertexColors'] = [bs4, bs4, bs4],
                brm['scale'] && brk(bs6, (brm['flippW'] ? brl : br7) / br9['worldUV'], (brm['flippW'] ? br7 : brl) / br9['worldUV'], brm['scale']),
                bs7['push'](bs6)),
                br6[0x4] && (bs6 = new br8['PlaneGeometry'](0x1,0x1),
                brm['flipp'] && bs6['rotateZ'](Math['PI'] / 0x2),
                bs6['translate'](0x0, 0.5, 0.5),
                bs6['faces'][0x0]['vertexColors'] = [bs3, bs4, bs3],
                bs6['faces'][0x1]['vertexColors'] = [bs4, bs4, bs3],
                brm['scale'] && brk(bs6, (brm['flipp'] ? bra : br7) / br9['worldUV'], (brm['flipp'] ? br7 : bra) / br9['worldUV'], brm['scale']),
                bs7['push'](bs6)),
                br6[0x5] && ((bs6 = new br8['PlaneGeometry'](0x1,0x1))['rotateY'](Math['PI']),
                brm['flipp'] && bs6['rotateZ'](Math['PI'] / 0x2),
                bs6['translate'](0x0, 0.5, -0.5),
                bs6['faces'][0x0]['vertexColors'] = [bs3, bs4, bs3],
                bs6['faces'][0x1]['vertexColors'] = [bs4, bs4, bs3],
                brm['scale'] && brk(bs6, (brm['flipp'] ? bra : br7) / br9['worldUV'], (brm['flipp'] ? br7 : bra) / br9['worldUV'], brm['scale']),
                bs7['push'](bs6));
                for (bs2 = 0x0; bs2 < bs7['length']; bs2++)
                    brj['merge'](bs7[bs2], new br8['Matrix4']());
                brm && brm['useScale'] && (brj['scale'](br7, bra, brl),
                brj['translate'](0x0, -bra / 0x2, 0x0)),
                brV[brn] = brj;
            }
            return brj;
        }
        ;
    }
    , function(bs8, bs9, bsa) {
        'use strict';
        bsa['d'](bs9, 'a', function() {
            return bsm;
        });
        var bsb = bsa(0x2)
          , bsc = Object(bsb['e'])()
          , bsd = 'Sentry\x20Logger\x20'
          , bse = function() {
            function bs8() {
                this['_enabled'] = !0x1;
            }
            return bs8['prototype']['disable'] = function() {
                this['_enabled'] = !0x1;
            }
            ,
            bs8['prototype']['enable'] = function() {
                this['_enabled'] = !0x0;
            }
            ,
            bs8['prototype']['log'] = function() {
                for (var bs8 = [], bs9 = 0x0; bs9 < arguments['length']; bs9++)
                    bs8[bs9] = arguments[bs9];
                this['_enabled'] && Object(bsb['b'])(function() {
                    bsc['console']['log'](bsd + '[Log]:\x20' + bs8['join']('\x20'));
                });
            }
            ,
            bs8['prototype']['warn'] = function() {
                for (var bs8 = [], bs9 = 0x0; bs9 < arguments['length']; bs9++)
                    bs8[bs9] = arguments[bs9];
                this['_enabled'] && Object(bsb['b'])(function() {
                    bsc['console']['warn'](bsd + '[Warn]:\x20' + bs8['join']('\x20'));
                });
            }
            ,
            bs8['prototype']['error'] = function() {
                for (var bs8 = [], bs9 = 0x0; bs9 < arguments['length']; bs9++)
                    bs8[bs9] = arguments[bs9];
                this['_enabled'] && Object(bsb['b'])(function() {
                    bsc['console']['error'](bsd + '[Error]:\x20' + bs8['join']('\x20'));
                });
            }
            ,
            bs8;
        }();
        bsc['__SENTRY__'] = bsc['__SENTRY__'] || {};
        var bsm = bsc['__SENTRY__']['logger'] || (bsc['__SENTRY__']['logger'] = new bse());
    }
    , function(bsn, bso, bsp) {
        bso['encode'] = function(bsn, bso) {
            var bsp = new bst(bso);
            return bsp['write'](bsn),
            bsp['read']();
        }
        ;
        var bst = bsp(0x1a)['EncodeBuffer'];
    }
    , function(bsu, bsv, bsw) {
        bsv['EncodeBuffer'] = bsy;
        var bsx = bsw(0xf)['preset'];
        function bsy(bsu) {
            if (!(this instanceof bsy))
                return new bsy(bsu);
            if (bsu && (this['options'] = bsu,
            bsu['codec'])) {
                var bsv = this['codec'] = bsu['codec'];
                bsv['bufferish'] && (this['bufferish'] = bsv['bufferish']);
            }
        }
        bsw(0x1d)['FlexEncoder']['mixin'](bsy['prototype']),
        bsy['prototype']['codec'] = bsx,
        bsy['prototype']['write'] = function(bsu) {
            this['codec']['encode'](this, bsu);
        }
        ;
    }
    , function(bsC, bsD, bsE) {
        'use strict';
        (function(bsC) {
            /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
            var bsG = bsE(0x2c)
              , bsH = bsE(0x11)
              , bsI = bsE(0xb);
            function bsJ() {
                return bsN['TYPED_ARRAY_SUPPORT'] ? 0x7fffffff : 0x3fffffff;
            }
            function bsK(bsC, bsD) {
                if (bsJ() < bsD)
                    throw new RangeError('Invalid\x20typed\x20array\x20length');
                return bsN['TYPED_ARRAY_SUPPORT'] ? (bsC = new Uint8Array(bsD))['__proto__'] = bsN['prototype'] : (null === bsC && (bsC = new bsN(bsD)),
                bsC['length'] = bsD),
                bsC;
            }
            function bsN(bsC, bsD, bsE) {
                if (!(bsN['TYPED_ARRAY_SUPPORT'] || this instanceof bsN))
                    return new bsN(bsC,bsD,bsE);
                if ('number' == typeof bsC) {
                    if ('string' == typeof bsD)
                        throw new Error('If\x20encoding\x20is\x20specified\x20then\x20the\x20first\x20argument\x20must\x20be\x20a\x20string');
                    return btb(this, bsC);
                }
                return bsR(this, bsC, bsD, bsE);
            }
            function bsR(bsC, bsD, bsE, bsG) {
                if ('number' == typeof bsD)
                    throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
                return 'undefined' != typeof ArrayBuffer && bsD instanceof ArrayBuffer ? function(bsC, bsD, bsE, bsG) {
                    if (bsD['byteLength'],
                    0x0 > bsE || bsD['byteLength'] < bsE)
                        throw new RangeError('\x27offset\x27\x20is\x20out\x20of\x20bounds');
                    if (bsD['byteLength'] < bsE + (bsG || 0x0))
                        throw new RangeError('\x27length\x27\x20is\x20out\x20of\x20bounds');
                    return bsD = void 0x0 === bsE && void 0x0 === bsG ? new Uint8Array(bsD) : void 0x0 === bsG ? new Uint8Array(bsD,bsE) : new Uint8Array(bsD,bsE,bsG),
                    bsN['TYPED_ARRAY_SUPPORT'] ? (bsC = bsD)['__proto__'] = bsN['prototype'] : bsC = btf(bsC, bsD),
                    bsC;
                }(bsC, bsD, bsE, bsG) : 'string' == typeof bsD ? function(bsC, bsD, bsE) {
                    if (('string' != typeof bsE || '' === bsE) && (bsE = 'utf8'),
                    !bsN['isEncoding'](bsE))
                        throw new TypeError('\x22encoding\x22\x20must\x20be\x20a\x20valid\x20string\x20encoding');
                    var bsG = 0x0 | btm(bsD, bsE)
                      , bsH = (bsC = bsK(bsC, bsG))['write'](bsD, bsE);
                    return bsH !== bsG && (bsC = bsC['slice'](0x0, bsH)),
                    bsC;
                }(bsC, bsD, bsE) : function(bsC, bsD) {
                    if (bsN['isBuffer'](bsD)) {
                        var bsE = 0x0 | btk(bsD['length']);
                        return 0x0 === (bsC = bsK(bsC, bsE))['length'] ? bsC : (bsD['copy'](bsC, 0x0, 0x0, bsE),
                        bsC);
                    }
                    if (bsD) {
                        if ('undefined' != typeof ArrayBuffer && bsD['buffer']instanceof ArrayBuffer || 'length'in bsD)
                            return 'number' != typeof bsD['length'] || function(bsC) {
                                return bsC != bsC;
                            }(bsD['length']) ? bsK(bsC, 0x0) : btf(bsC, bsD);
                        if ('Buffer' === bsD['type'] && bsI(bsD['data']))
                            return btf(bsC, bsD['data']);
                    }
                    throw new TypeError('First\x20argument\x20must\x20be\x20a\x20string,\x20Buffer,\x20ArrayBuffer,\x20Array,\x20or\x20array-like\x20object.');
                }(bsC, bsD);
            }
            function bt9(bsC) {
                if ('number' != typeof bsC)
                    throw new TypeError('\x22size\x22\x20argument\x20must\x20be\x20a\x20number');
                if (0x0 > bsC)
                    throw new RangeError('\x22size\x22\x20argument\x20must\x20not\x20be\x20negative');
            }
            function btb(bsC, bsD) {
                if (bt9(bsD),
                bsC = bsK(bsC, 0x0 > bsD ? 0x0 : 0x0 | btk(bsD)),
                !bsN['TYPED_ARRAY_SUPPORT'])
                    for (var bsE = 0x0; bsE < bsD; ++bsE)
                        bsC[bsE] = 0x0;
                return bsC;
            }
            function btf(bsC, bsD) {
                var bsE = 0x0 > bsD['length'] ? 0x0 : 0x0 | btk(bsD['length']);
                bsC = bsK(bsC, bsE);
                for (var bsG = 0x0; bsG < bsE; bsG += 0x1)
                    bsC[bsG] = 0xff & bsD[bsG];
                return bsC;
            }
            function btk(bsC) {
                if (bsC >= bsJ())
                    throw new RangeError('Attempt\x20to\x20allocate\x20Buffer\x20larger\x20than\x20maximum\x20size:\x200x' + bsJ()['toString'](0x10) + '\x20bytes');
                return 0x0 | bsC;
            }
            function btm(bsC, bsD) {
                if (bsN['isBuffer'](bsC))
                    return bsC['length'];
                if ('undefined' != typeof ArrayBuffer && 'function' == typeof ArrayBuffer['isView'] && (ArrayBuffer['isView'](bsC) || bsC instanceof ArrayBuffer))
                    return bsC['byteLength'];
                'string' != typeof bsC && (bsC = '' + bsC);
                var bsE = bsC['length'];
                if (0x0 === bsE)
                    return 0x0;
                for (var bsG = !0x1; ; )
                    switch (bsD) {
                    case 'ascii':
                    case 'latin1':
                    case 'binary':
                        return bsE;
                    case 'utf8':
                    case 'utf-8':
                    case void 0x0:
                        return bzw(bsC)['length'];
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return 0x2 * bsE;
                    case 'hex':
                        return bsE >>> 0x1;
                    case 'base64':
                        return bzE(bsC)['length'];
                    default:
                        if (bsG)
                            return bzw(bsC)['length'];
                        bsD = ('' + bsD)['toLowerCase'](),
                        bsG = !0x0;
                    }
            }
            function btr(bsC, bsD, bsE) {
                var bsG = bsC[bsD];
                bsC[bsD] = bsC[bsE],
                bsC[bsE] = bsG;
            }
            function btw(bsC, bsD, bsE, bsG, bsH) {
                if (0x0 === bsC['length'])
                    return -0x1;
                if ('string' == typeof bsE ? (bsG = bsE,
                bsE = 0x0) : 0x7fffffff < bsE ? bsE = 0x7fffffff : -0x80000000 > bsE && (bsE = -0x80000000),
                bsE = +bsE,
                isNaN(bsE) && (bsE = bsH ? 0x0 : bsC['length'] - 0x1),
                0x0 > bsE && (bsE = bsC['length'] + bsE),
                bsE >= bsC['length']) {
                    if (bsH)
                        return -0x1;
                    bsE = bsC['length'] - 0x1;
                } else if (0x0 > bsE) {
                    if (!bsH)
                        return -0x1;
                    bsE = 0x0;
                }
                if ('string' == typeof bsD && (bsD = bsN['from'](bsD, bsG)),
                bsN['isBuffer'](bsD))
                    return 0x0 === bsD['length'] ? -0x1 : btC(bsC, bsD, bsE, bsG, bsH);
                if ('number' == typeof bsD)
                    return bsD &= 0xff,
                    bsN['TYPED_ARRAY_SUPPORT'] && 'function' == typeof Uint8Array['prototype']['indexOf'] ? bsH ? Uint8Array['prototype']['indexOf']['call'](bsC, bsD, bsE) : Uint8Array['prototype']['lastIndexOf']['call'](bsC, bsD, bsE) : btC(bsC, [bsD], bsE, bsG, bsH);
                throw new TypeError('val\x20must\x20be\x20string,\x20number\x20or\x20Buffer');
            }
            function btC(bsC, bsD, bsE, bsG, bsH) {
                function bsI(bsC, bsD) {
                    return 0x1 === bsK ? bsC[bsD] : bsC['readUInt16BE'](bsD * bsK);
                }
                var bsJ, bsK = 0x1, bsN = bsC['length'], bsR = bsD['length'];
                if (void 0x0 !== bsG && ('ucs2' === (bsG = (bsG + '')['toLowerCase']()) || 'ucs-2' === bsG || 'utf16le' === bsG || 'utf-16le' === bsG)) {
                    if (0x2 > bsC['length'] || 0x2 > bsD['length'])
                        return -0x1;
                    bsK = 0x2,
                    bsN /= 0x2,
                    bsR /= 0x2,
                    bsE /= 0x2;
                }
                if (bsH) {
                    var bt9 = -0x1;
                    for (bsJ = bsE; bsJ < bsN; bsJ++)
                        if (bsI(bsC, bsJ) !== bsI(bsD, -0x1 === bt9 ? 0x0 : bsJ - bt9))
                            -0x1 !== bt9 && (bsJ -= bsJ - bt9),
                            bt9 = -0x1;
                        else if (-0x1 === bt9 && (bt9 = bsJ),
                        bsJ - bt9 + 0x1 === bsR)
                            return bt9 * bsK;
                } else
                    for (bsE + bsR > bsN && (bsE = bsN - bsR),
                    bsJ = bsE; 0x0 <= bsJ; bsJ--) {
                        for (var btb = !0x0, btf = 0x0; btf < bsR; btf++)
                            if (bsI(bsC, bsJ + btf) !== bsI(bsD, btf)) {
                                btb = !0x1;
                                break;
                            }
                        if (btb)
                            return bsJ;
                    }
                return -0x1;
            }
            function btS(bsC, bsD, bsE, bsG) {
                bsE = +bsE || 0x0;
                var bsH = bsC['length'] - bsE;
                bsG ? (bsG = +bsG) > bsH && (bsG = bsH) : bsG = bsH;
                var bsI = bsD['length'];
                if (0x0 != bsI % 0x2)
                    throw new TypeError('Invalid\x20hex\x20string');
                bsG > bsI / 0x2 && (bsG = bsI / 0x2);
                for (var bsJ, bsK = 0x0; bsK < bsG; ++bsK) {
                    if (bsJ = parseInt(bsD['substr'](0x2 * bsK, 0x2), 0x10),
                    isNaN(bsJ))
                        return bsK;
                    bsC[bsE + bsK] = bsJ;
                }
                return bsK;
            }
            function bu1(bsC, bsD, bsE, bsG) {
                return bzI(bzw(bsD, bsC['length'] - bsE), bsC, bsE, bsG);
            }
            function bu6(bsC, bsD, bsE, bsG) {
                return bzI(function(bsC) {
                    for (var bsD = [], bsE = 0x0; bsE < bsC['length']; ++bsE)
                        bsD['push'](0xff & bsC['charCodeAt'](bsE));
                    return bsD;
                }(bsD), bsC, bsE, bsG);
            }
            function bue(bsC, bsD, bsE, bsG) {
                return bu6(bsC, bsD, bsE, bsG);
            }
            function buj(bsC, bsD, bsE, bsG) {
                return bzI(bzE(bsD), bsC, bsE, bsG);
            }
            function buo(bsC, bsD, bsE, bsG) {
                return bzI(function(bsC, bsD) {
                    for (var bsE, bsG, bsH, bsI = [], bsJ = 0x0; bsJ < bsC['length'] && !(0x0 > (bsD -= 0x2)); ++bsJ)
                        bsE = bsC['charCodeAt'](bsJ),
                        bsG = bsE >> 0x8,
                        bsH = bsE % 0x100,
                        bsI['push'](bsH),
                        bsI['push'](bsG);
                    return bsI;
                }(bsD, bsC['length'] - bsE), bsC, bsE, bsG);
            }
            function buA(bsC, bsD, bsE) {
                return 0x0 === bsD && bsE === bsC['length'] ? bsG['fromByteArray'](bsC) : bsG['fromByteArray'](bsC['slice'](bsD, bsE));
            }
            function buE(bsC, bsD, bsE) {
                bsE = Math['min'](bsC['length'], bsE);
                for (var bsG = [], bsH = bsD; bsH < bsE; ) {
                    var bsI, bsJ, bsK, bsN, bsR = bsC[bsH], bt9 = null, btb = 0xef < bsR ? 0x4 : 0xdf < bsR ? 0x3 : 0xbf < bsR ? 0x2 : 0x1;
                    if (bsH + btb <= bsE)
                        0x1 === btb ? 0x80 > bsR && (bt9 = bsR) : 0x2 === btb ? 0x80 == (0xc0 & (bsI = bsC[bsH + 0x1])) && (0x7f < (bsN = (0x1f & bsR) << 0x6 | 0x3f & bsI) && (bt9 = bsN)) : 0x3 === btb ? (bsI = bsC[bsH + 0x1],
                        bsJ = bsC[bsH + 0x2],
                        0x80 == (0xc0 & bsI) && 0x80 == (0xc0 & bsJ) && (0x7ff < (bsN = (0xf & bsR) << 0xc | (0x3f & bsI) << 0x6 | 0x3f & bsJ) && (0xd800 > bsN || 0xdfff < bsN) && (bt9 = bsN))) : 0x4 === btb && (bsI = bsC[bsH + 0x1],
                        bsJ = bsC[bsH + 0x2],
                        bsK = bsC[bsH + 0x3],
                        0x80 == (0xc0 & bsI) && 0x80 == (0xc0 & bsJ) && 0x80 == (0xc0 & bsK) && (0xffff < (bsN = (0xf & bsR) << 0x12 | (0x3f & bsI) << 0xc | (0x3f & bsJ) << 0x6 | 0x3f & bsK) && 0x110000 > bsN && (bt9 = bsN)));
                    null === bt9 ? (bt9 = 0xfffd,
                    btb = 0x1) : 0xffff < bt9 && (bt9 -= 0x10000,
                    bsG['push'](0xd800 | 0x3ff & bt9 >>> 0xa),
                    bt9 = 0xdc00 | 0x3ff & bt9),
                    bsG['push'](bt9),
                    bsH += btb;
                }
                return function(bsC) {
                    var bsD = bsC['length'];
                    if (bsD <= bw3)
                        return String['fromCharCode']['apply'](String, bsC);
                    for (var bsE = '', bsG = 0x0; bsG < bsD; )
                        bsE += String['fromCharCode']['apply'](String, bsC['slice'](bsG, bsG += bw3));
                    return bsE;
                }(bsG);
            }
            bsD['Buffer'] = bsN,
            bsD['SlowBuffer'] = function(bsC) {
                return +bsC != bsC && (bsC = 0x0),
                bsN['alloc'](+bsC);
            }
            ,
            bsD['INSPECT_MAX_BYTES'] = 0x32,
            bsN['TYPED_ARRAY_SUPPORT'] = void 0x0 === bsC['TYPED_ARRAY_SUPPORT'] ? function() {
                try {
                    var bsC = new Uint8Array(0x1);
                    return bsC['__proto__'] = {
                        '__proto__': Uint8Array['prototype'],
                        'foo': function() {
                            return 0x2a;
                        }
                    },
                    0x2a === bsC['foo']() && 'function' == typeof bsC['subarray'] && 0x0 === bsC['subarray'](0x1, 0x1)['byteLength'];
                } catch (buX) {
                    return !0x1;
                }
            }() : bsC['TYPED_ARRAY_SUPPORT'],
            bsD['kMaxLength'] = bsJ(),
            bsN['poolSize'] = 0x2000,
            bsN['_augment'] = function(bsC) {
                return bsC['__proto__'] = bsN['prototype'],
                bsC;
            }
            ,
            bsN['from'] = function(bsC, bsD, bsE) {
                return bsR(null, bsC, bsD, bsE);
            }
            ,
            bsN['TYPED_ARRAY_SUPPORT'] && (bsN['prototype']['__proto__'] = Uint8Array['prototype'],
            bsN['__proto__'] = Uint8Array,
            'undefined' != typeof Symbol && Symbol['species'] && bsN[Symbol['species']] === bsN && Object['defineProperty'](bsN, Symbol['species'], {
                'value': null,
                'configurable': !0x0
            })),
            bsN['alloc'] = function(bsC, bsD, bsE) {
                return function(bsC, bsD, bsE, bsG) {
                    return bt9(bsD),
                    0x0 >= bsD ? bsK(bsC, bsD) : void 0x0 === bsE ? bsK(bsC, bsD) : 'string' == typeof bsG ? bsK(bsC, bsD)['fill'](bsE, bsG) : bsK(bsC, bsD)['fill'](bsE);
                }(null, bsC, bsD, bsE);
            }
            ,
            bsN['allocUnsafe'] = function(bsC) {
                return btb(null, bsC);
            }
            ,
            bsN['allocUnsafeSlow'] = function(bsC) {
                return btb(null, bsC);
            }
            ,
            bsN['isBuffer'] = function(bsC) {
                return !(null == bsC || !bsC['_isBuffer']);
            }
            ,
            bsN['compare'] = function(bsC, bsD) {
                if (!bsN['isBuffer'](bsC) || !bsN['isBuffer'](bsD))
                    throw new TypeError('Arguments\x20must\x20be\x20Buffers');
                if (bsC === bsD)
                    return 0x0;
                for (var bsE = bsC['length'], bsG = bsD['length'], bsH = 0x0, bsI = Math['min'](bsE, bsG); bsH < bsI; ++bsH)
                    if (bsC[bsH] !== bsD[bsH]) {
                        bsE = bsC[bsH],
                        bsG = bsD[bsH];
                        break;
                    }
                return bsE < bsG ? -0x1 : bsG < bsE ? 0x1 : 0x0;
            }
            ,
            bsN['isEncoding'] = function(bsC) {
                switch ((bsC + '')['toLowerCase']()) {
                case 'hex':
                case 'utf8':
                case 'utf-8':
                case 'ascii':
                case 'latin1':
                case 'binary':
                case 'base64':
                case 'ucs2':
                case 'ucs-2':
                case 'utf16le':
                case 'utf-16le':
                    return !0x0;
                default:
                    return !0x1;
                }
            }
            ,
            bsN['concat'] = function(bsC, bsD) {
                if (!bsI(bsC))
                    throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
                if (0x0 === bsC['length'])
                    return bsN['alloc'](0x0);
                var bsE;
                if (void 0x0 === bsD)
                    for (bsD = 0x0,
                    bsE = 0x0; bsE < bsC['length']; ++bsE)
                        bsD += bsC[bsE]['length'];
                var bsG = bsN['allocUnsafe'](bsD)
                  , bsH = 0x0;
                for (bsE = 0x0; bsE < bsC['length']; ++bsE) {
                    var bsJ = bsC[bsE];
                    if (!bsN['isBuffer'](bsJ))
                        throw new TypeError('\x22list\x22\x20argument\x20must\x20be\x20an\x20Array\x20of\x20Buffers');
                    bsJ['copy'](bsG, bsH),
                    bsH += bsJ['length'];
                }
                return bsG;
            }
            ,
            bsN['byteLength'] = btm,
            bsN['prototype']['_isBuffer'] = !0x0,
            bsN['prototype']['swap16'] = function() {
                var bsC = this['length'];
                if (0x0 != bsC % 0x2)
                    throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2016-bits');
                for (var bsD = 0x0; bsD < bsC; bsD += 0x2)
                    btr(this, bsD, bsD + 0x1);
                return this;
            }
            ,
            bsN['prototype']['swap32'] = function() {
                var bsC = this['length'];
                if (0x0 != bsC % 0x4)
                    throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2032-bits');
                for (var bsD = 0x0; bsD < bsC; bsD += 0x4)
                    btr(this, bsD, bsD + 0x3),
                    btr(this, bsD + 0x1, bsD + 0x2);
                return this;
            }
            ,
            bsN['prototype']['swap64'] = function() {
                var bsC = this['length'];
                if (0x0 != bsC % 0x8)
                    throw new RangeError('Buffer\x20size\x20must\x20be\x20a\x20multiple\x20of\x2064-bits');
                for (var bsD = 0x0; bsD < bsC; bsD += 0x8)
                    btr(this, bsD, bsD + 0x7),
                    btr(this, bsD + 0x1, bsD + 0x6),
                    btr(this, bsD + 0x2, bsD + 0x5),
                    btr(this, bsD + 0x3, bsD + 0x4);
                return this;
            }
            ,
            bsN['prototype']['toString'] = function() {
                var bsC = 0x0 | this['length'];
                return 0x0 == bsC ? '' : 0x0 === arguments['length'] ? buE(this, 0x0, bsC) : function(bsC, bsD, bsE) {
                    var bsG = !0x1;
                    if ((void 0x0 === bsD || 0x0 > bsD) && (bsD = 0x0),
                    bsD > this['length'])
                        return '';
                    if ((void 0x0 === bsE || bsE > this['length']) && (bsE = this['length']),
                    0x0 >= bsE)
                        return '';
                    if ((bsE >>>= 0x0) <= (bsD >>>= 0x0))
                        return '';
                    for (bsC || (bsC = 'utf8'); ; )
                        switch (bsC) {
                        case 'hex':
                            return bwg(this, bsD, bsE);
                        case 'utf8':
                        case 'utf-8':
                            return buE(this, bsD, bsE);
                        case 'ascii':
                            return bw4(this, bsD, bsE);
                        case 'latin1':
                        case 'binary':
                            return bwa(this, bsD, bsE);
                        case 'base64':
                            return buA(this, bsD, bsE);
                        case 'ucs2':
                        case 'ucs-2':
                        case 'utf16le':
                        case 'utf-16le':
                            return bwn(this, bsD, bsE);
                        default:
                            if (bsG)
                                throw new TypeError('Unknown\x20encoding:\x20' + bsC);
                            bsC = (bsC + '')['toLowerCase'](),
                            bsG = !0x0;
                        }
                }
                ['apply'](this, arguments);
            }
            ,
            bsN['prototype']['equals'] = function(bsC) {
                if (!bsN['isBuffer'](bsC))
                    throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
                return this === bsC || 0x0 === bsN['compare'](this, bsC);
            }
            ,
            bsN['prototype']['inspect'] = function() {
                var bsC = ''
                  , bsE = bsD['INSPECT_MAX_BYTES'];
                return 0x0 < this['length'] && (bsC = this['toString']('hex', 0x0, bsE)['match'](/.{2}/g)['join']('\x20'),
                this['length'] > bsE && (bsC += '\x20...\x20')),
                '<Buffer\x20' + bsC + '>';
            }
            ,
            bsN['prototype']['compare'] = function(bsC, bsD, bsE, bsG, bsH) {
                if (!bsN['isBuffer'](bsC))
                    throw new TypeError('Argument\x20must\x20be\x20a\x20Buffer');
                if (void 0x0 === bsD && (bsD = 0x0),
                void 0x0 === bsE && (bsE = bsC ? bsC['length'] : 0x0),
                void 0x0 === bsG && (bsG = 0x0),
                void 0x0 === bsH && (bsH = this['length']),
                0x0 > bsD || bsE > bsC['length'] || 0x0 > bsG || bsH > this['length'])
                    throw new RangeError('out\x20of\x20range\x20index');
                if (bsG >= bsH && bsD >= bsE)
                    return 0x0;
                if (bsG >= bsH)
                    return -0x1;
                if (bsD >= bsE)
                    return 0x1;
                if (this === bsC)
                    return 0x0;
                for (var bsI = (bsH >>>= 0x0) - (bsG >>>= 0x0), bsJ = (bsE >>>= 0x0) - (bsD >>>= 0x0), bsK = Math['min'](bsI, bsJ), bsR = this['slice'](bsG, bsH), bt9 = bsC['slice'](bsD, bsE), btb = 0x0; btb < bsK; ++btb)
                    if (bsR[btb] !== bt9[btb]) {
                        bsI = bsR[btb],
                        bsJ = bt9[btb];
                        break;
                    }
                return bsI < bsJ ? -0x1 : bsJ < bsI ? 0x1 : 0x0;
            }
            ,
            bsN['prototype']['includes'] = function(bsC, bsD, bsE) {
                return -0x1 !== this['indexOf'](bsC, bsD, bsE);
            }
            ,
            bsN['prototype']['indexOf'] = function(bsC, bsD, bsE) {
                return btw(this, bsC, bsD, bsE, !0x0);
            }
            ,
            bsN['prototype']['lastIndexOf'] = function(bsC, bsD, bsE) {
                return btw(this, bsC, bsD, bsE, !0x1);
            }
            ,
            bsN['prototype']['write'] = function(bsC, bsD, bsE, bsG) {
                if (void 0x0 === bsD)
                    bsG = 'utf8',
                    bsE = this['length'],
                    bsD = 0x0;
                else if (void 0x0 === bsE && 'string' == typeof bsD)
                    bsG = bsD,
                    bsE = this['length'],
                    bsD = 0x0;
                else {
                    if (!isFinite(bsD))
                        throw new Error('Buffer.write(string,\x20encoding,\x20offset[,\x20length])\x20is\x20no\x20longer\x20supported');
                    bsD |= 0x0,
                    isFinite(bsE) ? (bsE |= 0x0,
                    void 0x0 === bsG && (bsG = 'utf8')) : (bsG = bsE,
                    bsE = void 0x0);
                }
                var bsH = this['length'] - bsD;
                if ((void 0x0 === bsE || bsE > bsH) && (bsE = bsH),
                0x0 < bsC['length'] && (0x0 > bsE || 0x0 > bsD) || bsD > this['length'])
                    throw new RangeError('Attempt\x20to\x20write\x20outside\x20buffer\x20bounds');
                bsG || (bsG = 'utf8');
                for (var bsI = !0x1; ; )
                    switch (bsG) {
                    case 'hex':
                        return btS(this, bsC, bsD, bsE);
                    case 'utf8':
                    case 'utf-8':
                        return bu1(this, bsC, bsD, bsE);
                    case 'ascii':
                        return bu6(this, bsC, bsD, bsE);
                    case 'latin1':
                    case 'binary':
                        return bue(this, bsC, bsD, bsE);
                    case 'base64':
                        return buj(this, bsC, bsD, bsE);
                    case 'ucs2':
                    case 'ucs-2':
                    case 'utf16le':
                    case 'utf-16le':
                        return buo(this, bsC, bsD, bsE);
                    default:
                        if (bsI)
                            throw new TypeError('Unknown\x20encoding:\x20' + bsG);
                        bsG = ('' + bsG)['toLowerCase'](),
                        bsI = !0x0;
                    }
            }
            ,
            bsN['prototype']['toJSON'] = function() {
                return {
                    'type': 'Buffer',
                    'data': Array['prototype']['slice']['call'](this['_arr'] || this, 0x0)
                };
            }
            ;
            var bw3 = 0x1000;
            function bw4(bsC, bsD, bsE) {
                var bsG = '';
                bsE = Math['min'](bsC['length'], bsE);
                for (var bsH = bsD; bsH < bsE; ++bsH)
                    bsG += String['fromCharCode'](0x7f & bsC[bsH]);
                return bsG;
            }
            function bwa(bsC, bsD, bsE) {
                var bsG = '';
                bsE = Math['min'](bsC['length'], bsE);
                for (var bsH = bsD; bsH < bsE; ++bsH)
                    bsG += String['fromCharCode'](bsC[bsH]);
                return bsG;
            }
            function bwg(bsC, bsD, bsE) {
                var bsG = bsC['length'];
                (!bsD || 0x0 > bsD) && (bsD = 0x0),
                (!bsE || 0x0 > bsE || bsE > bsG) && (bsE = bsG);
                for (var bsH = '', bsI = bsD; bsI < bsE; ++bsI)
                    bsH += bzu(bsC[bsI]);
                return bsH;
            }
            function bwn(bsC, bsD, bsE) {
                for (var bsG = bsC['slice'](bsD, bsE), bsH = '', bsI = 0x0; bsI < bsG['length']; bsI += 0x2)
                    bsH += String['fromCharCode'](bsG[bsI] + 0x100 * bsG[bsI + 0x1]);
                return bsH;
            }
            function bwu(bsC, bsD, bsE) {
                if (0x0 != bsC % 0x1 || 0x0 > bsC)
                    throw new RangeError('offset\x20is\x20not\x20uint');
                if (bsC + bsD > bsE)
                    throw new RangeError('Trying\x20to\x20access\x20beyond\x20buffer\x20length');
            }
            function bwy(bsC, bsD, bsE, bsG, bsH, bsI) {
                if (!bsN['isBuffer'](bsC))
                    throw new TypeError('\x22buffer\x22\x20argument\x20must\x20be\x20a\x20Buffer\x20instance');
                if (bsD > bsH || bsD < bsI)
                    throw new RangeError('\x22value\x22\x20argument\x20is\x20out\x20of\x20bounds');
                if (bsE + bsG > bsC['length'])
                    throw new RangeError('Index\x20out\x20of\x20range');
            }
            function bwF(bsC, bsD, bsE, bsG) {
                0x0 > bsD && (bsD = 0xffff + bsD + 0x1);
                for (var bsH = 0x0, bsI = Math['min'](bsC['length'] - bsE, 0x2); bsH < bsI; ++bsH)
                    bsC[bsE + bsH] = (bsD & 0xff << 0x8 * (bsG ? bsH : 0x1 - bsH)) >>> 0x8 * (bsG ? bsH : 0x1 - bsH);
            }
            function bwM(bsC, bsD, bsE, bsG) {
                0x0 > bsD && (bsD = 0xffffffff + bsD + 0x1);
                for (var bsH = 0x0, bsI = Math['min'](bsC['length'] - bsE, 0x4); bsH < bsI; ++bsH)
                    bsC[bsE + bsH] = 0xff & bsD >>> 0x8 * (bsG ? bsH : 0x3 - bsH);
            }
            function bwT(bsC, bsD, bsE, bsG) {
                if (bsE + bsG > bsC['length'])
                    throw new RangeError('Index\x20out\x20of\x20range');
                if (0x0 > bsE)
                    throw new RangeError('Index\x20out\x20of\x20range');
            }
            function bwY(bsC, bsD, bsE, bsG, bsI) {
                return bsI || bwT(bsC, 0x0, bsE, 0x4),
                bsH['write'](bsC, bsD, bsE, bsG, 0x17, 0x4),
                bsE + 0x4;
            }
            function bx4(bsC, bsD, bsE, bsG, bsI) {
                return bsI || bwT(bsC, 0x0, bsE, 0x8),
                bsH['write'](bsC, bsD, bsE, bsG, 0x34, 0x8),
                bsE + 0x8;
            }
            bsN['prototype']['slice'] = function(bsC, bsD) {
                var bsE, bsG = this['length'];
                if (0x0 > (bsC = ~~bsC) ? 0x0 > (bsC += bsG) && (bsC = 0x0) : bsC > bsG && (bsC = bsG),
                0x0 > (bsD = void 0x0 === bsD ? bsG : ~~bsD) ? 0x0 > (bsD += bsG) && (bsD = 0x0) : bsD > bsG && (bsD = bsG),
                bsD < bsC && (bsD = bsC),
                bsN['TYPED_ARRAY_SUPPORT'])
                    (bsE = this['subarray'](bsC, bsD))['__proto__'] = bsN['prototype'];
                else {
                    var bsH = bsD - bsC;
                    bsE = new bsN(bsH,void 0x0);
                    for (var bsI = 0x0; bsI < bsH; ++bsI)
                        bsE[bsI] = this[bsI + bsC];
                }
                return bsE;
            }
            ,
            bsN['prototype']['readUIntLE'] = function(bsC, bsD, bsE) {
                bsC |= 0x0,
                bsD |= 0x0,
                bsE || bwu(bsC, bsD, this['length']);
                for (var bsG = this[bsC], bsH = 0x1, bsI = 0x0; ++bsI < bsD && (bsH *= 0x100); )
                    bsG += this[bsC + bsI] * bsH;
                return bsG;
            }
            ,
            bsN['prototype']['readUIntBE'] = function(bsC, bsD, bsE) {
                bsC |= 0x0,
                bsD |= 0x0,
                bsE || bwu(bsC, bsD, this['length']);
                for (var bsG = this[bsC + --bsD], bsH = 0x1; 0x0 < bsD && (bsH *= 0x100); )
                    bsG += this[bsC + --bsD] * bsH;
                return bsG;
            }
            ,
            bsN['prototype']['readUInt8'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x1, this['length']),
                this[bsC];
            }
            ,
            bsN['prototype']['readUInt16LE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x2, this['length']),
                this[bsC] | this[bsC + 0x1] << 0x8;
            }
            ,
            bsN['prototype']['readUInt16BE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x2, this['length']),
                this[bsC] << 0x8 | this[bsC + 0x1];
            }
            ,
            bsN['prototype']['readUInt32LE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x4, this['length']),
                (this[bsC] | this[bsC + 0x1] << 0x8 | this[bsC + 0x2] << 0x10) + 0x1000000 * this[bsC + 0x3];
            }
            ,
            bsN['prototype']['readUInt32BE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x4, this['length']),
                0x1000000 * this[bsC] + (this[bsC + 0x1] << 0x10 | this[bsC + 0x2] << 0x8 | this[bsC + 0x3]);
            }
            ,
            bsN['prototype']['readIntLE'] = function(bsC, bsD, bsE) {
                bsC |= 0x0,
                bsD |= 0x0,
                bsE || bwu(bsC, bsD, this['length']);
                for (var bsG = this[bsC], bsH = 0x1, bsI = 0x0; ++bsI < bsD && (bsH *= 0x100); )
                    bsG += this[bsC + bsI] * bsH;
                return bsG >= (bsH *= 0x80) && (bsG -= Math['pow'](0x2, 0x8 * bsD)),
                bsG;
            }
            ,
            bsN['prototype']['readIntBE'] = function(bsC, bsD, bsE) {
                bsC |= 0x0,
                bsD |= 0x0,
                bsE || bwu(bsC, bsD, this['length']);
                for (var bsG = bsD, bsH = 0x1, bsI = this[bsC + --bsG]; 0x0 < bsG && (bsH *= 0x100); )
                    bsI += this[bsC + --bsG] * bsH;
                return bsI >= (bsH *= 0x80) && (bsI -= Math['pow'](0x2, 0x8 * bsD)),
                bsI;
            }
            ,
            bsN['prototype']['readInt8'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x1, this['length']),
                0x80 & this[bsC] ? -0x1 * (0xff - this[bsC] + 0x1) : this[bsC];
            }
            ,
            bsN['prototype']['readInt16LE'] = function(bsC, bsD) {
                bsD || bwu(bsC, 0x2, this['length']);
                var bsE = this[bsC] | this[bsC + 0x1] << 0x8;
                return 0x8000 & bsE ? 0xffff0000 | bsE : bsE;
            }
            ,
            bsN['prototype']['readInt16BE'] = function(bsC, bsD) {
                bsD || bwu(bsC, 0x2, this['length']);
                var bsE = this[bsC + 0x1] | this[bsC] << 0x8;
                return 0x8000 & bsE ? 0xffff0000 | bsE : bsE;
            }
            ,
            bsN['prototype']['readInt32LE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x4, this['length']),
                this[bsC] | this[bsC + 0x1] << 0x8 | this[bsC + 0x2] << 0x10 | this[bsC + 0x3] << 0x18;
            }
            ,
            bsN['prototype']['readInt32BE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x4, this['length']),
                this[bsC] << 0x18 | this[bsC + 0x1] << 0x10 | this[bsC + 0x2] << 0x8 | this[bsC + 0x3];
            }
            ,
            bsN['prototype']['readFloatLE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x4, this['length']),
                bsH['read'](this, bsC, !0x0, 0x17, 0x4);
            }
            ,
            bsN['prototype']['readFloatBE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x4, this['length']),
                bsH['read'](this, bsC, !0x1, 0x17, 0x4);
            }
            ,
            bsN['prototype']['readDoubleLE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x8, this['length']),
                bsH['read'](this, bsC, !0x0, 0x34, 0x8);
            }
            ,
            bsN['prototype']['readDoubleBE'] = function(bsC, bsD) {
                return bsD || bwu(bsC, 0x8, this['length']),
                bsH['read'](this, bsC, !0x1, 0x34, 0x8);
            }
            ,
            bsN['prototype']['writeUIntLE'] = function(bsC, bsD, bsE, bsG) {
                (bsC = +bsC,
                bsD |= 0x0,
                bsE |= 0x0,
                bsG) || bwy(this, bsC, bsD, bsE, Math['pow'](0x2, 0x8 * bsE) - 0x1, 0x0);
                var bsH = 0x1
                  , bsI = 0x0;
                for (this[bsD] = 0xff & bsC; ++bsI < bsE && (bsH *= 0x100); )
                    this[bsD + bsI] = 0xff & bsC / bsH;
                return bsD + bsE;
            }
            ,
            bsN['prototype']['writeUIntBE'] = function(bsC, bsD, bsE, bsG) {
                (bsC = +bsC,
                bsD |= 0x0,
                bsE |= 0x0,
                bsG) || bwy(this, bsC, bsD, bsE, Math['pow'](0x2, 0x8 * bsE) - 0x1, 0x0);
                var bsH = bsE - 0x1
                  , bsI = 0x1;
                for (this[bsD + bsH] = 0xff & bsC; 0x0 <= --bsH && (bsI *= 0x100); )
                    this[bsD + bsH] = 0xff & bsC / bsI;
                return bsD + bsE;
            }
            ,
            bsN['prototype']['writeUInt8'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x1, 0xff, 0x0),
                bsN['TYPED_ARRAY_SUPPORT'] || (bsC = Math['floor'](bsC)),
                this[bsD] = 0xff & bsC,
                bsD + 0x1;
            }
            ,
            bsN['prototype']['writeUInt16LE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x2, 0xffff, 0x0),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = 0xff & bsC,
                this[bsD + 0x1] = bsC >>> 0x8) : bwF(this, bsC, bsD, !0x0),
                bsD + 0x2;
            }
            ,
            bsN['prototype']['writeUInt16BE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x2, 0xffff, 0x0),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = bsC >>> 0x8,
                this[bsD + 0x1] = 0xff & bsC) : bwF(this, bsC, bsD, !0x1),
                bsD + 0x2;
            }
            ,
            bsN['prototype']['writeUInt32LE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x4, 0xffffffff, 0x0),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD + 0x3] = bsC >>> 0x18,
                this[bsD + 0x2] = bsC >>> 0x10,
                this[bsD + 0x1] = bsC >>> 0x8,
                this[bsD] = 0xff & bsC) : bwM(this, bsC, bsD, !0x0),
                bsD + 0x4;
            }
            ,
            bsN['prototype']['writeUInt32BE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x4, 0xffffffff, 0x0),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = bsC >>> 0x18,
                this[bsD + 0x1] = bsC >>> 0x10,
                this[bsD + 0x2] = bsC >>> 0x8,
                this[bsD + 0x3] = 0xff & bsC) : bwM(this, bsC, bsD, !0x1),
                bsD + 0x4;
            }
            ,
            bsN['prototype']['writeIntLE'] = function(bsC, bsD, bsE, bsG) {
                if (bsC = +bsC,
                bsD |= 0x0,
                !bsG) {
                    var bsH = Math['pow'](0x2, 0x8 * bsE - 0x1);
                    bwy(this, bsC, bsD, bsE, bsH - 0x1, -bsH);
                }
                var bsI = 0x0
                  , bsJ = 0x1
                  , bsK = 0x0;
                for (this[bsD] = 0xff & bsC; ++bsI < bsE && (bsJ *= 0x100); )
                    0x0 > bsC && 0x0 === bsK && 0x0 !== this[bsD + bsI - 0x1] && (bsK = 0x1),
                    this[bsD + bsI] = 0xff & (bsC / bsJ >> 0x0) - bsK;
                return bsD + bsE;
            }
            ,
            bsN['prototype']['writeIntBE'] = function(bsC, bsD, bsE, bsG) {
                if (bsC = +bsC,
                bsD |= 0x0,
                !bsG) {
                    var bsH = Math['pow'](0x2, 0x8 * bsE - 0x1);
                    bwy(this, bsC, bsD, bsE, bsH - 0x1, -bsH);
                }
                var bsI = bsE - 0x1
                  , bsJ = 0x1
                  , bsK = 0x0;
                for (this[bsD + bsI] = 0xff & bsC; 0x0 <= --bsI && (bsJ *= 0x100); )
                    0x0 > bsC && 0x0 === bsK && 0x0 !== this[bsD + bsI + 0x1] && (bsK = 0x1),
                    this[bsD + bsI] = 0xff & (bsC / bsJ >> 0x0) - bsK;
                return bsD + bsE;
            }
            ,
            bsN['prototype']['writeInt8'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x1, 0x7f, -0x80),
                bsN['TYPED_ARRAY_SUPPORT'] || (bsC = Math['floor'](bsC)),
                0x0 > bsC && (bsC = 0xff + bsC + 0x1),
                this[bsD] = 0xff & bsC,
                bsD + 0x1;
            }
            ,
            bsN['prototype']['writeInt16LE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x2, 0x7fff, -0x8000),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = 0xff & bsC,
                this[bsD + 0x1] = bsC >>> 0x8) : bwF(this, bsC, bsD, !0x0),
                bsD + 0x2;
            }
            ,
            bsN['prototype']['writeInt16BE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x2, 0x7fff, -0x8000),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = bsC >>> 0x8,
                this[bsD + 0x1] = 0xff & bsC) : bwF(this, bsC, bsD, !0x1),
                bsD + 0x2;
            }
            ,
            bsN['prototype']['writeInt32LE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x4, 0x7fffffff, -0x80000000),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = 0xff & bsC,
                this[bsD + 0x1] = bsC >>> 0x8,
                this[bsD + 0x2] = bsC >>> 0x10,
                this[bsD + 0x3] = bsC >>> 0x18) : bwM(this, bsC, bsD, !0x0),
                bsD + 0x4;
            }
            ,
            bsN['prototype']['writeInt32BE'] = function(bsC, bsD, bsE) {
                return bsC = +bsC,
                bsD |= 0x0,
                bsE || bwy(this, bsC, bsD, 0x4, 0x7fffffff, -0x80000000),
                0x0 > bsC && (bsC = 0xffffffff + bsC + 0x1),
                bsN['TYPED_ARRAY_SUPPORT'] ? (this[bsD] = bsC >>> 0x18,
                this[bsD + 0x1] = bsC >>> 0x10,
                this[bsD + 0x2] = bsC >>> 0x8,
                this[bsD + 0x3] = 0xff & bsC) : bwM(this, bsC, bsD, !0x1),
                bsD + 0x4;
            }
            ,
            bsN['prototype']['writeFloatLE'] = function(bsC, bsD, bsE) {
                return bwY(this, bsC, bsD, !0x0, bsE);
            }
            ,
            bsN['prototype']['writeFloatBE'] = function(bsC, bsD, bsE) {
                return bwY(this, bsC, bsD, !0x1, bsE);
            }
            ,
            bsN['prototype']['writeDoubleLE'] = function(bsC, bsD, bsE) {
                return bx4(this, bsC, bsD, !0x0, bsE);
            }
            ,
            bsN['prototype']['writeDoubleBE'] = function(bsC, bsD, bsE) {
                return bx4(this, bsC, bsD, !0x1, bsE);
            }
            ,
            bsN['prototype']['copy'] = function(bsC, bsD, bsE, bsG) {
                if (bsE || (bsE = 0x0),
                bsG || 0x0 === bsG || (bsG = this['length']),
                bsD >= bsC['length'] && (bsD = bsC['length']),
                bsD || (bsD = 0x0),
                0x0 < bsG && bsG < bsE && (bsG = bsE),
                bsG === bsE)
                    return 0x0;
                if (0x0 === bsC['length'] || 0x0 === this['length'])
                    return 0x0;
                if (0x0 > bsD)
                    throw new RangeError('targetStart\x20out\x20of\x20bounds');
                if (0x0 > bsE || bsE >= this['length'])
                    throw new RangeError('sourceStart\x20out\x20of\x20bounds');
                if (0x0 > bsG)
                    throw new RangeError('sourceEnd\x20out\x20of\x20bounds');
                bsG > this['length'] && (bsG = this['length']),
                bsC['length'] - bsD < bsG - bsE && (bsG = bsC['length'] - bsD + bsE);
                var bsH, bsI = bsG - bsE;
                if (this === bsC && bsE < bsD && bsD < bsG)
                    for (bsH = bsI - 0x1; 0x0 <= bsH; --bsH)
                        bsC[bsH + bsD] = this[bsH + bsE];
                else if (0x3e8 > bsI || !bsN['TYPED_ARRAY_SUPPORT'])
                    for (bsH = 0x0; bsH < bsI; ++bsH)
                        bsC[bsH + bsD] = this[bsH + bsE];
                else
                    Uint8Array['prototype']['set']['call'](bsC, this['subarray'](bsE, bsE + bsI), bsD);
                return bsI;
            }
            ,
            bsN['prototype']['fill'] = function(bsC, bsD, bsE, bsG) {
                if ('string' == typeof bsC) {
                    if ('string' == typeof bsD ? (bsG = bsD,
                    bsD = 0x0,
                    bsE = this['length']) : 'string' == typeof bsE && (bsG = bsE,
                    bsE = this['length']),
                    0x1 === bsC['length']) {
                        var bsH = bsC['charCodeAt'](0x0);
                        0x100 > bsH && (bsC = bsH);
                    }
                    if (void 0x0 !== bsG && 'string' != typeof bsG)
                        throw new TypeError('encoding\x20must\x20be\x20a\x20string');
                    if ('string' == typeof bsG && !bsN['isEncoding'](bsG))
                        throw new TypeError('Unknown\x20encoding:\x20' + bsG);
                } else
                    'number' == typeof bsC && (bsC &= 0xff);
                if (0x0 > bsD || this['length'] < bsD || this['length'] < bsE)
                    throw new RangeError('Out\x20of\x20range\x20index');
                if (bsE <= bsD)
                    return this;
                var bsI;
                if (bsD >>>= 0x0,
                bsE = void 0x0 === bsE ? this['length'] : bsE >>> 0x0,
                bsC || (bsC = 0x0),
                'number' == typeof bsC)
                    for (bsI = bsD; bsI < bsE; ++bsI)
                        this[bsI] = bsC;
                else {
                    var bsJ = bsN['isBuffer'](bsC) ? bsC : bzw(new bsN(bsC,bsG)['toString']())
                      , bsK = bsJ['length'];
                    for (bsI = 0x0; bsI < bsE - bsD; ++bsI)
                        this[bsI + bsD] = bsJ[bsI % bsK];
                }
                return this;
            }
            ;
            var bzt = /[^+\/0-9A-Za-z-_]/g;
            function bzu(bsC) {
                return 0x10 > bsC ? '0' + bsC['toString'](0x10) : bsC['toString'](0x10);
            }
            function bzw(bsC, bsD) {
                bsD = bsD || 0x1 / 0x0;
                for (var bsE, bsG = bsC['length'], bsH = null, bsI = [], bsJ = 0x0; bsJ < bsG; ++bsJ) {
                    if (0xd7ff < (bsE = bsC['charCodeAt'](bsJ)) && 0xe000 > bsE) {
                        if (!bsH) {
                            if (0xdbff < bsE) {
                                -0x1 < (bsD -= 0x3) && bsI['push'](0xef, 0xbf, 0xbd);
                                continue;
                            }
                            if (bsJ + 0x1 === bsG) {
                                -0x1 < (bsD -= 0x3) && bsI['push'](0xef, 0xbf, 0xbd);
                                continue;
                            }
                            bsH = bsE;
                            continue;
                        }
                        if (0xdc00 > bsE) {
                            -0x1 < (bsD -= 0x3) && bsI['push'](0xef, 0xbf, 0xbd),
                            bsH = bsE;
                            continue;
                        }
                        bsE = 0x10000 + (bsH - 0xd800 << 0xa | bsE - 0xdc00);
                    } else
                        bsH && -0x1 < (bsD -= 0x3) && bsI['push'](0xef, 0xbf, 0xbd);
                    if (bsH = null,
                    0x80 > bsE) {
                        if (0x0 > (bsD -= 0x1))
                            break;
                        bsI['push'](bsE);
                    } else if (0x800 > bsE) {
                        if (0x0 > (bsD -= 0x2))
                            break;
                        bsI['push'](0xc0 | bsE >> 0x6, 0x80 | 0x3f & bsE);
                    } else if (0x10000 > bsE) {
                        if (0x0 > (bsD -= 0x3))
                            break;
                        bsI['push'](0xe0 | bsE >> 0xc, 0x80 | 0x3f & bsE >> 0x6, 0x80 | 0x3f & bsE);
                    } else {
                        if (!(0x110000 > bsE))
                            throw new Error('Invalid\x20code\x20point');
                        if (0x0 > (bsD -= 0x4))
                            break;
                        bsI['push'](0xf0 | bsE >> 0x12, 0x80 | 0x3f & bsE >> 0xc, 0x80 | 0x3f & bsE >> 0x6, 0x80 | 0x3f & bsE);
                    }
                }
                return bsI;
            }
            function bzE(bsC) {
                return bsG['toByteArray'](function(bsC) {
                    if (0x2 > (bsC = function(bsC) {
                        return bsC['trim'] ? bsC['trim']() : bsC['replace'](/^\s+|\s+$/g, '');
                    }(bsC)['replace'](bzt, ''))['length'])
                        return '';
                    for (; 0x0 != bsC['length'] % 0x4; )
                        bsC += '=';
                    return bsC;
                }(bsC));
            }
            function bzI(bsC, bsD, bsE, bsG) {
                for (var bsH = 0x0; bsH < bsG && !(bsH + bsE >= bsD['length'] || bsH >= bsC['length']); ++bsH)
                    bsD[bsH + bsE] = bsC[bsH];
                return bsH;
            }
        }
        ['call'](this, bsE(0x15)));
    }
    , function(bzO, bzP) {
        for (var bzQ = bzP['uint8'] = Array(0x100), bzR = 0x0; 0xff >= bzR; bzR++)
            bzQ[bzR] = bzS(bzR);
        function bzS(bzO) {
            return function(bzP) {
                var bzQ = bzP['reserve'](0x1);
                bzP['buffer'][bzQ] = bzO;
            }
            ;
        }
    }
    , function(bzW, bzX, bzY) {
        bzX['FlexDecoder'] = bA3,
        bzX['FlexEncoder'] = bA4;
        var bzZ = bzY(0x3)
          , bA0 = 0x800
          , bA1 = 0x10000
          , bA2 = 'BUFFER_SHORTAGE';
        function bA3() {
            if (!(this instanceof bA3))
                return new bA3();
        }
        function bA4() {
            if (!(this instanceof bA4))
                return new bA4();
        }
        function bA5() {
            throw new Error('method\x20not\x20implemented:\x20write()');
        }
        function bA6() {
            throw new Error('method\x20not\x20implemented:\x20fetch()');
        }
        function bA7() {
            return this['buffers'] && this['buffers']['length'] ? (this['flush'](),
            this['pull']()) : this['fetch']();
        }
        function bA8(bzW) {
            (this['buffers'] || (this['buffers'] = []))['push'](bzW);
        }
        function bAa() {
            return (this['buffers'] || (this['buffers'] = []))['shift']();
        }
        function bAb(bzW) {
            return function(bzX) {
                for (var bzY in bzW)
                    bzX[bzY] = bzW[bzY];
                return bzX;
            }
            ;
        }
        bA3['mixin'] = bAb({
            'bufferish': bzZ,
            'write': function(bzW) {
                var bzX = this['offset'] ? bzZ['prototype']['slice']['call'](this['buffer'], this['offset']) : this['buffer'];
                this['buffer'] = bzX ? bzW ? this['bufferish']['concat']([bzX, bzW]) : bzX : bzW,
                this['offset'] = 0x0;
            },
            'fetch': bA6,
            'flush': function() {
                for (; this['offset'] < this['buffer']['length']; ) {
                    var bzW, bzX = this['offset'];
                    try {
                        bzW = this['fetch']();
                    } catch (bAj) {
                        if (bAj && bAj['message'] != bA2)
                            throw bAj;
                        this['offset'] = bzX;
                        break;
                    }
                    this['push'](bzW);
                }
            },
            'push': bA8,
            'pull': bAa,
            'read': bA7,
            'reserve': function(bzW) {
                var bzX = this['offset']
                  , bzY = bzX + bzW;
                if (bzY > this['buffer']['length'])
                    throw new Error(bA2);
                return this['offset'] = bzY,
                bzX;
            },
            'offset': 0x0
        }),
        bA3['mixin'](bA3['prototype']),
        bA4['mixin'] = bAb({
            'bufferish': bzZ,
            'write': bA5,
            'fetch': function() {
                var bzW = this['start'];
                if (bzW < this['offset']) {
                    var bzX = this['start'] = this['offset'];
                    return bzZ['prototype']['slice']['call'](this['buffer'], bzW, bzX);
                }
            },
            'flush': function() {
                for (; this['start'] < this['offset']; ) {
                    var bzW = this['fetch']();
                    bzW && this['push'](bzW);
                }
            },
            'push': bA8,
            'pull': function() {
                var bzW = this['buffers'] || (this['buffers'] = [])
                  , bzX = 0x1 < bzW['length'] ? this['bufferish']['concat'](bzW) : bzW[0x0];
                return bzW['length'] = 0x0,
                bzX;
            },
            'read': bA7,
            'reserve': function(bzW) {
                var bzX = 0x0 | bzW;
                if (this['buffer']) {
                    var bzY = this['buffer']['length']
                      , bzZ = 0x0 | this['offset']
                      , bA0 = bzZ + bzX;
                    if (bA0 < bzY)
                        return this['offset'] = bA0,
                        bzZ;
                    this['flush'](),
                    bzW = Math['max'](bzW, Math['min'](0x2 * bzY, this['maxBufferSize']));
                }
                return bzW = Math['max'](bzW, this['minBufferSize']),
                this['buffer'] = this['bufferish']['alloc'](bzW),
                this['start'] = 0x0,
                this['offset'] = bzX,
                0x0;
            },
            'send': function(bzW) {
                var bzX = bzW['length'];
                if (bzX > this['minBufferSize'])
                    this['flush'](),
                    this['push'](bzW);
                else {
                    var bzY = this['reserve'](bzX);
                    bzZ['prototype']['copy']['call'](bzW, this['buffer'], bzY);
                }
            },
            'maxBufferSize': bA1,
            'minBufferSize': bA0,
            'offset': 0x0,
            'start': 0x0
        }),
        bA4['mixin'](bA4['prototype']);
    }
    , function(bAA, bAB, bAC) {
        bAB['decode'] = function(bAA, bAB) {
            var bAC = new bAG(bAB);
            return bAC['write'](bAA),
            bAC['read']();
        }
        ;
        var bAG = bAC(0x1f)['DecodeBuffer'];
    }
    , function(bAH, bAI, bAJ) {
        bAI['DecodeBuffer'] = bAL;
        var bAK = bAJ(0x14)['preset'];
        function bAL(bAH) {
            if (!(this instanceof bAL))
                return new bAL(bAH);
            if (bAH && (this['options'] = bAH,
            bAH['codec'])) {
                var bAI = this['codec'] = bAH['codec'];
                bAI['bufferish'] && (this['bufferish'] = bAI['bufferish']);
            }
        }
        bAJ(0x1d)['FlexDecoder']['mixin'](bAL['prototype']),
        bAL['prototype']['codec'] = bAK,
        bAL['prototype']['fetch'] = function() {
            return this['codec']['decode'](this);
        }
        ;
    }
    , function(bAO, bAP, bAQ) {
        var bAR = bAQ(0x11)
          , bAS = bAQ(0x13)
          , bAT = bAS['Uint64BE']
          , bAU = bAS['Int64BE'];
        bAP['getReadFormat'] = function(bAO) {
            var bAP = bAY['hasArrayBuffer'] && bAO && bAO['binarraybuffer']
              , bAQ = bAO && bAO['int64'];
            return {
                'map': bB0 && bAO && bAO['usemap'] ? bBa : bB2,
                'array': bBi,
                'str': bBo,
                'bin': bAP ? bBx : bBs,
                'ext': bBC,
                'uint8': bBJ,
                'uint16': bBQ,
                'uint32': bBZ,
                'uint64': bC7(0x8, bAQ ? bCg : bCc),
                'int8': bBM,
                'int16': bBU,
                'int32': bC3,
                'int64': bC7(0x8, bAQ ? bCi : bCe),
                'float32': bC7(0x4, bCk),
                'float64': bC7(0x8, bCm)
            };
        }
        ,
        bAP['readUint8'] = bBJ;
        var bAY = bAQ(0x3)
          , bAZ = bAQ(0x12)
          , bB0 = 'undefined' != typeof Map
          , bB1 = !0x0;
        function bB2(bAO, bAP) {
            var bAQ, bAR = {}, bAS = Array(bAP), bAT = Array(bAP), bAU = bAO['codec']['decode'];
            for (bAQ = 0x0; bAQ < bAP; bAQ++)
                bAS[bAQ] = bAU(bAO),
                bAT[bAQ] = bAU(bAO);
            for (bAQ = 0x0; bAQ < bAP; bAQ++)
                bAR[bAS[bAQ]] = bAT[bAQ];
            return bAR;
        }
        function bBa(bAO, bAP) {
            var bAQ, bAR = new Map(), bAS = Array(bAP), bAT = Array(bAP), bAU = bAO['codec']['decode'];
            for (bAQ = 0x0; bAQ < bAP; bAQ++)
                bAS[bAQ] = bAU(bAO),
                bAT[bAQ] = bAU(bAO);
            for (bAQ = 0x0; bAQ < bAP; bAQ++)
                bAR['set'](bAS[bAQ], bAT[bAQ]);
            return bAR;
        }
        function bBi(bAO, bAP) {
            for (var bAQ = Array(bAP), bAR = bAO['codec']['decode'], bAS = 0x0; bAS < bAP; bAS++)
                bAQ[bAS] = bAR(bAO);
            return bAQ;
        }
        function bBo(bAO, bAP) {
            var bAQ = bAO['reserve'](bAP);
            return bAZ['toString']['call'](bAO['buffer'], 'utf-8', bAQ, bAQ + bAP);
        }
        function bBs(bAO, bAP) {
            var bAQ = bAO['reserve'](bAP)
              , bAR = bAZ['slice']['call'](bAO['buffer'], bAQ, bAQ + bAP);
            return bAY['from'](bAR);
        }
        function bBx(bAO, bAP) {
            var bAQ = bAO['reserve'](bAP)
              , bAR = bAZ['slice']['call'](bAO['buffer'], bAQ, bAQ + bAP);
            return bAY['Uint8Array']['from'](bAR)['buffer'];
        }
        function bBC(bAO, bAP) {
            var bAQ = bAO['reserve'](bAP + 0x1)
              , bAR = bAO['buffer'][bAQ++]
              , bAS = bAQ + bAP
              , bAT = bAO['codec']['getExtUnpacker'](bAR);
            if (!bAT)
                throw new Error('Invalid\x20ext\x20type:\x20' + (bAR ? '0x' + bAR['toString'](0x10) : bAR));
            return bAT(bAZ['slice']['call'](bAO['buffer'], bAQ, bAS));
        }
        function bBJ(bAO) {
            var bAP = bAO['reserve'](0x1);
            return bAO['buffer'][bAP];
        }
        function bBM(bAO) {
            var bAP = bAO['reserve'](0x1)
              , bAQ = bAO['buffer'][bAP];
            return 0x80 & bAQ ? bAQ - 0x100 : bAQ;
        }
        function bBQ(bAO) {
            var bAP = bAO['reserve'](0x2)
              , bAQ = bAO['buffer'];
            return bAQ[bAP++] << 0x8 | bAQ[bAP];
        }
        function bBU(bAO) {
            var bAP = bAO['reserve'](0x2)
              , bAQ = bAO['buffer']
              , bAR = bAQ[bAP++] << 0x8 | bAQ[bAP];
            return 0x8000 & bAR ? bAR - 0x10000 : bAR;
        }
        function bBZ(bAO) {
            var bAP = bAO['reserve'](0x4)
              , bAQ = bAO['buffer'];
            return 0x1000000 * bAQ[bAP++] + (bAQ[bAP++] << 0x10) + (bAQ[bAP++] << 0x8) + bAQ[bAP];
        }
        function bC3(bAO) {
            var bAP = bAO['reserve'](0x4)
              , bAQ = bAO['buffer'];
            return bAQ[bAP++] << 0x18 | bAQ[bAP++] << 0x10 | bAQ[bAP++] << 0x8 | bAQ[bAP];
        }
        function bC7(bAO, bAP) {
            return function(bAQ) {
                var bAR = bAQ['reserve'](bAO);
                return bAP['call'](bAQ['buffer'], bAR, bB1);
            }
            ;
        }
        function bCc(bAO) {
            return new bAT(this,bAO)['toNumber']();
        }
        function bCe(bAO) {
            return new bAU(this,bAO)['toNumber']();
        }
        function bCg(bAO) {
            return new bAT(this,bAO);
        }
        function bCi(bAO) {
            return new bAU(this,bAO);
        }
        function bCk(bAO) {
            return bAR['read'](this, bAO, !0x1, 0x17, 0x4);
        }
        function bCm(bAO) {
            return bAR['read'](this, bAO, !0x1, 0x34, 0x8);
        }
    }
    , function(bCo, bCp, bCq) {
        !function(bCp) {
            function bCq(bCo) {
                for (var bCp in bCG)
                    bCo[bCp] = bCG[bCp];
                return bCo;
            }
            function bCv(bCo, bCp) {
                var bCq, bCz = this;
                if (arguments['length']) {
                    if (bCp) {
                        if (bCq = bCB(bCz, bCo, !0x0)) {
                            if (!(bCq = bCq['filter'](function(bCo) {
                                return bCo !== bCp && bCo['originalListener'] !== bCp;
                            }))['length'])
                                return bCv['call'](bCz, bCo);
                            bCz['listeners'][bCo] = bCq;
                        }
                    } else if ((bCq = bCz['listeners']) && (delete bCq[bCo],
                    !Object['keys'](bCq)['length']))
                        return bCv['call'](bCz);
                } else
                    delete bCz['listeners'];
                return bCz;
            }
            function bCB(bCo, bCp, bCq) {
                if (!bCq || bCo['listeners']) {
                    var bCv = bCo['listeners'] || (bCo['listeners'] = {});
                    return bCv[bCp] || (bCv[bCp] = []);
                }
            }
            bCo['exports'] = bCp;
            var bCG = {
                'on': function(bCo, bCp) {
                    return bCB(this, bCo)['push'](bCp),
                    this;
                },
                'once': function(bCo, bCp) {
                    function bCq() {
                        bCv['call'](bCG, bCo, bCq),
                        bCp['apply'](this, arguments);
                    }
                    var bCG = this;
                    return bCq['originalListener'] = bCp,
                    bCB(bCG, bCo)['push'](bCq),
                    bCG;
                },
                'off': bCv,
                'emit': function(bCo, bCp) {
                    var bCq = this
                      , bCv = bCB(bCq, bCo, !0x0);
                    if (!bCv)
                        return !0x1;
                    var bCG = arguments['length'];
                    if (0x1 === bCG)
                        bCv['forEach'](function(bCo) {
                            bCo['call'](bCq);
                        });
                    else if (0x2 === bCG)
                        bCv['forEach'](function(bCo) {
                            bCo['call'](bCq, bCp);
                        });
                    else {
                        var bCU = Array['prototype']['slice']['call'](arguments, 0x1);
                        bCv['forEach'](function(bCo) {
                            bCo['apply'](bCq, bCU);
                        });
                    }
                    return !!bCv['length'];
                }
            };
            bCq(bCp['prototype']),
            bCp['mixin'] = bCq;
        }(/**
 * event-lite.js - Light-weight EventEmitter (less than 1KB when gzipped)
 *
 * @copyright Yusuke Kawasaki
 * @license MIT
 * @constructor
 * @see https://github.com/kawanet/event-lite
 * @see http://kawanet.github.io/event-lite/EventLite.html
 * @example
 * var EventLite = require("event-lite");
 *
 * function MyClass() {...}             // your class
 *
 * EventLite.mixin(MyClass.prototype);  // import event methods
 *
 * var obj = new MyClass();
 * obj.on("foo", function() {...});     // add event listener
 * obj.once("bar", function() {...});   // add one-time event listener
 * obj.emit("foo");                     // dispatch event
 * obj.emit("bar");                     // dispatch another event
 * obj.off("foo");                      // remove event listener
 */
        function bCo() {
            if (!(this instanceof bCo))
                return new bCo();
        });
    }
    , function(bCW, bCX, bCY) {
        'use strict';
        var bCZ = bCY(0x64)
          , bD0 = bCY(0x89)
          , bD1 = Object['prototype']['toString'];
        function bD2(bCW) {
            return '[object\x20Array]' === bD1['call'](bCW);
        }
        function bD4(bCW) {
            return null !== bCW && 'object' == typeof bCW;
        }
        function bD6(bCW) {
            return '[object\x20Function]' === bD1['call'](bCW);
        }
        function bD8(bCW, bCX) {
            if (null != bCW)
                if ('object' != typeof bCW && (bCW = [bCW]),
                bD2(bCW))
                    for (var bCY = 0x0, bCZ = bCW['length']; bCY < bCZ; bCY++)
                        bCX['call'](null, bCW[bCY], bCY, bCW);
                else
                    for (var bD0 in bCW)
                        Object['prototype']['hasOwnProperty']['call'](bCW, bD0) && bCX['call'](null, bCW[bD0], bD0, bCW);
        }
        bCW['exports'] = {
            'isArray': bD2,
            'isArrayBuffer': function(bCW) {
                return '[object\x20ArrayBuffer]' === bD1['call'](bCW);
            },
            'isBuffer': bD0,
            'isFormData': function(bCW) {
                return 'undefined' != typeof FormData && bCW instanceof FormData;
            },
            'isArrayBufferView': function(bCW) {
                return 'undefined' != typeof ArrayBuffer && ArrayBuffer['isView'] ? ArrayBuffer['isView'](bCW) : bCW && bCW['buffer'] && bCW['buffer']instanceof ArrayBuffer;
            },
            'isString': function(bCW) {
                return 'string' == typeof bCW;
            },
            'isNumber': function(bCW) {
                return 'number' == typeof bCW;
            },
            'isObject': bD4,
            'isUndefined': function(bCW) {
                return void 0x0 === bCW;
            },
            'isDate': function(bCW) {
                return '[object\x20Date]' === bD1['call'](bCW);
            },
            'isFile': function(bCW) {
                return '[object\x20File]' === bD1['call'](bCW);
            },
            'isBlob': function(bCW) {
                return '[object\x20Blob]' === bD1['call'](bCW);
            },
            'isFunction': bD6,
            'isStream': function(bCW) {
                return bD4(bCW) && bD6(bCW['pipe']);
            },
            'isURLSearchParams': function(bCW) {
                return 'undefined' != typeof URLSearchParams && bCW instanceof URLSearchParams;
            },
            'isStandardBrowserEnv': function() {
                return ('undefined' == typeof navigator || 'ReactNative' !== navigator['product'] && 'NativeScript' !== navigator['product'] && 'NS' !== navigator['product']) && 'undefined' != typeof window && 'undefined' != typeof document;
            },
            'forEach': bD8,
            'merge': function bCW() {
                function bCX(bCX, bCZ) {
                    bCY[bCZ] = 'object' == typeof bCY[bCZ] && 'object' == typeof bCX ? bCW(bCY[bCZ], bCX) : bCX;
                }
                for (var bCY = {}, bCZ = 0x0, bD0 = arguments['length']; bCZ < bD0; bCZ++)
                    bD8(arguments[bCZ], bCX);
                return bCY;
            },
            'deepMerge': function bCW() {
                function bCX(bCX, bCZ) {
                    bCY[bCZ] = 'object' == typeof bCY[bCZ] && 'object' == typeof bCX ? bCW(bCY[bCZ], bCX) : 'object' == typeof bCX ? bCW({}, bCX) : bCX;
                }
                for (var bCY = {}, bCZ = 0x0, bD0 = arguments['length']; bCZ < bD0; bCZ++)
                    bD8(arguments[bCZ], bCX);
                return bCY;
            },
            'extend': function(bCW, bCX, bCY) {
                return bD8(bCX, function(bCX, bD0) {
                    bCW[bD0] = bCY && 'function' == typeof bCX ? bCZ(bCX, bCY) : bCX;
                }),
                bCW;
            },
            'trim': function(bCW) {
                return bCW['replace'](/^\s*/, '')['replace'](/\s*$/, '');
            }
        };
    }
    , function(bDH) {
        bDH['exports'] = 'LyjVj';
    }
    , function(bDI, bDJ, bDK) {
        'use strict';
        var bDL = bDK(0x5e)
          , bDM = bDK(0x73)
          , bDN = Object['prototype']['toString'];
        function bDO(bDI) {
            return '[object\x20Array]' === bDN['call'](bDI);
        }
        function bDQ(bDI) {
            return null !== bDI && 'object' == typeof bDI;
        }
        function bDS(bDI) {
            return '[object\x20Function]' === bDN['call'](bDI);
        }
        function bDU(bDI, bDJ) {
            if (null != bDI)
                if ('object' != typeof bDI && (bDI = [bDI]),
                bDO(bDI))
                    for (var bDK = 0x0, bDL = bDI['length']; bDK < bDL; bDK++)
                        bDJ['call'](null, bDI[bDK], bDK, bDI);
                else
                    for (var bDM in bDI)
                        Object['prototype']['hasOwnProperty']['call'](bDI, bDM) && bDJ['call'](null, bDI[bDM], bDM, bDI);
        }
        bDI['exports'] = {
            'isArray': bDO,
            'isArrayBuffer': function(bDI) {
                return '[object\x20ArrayBuffer]' === bDN['call'](bDI);
            },
            'isBuffer': bDM,
            'isFormData': function(bDI) {
                return 'undefined' != typeof FormData && bDI instanceof FormData;
            },
            'isArrayBufferView': function(bDI) {
                return 'undefined' != typeof ArrayBuffer && ArrayBuffer['isView'] ? ArrayBuffer['isView'](bDI) : bDI && bDI['buffer'] && bDI['buffer']instanceof ArrayBuffer;
            },
            'isString': function(bDI) {
                return 'string' == typeof bDI;
            },
            'isNumber': function(bDI) {
                return 'number' == typeof bDI;
            },
            'isObject': bDQ,
            'isUndefined': function(bDI) {
                return void 0x0 === bDI;
            },
            'isDate': function(bDI) {
                return '[object\x20Date]' === bDN['call'](bDI);
            },
            'isFile': function(bDI) {
                return '[object\x20File]' === bDN['call'](bDI);
            },
            'isBlob': function(bDI) {
                return '[object\x20Blob]' === bDN['call'](bDI);
            },
            'isFunction': bDS,
            'isStream': function(bDI) {
                return bDQ(bDI) && bDS(bDI['pipe']);
            },
            'isURLSearchParams': function(bDI) {
                return 'undefined' != typeof URLSearchParams && bDI instanceof URLSearchParams;
            },
            'isStandardBrowserEnv': function() {
                return ('undefined' == typeof navigator || 'ReactNative' !== navigator['product']) && 'undefined' != typeof window && 'undefined' != typeof document;
            },
            'forEach': bDU,
            'merge': function bDI() {
                function bDJ(bDJ, bDL) {
                    bDK[bDL] = 'object' == typeof bDK[bDL] && 'object' == typeof bDJ ? bDI(bDK[bDL], bDJ) : bDJ;
                }
                for (var bDK = {}, bDL = 0x0, bDM = arguments['length']; bDL < bDM; bDL++)
                    bDU(arguments[bDL], bDJ);
                return bDK;
            },
            'extend': function(bDI, bDJ, bDK) {
                return bDU(bDJ, function(bDJ, bDM) {
                    bDI[bDM] = bDK && 'function' == typeof bDJ ? bDL(bDJ, bDK) : bDJ;
                }),
                bDI;
            },
            'trim': function(bDI) {
                return bDI['replace'](/^\s*/, '')['replace'](/\s*$/, '');
            }
        };
    }
    , function(bEn, bEo, bEp) {
        let bEq = bEp(0x4);
        const bEr = bEp(0x7)
          , bEs = bEp(0x17)
          , bEt = bEp(0x8)
          , bEu = bEp(0x16);
        let bEv = new bEq['TextureLoader']()
          , bEw = new bEq['LoadingManager']()
          , bEx = new bEq['OBJLoader'](bEw);
        function bEy(bEn, bEo, bEp, bEr, bEs, bEu=0x0, bEw=0x0, bEy=0x0, bEH=null) {
            return new Promise(bEI=>{
                bEx['load'](bEt['versionifyUrl'](bEo), bEo=>{
                    let bEx;
                    bEp && (bEx = bEv['load'](bEt['versionifyUrl'](bEp), bEn=>{
                        bEn['wrapS'] = bEq['RepeatWrapping'],
                        bEn['wrapT'] = bEq['RepeatWrapping'],
                        bEn['repeat']['set'](0x1, 0x1),
                        bEn['minFilter'] = bEq['NearestFilter'],
                        bEn['magFilter'] = bEq['NearestFilter'],
                        bEn['needsUpdate'] = !0x0;
                    }
                    ));
                    let bEM = new bEq['StrippedLambertMaterial']({
                        'map': bEx
                    })
                      , bEN = new bEq['Geometry']();
                    bEo['traverse'](bEn=>{
                        bEn instanceof bEq['Mesh'] && (bEn['geometry']['isBufferGeometry'] ? (bEN['fromBufferGeometry'](bEn['geometry']),
                        bEN['computeFlatVertexNormals'](),
                        bEn['geometry']['fromGeometry'](bEN)) : bEn['geometry']['computeFlatVertexNormals'](),
                        bEn['material'] = bEM);
                    }
                    ),
                    bEM['vertexColors'] = bEq['VertexColors'],
                    bEM['color']['set'](bEs || 0xffffff),
                    bEo['scale']['setScalar'](bEr || 0x1),
                    bEo['position']['y'] += bEu,
                    bEo['rotateX'](bEw || 0x0),
                    bEo['rotateY'](bEy || 0x0),
                    bEH ? (bEn[bEH] && (bEn['remove'](bEn[bEH]),
                    bEn[bEH] = null),
                    bEn[bEH] = bEo,
                    bEn['add'](bEn[bEH])) : bEn['add'](bEo),
                    bEI(bEo);
                }
                );
            }
            );
        }
        new bEq['BoxBufferGeometry'](0x1,0x1,0x1);
        new bEq['PlaneBufferGeometry'](0x1,0x1)['rotateX'](-Math['PI'] / 0x2);
        new bEq['StrippedLambertMaterial']({
            'color': 0xff00
        }),
        new bEq['StrippedLambertMaterial']({
            'color': 0x555555
        });
        function bEP(bEn, bEo, bEp, bEr) {
            var bEt = bEs['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], bEn, bEo, bEp, {
                'scale': 0x1,
                'amb': bEr,
                'useScale': !0x0
            });
            return bEt = new bEq['BufferGeometry']()['fromGeometry'](bEt);
        }
        let bEV = (bEn,bEo,bEp,bEr,bEt,bEu,bEv,bEw,bEx,bEy)=>{
            (bEv = bEv || {})['premultipliedAlpha'] = !0x0;
            var bEP = new bEq['Mesh'](bEs['generatePlane'](bEu, bEt, bEv, bEo, bEp, bEr));
            bEP['position']['set'](bEo, bEp, bEr),
            bEP['rotateY'](bEw || 0x0),
            bEP['rotateX']((bEx || 0x0) - Math['PI'] / 0x2),
            bEP['rotateZ'](bEy || 0x0),
            bEP['scale']['set'](0x2 * bEt, 0x2 * bEu, 0x1),
            bEP['updateMatrix'](),
            bEn['merge'](bEP['geometry'], bEP['matrix']);
        }
          , bEW = (bEn,bEo,bEp,bEr,bEt,bEu,bEv,bEw,bEx)=>{
            bEx = bEx || {};
            var bEy = new bEq['Mesh'](bEs['generateCube'](bEw, bEt, bEu, bEv, bEx));
            return bEy['position']['set'](bEo, bEp, bEr),
            bEy['rotation']['set'](bEx['yR'] || 0x0, bEx['xR'] || 0x0, bEx['zR'] || 0x0),
            bEy['scale']['set'](bEt, bEu, bEv),
            bEn instanceof bEq['Geometry'] ? (bEy['updateMatrix'](),
            bEn['merge'](bEy['geometry'], bEy['matrix'])) : bEn['add'](bEy),
            bEy;
        }
        ;
        bEn['exports']['prefabs'] = {
            'CRATE': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/crate_0.obj', 'textures/crate_0.png', bEr['crateScale'], bEn['color']),
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'STACK': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/stack_0.obj', 'textures/stack_0.png', bEr['crateScale'], bEn['color']),
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'BARREL': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/barrel_0.obj', 'textures/barrel_0.png', bEr['barrelScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'ACIDBARREL': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'emiss': !0x0,
                'gen': bEn=>bEy(bEn, 'models/acidbarrel_0.obj', 'textures/acidbarrel_0.png', bEr['acidbarrelScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'TREE': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'complex': !0x0,
                'gen': bEn=>bEy(bEn, 'models/tree_0.obj', 'textures/tree_0.png', bEr['treeScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'CONE': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'complex': !0x0,
                'gen': bEn=>bEy(bEn, 'models/cone_0.obj', 'textures/cone_0.png', bEr['coneScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'TEDDY': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'complex': !0x0,
                'gen': bEn=>bEy(bEn, 'models/teddy_0.obj', 'textures/teddy_0.png', bEr['teddyScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'CONTAINER': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/container_0.obj', 'textures/container_0.png', bEr['containerScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'CONTAINERR': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/containerr_0.obj', 'textures/containerr_0.png', bEr['containerScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'DOOR': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/door_0.obj', 'textures/door_0.png', bEr['doorScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'WINDOW': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'gen': bEn=>bEy(bEn, 'models/window_0.obj', 'textures/window_0.png', bEr['windowScale'], bEn['color']),
                'castShadow': !0x0,
                'transparent': !0x0,
                'receiveShadow': !0x0
            },
            'GRASS': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'complex': !0x0,
                'doubleSide': !0x0,
                'transparent': !0x0,
                'gen': bEn=>bEy(bEn, 'models/grass_0.obj', 'textures/grass_0.png', bEr['grassScale'], bEn['color']),
                'receiveShadow': !0x0
            },
            'WEAPON_PICKUP': {
                'interact': !0x0,
                'customScore': !0x0,
                'defaultSize': [bEr['pickupZoneX'], bEr['pickupZoneH'], bEr['pickupZoneZ']],
                'scalable': !0x1,
                'tool': !0x0,
                'scaleWithSize': !0x1,
                'lineCol': 0x36dbff,
                'noTexture': !0x0,
                'texturable': !0x1,
                'opacity': 0.1,
                'genGeo': async(bEn,bEo)=>function(bEn, bEo) {
                    let bEp = bEs['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], ...bEn['size'], {
                        'scale': 0x1,
                        'amb': bEo,
                        'useScale': !0x0
                    });
                    return bEp = new bEq['BufferGeometry']()['fromGeometry'](bEp),
                    bEy(bEn, 'models/weapons/' + bEu[bEn['weaponId']]['src'] + '.obj', 'textures/weapons/' + bEu[bEn['weaponId']]['src'] + '.png', bEu[bEn['weaponId']]['scale'], 0xffffff, -0.5, -1.6, 0x0, 'wepMesh'),
                    bEp;
                }(bEn, bEo),
                'stepSrc': 'a'
            },
            'VEHICLE': {
                'hasHealth': !0x0,
                'editColor': !0x0,
                'dontRound': !0x0,
                'complex': !0x0,
                'emiss': !0x0,
                'gen': bEn=>bEy(bEn, 'models/vehicle_0.obj', 'textures/vehicle_0.png', bEr['vehicleScale'], bEn['color']),
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'LADDER': {
                'defaultSize': [0x2, 0xa, 0x4],
                'scalable': !0x0,
                'scaleWithSize': !0x1,
                'editColor': !0x0,
                'hideBoundingBox': !0x1,
                'texturable': !0x0,
                'genGeo': async bEn=>function(bEn, bEo, bEp, bEs) {
                    var bEu = new bEq['Geometry']();
                    bEs = bEs * Math['PI'] / 0x2;
                    let bEv = {
                        'x': 0x0 + bEr['ladderScale'] * Math['cos'](bEs),
                        'z': 0x0 + bEr['ladderScale'] * Math['sin'](bEs),
                        'y': 0x0 - bEo / 0x2
                    };
                    bEW(bEu, bEv['x'] + bEr['ladderWidth'] * Math['sin'](bEs), bEv['y'], bEv['z'] + bEr['ladderWidth'] * Math['cos'](bEs), 0x2 * bEr['ladderScale'], bEo + 0x2, 0x2 * bEr['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
                        'scale': 0.02
                    }),
                    bEW(bEu, bEv['x'] - bEr['ladderWidth'] * Math['sin'](bEs), bEv['y'], bEv['z'] - bEr['ladderWidth'] * Math['cos'](bEs), 0x2 * bEr['ladderScale'], bEo + 0x2, 0x2 * bEr['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], {
                        'scale': 0.02
                    });
                    for (var bEw = Math['floor'](bEo / 0x6), bEx = 0x0; bEx < bEw; ++bEx)
                        bEV(bEu, bEv['x'], bEv['y'] + 0x6 * (bEx + 0x1) + bEt['randFloat'](-0x1, 0x1), bEv['z'], bEr['ladderWidth'], bEr['ladderScale'], {
                            'scale': 0.02
                        }, -bEs + Math['PI'] / 0x2, Math['PI'] / 0x2, bEt['randFloat'](-0.1, 0.1));
                    return bEu;
                }(...bEn['size'], bEn['direction']),
                'customDirection': !0x0,
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0
            },
            'CUBE': {
                'movingTexture': !0x0,
                'defaultSize': [0xa, 0xa, 0xa],
                'hasHealth': !0x0,
                'scalable': !0x0,
                'editAmb': !0x0,
                'scaleWithSize': !0x1,
                'editColor': !0x0,
                'editEmissive': !0x0,
                'editOpac': !0x0,
                'hideBoundingBox': !0x1,
                'editPen': !0x0,
                'texturable': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'hasBorder': !0x0
            },
            'RAMP': {
                'defaultSize': [0xa, 0x5, 0xa],
                'movingTexture': !0x0,
                'scalable': !0x0,
                'scaleWithSize': !0x1,
                'hideBoundingBox': !0x1,
                'boostable': !0x0,
                'editColor': !0x0,
                'texturable': !0x0,
                'genGeo': async bEn=>function(bEn, bEo, bEp, bEr, bEt, bEu, bEv) {
                    var bEw = new bEq['Geometry']();
                    bEo = 0x0 - bEt / 0x2;
                    var bEx = 0x0 != (bEv = bEv * Math['PI'] / 0x2) && bEv != Math['PI'];
                    return ((bEn,bEo,bEp,bEr,bEt,bEu,bEv,bEx,bEy)=>{
                        bEx = bEx || {};
                        var bEP = new bEq['Mesh'](bEs['generatePlane'](0x2 * bEu, bEr, bEx));
                        bEP['position']['set'](bEn, bEo + bEt / 0x2, bEp),
                        bEu *= 0x2;
                        var bEV = Math['sqrt'](bEt * bEt + bEu * bEu);
                        bEP['scale']['set'](bEr, bEV, 0x2),
                        bEP['rotateY'](-Math['PI'] / 0x2 - bEv),
                        bEP['rotateX'](Math['asin'](bEt / bEV) - Math['PI'] / 0x2),
                        bEP['rotateZ'](bEy || 0x0),
                        bEP['updateMatrix'](),
                        bEw['merge'](bEP['geometry'], bEP['matrix']);
                    }
                    )(bEn, bEo, bEp, bEx ? bEr : bEu, bEt, (bEx ? bEu : bEr) / 0x2, bEv, {
                        'scale': 0x1
                    }),
                    bEw;
                }(0x0, 0x0, 0x0, ...bEn['size'], bEn['direction']),
                'shootable': !0x0,
                'customDirection': !0x0,
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'doubleSide': !0x0
            },
            'PLANE': {
                'defaultSize': [0x4, 0.01, 0x4],
                'movingTexture': !0x0,
                'dontRound': !0x0,
                'scalable': !0x0,
                'canTerrain': !0x0,
                'edgeNoise': !0x0,
                'scaleWithSize': !0x0,
                'editColor': !0x0,
                'editPen': !0x0,
                'editEmissive': !0x0,
                'editOpac': !0x0,
                'hideBoundingBox': !0x1,
                'texturable': !0x0,
                'genGeo': async bEn=>function(bEn, bEo) {
                    let bEp = new bEq['PlaneGeometry'](bEn,bEo);
                    return bEp['rotateX'](-Math['PI'] / 0x2),
                    bEp;
                }(bEn['size'][0x0], bEn['size'][0x2]),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'doubleSide': !0x0
            },
            'OBJECTIVE': {
                'defaultSize': [0x32, 0x32, 0x32],
                'scalable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.2,
                'lineCol': 0xc800ff,
                'tool': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            },
            'PARTICLES': {
                'defaultSize': [0x14, 0x14, 0x14],
                'hasParticles': !0x0,
                'scalable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.3,
                'lineCol': 0x2effff,
                'tool': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            },
            'BILLBOARD': {
                'defaultSize': [0x28, 0.01, 0xa],
                'lineCol': 0xffff00,
                'dontRound': !0x0,
                'scalable': !0x0,
                'canTerrain': !0x0,
                'scaleWithSize': !0x0,
                'hideBoundingBox': !0x1,
                'genGeo': async bEn=>function(bEn, bEo, bEp, bEr, bEs, bEt) {
                    var bEu = new bEq['Geometry']();
                    return bEV(bEu, bEn, bEo, bEp, bEr / 0x2, bEt / 0x2),
                    bEu;
                }(0x0, 0x0, 0x0, ...bEn['size']),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'doubleSide': !0x0
            },
            'SCORE_ZONE': {
                'customScore': !0x0,
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.3,
                'lineCol': 0xffff00,
                'tool': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            },
            'DEATH_ZONE': {
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.3,
                'lineCol': 0xff0000,
                'tool': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            },
            'SPAWN_POINT': {
                'scalable': !0x1,
                'alwaysSee': !0x0,
                'tool': !0x0,
                'scaleWithSize': !0x1,
                'teamable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.00001,
                'stepSrc': 'a',
                'customDirection': !0x0,
                'dontRound': !0x0,
                'genGeo': async(bEn,bEo)=>function(bEn, bEo) {
                    bEy(bEn, 'models/spawn_0.obj', 'textures/spawn_0.png', 0x1, 0xffffff, -5.5, 0x0, -((bEn['direction'] || 0x0) + 0x1) * Math['PI'] / 0x2, 'spwnMesh');
                    let bEp = bEs['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x7, 0xb, 0x7, {
                        'scale': 0x1,
                        'amb': bEo,
                        'transparent': !0x0,
                        'useScale': !0x0,
                        'depthWrite': !0x1,
                        'side': 0x2
                    });
                    return bEp = new bEq['BufferGeometry']()['fromGeometry'](bEp);
                }(bEn, bEo),
                'dummy': !0x1,
                'castShadow': !0x1,
                'receiveShadow': !0x1
            },
            'CHECK_POINT': {
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.3,
                'lineCol': 0x3dac5,
                'tool': !0x0,
                'customDirection': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            },
            'TELEPORTER': {
                'hasSignals': !0x0,
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'noTexture': !0x0,
                'opacity': 0.3,
                'lineCol': 0xb1fff0,
                'tool': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            },
            'CAMERA_POSITION': {
                'defaultSize': [0x2, 0x2, 0x2],
                'scalable': !0x1,
                'alwaysSee': !0x0,
                'tool': !0x0,
                'scaleWithSize': !0x1,
                'hideBoundingBox': !0x0,
                'editorGen': bEn=>function(bEn, bEo, bEp) {
                    let bEr = new bEq['TextureLoader']()['load'](bEt['versionifyUrl'](bEo));
                    bEr['magFilter'] = bEq['NearestFilter'];
                    let bEs = new bEq['SpriteMaterial']({
                        'map': bEr,
                        'color': 0xffffff
                    })
                      , bEu = new bEq['Sprite'](bEs);
                    bEp && bEu['scale']['set'](bEp, bEp, 0x1),
                    bEn['add'](bEu);
                }(bEn, 'img/crosshair.png', 0x5),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x1,
                'receiveShadow': !0x1
            },
            'FLAG': {
                'defaultSize': [bEr['flagZoneS'], bEr['flagZoneH'], bEr['flagZoneS']],
                'scalable': !0x1,
                'tool': !0x0,
                'scaleWithSize': !0x1,
                'lineCol': 0xc800ff,
                'teamable': !0x0,
                'noDefault': !0x0,
                'genGeo': async(bEn,bEo)=>function(bEn, bEo) {
                    bEy(bEn, 'models/crystal_0.obj', 'textures/crystal_0.png', bEr['flagScale'], 0xffffff, bEr['flagOff'] / 0x2);
                    var bEp = bEs['generateCube']([0x1, 0x1, 0x0, 0x0, 0x1, 0x1], ...bEn['size'], {
                        'scale': 0x1,
                        'amb': bEo,
                        'useScale': !0x0,
                        'transparent': !0x0,
                        'depthWrite': !0x1,
                        'side': 0x2
                    });
                    return bEp = new bEq['BufferGeometry']()['fromGeometry'](bEp);
                }(bEn, bEo),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x1,
                'receiveShadow': !0x1
            },
            'POINT_GATE': {
                'canUndo': !0x0,
                'interact': !0x0,
                'customScore': !0x0,
                'movingTexture': !0x0,
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'forceCollision': !0x0,
                'editAmb': !0x0,
                'scaleWithSize': !0x1,
                'editColor': !0x0,
                'editEmissive': !0x0,
                'editOpac': !0x0,
                'lineCol': 0xff00ff,
                'texturable': !0x0,
                'tool2': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'complex': !0x0,
                'hasBorder': !0x0
            },
            'TRIGGER': {
                'hasHealth': !0x0,
                'movingTexture': !0x0,
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'forceCollision': !0x0,
                'editAmb': !0x0,
                'scaleWithSize': !0x1,
                'editColor': !0x0,
                'editEmissive': !0x0,
                'editOpac': !0x0,
                'lineCol': 0xff00ff,
                'texturable': !0x0,
                'tool2': !0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'complex': !0x0
            },
            'SIGN': {
                'movingTexture': !0x0,
                'hasText': !0x0,
                'defaultSize': [0x28, 0.01, 0xa],
                'forceCollision': !0x0,
                'lineCol': 0xffff00,
                'scalable': !0x0,
                'scaleWithSize': !0x0,
                'hideBoundingBox': !0x1,
                'tool': !0x0,
                'genGeo': async bEn=>function(bEn, bEo, bEp, bEr, bEs, bEt, bEu) {
                    var bEv = new bEq['Geometry']();
                    return bEV(bEv, 0x0, 0x0, 0x0, bEs / 0x2, bEu / 0x2),
                    bEv;
                }(bEn, 0x0, 0x0, 0x0, ...bEn['size']),
                'stepSrc': 'a',
                'dummy': !0x1,
                'castShadow': !0x0,
                'receiveShadow': !0x0,
                'doubleSide': !0x0
            },
            'PLACEHOLDER': {
                'defaultSize': [0xa, 0xa, 0xa],
                'scalable': !0x0,
                'noTexture': !0x0,
                'noExport': !0x0,
                'tool': !0x0,
                'opacity': 0.1,
                'lineCol': 0x0,
                'genGeo': async(bEn,bEo)=>bEP(...bEn['size'], bEo),
                'stepSrc': 'a'
            }
        },
        bEn['exports']['texturePrefabs'] = {
            'WALL': {
                'src': 'wall_0',
                'filter': bEq['NearestFilter']
            },
            'DIRT': {
                'src': 'dirt_0',
                'filter': bEq['NearestFilter']
            },
            'FLOOR': {
                'src': 'floor_0',
                'filter': bEq['NearestFilter']
            },
            'GRID': {
                'src': 'grid_0',
                'filter': bEq['NearestFilter']
            },
            'GREY': {
                'src': 'grey_0',
                'filter': bEq['NearestFilter']
            },
            'DEFAULT': {
                'src': 'default',
                'filter': bEq['NearestFilter']
            },
            'ROOF': {
                'src': 'roof_0',
                'filter': bEq['NearestFilter']
            },
            'FLAG': {
                'src': 'flag_0',
                'filter': bEq['NearestFilter']
            },
            'CHECK': {
                'src': 'check_0',
                'filter': bEq['NearestFilter']
            },
            'GRASS': {
                'src': 'grass_1',
                'filter': bEq['NearestFilter']
            },
            'LINES': {
                'src': 'lines_0',
                'filter': bEq['NearestFilter']
            },
            'BRICK': {
                'src': 'brick_0',
                'filter': bEq['NearestFilter']
            },
            'LINK': {
                'src': 'link_0',
                'trans': !0x0,
                'filter': bEq['NearestFilter']
            }
        };
        let bH0 = bEn=>({
            'src': bEn,
            'filter': bEq['NearestFilter']
        });
        bEn['exports']['loadTexturePrefab'] = function(bEo, bEp=null) {
            if (bEp['prefab']['hasText'])
                return (bEn=>{
                    var bEo = new bEq['Texture'](bEn);
                    return bEo['wrapS'] = bEq['RepeatWrapping'],
                    bEo['wrapT'] = bEq['RepeatWrapping'],
                    bEo['repeat']['set'](0x1, 0x1),
                    bEo['minFilter'] = bEq['NearestFilter'],
                    bEo['magFilter'] = bEq['NearestFilter'],
                    bEo['needsUpdate'] = !0x0,
                    bEo;
                }
                )(bEt['createCanvasText'](bEp['size'][0x0], bEp['size'][0x2], bEp['text'] || 'Hello\x20World', bEp['fsize'] || 0xa, bEp['fcolor'] || '#000', bEp['bcolor'] || '#fff', !bEp['backVisible'], bEp['tAlign'] || 0x0));
            let bEs = 'BILLBOARD' == bEp['objType'] ? bH0('pubs/b_' + (bEp['poster'] || bEt['randInt'](0x1, bEr['billboardCnt']))) : bEn['exports']['texturePrefabs'][bEo];
            return 'default' == (bEs = 'FLAG' == bEp['objType'] ? bH0('zone_r') : bEs)['src'] ? void 0x0 : bEv['load'](bEt['versionifyUrl']('/textures/' + bEs['src'] + '.png'), bEn=>{
                bEn['wrapS'] = bEq['RepeatWrapping'],
                bEn['wrapT'] = bEq['RepeatWrapping'],
                bEn['minFilter'] = bEs['filter'],
                bEn['magFilter'] = bEs['filter'],
                bEn['needsUpdate'] = !0x0;
            }
            );
        }
        ;
    }
    , function(bH8, bH9, bHa) {
        'use strict';
        bHa['d'](bH9, 'a', function() {
            return bHb;
        });
        var bHb = function() {
            function bH8() {
                this['_hasWeakSet'] = 'function' == typeof WeakSet,
                this['_inner'] = this['_hasWeakSet'] ? new WeakSet() : [];
            }
            return bH8['prototype']['memoize'] = function(bH8) {
                if (this['_hasWeakSet'])
                    return !!this['_inner']['has'](bH8) || (this['_inner']['add'](bH8),
                    !0x1);
                for (var bH9 = 0x0; bH9 < this['_inner']['length']; bH9++)
                    if (this['_inner'][bH9] === bH8)
                        return !0x0;
                return this['_inner']['push'](bH8),
                !0x1;
            }
            ,
            bH8['prototype']['unmemoize'] = function(bH8) {
                if (this['_hasWeakSet'])
                    this['_inner']['delete'](bH8);
                else
                    for (var bH9 = 0x0; bH9 < this['_inner']['length']; bH9++)
                        if (this['_inner'][bH9] === bH8) {
                            this['_inner']['splice'](bH9, 0x1);
                            break;
                        }
            }
            ,
            bH8;
        }();
    }
    , function(bHh, bHi, bHj) {
        const bHk = bHj(0x7)
          , bHl = bHj(0x3c)
          , bHm = bHj(0x3d)
          , bHn = bHj(0x16)
          , bHo = bHj(0x28);
        var bHp = [{
            'id': 'ffa',
            'name': 'Free\x20for\x20All',
            'alias': 'ffa'
        }, {
            'id': 'tdm',
            'name': 'Team\x20Deathmatch',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
            'alias': 'tdm',
            'teams': !0x0
        }, {
            'id': 'point',
            'name': 'Hardpoint',
            'alias': 'point',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists', 'reward'],
            'objective': !0x0,
            'teams': !0x0,
            'gameStart': function(bHh) {
                bHh['activeObjective'] = -0x1,
                bHh['nextObjective'](null, !0x0);
            }
        }, {
            'id': 'ctf',
            'name': 'Capture\x20the\x20Flag',
            'alias': 'ctf',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'caps', 'reward'],
            'onKill': function(bHh, bHi, bHj) {
                bHh['dropFlag'](bHj['flag']);
            },
            'flags': !0x0,
            'teams': !0x0,
            'noScoreC': !0x0
        }, {
            'id': 'bhop',
            'name': 'Parkour',
            'endStats': ['sid', 'name', 'score', 'deaths'],
            'alias': 'bhop',
            'noKick': !0x0,
            'friendly': !0x0
        }, {
            'id': 'hide',
            'name': 'Hide\x20&\x20Seek',
            'alias': 'hide',
            'endStats': ['sid', 'name', 'score', 'found', 'reward'],
            'winCondition': function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'hide' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi ? 'hide' : 'seek';
            },
            'condition': [function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'hide' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi;
            }
            ],
            'minPlayers': 0x2,
            'waitTimers': [{
                'time': 0x2710,
                'msg': 'picking\x20seeker\x20in\x20',
                'trigger': function(bHh) {
                    bHh['pickSeeker']();
                }
            }, {
                'time': 0xafc8,
                'msg': 'releasing\x20seeker\x20in\x20',
                'trigger': function(bHh) {
                    bHh['releaseSeeker']();
                }
            }],
            'spdMlt': {
                'hide': 0.8
            },
            'killConv': !0x0,
            'noKick': !0x0,
            'showTeam': !0x0,
            'startTeam': 'hide',
            'convTeam': 'seek',
            'convWord': 'found',
            'noWeap': !0x0,
            'friendly': !0x0,
            'hideNames': !0x0
        }, {
            'id': 'infect',
            'name': 'Infected',
            'alias': 'infect',
            'endStats': ['sid', 'name', 'score', 'kills', 'infected', 'reward'],
            'winCondition': function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'surv' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi ? 'surv' : 'inf';
            },
            'condition': [function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'surv' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi;
            }
            ],
            'minPlayers': 0x2,
            'waitTimers': [{
                'time': 0x4e20,
                'msg': 'infection\x20in\x20',
                'trigger': function(bHh) {
                    bHh['infectRandom']();
                }
            }],
            'teamClass': {
                'inf': 0x9
            },
            'spdMlt': {
                'inf': 1.15
            },
            'killConv': !0x0,
            'noKick': !0x0,
            'startTeam': 'surv',
            'convWord': 'infected',
            'convTeam': 'inf'
        }, {
            'id': 'race',
            'name': 'Race',
            'alias': 'race',
            'endStats': ['sid', 'name', 'score', 'time'],
            'gameTime': 0x0,
            'showMS': !0x0,
            'timed': !0x0,
            'endSort': function(bHh, bHi) {
                return bHh['score'] === bHi['score'] && bHh['gameTimer'] && bHi['gameTimer'] ? bHh['gameTimer'] - bHi['gameTimer'] : bHi['score'] - bHh['score'];
            },
            'gameStart': function(bHh) {
                bHh['lockMove'] = !0x0,
                bHh['targetScore'] = 0x0;
                for (var bHi = 0x0; bHi < bHh['map']['manager']['objects']['length']; ++bHi)
                    bHh['map']['manager']['objects'][bHi]['score'] && (bHh['targetScore'] += bHh['map']['manager']['objects'][bHi]['scoreP']);
            },
            'condition': [function(bHh) {
                for (var bHi = 0x0; bHi < bHh['players']['list']['length']; ++bHi)
                    bHh['players']['list'][bHi]['score'] >= bHh['targetScore'] && !bHh['players']['list'][bHi]['timer'] && (bHh['players']['list'][bHi]['timer'] = bHh['lastTimer'],
                    bHh['players']['list'][bHi]['gameTimer'] = bHh['gameTimer'],
                    bHh['waitTimers'] || (bHh['waitTimers'] = [{
                        'time': 0x2710,
                        'contTime': !0x0,
                        'msg': 'race\x20ends\x20in\x20',
                        'trigger': function(bHh) {
                            bHh['gameTimer'] = 'skip';
                        }
                    }]));
                return !0x0;
            }
            ],
            'waitTimers': [{
                'time': 0x3a98,
                'msg': 'race\x20starting\x20in\x20',
                'trigger': function(bHh) {
                    bHh['lockMove'] = !0x1;
                }
            }],
            'noWeap': !0x0,
            'friendly': !0x0
        }, {
            'id': 'lms',
            'name': 'Last\x20Man\x20Standing',
            'alias': 'lms',
            'endStats': ['sid', 'name', 'score', 'kills', 'deaths', 'assists'],
            'noRegen': !0x0,
            'noKick': !0x0,
            'teams': !0x0,
            'lives': 0x1,
            'winCondition': function(bHh) {
                for (var bHi = 0x0, bHj = 0x0, bHk = 0x0; bHk < bHh['players']['list']['length']; ++bHk)
                    if (0x0 < bHh['players']['list'][bHk]['lives']) {
                        var bHl = bHh['players']['list'][bHk]['lives'];
                        0x1 == bHh['players']['list'][bHk]['team'] ? bHi += bHl : bHj += bHl;
                    }
                return bHi > bHj ? 0x1 : 0x2;
            },
            'gameTime': 0x493e0
        }, {
            'id': 'simon',
            'name': 'Simon\x20Says',
            'alias': 'simon',
            'endStats': ['sid', 'name', 'score', 'reward'],
            'condition': [function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'foll' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi;
            }
            ],
            'minPlayers': 0x3,
            'waitTimers': [{
                'time': 0x2710,
                'msg': 'starts\x20in\x20',
                'trigger': function(bHh) {
                    bHh['pickSimon']();
                }
            }],
            'noKick': !0x0,
            'teamSee': ['simon', 'foll'],
            'startTeam': 'foll'
        }, {
            'id': 'gun',
            'name': 'Gun\x20Game',
            'alias': 'gun',
            'endStats': ['sid', 'name', 'weapon', 'kills', 'melees', 'setbacks', 'reward'],
            'leaderStat': 'weaponTier',
            'winCondition': function(bHh) {
                for (var bHi = 0x0; bHi < bHh['players']['list']['length']; ++bHi)
                    if (bHh['players']['list'][bHi]['weaponTier'] >= bHh['mode']['weaponOrder']['length'])
                        return bHh['players']['list'][bHi];
                return null;
            },
            'condition': [function(bHh) {
                for (var bHi = 0x0; bHi < bHh['players']['list']['length']; ++bHi)
                    if (bHh['players']['list'][bHi]['weaponTier'] >= bHh['mode']['weaponOrder']['length'])
                        return !0x1;
                return !0x0;
            }
            ],
            'onKill': function(bHh, bHi, bHj, bHk, bHl) {
                bHk && bHk != bHj ? bHh['weapons'][null == bHl['weaponId'] ? bHk['loadout'][bHk['weaponIndex']] : bHl['weaponId']]['melee'] ? bHh['decreaseWeapon'](bHj) : bHh['increaseWeapon'](bHk, bHl) : bHh['decreaseWeapon'](bHj),
                bHi && bHh['players']['syncLeaders']();
            },
            'startingLoadout': [0x2],
            'keepLoadout': !0x0,
            'rewardMlt': 0x32,
            'noReward': !0x0,
            'noAssists': !0x0,
            'noStreaks': !0x0,
            'minPlayers': 0x2,
            'noWeap': !0x0,
            'weaponOrder': [0x2, 0xa, 0x4, 0xb, 0x5, 0x3, 0x9, 0x1, 0xe, 0x6, 0x0, 0x7, 0x8, 0xd]
        }, {
            'id': 'prop',
            'name': 'Prop\x20Hunt',
            'alias': 'prop',
            'genID': 'p',
            'endStats': ['sid', 'name', 'score', 'kills'],
            'noRegen': !0x0,
            'noKick': !0x0,
            'teams': !0x0,
            'lives': 0x1,
            'winCondition': function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'prop' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi ? 'prop' : 'seek';
            },
            'condition': [function(bHh) {
                for (var bHi = 0x0, bHj = 0x0, bHk = 0x0; bHk < bHh['players']['list']['length']; ++bHk)
                    0x0 < bHh['players']['list'][bHk]['lives'] && bHh['players']['list'][bHk]['active'] && ('prop' == bHh['players']['list'][bHk]['team'] ? bHi++ : bHj++);
                return 0x1 <= bHi && 0x1 <= bHj;
            }
            ],
            'minPlayers': 0x2,
            'waitTimers': [{
                'time': 0x2710,
                'msg': 'locking\x20seekers\x20in\x20',
                'trigger': function(bHh) {
                    bHh['lockSeekers']();
                }
            }, {
                'time': 0x7530,
                'msg': 'releasing\x20seekers\x20in\x20',
                'noJoin': !0x0,
                'trigger': function(bHh) {
                    bHh['releaseSeeker']();
                }
            }],
            'teamNs': ['seek', 'prop'],
            'showTeam': !0x0,
            'hideNames': !0x0
        }, {
            'id': 'boss',
            'name': 'Boss\x20Hunt',
            'alias': 'boss',
            'winCondition': function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'boss' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi ? 'boss' : 'heros';
            },
            'condition': [function(bHh) {
                for (var bHi = 0x0, bHj = 0x0; bHj < bHh['players']['list']['length']; ++bHj)
                    bHh['players']['list'][bHj]['active'] && 'boss' == bHh['players']['list'][bHj]['team'] && bHi++;
                return 0x0 < bHi;
            }
            ],
            'waitTimers': [{
                'time': 0x3a98,
                'msg': 'picking\x20boss\x20in\x20',
                'trigger': function(bHh) {
                    bHh['pickBoss']();
                }
            }],
            'noReward': !0x0,
            'minPlayers': 0x2,
            'startTeam': 'heros'
        }]
          , bHq = [0x0, 0x1, 0x2, 0x3];
        bHh['exports']['modes'] = bHp;
        for (var bIq = [{
            'name': 'Burg',
            'ambInd': 0x1,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x1,
            'skyDomeCol0': '#ffffff',
            'skyDomeCol1': '#7196a2',
            'skyDomeCol2': '#184452',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0x7d6e6c,
            'light': 0xffe8e8,
            'sky': 0xd7c6c6,
            'fog': 0xd2c1c1,
            'fogD': 918.7540927106669,
            'dthY': -0x64,
            'camPos': [0xb, 0x21, -0xd9],
            'spawns': [[-0x50, 0x12, 0x23, 0x0], [0xb1, 0x0, -0xbc, 0x0], [0xd7, 0xa, -0x1f8, 0x0, 0x1], [-0xa9, 0x2, -0x202, 0x0, 0x2], [-0x148, 0x0, -0xff, 0x0], [-0x9a, 0x0, -0x86, 0x0, 0x1], [-0x7d, -0x1c, -0x155, 0x0], [0x20, -0x1c, -0x1fd, 0x0, 0x1], [0x14b, 0x0, -0xe3, 0x0, 0x2], [0x66, 0x0, -0x16d, 0x0]],
            'ambO': 0.7,
            'ambS': 0x5,
            'modes': [0x0, 0x1],
            'shadScale': 0xaa,
            'objects': [{
                'p': [-0x60, 0x10, 0x29],
                's': [0x120, 0x2, 0x3e],
                't': 0x1
            }, {
                'p': [0x49, 0x0, 0x21],
                's': [0x32, 0x12, 0x2e],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0x1c, 0x0, 0x8],
                's': [0x98, 0x18, 0x4]
            }, {
                'p': [0x0, -0x2, -0x47],
                's': [0x204, 0x2, 0xfc],
                't': 0x1
            }, {
                'p': [-0x4c, 0x0, -0x30],
                's': [0x38, 0x4a, 0x7a],
                'bo': 0x1
            }, {
                'p': [0x25, 0x0, -0x44],
                's': [0x6e, 0x36, 0x50],
                'bo': 0x1
            }, {
                'p': [-0x70, 0x0, 0x4a],
                's': [0x7e, 0x4c, 0x26],
                'bo': 0x1
            }, {
                'p': [0x5a, 0x0, 0x4d],
                's': [0x9e, 0x4c, 0x2c],
                'bo': 0x1
            }, {
                'p': [-0x88, 0x10, -0x10],
                's': [0x40, 0x2, 0x34],
                't': 0x1
            }, {
                'p': [-0x88, 0x0, -0x2c],
                's': [0x40, 0x18, 0x4]
            }, {
                'p': [-0xaa, 0x0, -0x12],
                's': [0x4, 0x18, 0x38]
            }, {
                'p': [-0xea, 0x0, -0x1b],
                's': [0x20, 0x3c, 0x61],
                'bo': 0x1
            }, {
                'p': [-0x102, 0x12, 0x29],
                's': [0x2f, 0x20, 0x2c],
                'c': 0xcfcfcf,
                'bo': 0x1
            }, {
                'p': [-0xda, 0xd, 0x4a],
                's': [0x58, 0x26, 0x36],
                'bo': 0x1
            }, {
                'p': [0xb9, 0x0, -0x9],
                's': [0x10, 0x43, 0x54],
                'bo': 0x1
            }, {
                'p': [0xb4, 0x0, 0x2d],
                's': [0x3c, 0x5c, 0x2c],
                'c': 0xb4b4b4,
                'bo': 0x1
            }, {
                'p': [0xd5, 0x0, -0x3d],
                's': [0x5e, 0x5c, 0x3c],
                'c': 0xb1b1b1,
                'bo': 0x1
            }, {
                'p': [0x60, 0x0, -0xaf],
                's': [0x6e, 0x2c, 0x2c],
                'bo': 0x1
            }, {
                'p': [-0x55, 0x0, -0x8c],
                's': [0x38, 0x54, 0x70],
                'bo': 0x1
            }, {
                'p': [0x7e, -0x4, -0x12c],
                's': [0xe4, 0x4, 0xce],
                't': 0x1
            }, {
                'p': [-0x52, -0x1c, -0xfc],
                's': [0x3c, 0x5e, 0x8a],
                'bo': 0x1
            }, {
                'p': [0x9, -0x1c, -0x112],
                's': [0x6, 0x22, 0xa8]
            }, {
                'p': [0x31, -0x1c, -0x181],
                's': [0x60, 0x68, 0x44],
                'bo': 0x1
            }, {
                'p': [-0x17, -0x1c, -0xfc],
                's': [0x3a, 0x1c, 0x6e],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [0x3b, -0x20, -0x1c4],
                's': [0xda, 0x4, 0x8a],
                't': 0x1
            }, {
                'p': [-0x6c, -0x1c, -0x179],
                's': [0x82, 0x58, 0x2a],
                'bo': 0x1
            }, {
                'p': [-0x15, 0x6, -0x179],
                's': [0x2c, 0x26, 0x14],
                'bo': 0x1
            }, {
                'p': [-0xf3, 0x0, -0x69],
                's': [0x15, 0x32, 0x60],
                'c': 0xbbb9b9,
                'bo': 0x1
            }, {
                'p': [0xbe, 0x0, -0x15a],
                's': [0x75, 0x3a, 0x76],
                'bo': 0x1
            }, {
                'p': [-0xc3, 0x0, -0x11],
                's': [0x2e, 0x12, 0x36],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0x86, 0x0, -0xbf],
                's': [0x5a, 0x4d, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0x116, 0x0, -0xbf],
                's': [0x82, 0x4d, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0xe3, -0x2, -0xfe],
                's': [0xe8, 0x2, 0x32],
                't': 0x1
            }, {
                'p': [-0xd2, -0x1c, -0x143],
                's': [0x84, 0x5a, 0x42],
                'bo': 0x1
            }, {
                'p': [-0x80, -0x1c, -0x12c],
                's': [0x20, 0x1c, 0x2a],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0xe9, -0x2, -0x1a3],
                's': [0xac, 0x2, 0x118],
                't': 0x1
            }, {
                'p': [-0x146, -0x16, -0x141],
                's': [0x22, 0x54, 0x58],
                'bo': 0x1
            }, {
                'p': [-0x172, -0x2, -0xfd],
                's': [0x37, 0x9b, 0x3a],
                'bo': 0x1
            }, {
                'p': [-0x9e, -0x1c, -0x112],
                's': [0x1c, 0x5a, 0x20],
                'bo': 0x1
            }, {
                'p': [-0x107, -0x14, -0x142],
                's': [0x1e, 0x5e, 0x5e],
                'bo': 0x1
            }, {
                'p': [-0x14a, -0x17, -0x18a],
                's': [0x16, 0x51, 0xd2],
                'bo': 0x1
            }, {
                'p': [-0x58, -0x1c, -0x1ad],
                's': [0x4e, 0x1c, 0x3e],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [-0x67, -0x16, -0x1f1],
                's': [0x31, 0x54, 0x56],
                'bo': 0x1
            }, {
                'p': [-0x89, -0x2, -0x1cf],
                's': [0x14, 0x2, 0x82],
                't': 0x1
            }, {
                'p': [-0xa4, 0x0, -0x223],
                's': [0x62, 0x56, 0x28],
                'bo': 0x1
            }, {
                'p': [-0x11b, 0x0, -0x1fa],
                's': [0x48, 0xa, 0x56],
                't': 0x1
            }, {
                'p': [-0x105, 0x0, -0x1c4],
                's': [0x1c, 0xa, 0x16],
                't': 0x1
            }, {
                'p': [-0x12a, 0x0, -0x1c2],
                's': [0x2a, 0xa, 0x1a],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x15b, 0x0, -0x217],
                's': [0x48, 0x48, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0x106, 0x0, -0x237],
                's': [0x62, 0x34, 0x28],
                'bo': 0x1
            }, {
                'p': [-0x13f, 0x0, -0x24b],
                's': [0x30, 0x8b, 0x36],
                'c': 0xb1b1b1
            }, {
                'p': [-0x1, -0x1c, -0x179],
                's': [0x4, 0x22, 0x14],
                'bo': 0x1
            }, {
                'p': [-0x29, -0x1c, -0x179],
                's': [0x4, 0x22, 0x14],
                'bo': 0x1
            }, {
                'p': [-0x3f, -0x1c, -0x1fa],
                's': [0x34, 0x76, 0x5c],
                'bo': 0x1
            }, {
                'p': [0x55, -0x1c, -0x1f2],
                's': [0x20, 0x70, 0x58],
                'bo': 0x1
            }, {
                'p': [0xad, 0x8, -0x1f7],
                's': [0x94, 0x2, 0x54],
                't': 0x1
            }, {
                'p': [0x27, -0x1d, -0x220],
                's': [0xda, 0x5e, 0x2e],
                'bo': 0x1
            }, {
                'p': [0xb6, 0xa, -0x21c],
                's': [0x48, 0x57, 0x3c],
                'bo': 0x1
            }, {
                'p': [0x124, -0x4, -0x149],
                's': [0x68, 0x4, 0x108],
                't': 0x1
            }, {
                'p': [0x118, 0x0, -0x1e5],
                's': [0x3a, 0xa, 0x30],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [0x116, 0x8, -0x20f],
                's': [0x3e, 0x2, 0x24],
                't': 0x1
            }, {
                'p': [0x108, 0x9, -0x22e],
                's': [0x5e, 0x24, 0x1a],
                'bo': 0x1
            }, {
                'p': [0x14b, -0x17, -0x228],
                's': [0x36, 0x87, 0x6e],
                'c': '#aaaaaa',
                'bo': 0x1
            }, {
                'p': [0x14c, 0x0, -0x1f3],
                's': [0x30, 0x37, 0x6e],
                'bo': 0x1
            }, {
                'p': [0x156, 0x1, -0x19b],
                's': [0x14, 0x1f, 0x6e],
                'bo': 0x1
            }, {
                'p': [0x150, 0x0, -0x12f],
                's': [0x36, 0x3d, 0x6e],
                'bo': 0x1
            }, {
                'p': [0x7f, -0x1c, -0x1a9],
                's': [0x40, 0x23, 0x4]
            }, {
                'p': [0xc4, -0x1c, -0x1cd],
                's': [0x6e, 0x2c, 0x4]
            }, {
                'p': [0xf9, 0x0, -0x1e6],
                's': [0x4, 0x10, 0x2e]
            }, {
                'p': [0xcc, -0x1c, -0x1b8],
                's': [0x48, 0x1c, 0x26],
                'i': 0x9,
                't': 0x1
            }, {
                'p': [0x9c, 0x0, -0xbc],
                's': [0x20, 0x46, 0x52],
                'bo': 0x1
            }, {
                'p': [0xe4, 0x0, -0xbc],
                's': [0x20, 0x56, 0x52],
                'bo': 0x1
            }, {
                'p': [0x16f, 0x0, -0x92],
                's': [0x3a, 0x32, 0x76],
                'c': '#a2a2a2',
                'bo': 0x1
            }, {
                'p': [0x14f, 0x51, -0x3e],
                's': [0x3c, 0x3a, 0x3c]
            }, {
                'p': [0x15c, 0x0, -0xe3],
                's': [0x8, 0x2c, 0x34],
                'bo': 0x1
            }, {
                'p': [0x189, 0x0, -0x1a4],
                's': [0x58, 0x40, 0xc5]
            }, {
                'p': [0x18c, 0x0, -0xc4],
                's': [0x3a, 0x51, 0xba]
            }, {
                'p': [-0x164, 0x0, -0x171],
                's': [0x2a, 0x62, 0x32]
            }, {
                'p': [-0x108, 0x0, -0x54],
                's': [0x2a, 0x7c, 0x32],
                'c': 0xacacac
            }, {
                'p': [0x1, 0x0, 0x0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2a, 0x0, -0x4f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2a, 0xc, -0x4f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2a, 0x0, -0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x0, -0x1c, -0x145],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x0, -0x1c, -0x151],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x0, -0x10, -0x14d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4c, -0x1c, -0x147],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4c, -0x10, -0x147],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xed, 0xa, -0x1d9],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe0, 0xa, -0x208],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9b, 0xa, -0x1f8],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa7, 0xa, -0x1f8],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa3, 0x16, -0x1f8],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd6, 0xa, -0x1d2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x138, 0x0, -0x18f],
                's': [0x2, 0x2, 0x5c]
            }, {
                'p': [0x13e, 0x0, -0xf2],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe3, 0x0, -0x119],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd7, 0x0, -0x119],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe0, 0xc, -0x119],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x3b, 0x12, 0x13],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x6e, 0x12, -0x24],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x6e, 0x0, -0x34],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7a, 0x0, -0x34],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa5, 0x12, -0x27],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd7, 0x12, 0xd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x9a, 0x0, -0xfc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x139, 0x0, -0xeb],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x85, 0x0, -0x1d5],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0xbe, 0x0, -0x1e5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xce, 0x0, -0xcf],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xce, 0x0, -0xc3],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x62, 0x0, -0x3d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x62, 0x0, -0x49],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x5f, 0x0, -0x34],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x85, 0x0, -0x96],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xc0, 0x22, -0xbc],
                's': [0x28, 0x18, 0x52],
                'bo': 0x1
            }, {
                'p': [0x80, -0x4, -0x19f],
                's': [0x44, 0xc, 0x14],
                't': 0x1
            }, {
                'p': [0x5d, -0x1c, -0x1a6],
                's': [0x4, 0x2a, 0xa]
            }, {
                'p': [0x151, -0x4, -0x96],
                's': [0x16, 0x4, 0x5e],
                't': 0x1
            }, {
                'p': [-0xb, -0x1c, -0x180],
                's': [0x14, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x20, -0x1c, -0x172],
                's': [0x12, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xad, 0x0, -0xe9],
                's': [0x2, 0x22, 0x18],
                'pe': 0x1,
                't': 0x2
            }, {
                'p': [0xca, 0x0, -0xe2],
                's': [0x14, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb6, 0x0, -0x96],
                's': [0x14, 0x22, 0x2],
                'pe': 0x1,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xd3, 0x0, -0xa2],
                's': [0x2, 0x22, 0x18],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, -0x1c, -0x1b6],
                's': [0x1c, 0x4c, 0x28],
                'bo': 0x1
            }, {
                'p': [0x72, 0x0, -0x184],
                's': [0x24, 0x8, 0x22],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x151, 0x8b, -0x233],
                's': [0xc, 0x4, 0x6],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [-0x12b, 0x8b, -0x236],
                's': [0x8, 0x4, 0xc],
                'l': 0x1,
                'c': 0xb1afaf
            }, {
                'p': [-0x129, 0x8b, -0x24a],
                's': [0x4, 0x4, 0xc],
                'l': 0x1,
                'c': 0xb4b4b4
            }, {
                'p': [-0x12c, 0x8b, -0x260],
                's': [0xa, 0x4, 0xc],
                'l': 0x1,
                'c': 0xa5a5a5
            }, {
                'p': [-0x13c, 0x8b, -0x233],
                's': [0xc, 0x2, 0x6],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [-0xce, 0x56, -0x217],
                's': [0xe, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0x7e, 0x56, -0x217],
                's': [0x16, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xa5, 0x56, -0x212],
                's': [0x16, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xd1, 0x56, -0x230],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0xe6, 0x34, -0x226],
                's': [0x18, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x108, 0x34, -0x226],
                's': [0x12, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x127, 0x34, -0x226],
                's': [0xe, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x13c, 0x46, -0x1f6],
                's': [0x6, 0xc, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x17a, 0x49, -0x1f6],
                's': [0x6, 0x8, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x13e, 0x48, -0x1f8],
                's': [0xe, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x17a, 0x48, -0x1f8],
                's': [0xa, 0x2, 0xe],
                'l': 0x1
            }, {
                'p': [-0x166, 0x48, -0x1f3],
                's': [0xe, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13a, 0x48, -0x218],
                's': [0x6, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x1e0],
                's': [0x4, 0x2, 0x18],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x180],
                's': [0x4, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x19d],
                's': [0x4, 0x3, 0x15],
                'l': 0x1
            }, {
                'p': [-0x141, 0x3a, -0x1be],
                's': [0x4, 0x3, 0x13],
                'l': 0x1
            }, {
                'p': [-0x35, 0x3c, -0x188],
                's': [0x14, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [-0xa6, 0x3c, -0x16c],
                's': [0xe, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [0xe9, 0x2d, -0x224],
                's': [0xc, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0x106, 0x2d, -0x224],
                's': [0xb, 0x2, 0x6],
                'l': 0x1,
                'c': 0xcacaca
            }, {
                'p': [0x120, 0x2d, -0x224],
                's': [0x10, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x52, 0x5a, -0x1d2],
                's': [0xe, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x2b, 0x5a, -0x1d3],
                's': [0xc, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x2c, 0x5a, -0x207],
                's': [0xe, 0x6, 0x1e],
                'l': 0x1
            }, {
                'p': [-0x3c, 0x5a, -0x1cf],
                's': [0xe, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x27, 0x5a, -0x1ea],
                's': [0x4, 0x2, 0x10],
                'l': 0x1
            }, {
                'p': [-0x54, 0x5a, -0x20c],
                's': [0xa, 0x3, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x57, 0x5a, -0x1ec],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [-0x3f, 0x47, -0x1c2],
                's': [0x4, 0x4, 0x14],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x7a, 0x37, -0x1cb],
                's': [0x6, 0x10, 0x6],
                't': 0x2
            }, {
                'p': [-0x7c, 0x3e, -0x1fb],
                's': [0x6, 0x3, 0x10],
                'l': 0x1,
                'c': 0xdcdcdc
            }, {
                'p': [-0x7c, 0x3e, -0x1dc],
                's': [0x6, 0x2, 0xe],
                'l': 0x1,
                'c': 0xe3e3e3
            }, {
                'p': [-0x58, 0x3e, -0x1c9],
                's': [0x12, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0x74, 0x3c, -0x18c],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0xa4, 0x3c, -0x188],
                's': [0x12, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [-0x52, 0x3c, -0x18c],
                's': [0xe, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x55, 0x42, -0x1bf],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1f, 0x2c, -0x179],
                's': [0x9, 0x4, 0x14],
                'bo': 0x1
            }, {
                'p': [-0xe, 0x2c, -0x179],
                's': [0xa, 0x2, 0x14],
                'bo': 0x1
            }, {
                'p': [-0x155, 0x62, -0x183],
                's': [0xc, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x155, 0x62, -0x15e],
                's': [0xc, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [-0x152, 0x62, -0x171],
                's': [0x6, 0x2, 0xc],
                'l': 0x1
            }, {
                'p': [-0x173, 0x62, -0x185],
                's': [0xc, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [-0x164, 0x62, -0x188],
                's': [0x8, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x35, 0x41, -0x20b],
                's': [0x12, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x87, 0x41, -0x20b],
                's': [0xc, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x72, 0x41, -0x20b],
                's': [0xc, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0xd3, 0x61, -0x205],
                's': [0xe, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [0x99, 0x61, -0x206],
                's': [0xe, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [0xb8, 0x61, -0x202],
                's': [0xc, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0xd7, 0x61, -0x21b],
                's': [0x6, 0x2, 0x12],
                'l': 0x1
            }, {
                'p': [0xd3, 0x61, -0x234],
                's': [0xe, 0x6, 0xc],
                'l': 0x1
            }, {
                'p': [0x99, 0x61, -0x232],
                's': [0xe, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x95, 0x61, -0x21b],
                's': [0x6, 0x2, 0xc],
                'l': 0x1
            }, {
                'p': [0x94, 0x10, -0x1cd],
                's': [0xe, 0x1, 0x4]
            }, {
                'p': [0xf2, 0x10, -0x1cd],
                's': [0x12, 0x2, 0x4]
            }, {
                'p': [0xf9, 0x10, -0x1f1],
                's': [0x4, 0x2, 0xa]
            }, {
                'p': [0x60, 0x54, -0x1cb],
                's': [0x6, 0xc, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x4a, 0x54, -0x1cb],
                's': [0x6, 0xa, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x61, 0x54, -0x219],
                's': [0x6, 0x14, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x5e, 0x54, -0x1cf],
                's': [0xe, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x4a, 0x54, -0x1cf],
                's': [0xa, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x4c, 0x54, -0x215],
                's': [0xe, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x60, 0x54, -0x215],
                's': [0xa, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x62, 0x54, -0x1f2],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x48, 0x54, -0x1f2],
                's': [0x6, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [0x5b, 0x4c, -0x19e],
                's': [0x6, 0x10, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x55, 0x4c, -0x19a],
                's': [0x18, 0x6, 0x12],
                'l': 0x1
            }, {
                'p': [0xd, 0x4c, -0x19a],
                's': [0x18, 0x6, 0x12],
                'l': 0x1
            }, {
                'p': [0x30, 0x4c, -0x1a0],
                's': [0x14, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0xc, 0x4c, -0x166],
                's': [0x16, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [0x5, 0x4c, -0x17e],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x35, 0x4c, -0x162],
                's': [0x16, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x55, 0x4c, -0x168],
                's': [0x18, 0x6, 0x12],
                'l': 0x1
            }, {
                'p': [0x5d, 0x4c, -0x183],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x6, 0x4c, -0x19e],
                's': [0x6, 0x14, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x6, 0x4c, -0x164],
                's': [0x6, 0xe, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x14e, 0x20, -0x1b0],
                's': [0x4, 0x2, 0x12],
                'l': 0x1
            }, {
                'p': [0x14e, 0x20, -0x178],
                's': [0x4, 0x3, 0x12],
                'l': 0x1
            }, {
                'p': [0x14e, 0x20, -0x196],
                's': [0x4, 0x2, 0x16],
                'l': 0x1
            }, {
                'p': [0x93, 0x3a, -0x192],
                's': [0x1f, 0x9, 0x6],
                'l': 0x1
            }, {
                'p': [0x88, 0x3a, -0x17a],
                's': [0x9, 0xc, 0x2a],
                'l': 0x1
            }, {
                'p': [0xc6, 0x3a, -0x1a2],
                's': [0xa, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0xf5, 0x3a, -0x177],
                's': [0x7, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0xea, 0x3a, -0x19d],
                's': [0x1d, 0x5, 0x10],
                'l': 0x1
            }, {
                'p': [0xec, 0x3a, -0x12b],
                's': [0x19, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [0xf5, 0x3a, -0x155],
                's': [0x7, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0xf3, 0x3a, -0x1a0],
                's': [0x6, 0x13, 0x6],
                't': 0x2
            }, {
                'p': [0x13a, 0x3d, -0x15d],
                's': [0xa, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x14d, 0x3d, -0x164],
                's': [0xb, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x162, 0x3d, -0x15d],
                's': [0x12, 0x4, 0x12],
                'l': 0x1
            }, {
                'p': [0x138, 0x3d, -0x132],
                's': [0x6, 0x4, 0x1c],
                'l': 0x1
            }, {
                'p': [0x13c, 0x3d, -0x103],
                's': [0xe, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [0x14e, 0x3d, -0xfa],
                's': [0xb, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x164, 0x3d, -0x101],
                's': [0xe, 0x3, 0x12],
                'l': 0x1
            }, {
                'p': [0x11d, 0x3a, -0x58],
                's': [0x2, 0x28, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x11d, 0x3a, -0x28],
                's': [0x2, 0x28, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x126, 0x5d, -0x40],
                's': [0x16, 0x2, 0x35],
                't': 0x2
            }, {
                'p': [0xc1, 0x3a, -0x122],
                's': [0x18, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x88, 0x3a, -0x14c],
                's': [0x9, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [0x15c, 0x2c, -0xec],
                's': [0x8, 0x4, 0x10],
                'l': 0x1,
                'c': 0xe6e6e6
            }, {
                'p': [0x15c, 0x2c, -0xd8],
                's': [0x8, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x160, 0x40, -0x17b],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x160, 0x40, -0x19f],
                's': [0x6, 0x3, 0xe],
                'l': 0x1
            }, {
                'p': [0x136, 0x37, -0x1ea],
                's': [0x4, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x13b, 0x37, -0x1c3],
                's': [0xe, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x136, 0x37, -0x1d9],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [0x156, 0x37, -0x1be],
                's': [0xe, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x133, 0x70, -0x240],
                's': [0x6, 0x4, 0x16],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x14f, 0x8b, -0x59],
                's': [0xc, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x139, 0x8b, -0x54],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x165, 0x8b, -0x54],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x139, 0x8b, -0x28],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x134, 0x8b, -0x3e],
                's': [0x6, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0xe4, 0x30, -0x66],
                's': [0xa, 0x2, 0xe],
                'l': 0x1
            }, {
                'p': [-0x125, 0x28, -0x141],
                's': [0x20, 0x16, 0x58],
                'bo': 0x1
            }, {
                'p': [-0xc0, 0x3e, -0x143],
                's': [0x14, 0x4, 0x42],
                'l': 0x1
            }, {
                'p': [-0x148, 0x3e, -0x169],
                's': [0x14, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [-0x128, 0x3e, -0x169],
                's': [0x14, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [-0xfd, 0x49, -0x16c],
                's': [0x6, 0xa, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x112, 0x49, -0x16c],
                's': [0x6, 0xe, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x112, 0x4a, -0x142],
                's': [0x8, 0x4, 0x5e],
                'l': 0x1
            }, {
                'p': [-0xfc, 0x4a, -0x11b],
                's': [0x8, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [0x9, 0x6, -0x139],
                's': [0x6, 0x2, 0x12]
            }, {
                'p': [0x9, 0x6, -0xc7],
                's': [0x6, 0x2, 0x12]
            }, {
                'p': [0x9, 0x6, -0xfc],
                's': [0x6, 0x2, 0xa]
            }, {
                'p': [0xa4, 0x0, -0x3d],
                's': [0x4, 0x3e, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9a, 0x36, -0x3d],
                's': [0x10, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x33, -0x3d],
                's': [0x10, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                't': 0x2
            }, {
                'p': [-0x107, 0x0, -0x111],
                's': [0x4, 0x36, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x107, 0x2f, -0x107],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x107, 0x2b, -0x10c],
                's': [0x2, 0x2, 0x10],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xee, 0x56, -0xe0],
                's': [0xc, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [0xf0, 0x56, -0x98],
                's': [0x8, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [0xd9, 0x56, -0xde],
                's': [0xa, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0xf2, 0x56, -0xbd],
                's': [0x4, 0x4, 0x1c],
                'l': 0x1
            }, {
                'p': [0xfb, 0x5c, -0x52],
                's': [0x12, 0x6, 0x12],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [0xb0, 0x5c, -0x54],
                's': [0x14, 0x4, 0xe],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [0xad, 0x5c, -0x26],
                's': [0xe, 0x4, 0xe],
                'l': 0x1,
                'c': 0xbbbbbb
            }, {
                'p': [0xcf, 0x5c, -0x58],
                's': [0x14, 0x4, 0x6],
                'l': 0x1,
                'c': 0xb9b9b9
            }, {
                'p': [0xa8, 0x5c, -0x3d],
                's': [0x4, 0x2, 0xc],
                'l': 0x1,
                'c': 0xa7a7a7
            }, {
                'p': [0xfe, 0x5c, -0x29],
                's': [0xc, 0x4, 0x14],
                'l': 0x1,
                'c': 0xb6b6b6
            }, {
                'p': [0xd6, 0x5c, -0x22],
                's': [0x18, 0x4, 0x6],
                'l': 0x1,
                'c': 0xafafaf
            }, {
                'p': [0x91, 0x46, -0x9e],
                's': [0xa, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [0xa8, 0x46, -0x9a],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x91, 0x46, -0xda],
                's': [0xa, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [0xa8, 0x46, -0xde],
                's': [0x8, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0xd6, 0x56, -0xb8],
                's': [0x4, 0x2, 0x18],
                'l': 0x1
            }, {
                'p': [0xd8, 0x56, -0x98],
                's': [0x8, 0x4, 0xa],
                'l': 0x1
            }, {
                'p': [0xb3, 0x43, 0x0],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [0xb3, 0x43, 0x11],
                's': [0x4, 0x6, 0xf],
                'l': 0x1
            }, {
                'p': [0x88, 0x2c, -0x9d],
                's': [0x4, 0x26, 0x4],
                't': 0x2
            }, {
                'p': [0x2d, 0x2c, -0x9d],
                's': [0x4, 0x26, 0x4],
                't': 0x2
            }, {
                'p': [0x2d, 0x2c, -0xc1],
                's': [0x4, 0x26, 0x4],
                't': 0x2
            }, {
                'p': [0x88, 0x2c, -0xc1],
                's': [0x4, 0x2a, 0x4],
                't': 0x2
            }, {
                'p': [0x5b, 0x3a, -0xaf],
                's': [0x64, 0x2, 0x2c],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x7f, 0x2c, -0x9b],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x30, 0x2c, -0x9f],
                's': [0xe, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0x2e, 0x2c, -0xbf],
                's': [0xa, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0x5a, 0x2c, -0x9b],
                's': [0x12, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xc3, 0x3a, -0xe2],
                's': [0x12, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0xba, 0x3a, -0x96],
                's': [0x12, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x3, 0x36, -0x64],
                's': [0x1e, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0x4d, 0x36, -0x62],
                's': [0x1e, 0x6, 0x14],
                'l': 0x1
            }, {
                'p': [0x4f, 0x36, -0x23],
                's': [0x1a, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [-0x5, 0x36, -0x23],
                's': [0x1a, 0x6, 0xe],
                'l': 0x1
            }, {
                'p': [0x59, 0x36, -0x42],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x25, 0x36, -0x69],
                's': [0x1e, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xf, 0x36, -0x42],
                's': [0x6, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [0x26, 0x36, -0x1f],
                's': [0x12, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x35, 0x3c, -0x16c],
                's': [0x14, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xed, 0x32, 0x23],
                's': [0x5, 0x2, 0xa],
                'l': 0x1,
                'c': 0xc8c8c8
            }, {
                'p': [0xa4, 0x5c, 0x1f],
                's': [0x1c, 0x6, 0x10],
                'l': 0x1,
                'c': 0xb4b4b4
            }, {
                'p': [0xcd, 0x5c, 0x1f],
                's': [0xa, 0x4, 0x10],
                'l': 0x1,
                'c': 0xd2d2d2
            }, {
                'p': [0x9c, 0x5c, 0x3c],
                's': [0xc, 0x6, 0xe],
                'l': 0x1,
                'c': 0xc8c8c8
            }, {
                'p': [-0x104, 0x2f, 0x13],
                's': [0x4, 0x36, 0x9e]
            }, {
                'p': [-0xc5, 0x2f, 0x61],
                's': [0x9e, 0x36, 0x4]
            }, {
                'p': [-0xb2, 0xd, 0x33],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0xfe, 0xd, 0x33],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0xd8, 0x50, 0x48],
                's': [0x54, 0x2, 0x32],
                't': 0x2
            }, {
                'p': [-0x37, 0x4a, 0x2],
                's': [0xe, 0x6, 0x16],
                'l': 0x1
            }, {
                'p': [-0x61, 0x4a, 0x1],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x66, 0x4a, -0x2a],
                's': [0x4, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0x66, 0x4a, -0x4b],
                's': [0x4, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x4d, 0x4a, 0xb],
                's': [0xe, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x32, 0x4a, -0x2d],
                's': [0x4, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0x36, 0x4a, -0x61],
                's': [0xc, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0xec, 0x32, -0x83],
                's': [0x7, 0x4, 0x18],
                'l': 0x1,
                'c': 0xc8c6c6
            }, {
                'p': [-0xec, 0x32, -0x60],
                's': [0x7, 0x4, 0x16],
                'l': 0x1,
                'c': 0xb6b6b6
            }, {
                'p': [-0xdd, 0x3c, 0xe],
                's': [0x6, 0x2, 0xf],
                'l': 0x1
            }, {
                'p': [-0xf4, 0x3c, 0xd],
                's': [0xc, 0x2, 0x11],
                'l': 0x1
            }, {
                'p': [-0xe0, 0x3c, -0x3d],
                's': [0xc, 0x2, 0x1d],
                'l': 0x1
            }, {
                'p': [-0xdc, 0x3c, -0x11],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0xfb, 0x7c, -0x40],
                's': [0x10, 0x4, 0xa],
                'l': 0x1,
                'c': 0xb9b7b7
            }, {
                'p': [-0x117, 0x7c, -0x42],
                's': [0xc, 0x4, 0xe],
                'l': 0x1,
                'c': 0xc3c3c3
            }, {
                'p': [-0x116, 0x7c, -0x69],
                's': [0xe, 0x3, 0x8],
                'l': 0x1
            }, {
                'p': [-0x6d, 0x3c, -0x167],
                's': [0x22, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x82, 0x4d, -0x9c],
                's': [0xe, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [0x165, 0x8b, -0x28],
                's': [0x10, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [-0x128, 0x3e, -0x119],
                's': [0x14, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [-0x143, 0x3e, -0x119],
                's': [0xe, 0x4, 0x8],
                'l': 0x1
            }, {
                'p': [0x9, 0x0, -0xb4],
                's': [0x4, 0x36, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9, 0x2c, -0xaf],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x6a, 0x54, -0x60],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x6e, 0x54, -0x89],
                's': [0x6, 0x4, 0x18],
                'l': 0x1
            }, {
                'p': [-0x40, 0x54, -0x60],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x40, 0x54, -0xb8],
                's': [0xe, 0x6, 0x18],
                'l': 0x1
            }, {
                'p': [-0x3c, 0x54, -0x89],
                's': [0x6, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xb6, 0x33, 0x37],
                's': [0x10, 0x4, 0x10],
                'l': 0x1
            }, {
                'p': [-0xfa, 0x33, 0x32],
                's': [0x10, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xd4, 0x33, 0x32],
                's': [0x10, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xfc, 0x33, 0x3c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x157, 0x20, -0x16c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf3, 0x38, -0x124],
                's': [0x6, 0x1c, 0x6],
                't': 0x2
            }, {
                'p': [0xa, 0x18, 0x8],
                's': [0x12, 0x2, 0x4]
            }, {
                'p': [0x52, 0x18, 0x8],
                's': [0x14, 0x2, 0x4]
            }, {
                'p': [-0x23, 0x18, 0x8],
                's': [0x9, 0x1, 0x4]
            }, {
                'p': [-0x81, 0x18, -0x2c],
                's': [0x10, 0x2, 0x4]
            }, {
                'p': [-0xa4, 0x18, -0x2c],
                's': [0x10, 0x2, 0x4]
            }, {
                'p': [-0xaa, 0x18, -0x1f],
                's': [0x4, 0x2, 0x16]
            }, {
                'p': [-0xaa, 0x18, 0x4],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [-0xe3, 0x3e, -0x143],
                's': [0x14, 0x4, 0x42],
                'l': 0x1
            }, {
                'p': [-0x6c, 0x53, -0x59],
                's': [0x6, 0x1a, 0x6],
                't': 0x2
            }, {
                'p': [-0xfa, 0x2c, -0x7c],
                's': [0x4, 0x29, 0x4],
                't': 0x2
            }, {
                'p': [-0x118, 0x2c, -0x7c],
                's': [0x4, 0x28, 0x4],
                't': 0x2
            }, {
                'p': [-0x109, 0x4a, -0x75],
                's': [0x26, 0x2, 0x16],
                't': 0x2
            }, {
                'p': [-0x39, 0x42, -0xc9],
                's': [0xa, 0x6, 0x24],
                'l': 0x1
            }, {
                'p': [-0x39, 0x42, -0x104],
                's': [0xa, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x3d, 0x42, -0x134],
                's': [0x12, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x67, 0x42, -0x134],
                's': [0x12, 0x4, 0x1a],
                'l': 0x1
            }, {
                'p': [-0x6b, 0x42, -0xfb],
                's': [0xa, 0x4, 0x16],
                'l': 0x1
            }, {
                'p': [-0xa8, 0x3e, -0x10c],
                's': [0x8, 0x2, 0x14],
                'l': 0x1
            }, {
                'p': [-0x96, 0x3e, -0x10c],
                's': [0xc, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [-0x94, 0x3e, -0x130],
                's': [0x8, 0x4, 0x14],
                'l': 0x1
            }, {
                'p': [-0x94, 0x3e, -0x156],
                's': [0x8, 0x4, 0x1c],
                'l': 0x1
            }, {
                'p': [0x14f, 0x64, -0x5c],
                's': [0x6, 0x14, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xc4, 0x33, -0x5b],
                's': [0x6, 0x14, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0xf3, 0x5e, -0x54],
                's': [0x2, 0x10, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x127, 0x70, -0x24b],
                's': [0x2, 0xe, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x13f, 0x70, -0x230],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x131, 0x64, -0x3e],
                's': [0x2, 0x14, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x130, 0x4e, -0x206],
                's': [0x2, 0xe, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xcb, 0x46, -0x1fe],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xb7, 0x46, -0x1fe],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0xa2, 0x46, -0x1fe],
                's': [0x5, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x26, 0x12, 0x34],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x12c, 0x31, -0x12d],
                's': [0x12, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd2, 0x0, -0x9b],
                's': [0x4, 0x1, 0x6],
                'l': 0x1
            }, {
                'p': [-0xb1, 0x0, -0x102],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x10f, 0x0, -0x10e],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xf2, 0x0, -0x1af],
                's': [0x8, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xae, 0x0, -0x193],
                's': [0x4, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x9a, -0x1, -0x194],
                's': [0x8, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0x5, -0x1c, -0x189],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x133, 0x0, -0x1b7],
                's': [0x4, 0x1, 0x6],
                'l': 0x1
            }, {
                'p': [0x152, 0x0, -0xd4],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x131, 0x0, -0xfe],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0xdf, 0x0, -0xe8],
                's': [0x8, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xcb, 0x0, -0x11c],
                's': [0x8, 0x2, 0x4],
                'c': 0xacacac
            }, {
                'p': [0x65, 0x0, -0x163],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0xf, 0x0, -0x159],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0xf, 0x0, -0xd3],
                's': [0x4, 0x2, 0x8]
            }, {
                'p': [-0x32, 0x0, -0xaf],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x61, 0x0, -0x57],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x5e, 0x0, 0x0],
                's': [0xa, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x2b, 0x0, -0x1],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0xb, 0x12, 0xf],
                's': [0xa, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x9a, 0x12, -0x26],
                's': [0x6, 0x1, 0x3],
                'l': 0x1
            }, {
                'p': [-0x6c, 0x12, -0x7],
                's': [0x4, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [-0x88, 0x0, -0x34],
                's': [0x8, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0xa2, 0x0, -0x34],
                's': [0x3, 0x2, 0x5],
                'l': 0x1
            }, {
                'p': [0x2e, 0x0, -0x95],
                's': [0x6, 0x1, 0x5],
                'l': 0x1
            }, {
                'p': [-0x132, 0x0, -0x15d],
                's': [0x4, 0x1, 0x7],
                'l': 0x1
            }, {
                'p': [-0x14c, 0x0, -0x10e],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0x3b, -0x1c, -0x145],
                's': [0x4, 0x2, 0x4]
            }, {
                'p': [-0x8d, -0x1c, -0x15f],
                's': [0x4, 0x2, 0x8]
            }, {
                'p': [-0xb6, 0x0, -0xda],
                's': [0x4, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [-0xda, 0x12, 0x2b],
                's': [0x8, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x28, 0x12, 0x34],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x77, 0x0, -0x95],
                's': [0x6, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xc4, 0x0, -0x20c],
                's': [0x5, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xa0, 0x0, -0x46],
                's': [0x4, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x34, 0x0, -0xa3],
                's': [0x4, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xfb, 0x0, -0x197],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x5, -0x1c, -0x198],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xfb, 0x0, -0x120],
                's': [0x3, 0x1, 0x5],
                'l': 0x1,
                'c': 0xc3c3c3
            }, {
                'p': [0x139, 0x0, -0x158],
                's': [0x3, 0x1, 0x4]
            }, {
                'p': [0x141, 0x0, -0x16c],
                's': [0x4, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0xca, 0x0, -0x5e],
                's': [0x4, 0x1, 0x4]
            }, {
                'p': [0x10, 0x0, -0x108],
                's': [0x4, 0x1, 0x6]
            }, {
                'p': [0x25, 0x0, -0x133],
                's': [0x4, 0x6, 0x26]
            }, {
                'p': [0x5e, 0x0, -0x145],
                's': [0x16, 0x6, 0x4]
            }, {
                'p': [0x6b, 0x0, -0x13a],
                's': [0x4, 0x6, 0x1a]
            }, {
                'p': [0x25, 0x6, -0x13c],
                's': [0x4, 0x2, 0xa]
            }, {
                'p': [0x6b, 0x6, -0x141],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [0x63, 0x6, -0x145],
                's': [0xc, 0x4, 0x4]
            }, {
                'p': [0x4c, 0x0, -0x145],
                's': [0xe, 0x2, 0x4]
            }, {
                'p': [0x9, 0x2f, -0xab],
                's': [0x4, 0x4, 0xe],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x55, -0x1, -0xe2],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x41, -0x1, -0xc8],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x7c, 0x3d, -0x72],
                's': [0x16, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16, 0x2d, -0x15f],
                's': [0x6, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x33, 0x2d, -0x15f],
                's': [0x6, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x4f, 0x2d, -0x15f],
                's': [0x6, 0xe, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x3f, 0x44, -0x1c8],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x73, 0x39, -0x72],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                't': 0x2
            }, {
                'p': [0x5b, 0x4d, -0xaf],
                's': [0x64, 0x2, 0x2c],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0xa, -0x1d5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xcb, -0x1c, -0x19d],
                's': [0x5b, 0x56, 0x10],
                'bo': 0x1
            }, {
                'p': [0xa5, 0x3a, -0x19d],
                's': [0xb, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [0xb3, 0x10, -0x1cd],
                's': [0x14, 0x2, 0x4]
            }, {
                'p': [0x158, 0x32, -0xc4],
                's': [0xc, 0x3, 0x12],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x154, 0x32, -0xa0],
                's': [0x4, 0x2, 0x12],
                'l': 0x1,
                'c': '#b9b9b9'
            }, {
                'p': [0x154, 0x32, -0x7b],
                's': [0x4, 0x4, 0x16],
                'l': 0x1,
                'c': '#b9b9b9'
            }, {
                'p': [0x142, -0x1, -0x191],
                's': [0x14, 0x2, 0x60],
                'c': 0xa7a7a7,
                't': 0x1
            }, {
                'p': [0x90, 0x3a, -0x126],
                's': [0x19, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x131, 0x2d, -0x12d],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                't': 0x2
            }, {
                'p': [0x55, 0x3e, -0x1c5],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x16, 0x41, -0x20b],
                's': [0x12, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x10, 0x41, -0x20b],
                's': [0x14, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x92, 0x0, -0x1db],
                's': [0x8, 0x1a, 0x2],
                'i': 0x3,
                't': 0x2,
                'd': 0x1
            }, {
                'p': [-0xd2, 0x0, -0x114],
                's': [0x4c, 0x5, 0x2],
                'c': 0xc8c8c8
            }, {
                'p': [-0xd2, 0x0, -0x11c],
                's': [0x4c, 0x4, 0xe],
                'l': 0x1,
                'c': 0x1d3d5a,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [-0xfd, 0x0, -0x10d],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xaf, 0x0, -0x10e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x12e, 0x0, -0xe8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x80, 0x0, -0x73],
                's': [0x6, 0x2, 0x42],
                't': 0x2
            }, {
                'p': [-0x79, 0x0, -0x72],
                's': [0x6, 0x2, 0x42],
                'c': 0xcacaca,
                't': 0x2
            }, {
                'p': [-0x84, 0x2, -0x71],
                's': [0x6, 0x2, 0x42],
                't': 0x2
            }, {
                'p': [-0x7d, 0x2, -0x72],
                's': [0x6, 0x2, 0x42],
                't': 0x2
            }, {
                'p': [-0x80, 0x4, -0x70],
                's': [0x6, 0x2, 0x42],
                'c': 0xc0c0c0,
                't': 0x2
            }, {
                'p': [-0x87, 0x0, -0x70],
                's': [0x6, 0x2, 0x42],
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [-0x84, 0x26, -0x72],
                's': [0x1, 0x19, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xc4, 0x2e, -0xbf],
                's': [0x22, 0x1f, 0x4c],
                'bo': 0x1
            }, {
                'p': [-0xb7, 0x28, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc0, 0x2a, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc9, 0x29, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xd1, 0x28, -0x9d],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc0, 0x29, -0xe3],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xb7, 0x28, -0xe3],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xc9, 0x2a, -0xe3],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0xd1, 0x28, -0xe3],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [-0x1ba, 0x0, 0x9d],
                's': [0x3e, 0xce, 0x48],
                'l': 0x1
            }, {
                'p': [-0x1a2, 0xce, 0x81],
                's': [0xe, 0x6, 0x10],
                'l': 0x1
            }, {
                'p': [-0x19e, 0xce, 0x9d],
                's': [0x6, 0x6, 0x16],
                'l': 0x1
            }, {
                'p': [-0x19e, 0xce, 0xba],
                's': [0x6, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [-0x1bc, 0xce, 0x7b],
                's': [0x14, 0x6, 0x4],
                'l': 0x1
            }, {
                'p': [-0x1d4, 0xce, 0x7b],
                's': [0xa, 0x6, 0x4],
                'l': 0x1
            }, {
                'p': [-0x1ba, 0xa3, 0x79],
                's': [0x8, 0x14, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0xb2, 0xd, 0x5d],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0xfe, 0xd, 0x5d],
                's': [0x4, 0x4a, 0x4],
                't': 0x2
            }, {
                'p': [-0x13, 0x40, 0x4a],
                's': [0x3c, 0xc, 0x26],
                'bo': 0x1
            }, {
                'p': [0x7b, 0x4c, 0x39],
                's': [0x1c, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x46, 0x4c, 0x39],
                's': [0x22, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x15, 0x4c, 0x39],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x29, 0x4c, 0x39],
                's': [0xc, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x4b, 0x4c, 0x39],
                's': [0x10, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x7f, 0x4c, 0x39],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13, 0x0, 0x49],
                's': [0x3c, 0x40, 0x2],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x2e, 0x12, 0x3d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd, 0x20, 0x47],
                's': [0x4, 0x4, 0x2],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x20, 0x47],
                's': [0x4, 0x4, 0x2],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x13, 0x3f, 0x30],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x38, 0x3f, 0x30],
                's': [0x4, 0x4, 0x10],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x38, 0x3b, 0x35],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x13, 0x3b, 0x35],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0x8b, 0x12d, 0x195],
                's': [0x6e, 0x42, 0x56],
                't': 0x5
            }, {
                'p': [-0x49, 0x119, 0x169],
                's': [0x46, 0x2a, 0x38],
                't': 0x5
            }, {
                'p': [-0x20f, 0x19c, 0x175],
                's': [0x92, 0x5a, 0x74],
                't': 0x5
            }, {
                'p': [-0x23b, 0x171, 0x129],
                's': [0x76, 0x48, 0x5e],
                't': 0x5
            }, {
                'p': [0x2a1, 0x13f, 0x78],
                's': [0x6e, 0x42, 0x56],
                't': 0x5
            }, {
                'p': [0x1e5, 0x151, 0xe2],
                's': [0x92, 0x58, 0xc6],
                't': 0x5
            }, {
                'p': [0x14e, 0x151, 0x5f],
                's': [0x3a, 0x1e, 0x61],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x362, 0x143, -0x115],
                's': [0x92, 0x5a, 0xc4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x39e, 0x12f, -0x204],
                's': [0x7a, 0x4c, 0xa0],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x7ce, 0x168, -0x23],
                's': [0x104, 0x4c, 0x170],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x639, 0x18d, -0x8c],
                's': [0xda, 0x84, 0x100],
                't': 0x5
            }, {
                'p': [0x639, 0x179, -0x10b],
                's': [0x76, 0x48, 0x5c],
                't': 0x5
            }, {
                'p': [-0x82, 0xea, -0x392],
                's': [0x92, 0x5a, 0x74],
                't': 0x5
            }, {
                'p': [-0x2e, 0xcc, -0x3b8],
                's': [0x76, 0x4a, 0x5e],
                't': 0x5
            }, {
                'p': [0x62, 0xcc, -0x3b8],
                's': [0x60, 0x26, 0x30],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x2df, 0x16b, -0x4e1],
                's': [0xe0, 0x68, 0xb2],
                't': 0x5
            }, {
                'p': [0xba, 0x107, 0x1f4],
                's': [0x68, 0x3a, 0x70],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x51, 0x107, 0x1f4],
                's': [0x30, 0x1c, 0x34],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x231, 0xcc, -0x353],
                's': [0x76, 0x4a, 0x5e],
                't': 0x5
            }, {
                'p': [-0x16, -0x1c, -0x206],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x22, -0x10, -0x206],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x1f, -0x1c, -0x203],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3c, -0x1c, -0x1a9],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3f, -0x1c, -0x203],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3f, -0x1c, -0x1f7],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x36, -0x1c, -0x206],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xda, 0x46, -0x21d],
                's': [0x2, 0xe, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0xd, 0x4c, 0x39],
                's': [0xa, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13, 0x46, 0x66],
                's': [0xdc, 0x28, 0x3a],
                'c': 0xbbbbbb,
                'bo': 0x1
            }, {
                'p': [0x59, 0x6e, 0x6c],
                's': [0x4, 0x4, 0x12],
                'l': 0x1,
                'c': 0xd2cbcb
            }, {
                'p': [-0x77, 0x6e, 0x50],
                's': [0x14, 0x4, 0xe],
                'l': 0x1,
                'c': 0xbbbbbb
            }, {
                'p': [0x24, 0x6e, 0x4b],
                's': [0x10, 0x4, 0x4],
                'l': 0x1,
                'c': 0xbebcbc
            }, {
                'p': [-0x2, 0x6e, 0x4b],
                's': [0x18, 0x2, 0x4],
                'l': 0x1,
                'c': 0xc0bcbc
            }, {
                'p': [-0x4e, 0x6e, 0x4b],
                's': [0xe, 0x2, 0x4],
                'l': 0x1,
                'c': 0x9d9d9d
            }, {
                'p': [-0x2c, 0x6e, 0x4b],
                's': [0xe, 0x4, 0x4],
                'l': 0x1,
                'c': 0xc5c5c5
            }, {
                'p': [0x51, 0x6e, 0x50],
                's': [0x14, 0x4, 0xe],
                'l': 0x1,
                'c': 0xbbbbbb
            }, {
                'p': [-0x7f, 0x6e, 0x6c],
                's': [0x4, 0x4, 0x12],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0x79, 0x63, 0x46],
                's': [0x4, 0x4, 0x8],
                't': 0x2
            }, {
                'p': [0x52, 0x63, 0x46],
                's': [0x4, 0x4, 0x8],
                't': 0x2
            }, {
                'p': [0x5c, 0x63, 0x52],
                's': [0xc, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x83, 0x63, 0x52],
                's': [0xa, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [0x124, 0x2d, -0x71],
                's': [0x3c, 0x2, 0x14],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x108, 0x0, -0x79],
                's': [0x2, 0x31, 0x2],
                't': 0x2
            }, {
                'p': [0xc, -0x1c, -0x1cd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x8a, -0x1c, -0x1c8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x14, 0x30, -0x1b1],
                's': [0x1c, 0x4, 0xe],
                'l': 0x1
            }, {
                'p': [0x14, 0x30, -0x1c5],
                's': [0x1c, 0x2, 0xa],
                'l': 0x1
            }, {
                'p': [0xa1, -0x1c, -0x1a8],
                's': [0x4, 0x2a, 0x6]
            }, {
                'p': [-0x6d, 0x28, -0x194],
                's': [0x4, 0x4, 0xe],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x6d, 0x25, -0x190],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x14, 0x22, -0x1cd],
                's': [0x4, 0x4, 0x14],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x20, -0x1cd],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x15, -0x1c, -0x1d0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x15, -0x10, -0x1d0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xfd, 0x39, -0x22f],
                's': [0x4a, 0x20, 0x2],
                'c': 0x695b48,
                't': 0x5
            }, {
                'p': [-0x11e, 0x34, -0x232],
                's': [0x4, 0x28, 0x4],
                't': 0x2
            }, {
                'p': [-0xdd, 0x34, -0x232],
                's': [0x4, 0x28, 0x4],
                't': 0x2
            }, {
                'p': [0x104, 0x33, -0x238],
                's': [0x4a, 0x20, 0x2],
                'c': 0x705b4d,
                't': 0x5
            }, {
                'p': [0x104, 0x43, -0x236],
                's': [0x45, 0x0, 0x1d],
                'i': 0xb,
                'l': 0x1,
                'r': [1.57, 0x0, 0x0]
            }, {
                'p': [-0x102, 0x45, -0x12],
                's': [0x2, 0x1a, 0x3e],
                'c': 0x695743,
                't': 0x5
            }, {
                'p': [-0x100, 0x52, -0x12],
                's': [0x39, 0x0, 0x17],
                'i': 0xb,
                'l': 0x1,
                'r': [1.57, 0x0, 1.57]
            }, {
                'p': [0x48, 0x0, -0x115],
                's': [0x40, 0x29, 0x5a],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x11b, 0xa, -0x1f9],
                's': [0x45, 0x29, 0x4e],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xae, 0xa, -0x1f8],
                's': [0x8e, 0x29, 0x4e],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x88, 0x12, -0x10],
                's': [0x3b, 0x29, 0x31],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x150, 0x4f, -0x12f],
                's': [0x36, 0x2, 0x6e],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x138, 0x3c, -0xfb],
                's': [0x4, 0x19, 0x4],
                't': 0x2
            }, {
                'p': [0x138, 0x3e, -0x163],
                's': [0x4, 0x19, 0x4],
                't': 0x2
            }, {
                'p': [0x168, 0x3d, -0x163],
                's': [0x4, 0x18, 0x4],
                't': 0x2
            }, {
                'p': [0x168, 0x3d, -0xfb],
                's': [0x4, 0x1a, 0x4],
                't': 0x2
            }, {
                'p': [0x101, 0x2f, -0x160],
                's': [0x12, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xfc, 0x2c, -0x160],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                't': 0x2
            }, {
                'p': [0xd5, 0x0, -0x61],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd2, 0x38, -0x124],
                's': [0x6, 0x1e, 0x6],
                't': 0x2
            }, {
                'p': [0xf3, 0x38, -0x146],
                's': [0x6, 0x1d, 0x6],
                't': 0x2
            }, {
                'p': [0xd2, 0x38, -0x146],
                's': [0x6, 0x1a, 0x6],
                't': 0x2
            }, {
                'p': [0xe3, 0x4d, -0x135],
                's': [0x2a, 0x2, 0x2b],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x89, 0x38, -0x124],
                's': [0x6, 0x16, 0x6],
                't': 0x2
            }, {
                'p': [-0xb, -0x1c, -0x202],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x115, 0xa, -0x21c],
                's': [0x8, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0x2, -0x1c, -0x1c0],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x93, 0x3e, -0x105],
                's': [0x4, 0xc, 0x4],
                't': 0x2
            }, {
                'p': [-0xa9, 0x3e, -0x105],
                's': [0x4, 0xf, 0x4],
                't': 0x2
            }, {
                'p': [-0xa9, 0x3e, -0x11e],
                's': [0x4, 0xb, 0x4],
                't': 0x2
            }, {
                'p': [-0x93, 0x3e, -0x11f],
                's': [0x4, 0xd, 0x4],
                't': 0x2
            }, {
                'p': [-0x9e, 0x46, -0x112],
                's': [0x1c, 0x1, 0x20],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x76, 0x3d, -0xc5],
                's': [0x30, 0x57, 0x2f],
                'c': 0xa7a7a7
            }, {
                'p': [-0x77, 0x60, -0xc5],
                's': [0x55, 0x2, 0x2e],
                't': 0x2
            }, {
                'p': [-0x9f, 0x48, -0xda],
                's': [0x3, 0x1e, 0x3],
                't': 0x2
            }, {
                'p': [-0x8f, 0x48, -0xda],
                's': [0x3, 0x1c, 0x3],
                't': 0x2
            }, {
                'p': [-0x8f, 0x48, -0xb0],
                's': [0x3, 0x1d, 0x3],
                't': 0x2
            }, {
                'p': [-0x9f, 0x48, -0xb0],
                's': [0x3, 0x1c, 0x3],
                't': 0x2
            }, {
                'p': [0x107, 0x23, -0x160],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0x6d, 0x1c, -0x199],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xae, 0x0, -0x1d8],
                's': [0x6, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x93, 0x12, 0x34],
                's': [0x6, 0x1, 0x5],
                'l': 0x1
            }, {
                'p': [0xc8, 0xdc, -0x38f],
                's': [0xae, 0x4a, 0x9b],
                't': 0x5
            }, {
                'p': [0x5c, 0x4c, -0x164],
                's': [0x6, 0x11, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0x30, 0x3b, -0x169],
                's': [0x6, 0xe, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0xe4, 0x30, -0x89],
                's': [0xa, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [0x25, 0x0, -0xa0],
                's': [0x8, 0xd, 0x4]
            }, {
                'p': [0x1d, 0x0, -0xa0],
                's': [0x8, 0x6, 0x4]
            }, {
                'p': [0x7, 0x0, -0xad],
                's': [0x4, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x4f, 0x42, -0xda],
                's': [0x3, 0x21, 0x3],
                't': 0x2
            }, {
                'p': [-0x4f, 0x54, -0xb1],
                's': [0x3, 0x11, 0x3],
                't': 0x2
            }, {
                'p': [-0x5d, 0x54, -0xb1],
                's': [0x3, 0x11, 0x3],
                't': 0x2
            }, {
                'p': [-0x5d, 0x42, -0xda],
                's': [0x3, 0x23, 0x3],
                't': 0x2
            }, {
                'p': [-0x60, 0x94, -0xc5],
                's': [0x4, 0x3, 0xb],
                'l': 0x1,
                'c': 0xa7a7a7
            }, {
                'p': [-0x8c, 0x94, -0xca],
                's': [0x4, 0x3, 0xf],
                'l': 0x1,
                'c': 0x898989
            }, {
                'p': [-0x89, 0x94, -0xb2],
                's': [0xa, 0x3, 0x9],
                'l': 0x1,
                'c': 0xafafaf
            }, {
                'p': [-0x63, 0x94, -0xb2],
                's': [0xa, 0x3, 0x9],
                'l': 0x1,
                'c': 0xb6b2b2
            }, {
                'p': [-0x63, 0x94, -0xd8],
                's': [0xa, 0x4, 0x9],
                'l': 0x1,
                'c': 0xa7a7a7
            }, {
                'p': [-0x75, 0x94, -0xda],
                's': [0xc, 0x2, 0x5],
                'l': 0x1,
                'c': 0xb6b6b6
            }, {
                'p': [-0x8a, 0x94, -0xd9],
                's': [0x8, 0x3, 0x7],
                'l': 0x1,
                'c': 0x9b9b9b
            }, {
                'p': [-0x78, 0x94, -0xb0],
                's': [0x9, 0x2, 0x5],
                'l': 0x1,
                'c': 0xafafaf
            }, {
                'p': [-0x76, 0x75, -0xc5],
                's': [0x32, 0x10, 0x5],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x76, 0x75, -0xc5],
                's': [0x5, 0x10, 0x31],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x2b, 0x2b, -0x12a],
                's': [0x12, 0x4, 0x4],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x30, 0x27, -0x12a],
                's': [0xe, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                'c': 0xe6e6e6,
                't': 0x2
            }, {
                'p': [-0x25, 0x1f, -0x12a],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xd4, 0x32, -0x3f],
                's': [0xe, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0xa6, 0x0, -0x96],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x16, 0x2a, -0x15e],
                's': [0x9, 0x3, 0x3],
                'c': 0xe3e3e3,
                'bo': 0x1
            }, {
                'p': [0x33, 0x2a, -0x15e],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0x4f, 0x2a, -0x15e],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0xb7, 0x43, -0x1fd],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0xcb, 0x43, -0x1fd],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0xa2, 0x43, -0x1fd],
                's': [0x9, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [-0x36, 0x0, -0x73],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x36, 0x0, -0x79],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x8, 0x12, 0x45],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x132, 0x0, -0x141],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0xfb, 0x0, -0x160],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0xa0, 0x0, -0x96],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x9a, 0x0, -0x96],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x47, 0x0, -0x159],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x77, 0x12, -0x27],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x49, 0x11, 0x10],
                's': [0x5, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x74, 0x0, -0xe9],
                's': [0x4, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0xa9, 0x3e, -0x189],
                's': [0x6, 0xc, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0xae, 0x0, -0x1c],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0xae, 0x0, -0x17],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0xb0, 0x0, -0x10],
                's': [0x2, 0x13, 0x4],
                't': 0x2
            }, {
                'p': [0x70, 0x0, -0xd1],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11
            }, {
                'p': [0x37, -0x1, -0xff],
                's': [0x6, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x38, 0x0, -0xf9],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x3e, 0x0, -0x15c],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x56, 0x0, -0x129],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x56, 0x0, -0x124],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0xdc, 0x0, -0x68],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xe3, 0x0, -0x8b],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x4e, 0x0, -0xcb],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0xad, 0x0, -0x46],
                's': [0x4, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xa9, 0x0, 0x11],
                's': [0x6, 0x2, 0x8],
                'l': 0x1
            }, {
                'p': [0x93, 0x0, 0x1c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x121, 0xa, -0x21e],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x127, 0xa, -0x21e],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0xb5, 0x0, -0x1d9],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x34, 0x15, -0x10d],
                's': [0x1, 0xf, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x34, 0x1d, -0xda],
                's': [0x1, 0xf, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x35, 0x12, -0x10d],
                's': [0x6, 0x3, 0x9],
                'l': 0x1,
                'c': 0xe3e3e3
            }, {
                'p': [-0x35, 0x1a, -0xda],
                's': [0x6, 0x3, 0x9],
                'l': 0x1,
                'c': 0xe3e3e3
            }, {
                'p': [0xd9, 0x43, -0x21d],
                's': [0x6, 0x3, 0x9],
                'c': 0xe3e3e3,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4c, -0x206],
                's': [0x6, 0x3, 0x9],
                'c': 0xb1b1b1,
                'bo': 0x1
            }, {
                'p': [0x5a, 0x2c, -0xc3],
                's': [0x10, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x7f, 0x2c, -0xc3],
                's': [0x1a, 0x4, 0x4],
                'l': 0x1
            }, {
                'p': [0x42, 0x2c, -0xc3],
                's': [0xc, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13d, 0x0, -0x19f],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x35, 0x0, -0x9f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d5e371'
            }, {
                'p': [-0x36, 0x0, -0xa9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, -3.14],
                'c': '#d5e371'
            }, {
                'p': [0x24, 0x0, -0xa5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0],
                'c': '#d5e371'
            }, {
                'p': [0x25, 0x0, -0xaf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#d5e371'
            }, {
                'p': [0x5, 0x0, -0xbc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.09, -3.14],
                'c': '#d5e371'
            }, {
                'p': [-0x2a, 0x0, -0x39],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [-0x9, 0x0, 0x2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [-0x13, 0x0, -0x1a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x15, 0x0, -0x15a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0x3b, 0x0, -0x158],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x50, 0x0, -0xd4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x1d, 0x0, -0x15a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [0x81, 0x0, -0x11e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x65, 0x0, -0x13e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x3b, 0x0, -0xf3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0]
            }, {
                'p': [0x8b, 0x0, -0xe7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x2a, -0x1c, -0x163],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0]
            }, {
                'p': [-0x5, -0x1c, -0x15b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [-0x56, -0x1c, -0x145],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [-0x104, 0x0, -0x10d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x12a, 0x0, -0xec],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x133, 0x0, -0x113],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb6, 0x0, -0x10f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xb0, 0x0, -0x108],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd9, 0x0, -0x88],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0xd6, 0x0, -0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x93, 0x0, -0x95],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x6d, 0x0, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x6d, 0x12, -0x19],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0xd7, 0x12, 0x13],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0xe6, 0x12, 0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [-0x2e, 0x12, 0x36],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.22, -3.14]
            }, {
                'p': [0xa, 0x12, 0x36],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x30, 0x12, 0x10],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [0xa0, 0x0, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [0xa9, 0x0, -0x1b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xa2, 0x0, 0x14],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xad, 0x0, 0xb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.38, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xa6, 0x0, -0x5c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x7e, 0x0, -0x96],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x7f, 0x0, -0x41],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x86, 0x0, -0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x80, 0x0, -0x4d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.23, 3.14],
                'c': '#c9d47c'
            }, {
                'p': [0x60, 0x0, -0x2e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x82, 0x0, -0x47],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xae, 0x0, 0x14],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xb, 0x0, 0x3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xce, 0x0, -0xda],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0xd0, 0x0, -0xba],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.51, 0x0]
            }, {
                'p': [0xae, 0x0, -0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.51, 0x0]
            }, {
                'p': [0x65, 0x0, 0x2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [0xcd, 0x0, -0x117],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0xed, 0x0, -0x11b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x133, -0x1, -0xf7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.41, 3.14],
                'c': '#c9d47c'
            }, {
                'p': [0xfd, 0x0, -0x6c],
                's': [0x6, 0x1, 0x6],
                'l': 0x1
            }, {
                'p': [0x132, 0x0, -0x13c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0x112, 0x0, -0x15e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.13, -1.41, -3.13]
            }, {
                'p': [0x140, 0x1, -0x1b8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x140, 0x1, -0x1a4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x13f, 0x1, -0x1ae],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.56, 0x0]
            }, {
                'p': [0x142, 0x1, -0x174],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0]
            }, {
                'p': [0x13e, 0x1, -0x181],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [0x146, 0x1, -0x185],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x149, 0x1, -0x169],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0xfb, 0x0, -0x165],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x147, 0x1, -0x1a6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [0x13e, 0x1, -0x18b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.18, 3.14]
            }, {
                'p': [0x146, 0x1, -0x1b2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-0.1, -1.56, -0.1]
            }, {
                'p': [0x12d, 0xa, -0x21d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0xde, 0xa, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0xdd, 0xa, -0x1d3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [-0x28, -0x1c, -0x16a],
                's': [0x4, 0x1, 0x6]
            }, {
                'p': [-0xd6, 0x0, -0x44],
                's': [0x2, 0x1, 0x2],
                'l': 0x1
            }, {
                'p': [-0x118, 0x0, -0x128],
                's': [0x3, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xc3, 0x0, -0x11c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x131, 0x0, -0x133],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0],
                'c': '#c9d47c'
            }, {
                'p': [0xa4, -0x1c, -0x1ad],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.36, -3.14]
            }, {
                'p': [0x69, -0x1c, -0x1c8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [0x81, -0x1c, -0x1c7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [0xde, 0xa, -0x211],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0xdc, 0xa, -0x21f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.51, -3.14]
            }, {
                'p': [0x3d, -0x1d, -0x1b3],
                's': [0x6, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x114, 0x0, -0x15a],
                's': [0x2, 0x1, 0x3],
                'l': 0x1
            }, {
                'p': [0x86, 0x0, -0x4d],
                's': [0x2, 0x1, 0x3],
                'l': 0x1
            }, {
                'p': [-0x9d, 0x0, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xf7, 0x0, -0x10f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0x32, -0x1c, -0x1a7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [0x35, -0x1c, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x31, -0x1c, -0x205],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.51, 0x0]
            }, {
                'p': [-0xf, -0x1c, -0x205],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.06, 0x0]
            }, {
                'p': [-0x15, -0x1c, -0x200],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.16, 0x0]
            }, {
                'p': [-0x20, -0x1c, -0x1f9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.56, -3.14]
            }, {
                'p': [0x6, -0x1c, -0x1ce],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.21, -3.14]
            }, {
                'p': [0xb, 0x0, -0xba],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, -3.14],
                'c': '#d5e371'
            }, {
                'p': [0x3, -0x1c, -0x13b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [-0x6, -0x1c, -0x13e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [0x2, -0x1c, -0x15b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.22, 0x0]
            }, {
                'p': [-0x43, -0x1c, -0x145],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x3, -0x1c, -0x1a6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.21, -3.14]
            }, {
                'p': [-0xbb, 0x0, -0x1dd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x13c, 0x0, -0x170],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x13c, 0x0, -0x178],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x13b, 0x0, -0x19a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.7, -3.14]
            }, {
                'p': [-0xaf, 0x0, -0x18e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xba, 0x0, -0x1f3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xf5, 0x0, -0x168],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0x2, -0x1c, -0x1a1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.16, -3.14]
            }, {
                'p': [-0xf9, 0x0, -0x1b2],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.7, -3.14]
            }, {
                'p': [-0xc2, 0x0, -0x1dc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14]
            }, {
                'p': [0x85, 0x0, -0xe0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0x125, 0x27, -0x12d],
                's': [0x1, 0xa, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xa5, 0x12, -0x21],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [0x47, 0x0, -0x112],
                's': [0x39, 0x1a, 0x19],
                'i': 0x13,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x47, 0x0, -0x112],
                's': [0x19, 0x2, 0x39],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x47, 0x18, -0x112],
                's': [0x19, 0x2, 0x39],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x3b, 0x2, -0x112],
                's': [0x1, 0x16, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x53, 0x2, -0x112],
                's': [0x1, 0x16, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x47, -0x1, -0x112],
                's': [0x16, 0x2, 0x36],
                'c': 0x752717,
                't': 0x5
            }, {
                'p': [-0x34, -0x1c, -0x142],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x30, -0x1c, -0x13b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [0x57, 0x0, -0x11f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0xfb, 0x0, -0x19e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14]
            }, {
                'p': [0x44, 0x0, -0x72],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0xe4, 0x30, -0x7c],
                's': [0xa, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0xdf, 0x0, -0x8f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x105, 0x0, -0x141],
                's': [0x39, 0x1a, 0x19],
                'i': 0x13,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x105, 0x0, -0x141],
                's': [0x19, 0x2, 0x39],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x105, 0x18, -0x141],
                's': [0x19, 0x2, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x111, 0x2, -0x141],
                's': [0x1, 0x16, 0x39],
                'pe': 0x1,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xf9, 0x2, -0x141],
                's': [0x1, 0x16, 0x37],
                'pe': 0x1,
                't': 0x5
            }, {
                'p': [0x105, 0x0, -0x141],
                's': [0x17, 0x1, 0x36],
                'c': 0x913c31,
                't': 0x5
            }, {
                'p': [0x113, 0x0, -0x123],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.19, -3.14],
                'c': '#c9d47c'
            }, {
                'p': [-0xca, 0x0, -0x1e5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xbe, 0xc, -0x1e5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xbb, 0x0, -0x1ee],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x9c, 0x0, -0x202],
                's': [0x39, 0x1a, 0x19],
                'i': 0x13,
                'l': 0x1
            }, {
                'p': [-0x9c, 0x0, -0x20f],
                's': [0x39, 0x34, 0x2],
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0x99, 0x0, -0x202],
                's': [0x3f, 0x1, 0x17],
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0xd9, 0x0, -0x220],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14]
            }, {
                'p': [-0xbb, 0x0, -0x20c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14]
            }, {
                'p': [-0x9b, 0x1, -0x1f6],
                's': [0x36, 0x18, 0x2],
                'v': 0x1,
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0x9b, 0x18, -0x202],
                's': [0x39, 0x2, 0x19],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x1b1b1b,
                't': 0x5
            }, {
                'p': [-0xf5, 0x0, -0x1c5],
                's': [0x4, 0xb, 0x17]
            }, {
                'p': [0x144, -0x12, -0x9e],
                's': [0x4, 0x19, 0x50]
            }, {
                'p': [0x104, -0x12, -0x9e],
                's': [0x4, 0x19, 0x50]
            }, {
                'p': [0x124, -0xe, -0xaf],
                's': [0x3d, 0xe, 0x2c],
                'i': 0x9,
                'c': '#ffffff',
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x131, 0xa, -0x209],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x10e, 0xa, -0x1bd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x109, 0x0, -0x177],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa5, 0x0, -0x194],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x113, 0x0, -0x1c5],
                's': [0x4, 0x10, 0x18]
            }, {
                'p': [0x144, 0x7, -0x96],
                's': [0x4, 0x2, 0x16]
            }, {
                'p': [0x144, 0x7, -0xb6],
                's': [0x4, 0x2, 0x10]
            }, {
                'p': [-0xf5, 0x10, -0x20a],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [-0xf5, 0x10, -0x1df],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [-0xf5, 0x0, -0x1fb],
                's': [0x4, 0x10, 0x50]
            }, {
                'p': [-0xf5, 0x0, -0x1d3],
                's': [0x5, 0x11, 0x5]
            }, {
                'p': [-0x113, 0x10, -0x1c3],
                's': [0x4, 0x2, 0xc]
            }, {
                'p': [0xe4, 0x0, -0x62],
                's': [0xa, 0x30, 0x12],
                'bo': 0x1
            }, {
                'p': [0x124, -0x1, -0x70],
                's': [0x44, 0x1, 0x16],
                't': 0x1
            }, {
                'p': [0x124, -0x12, -0x79],
                's': [0x3c, 0x13, 0x6],
                'c': '#525252',
                't': 0x5
            }, {
                'p': [0xe4, 0x14, -0x6d],
                's': [0xa, 0x1c, 0x4],
                'bo': 0x1
            }, {
                'p': [0x124, 0x24, -0x40],
                's': [0x32, 0x2, 0x50],
                'c': '#3e3e3e',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x124, -0x3, -0x49],
                's': [0x32, 0x4, 0x5a],
                'c': '#525252',
                't': 0x5
            }, {
                'p': [0x103, 0x0, -0x3f],
                's': [0x12, 0x25, 0x50],
                'bo': 0x1
            }, {
                'p': [0x17c, 0x0, -0x3f],
                's': [0x80, 0x25, 0x50],
                'bo': 0x1
            }, {
                'p': [0x131, 0xa, -0x45],
                's': [0x42, 0x16, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x124, 0xa, -0x45],
                's': [0x42, 0x2, 0x18],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x2c3f55,
                't': 0x5
            }, {
                'p': [0x124, 0x20, -0x45],
                's': [0x42, 0x2, 0x1c],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x124, 0x3, -0x4e],
                's': [0x4, 0x4, 0x1b],
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x12f, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x12a, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x119, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x11e, 0x1, -0x4e],
                's': [0x8, 0x8, 0x4],
                'r': [0x0, -1.57, 0x0],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x124, 0x6, -0x43],
                's': [0x42, 0x4, 0x5],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x124, 0x6, -0x65],
                's': [0x3, 0x4, 0x18],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x11d, 0xc, -0x66],
                's': [0x2, 0x14, 0xc],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x132, 0xc, -0x61],
                's': [0xc, 0x14, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x124, 0x5, -0x65],
                's': [0x4, 0x1, 0x1b],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x11a, 0x7, -0x66],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': 0xff4b00,
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x12e, 0x7, -0x66],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#ff4b00',
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x13c, 0x0, -0x40],
                's': [0x2, 0x24, 0x50],
                'c': '#3e3e3e',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x124, 0x0, -0x26],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                't': 0x5
            }, {
                'p': [0x124, 0x0, -0x39],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0x124, 0x0, -0x49],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0x124, 0x0, -0x49],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0x124, -0x12, -0x8b],
                's': [0x3c, 0x4, 0x1e],
                'c': '#b6b6b6',
                't': 0x1
            }, {
                'p': [0x124, 0x0, -0x67],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x124, 0x0, -0x5b],
                's': [0x2e, 0x24, 0x1],
                'c': 0x0,
                'o': 0.4,
                't': 0x5
            }, {
                'p': [0xe4, 0x0, -0x8e],
                's': [0xa, 0x30, 0xe],
                'bo': 0x1
            }, {
                'p': [0xe4, 0x13, -0x85],
                's': [0xa, 0x1d, 0x4],
                'bo': 0x1
            }, {
                'p': [0xe4, 0x1a, -0x79],
                's': [0xa, 0x16, 0x14],
                'bo': 0x1
            }, {
                'p': [0xde, 0x0, -0x83],
                's': [0x7, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [-0x9c, 0x0, -0x1e8],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11
            }, {
                'p': [-0x109, 0xa, -0x1bb],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x140, 0x0, -0x79],
                's': [0x2, 0x32, 0x2],
                't': 0x2
            }, {
                'p': [0x13d, -0xe, -0x82],
                's': [0x4, 0x1, 0x4],
                'l': 0x1,
                'c': '#c5c5c5'
            }, {
                'p': [0x139, 0x1, -0x64],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [0x13b, 0x1, -0x77],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x36, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0],
                'c': '#d5e371'
            }, {
                'p': [0xec, 0x0, -0x5e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xec, 0x0, -0x90],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [-0xfd, 0x49, -0x22d],
                's': [0x45, 0x0, 0x1c],
                'i': 0xb,
                'l': 0x1,
                'r': [1.57, 0x0, 0x0]
            }, {
                'p': [-0xfa, 0xa, -0x220],
                's': [0x4, 0x7, 0x4],
                'i': 0x10
            }, {
                'p': [-0x81, 0x2, -0x202],
                's': [0x1, 0x18, 0x17],
                'l': 0x1,
                'c': 0x0,
                'o': 0.7000000000000001,
                't': 0x5
            }, {
                'p': [-0x7a, 0x3a, -0x20c],
                's': [0x6, 0xe, 0x6],
                't': 0x2
            }, {
                'p': [-0x53, 0x3e, -0x1cb],
                's': [0x6, 0x10, 0x6],
                't': 0x2
            }, {
                'p': [-0x9c, 0x1a, -0x202],
                's': [0x39, 0x1a, 0x19],
                'i': 0x11
            }, {
                'p': [-0x88, -0x1c, -0x15e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [0xb0, 0x0, -0xa],
                's': [0x2, 0x12, 0x4],
                'c': 0xd7d7d7,
                't': 0x2
            }, {
                'p': [-0x38, 0x0, -0x80],
                's': [0x2, 0x12, 0x4],
                'c': 0xd7d7d7,
                't': 0x2
            }, {
                'p': [0x8a, 0x0, -0x11e],
                's': [0x5, 0x13, 0x2],
                't': 0x2
            }, {
                'p': [0x91, 0x0, -0x11e],
                's': [0x5, 0x12, 0x2],
                't': 0x2
            }, {
                'p': [0x1a, 0x0, -0x15e],
                's': [0x5, 0x12, 0x2],
                't': 0x2
            }, {
                'p': [0x135, 0x0, -0x132],
                's': [0x2, 0x13, 0x4],
                't': 0x2
            }, {
                'p': [0x134, 0x0, -0x13c],
                's': [0x2, 0x13, 0x4],
                't': 0x2
            }, {
                'p': [-0x104, 0x0, -0x1b7],
                's': [0x1a, 0x10, 0x4]
            }, {
                'p': [-0x10d, 0xa, -0x1c4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.7, -3.14]
            }, {
                'p': [-0xd4, 0x0, -0x181],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xd4, 0x0, -0x180],
                's': [0x31, 0x8, 0x10],
                'v': 0x1
            }, {
                'p': [-0xd9, 0x8, -0x180],
                's': [0x18, 0x7, 0x10],
                'v': 0x1
            }, {
                'p': [-0x9b, 0x0, -0x19c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.87, 3.14]
            }, {
                'p': [-0xf1, 0x0, -0x184],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xc0, 0x0, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [0x117, 0xa, -0x45],
                's': [0x42, 0x16, 0x2],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x157, 0x20, -0x178],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x157, 0x2c, -0x171],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xb7, 0x58, -0x4],
                's': [0x4, 0x2, 0x36],
                't': 0x2
            }, {
                'p': [0xc7, 0x58, -0x4],
                's': [0x4, 0x2, 0x36],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, -0x1b],
                's': [0x1a, 0x1, 0x4],
                'c': 0xd9d9d9,
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, -0x14],
                's': [0x19, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbf, 0x5a, -0xc],
                's': [0x1a, 0x1, 0x4],
                'c': 0xc8c8c8,
                't': 0x2
            }, {
                'p': [0xbf, 0x5a, 0x13],
                's': [0x1a, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, -0x5],
                's': [0x18, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, 0xc],
                's': [0x17, 0x1, 0x4],
                't': 0x2
            }, {
                'p': [0xbe, 0x5a, 0x4],
                's': [0x17, 0x1, 0x4],
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [0xaa, 0x57, -0x57],
                's': [0x6, 0x13, 0x6],
                't': 0x2
            }, {
                'p': [0xb1, 0x2b, -0x5],
                's': [0x2, 0xd, 0x4],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x13e, 0x1, -0x193],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x144, 0x1, -0x19a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x92, 0x0, 0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x12, 0x1c, -0x208],
                's': [0xb, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [-0x11, 0x1f, -0x208],
                's': [0xb, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0x33, 0x1f, -0x208],
                's': [0xb, 0x3, 0x3],
                'bo': 0x1
            }, {
                'p': [0x12, 0x1f, -0x209],
                's': [0x7, 0x10, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x33, 0x22, -0x209],
                's': [0x7, 0x10, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x11, 0x22, -0x209],
                's': [0x7, 0x10, 0x2],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [0x96, 0x7, -0x1a9],
                's': [0x12, 0x7, 0x4]
            }, {
                'p': [0x64, 0x7, -0x1a9],
                's': [0xa, 0x7, 0x4]
            }, {
                'p': [0x65, 0xa, -0x1cd],
                's': [0x8, 0x6, 0x4]
            }, {
                'p': [0x70, -0x1c, -0x1cd],
                's': [0x3a, 0x24, 0x4]
            }, {
                'p': [0x7b, 0x4, -0x1bb],
                's': [0x24, 0x1, 0x20]
            }, {
                'p': [0x8f, 0x4, -0x1bb],
                's': [0x4, 0xa, 0x20]
            }, {
                'p': [0x67, 0x4, -0x1bb],
                's': [0x4, 0xa, 0x20]
            }, {
                'p': [0x8f, 0xe, -0x1b3],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x67, 0xe, -0x1c1],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x67, 0xe, -0x1b1],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x7b, 0x8, -0x1bb],
                's': [0x24, 0x2, 0x24],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [0x98, 0xe, -0x1a9],
                's': [0x8, 0x2, 0x4]
            }, {
                'p': [0x8b, 0x1, -0x1bc],
                's': [0x4, 0x3, 0x22],
                't': 0x2
            }, {
                'p': [0x6b, 0x1, -0x1bc],
                's': [0x4, 0x3, 0x22],
                't': 0x2
            }, {
                'p': [0x8b, -0x1, -0x1c7],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                'c': 0xd4d4d4,
                't': 0x2
            }, {
                'p': [0x6b, -0x1, -0x1c7],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                'c': 0xd9d9d9,
                't': 0x2
            }, {
                'p': [0x6b, -0x1, -0x1ad],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                'c': 0xe6e6e6,
                't': 0x2
            }, {
                'p': [0x8b, -0x1, -0x1ae],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                'c': 0xe1e1e1,
                't': 0x2
            }, {
                'p': [0x9a, 0x8, -0x198],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [0x65, 0x8, -0x1a3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xf1, 0x0, -0x1c5],
                's': [0x4, 0x8, 0x19],
                'l': 0x1
            }, {
                'p': [-0xed, 0x0, -0x1c5],
                's': [0x4, 0x5, 0x19],
                'l': 0x1
            }, {
                'p': [-0xe9, 0x0, -0x1c5],
                's': [0x4, 0x2, 0x19]
            }, {
                'p': [-0xec, 0x0, -0x1c5],
                's': [0xe, 0xb, 0x17],
                'i': 0x9,
                'v': 0x1,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [-0xc1, 0x0, -0x1ee],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.53, 3.14]
            }, {
                'p': [0x171, 0x51, -0x79],
                's': [0x4, 0x3, 0x11],
                'l': 0x1
            }, {
                'p': [-0x94, 0x65, 0x61],
                's': [0x14, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xee, -0x1, -0x24a],
                's': [0xaf, 0x5a, 0xb]
            }, {
                'p': [-0x118, 0x59, -0x24a],
                's': [0x16, 0x4, 0xb],
                'l': 0x1
            }, {
                'p': [-0xfc, 0x32, 0x1b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf8, 0xf, -0x23e],
                's': [0x81, 0x4b, 0xb]
            }, {
                'p': [0xdf, 0x5a, -0x23e],
                's': [0x15, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [0xfd, 0x5a, -0x23e],
                's': [0x15, 0x2, 0xb],
                'l': 0x1
            }, {
                'p': [0x11f, 0x5a, -0x23e],
                's': [0x11, 0x4, 0xb],
                'l': 0x1
            }, {
                'p': [-0xf9, 0x7c, -0x67],
                's': [0xc, 0x4, 0xc],
                'l': 0x1,
                'c': 0xbebaba
            }, {
                'p': [-0xf6, 0x7c, -0x54],
                's': [0x6, 0x2, 0xc],
                'l': 0x1,
                'c': 0xd7d7d7
            }, {
                'p': [-0xb2, 0x65, 0x61],
                's': [0xd, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0xcf, 0x65, 0x61],
                's': [0xd, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [-0xed, 0x65, 0x61],
                's': [0x10, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, 0x49],
                's': [0x4, 0x2, 0x11],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, 0x29],
                's': [0x4, 0x2, 0xd],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, 0xc],
                's': [0x4, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [-0x104, 0x65, -0x15],
                's': [0x4, 0x2, 0x17],
                'l': 0x1
            }, {
                'p': [-0xf3, 0x5b, -0x54],
                's': [0x6, 0x3, 0xa],
                'c': 0xb9b9b9
            }, {
                'p': [-0x9f, 0x4d, -0x9c],
                's': [0xe, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xb9, 0x4d, -0x9c],
                's': [0xb, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0xdc, 0x4d, -0x9e],
                's': [0xe, 0x3, 0xa],
                'l': 0x1
            }, {
                'p': [-0x116, 0x4d, -0xe2],
                's': [0x17, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x136, 0x4d, -0x9c],
                's': [0x1b, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [0x165, 0x62, -0x1c2],
                's': [0x10, 0x3, 0x10],
                'l': 0x1
            }, {
                'p': [0x160, 0x62, -0x1e7],
                's': [0x6, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0x171, 0x51, -0xeb],
                's': [0x4, 0x3, 0x11],
                'l': 0x1
            }, {
                'p': [0x171, 0x51, -0xca],
                's': [0x4, 0x2, 0xb],
                'l': 0x1
            }, {
                'p': [0x171, 0x51, -0xa5],
                's': [0x4, 0x2, 0x15],
                'l': 0x1
            }, {
                'p': [0x148, 0x25, -0x3f],
                's': [0x9c, 0x2c, 0x50],
                'bo': 0x1
            }, {
                'p': [0x15b, 0x51, -0x65],
                's': [0xd, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [0x101, 0x51, -0x64],
                's': [0xe, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [0x13e, 0x51, -0x65],
                's': [0x10, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x11d, 0x51, -0x65],
                's': [0xe, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x169, 0x32, -0xbc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x169, 0x32, -0xb0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xf2, 0x59, -0x24a],
                's': [0x16, 0x3, 0xb],
                'l': 0x1
            }, {
                'p': [-0xc8, 0x59, -0x24a],
                's': [0x12, 0x4, 0xb],
                'l': 0x1
            }, {
                'p': [-0x100, 0x4d, -0x9c],
                's': [0x11, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0xea, 0x4d, -0xe2],
                's': [0x10, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [-0x13f, 0x4d, -0xe2],
                's': [0x14, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0xc1, 0x4d, -0xe2],
                's': [0x13, 0x2, 0x6],
                'l': 0x1
            }, {
                'p': [-0x97, 0x4d, -0xe2],
                's': [0x13, 0x3, 0x6],
                'l': 0x1
            }, {
                'p': [-0xab, 0x12, 0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0]
            }, {
                'p': [-0x76, 0x74, -0xc5],
                's': [0x9, 0x3, 0x34],
                'c': 0xafafaf
            }, {
                'p': [-0x76, 0x74, -0xc5],
                's': [0x34, 0x3, 0x9],
                'c': 0x969696
            }, {
                'p': [-0x8f, 0x0, -0x31],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.05, -3.14]
            }, {
                'p': [-0x15c, 0x99, -0xe6],
                's': [0xb, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x15d, 0x99, -0x114],
                's': [0xd, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x188, 0x99, -0xe6],
                's': [0xb, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x186, 0x99, -0x114],
                's': [0xf, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [-0x172, 0x6e, -0xfd],
                's': [0x48, 0x2, 0x4c],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0xfd],
                's': [0x43, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0xeb],
                's': [0x43, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0x110],
                's': [0x43, 0x4, 0x4],
                't': 0x2
            }, {
                'p': [-0x172, 0x6a, -0xfd],
                's': [0x4, 0x4, 0x48],
                't': 0x2
            }, {
                'p': [-0x162, 0x6a, -0xfd],
                's': [0x4, 0x4, 0x48],
                't': 0x2
            }, {
                'p': [-0x183, 0x6a, -0xfd],
                's': [0x4, 0x4, 0x48],
                't': 0x2
            }, {
                'p': [-0x157, 0x7b, -0xfe],
                's': [0x2, 0x10, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x159, 0x99, -0xfc],
                's': [0x5, 0x3, 0xc],
                'l': 0x1
            }, {
                'p': [-0x170, 0x99, -0xe2],
                's': [0xe, 0x2, 0x4],
                'l': 0x1
            }, {
                'p': [-0x170, 0x99, -0x118],
                's': [0xb, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [-0x13f, 0x67, -0x24b],
                's': [0x3e, 0x2, 0x43],
                'c': 0xbebebe,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x24b],
                's': [0x4, 0x3, 0x3f],
                'c': 0xe1dede,
                't': 0x2
            }, {
                'p': [-0x14e, 0x64, -0x24b],
                's': [0x4, 0x3, 0x3f],
                'c': 0xd9d5d5,
                't': 0x2
            }, {
                'p': [-0x12f, 0x64, -0x24b],
                's': [0x4, 0x3, 0x3f],
                'c': 0xdcdcdc,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x24b],
                's': [0x3a, 0x3, 0x3],
                'c': 0xc3c3c3,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x239],
                's': [0x3a, 0x3, 0x3],
                'c': 0xc8c8c8,
                't': 0x2
            }, {
                'p': [-0x13f, 0x64, -0x25b],
                's': [0x3a, 0x3, 0x3],
                'c': 0xcfcfcf,
                't': 0x2
            }, {
                'p': [0xb7, 0x55, -0x1c],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xc7, 0x55, -0x1c],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xc7, 0x55, 0x14],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0xb7, 0x55, 0x14],
                's': [0x2, 0x2, 0xb],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x10e, -0xe, -0x82],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0xe7, 0x0, -0x18e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [-0xca, 0x0, -0x18d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [-0x104, 0x10, -0x1b7],
                's': [0xc, 0x2, 0x4]
            }, {
                'p': [-0xf5, 0x0, -0x1b7],
                's': [0x5, 0x11, 0x5]
            }, {
                'p': [-0x113, 0x0, -0x1b7],
                's': [0x5, 0x11, 0x5]
            }, {
                'p': [-0xec, 0x0, -0x1d3],
                's': [0xe, 0xd, 0x3]
            }, {
                'p': [-0xec, 0x0, -0x1b7],
                's': [0xe, 0xd, 0x3]
            }, {
                'p': [-0xef, 0x0, -0x1d8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xe5, 0x0, -0x1b7],
                's': [0x4, 0xe, 0x4]
            }, {
                'p': [-0xe5, 0x0, -0x1d3],
                's': [0x4, 0xe, 0x4]
            }, {
                'p': [-0xb2, 0x0, -0x169],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14]
            }, {
                'p': [-0xcb, 0x0, -0x174],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0.01, -1.39, 0.01]
            }, {
                'p': [-0xdd, 0x0, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0.01, -1.39, 0.01]
            }, {
                'p': [-0xe8, 0x1, -0x174],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.23, 0.01]
            }, {
                'p': [-0xb8, 0x0, -0x184],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0]
            }, {
                'p': [-0xb9, 0x0, -0x17a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [-0xe3, 0x0, -0x165],
                's': [0x4, 0x13, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0xd9, 0x0, -0x164],
                's': [0x4, 0x13, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [-0xde, 0x0, -0x165],
                's': [0x4, 0xe, 0x2],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x90, -0x1c, -0x1c7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.21, 0x0]
            }, {
                'p': [-0xef, 0x0, -0x1df],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.88, 0x0]
            }, {
                'p': [0x104, 0x7, -0xb6],
                's': [0x4, 0x2, 0x10]
            }, {
                'p': [0x104, 0x7, -0x96],
                's': [0x4, 0x2, 0x16]
            }, {
                'p': [0x14f, 0x8b, -0x23],
                's': [0xc, 0x4, 0x6],
                'l': 0x1
            }, {
                'p': [0x16a, 0x8b, -0x3e],
                's': [0x6, 0x4, 0xc],
                'l': 0x1
            }, {
                'p': [0xd4, 0x10, -0x1cd],
                's': [0x14, 0x2, 0x4]
            }, {
                'p': [0x8f, 0xe, -0x1c2],
                's': [0x4, 0x2, 0x9]
            }, {
                'p': [0x10c, 0x0, -0x40],
                's': [0x2, 0x24, 0x50],
                'c': '#3e3e3e',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x45, -0x20, -0x159],
                's': [0x96, 0x4, 0x4c],
                't': 0x1
            }, {
                'p': [-0xc4, -0x2, -0xd5],
                's': [0x22, 0x2, 0x20],
                't': 0x1
            }, {
                'p': [-0xd2, 0x2a, -0x169],
                's': [0x4c, 0x1, 0xc],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xf7, 0x26, -0x168],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0xd2, 0x26, -0x168],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0xae, 0x26, -0x168],
                's': [0x2, 0x2, 0xc],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [-0xb2, 0x2b, -0x16a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb8, 0x2b, -0x168],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb4, 0x33, -0x168],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe4, 0x1c, -0x170],
                's': [0x1, 0xd, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [-0xd7, 0x0, -0x18b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [-0x19f, 0x0, -0x1bc],
                's': [0x3a, 0x7f, 0x5a],
                'c': 0xa7a5a5
            }, {
                'p': [-0x18a, 0x7f, -0x196],
                's': [0x10, 0x3, 0xe],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0x18a, 0x7f, -0x1e1],
                's': [0x10, 0x4, 0x10],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0x18a, 0x7f, -0x1bc],
                's': [0x10, 0x3, 0x10],
                'l': 0x1,
                'c': 0xaaaaaa
            }, {
                'p': [-0x1b2, 0x7f, -0x197],
                's': [0x14, 0x3, 0x10],
                'l': 0x1,
                'c': 0xa5a3a3
            }, {
                'p': [-0x1b4, 0x7f, -0x1e1],
                's': [0x10, 0x3, 0x10],
                'l': 0x1,
                'c': 0xb1b1b1
            }, {
                'p': [-0xd2, 0x29, -0x170],
                's': [0x4c, 0x2, 0x2],
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x159, 0x48, -0x20e],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x21c],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x215],
                's': [0x3, 0x3, 0x28],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x160, 0x5a, -0x20e],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x20e],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x151, 0x5a, -0x20e],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x151, 0x5a, -0x21c],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x160, 0x5a, -0x21c],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x21c],
                's': [0x3, 0x26, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x56, -0x215],
                's': [0x3, 0x3, 0x21],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x56, -0x21c],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x56, -0x20e],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x202],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [-0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x159, 0x48, -0x228],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x16a],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x178],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x171],
                's': [0x3, 0x3, 0x28],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x16b, 0x74, -0x16a],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x16a],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x15c, 0x74, -0x16a],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x15c, 0x74, -0x178],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x16b, 0x74, -0x178],
                's': [0x28, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x178],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x70, -0x171],
                's': [0x3, 0x3, 0x21],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x70, -0x178],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x70, -0x16a],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x8c, -0x171],
                's': [0x3, 0x3, 0x14],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x167, 0x7d, -0x171],
                's': [0x9, 0xb, 0x6],
                'c': '#757575'
            }, {
                'p': [-0x15a, 0x97, -0x171],
                's': [0x29, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -2.45],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x147, 0xa4, -0x171],
                's': [0x5, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x146, 0x84, -0x171],
                's': [0x1, 0x22, 0x1],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x146, 0x81, -0x171],
                's': [0x2, 0x3, 0x2],
                'c': '#343434',
                't': 0x5
            }, {
                'p': [-0x164, 0x62, -0x15e],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [-0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x164, 0x62, -0x184],
                's': [0x3, 0x11, 0x3],
                'l': 0x1,
                'r': [0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [-0x168, 0x88, -0x171],
                's': [0x5, 0x3, 0x6],
                'c': '#757575'
            }, {
                'p': [-0x182, 0x5a, -0x1bd],
                's': [0x2, 0x13, 0x6],
                'l': 0x1,
                'c': 0x0
            }, {
                'p': [-0x182, 0x58, -0x1bd],
                's': [0x6, 0x4, 0xc],
                'c': 0xaaa3a3
            }, {
                'p': [-0xd8, 0x30, -0x3f],
                's': [0x8, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                't': 0x2
            }, {
                'p': [-0xcf, 0x22, -0x3f],
                's': [0x1, 0x12, 0x1],
                'l': 0x1,
                'c': 0xb1b1b1,
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1cf],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1dd],
                's': [0x28, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1d6],
                's': [0x3, 0x3, 0x28],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x173, 0x74, -0x1cf],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1cf],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x182, 0x74, -0x1cf],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x182, 0x74, -0x1dd],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, -1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x173, 0x74, -0x1dd],
                's': [0x28, 0x3, 0x3],
                'r': [0x0, 0x0, 1.05],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1dd],
                's': [0x3, 0x2a, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x70, -0x1d6],
                's': [0x3, 0x3, 0x21],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x70, -0x1dd],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x70, -0x1cf],
                's': [0x15, 0x3, 0x3],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x8c, -0x1d6],
                's': [0x3, 0x3, 0x14],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17f, 0x7d, -0x1d6],
                's': [0x9, 0xb, 0x6],
                'c': '#757575'
            }, {
                'p': [0x16f, 0x96, -0x1d6],
                's': [0x29, 0x3, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x161, 0xa5, -0x1d6],
                's': [0x5, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, 0x0, 2.45],
                'c': '#522505',
                't': 0x5
            }, {
                'p': [0x15f, 0x83, -0x1d6],
                's': [0x1, 0x22, 0x1],
                'c': '#522505',
                't': 0x5
            }, {
                'p': [0x15f, 0x80, -0x1d6],
                's': [0x2, 0x3, 0x2],
                'c': '#343434',
                't': 0x5
            }, {
                'p': [0x17a, 0x62, -0x1c3],
                's': [0x3, 0x11, 0x3],
                'r': [-0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17a, 0x62, -0x1e9],
                's': [0x3, 0x11, 0x3],
                'r': [0.26, 0x0, 0x0],
                'c': '#ffffff',
                't': 0x2
            }, {
                'p': [0x17f, 0x88, -0x1d6],
                's': [0x5, 0x3, 0x6],
                'c': '#757575'
            }, {
                'p': [0x137, 0x70, -0x1fc],
                's': [0xe, 0x4, 0x16],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x15b, 0x70, -0x1f4],
                's': [0x16, 0x3, 0x6],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0x133, 0x70, -0x21b],
                's': [0x6, 0x3, 0x12],
                'l': 0x1,
                'c': '#b1b1b1'
            }, {
                'p': [0xfd, 0x0, -0x1c9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0]
            }, {
                'p': [0xdb, 0x0, -0x6a],
                's': [0x4, 0x2, 0x3],
                'l': 0x1
            }, {
                'p': [0xea, 0x0, -0x70],
                's': [0x3, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0xdb, 0x0, -0x8e],
                's': [0x3, 0x1, 0x4],
                'l': 0x1
            }, {
                'p': [0x139, 0x3a, -0x1c1],
                's': [0x6, 0xa, 0x6],
                'l': 0x1,
                't': 0x2
            }, {
                'p': [0x189, 0x40, -0x1dd],
                's': [0x58, 0x22, 0x46]
            }, {
                'p': [0x181, 0x62, -0x1bc],
                's': [0x12, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x19b, 0x62, -0x1bc],
                's': [0x10, 0x3, 0x4],
                'l': 0x1
            }, {
                'p': [0x1b0, 0x62, -0x1bf],
                's': [0xa, 0x3, 0xa],
                'l': 0x1
            }, {
                'p': [0x184, 0x59, -0x1b3],
                's': [0x4, 0x4, 0x10],
                't': 0x2
            }, {
                'p': [0x184, 0x55, -0x1b9],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                't': 0x2
            }, {
                'p': [0x11a, -0xe, -0x80],
                's': [0x7, 0x1, 0x4],
                'l': 0x1,
                'c': '#c5c5c5'
            }, {
                'p': [0xb3, 0x43, -0x18],
                's': [0x4, 0x5, 0xf],
                'l': 0x1
            }, {
                'p': [-0xe0, 0x0, -0x68],
                's': [0x1f, 0x18, 0x36],
                'c': 0x414141,
                't': 0x5
            }, {
                'p': [-0x12, 0x12, 0x24],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [-0x114, 0xa, -0x206],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [0x60, 0x8, -0x1a5],
                's': [0x2, 0x6, 0x4],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [0xdd, 0x0, -0x61],
                's': [0x4, 0xc, 0xc],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [0x140, 0x0, -0x78],
                's': [0x4, 0x7, 0x4],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [0x8a, 0x0, -0x96],
                's': [0x4, 0x8, 0x6],
                'pe': 0x1,
                'v': 0x1
            }, {
                'p': [-0x9c, 0x1a, -0x202],
                's': [0x39, 0x1, 0x1a],
                'v': 0x1,
                'bo': 0x1
            }, {
                'p': [-0x132, 0xa, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.7, -3.14]
            }, {
                'p': [-0xfd, 0xa, -0x21e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.17, -3.14]
            }, {
                'p': [-0x130, 0xa, -0x21e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.17, -3.14]
            }, {
                'p': [-0xfc, 0xa, -0x1db],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.17, -3.14]
            }]
        }, {
            'name': 'Littletown',
            'ambInd': 0x1,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x1,
            'skyDomeCol0': '#3fb1b7',
            'skyDomeCol1': '#00cffc',
            'skyDomeCol2': '#1faedc',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0x7b7e8c,
            'light': 0x535566,
            'sky': 0x667a96,
            'fog': 0x7784a2,
            'fogD': 722.1829102596926,
            'dthY': -0x64,
            'nAmb': 0x1,
            'camPos': [0x24, 0x35, 0xfc],
            'spawns': [[0x1a8, 0x0, -0x66, 0x0, 0x2], [-0x114, 0x0, 0xc, 0x0, 0x3], [-0x112, 0x0, 0xba, 0x0, 0x3], [0x11f, 0x26, 0x20, 0x0, 0x2], [-0x9c, 0x26, 0x21, 0x0, 0x3], [-0x5f, 0x26, -0x4, 0x0], [0x180, 0x0, 0x57, 0x0, 0x2], [0x8d, 0x0, 0x151, 0x0, 0x2]],
            'ambO': 0.7,
            'ambS': 0x5,
            'objects': [{
                'p': [0x8a, 0x2, 0x6],
                's': [0x4, 0x24, 0x3c],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0xcd, 0x24, 0x1e],
                's': [0x3e, 0x2, 0x6c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xee, 0x26, 0x2d],
                's': [0x4, 0x26, 0x4a],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xaa, 0x2, 0x7b],
                's': [0x1e, 0x74, 0x12],
                'c': 0x707070,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0x45],
                's': [0x4, 0x1e, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x130, 0x2, -0x7],
                's': [0x2, 0x34, 0xc],
                'i': 0x3,
                't': 0x2
            }, {
                'p': [0x8a, 0x26, 0x3],
                's': [0x4, 0x6, 0x26],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x26, 0x51],
                's': [0x4, 0x6, 0x22],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x26, 0x2b],
                's': [0x4, 0x2e, 0x2a],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x26, 0x68],
                's': [0x4, 0x28, 0xc],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x26, -0x14],
                's': [0x4, 0x33, 0x8],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x42, 0x3],
                's': [0x4, 0x15, 0x26],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x2, 0x51],
                's': [0x4, 0x24, 0x3a],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x1a, 0x2c],
                's': [0x4, 0xc, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xdc, 0x2, 0x70],
                's': [0xa8, 0x4a, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xcd, 0x2, -0x1a],
                's': [0x8a, 0x58, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x129, 0x2, -0x1a],
                's': [0xe, 0x58, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x11a, 0x1a, -0x1a],
                's': [0x10, 0x40, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x26, 0x10],
                's': [0x4, 0x2e, 0x50],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x4f, 0x4a],
                's': [0x4, 0x3, 0x4],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x12e, 0x3e, 0x40],
                's': [0x4, 0x14, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x2, 0x19],
                's': [0x4, 0x24, 0x62],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x12e, 0x2, 0x64],
                's': [0x4, 0x24, 0x14],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x1a, 0x52],
                's': [0x4, 0xc, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xee, 0x26, -0x10],
                's': [0x4, 0x26, 0x10],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x40, 0x0],
                's': [0x4, 0xc, 0x10],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xb0, 0x22, 0x62],
                's': [0x4, 0x2a, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x123, 0x26, 0x54],
                's': [0x12, 0x26, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x106, 0x26, 0x54],
                's': [0x8, 0x26, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x112, 0x3e, 0x54],
                's': [0x10, 0xe, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xd8, 0x2, 0x54],
                's': [0x54, 0x4a, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x100, 0x2, 0x62],
                's': [0x4, 0x24, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x2, 0x43],
                's': [0x4, 0x24, 0x1e],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x2, -0x5],
                's': [0x4, 0x24, 0x26],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0xee, 0x1a, 0x21],
                's': [0x4, 0xc, 0x26],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x9d, 0x24, 0x2b],
                's': [0x22, 0x2, 0x86],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x10e, 0x24, 0x1e],
                's': [0x3c, 0x2, 0x6c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x117, 0x24, 0x61],
                's': [0x2a, 0x2, 0x1a],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xdc, 0x0, 0x2b],
                's': [0xac, 0x2, 0x92],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xb7, 0x0, -0x4b],
                's': [0x96, 0x2, 0x62],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x9e, 0x2, -0x1f],
                's': [0x4, 0x1e, 0x6],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x2, -0x4a],
                's': [0x4, 0x1e, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x2, -0x75],
                's': [0x4, 0x1e, 0x2],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x20, -0x49],
                's': [0x4, 0xc, 0x5a],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xfe, 0x2, -0x3c],
                's': [0x4, 0x2a, 0x40],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xfe, 0x2, -0x71],
                's': [0x4, 0x2a, 0xa],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xfe, 0x1a, -0x64],
                's': [0x4, 0x12, 0x10],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xce, 0x2, -0x78],
                's': [0x64, 0x2a, 0x4],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x2, -0x60],
                's': [0x2, 0x1e, 0x2a],
                'pe': 0x1,
                'c': '#ffffff',
                't': 0xa
            }, {
                'p': [0xaa, 0x0, 0x7d],
                's': [0x22, 0x2, 0x12],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x104, 0x0, -0x64],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x134, 0x0, 0x52],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x29, 0x0, -0x18],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x11a, 0x0, -0x20],
                's': [0x14, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x1d, -0x1, 0x143],
                's': [0x6a, 0x2, 0x34d],
                'c': 0x393939,
                't': 0x5
            }, {
                'p': [-0x41, 0x20, 0x73],
                's': [0x4, 0xc, 0x66],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0x73],
                's': [0x4, 0x1e, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0xa1],
                's': [0x4, 0x1e, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x91, 0x2, 0xa1],
                's': [0x4, 0x2a, 0xa],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x91, 0x2, 0x66],
                's': [0x4, 0x2a, 0x4c],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x69, 0x2, 0xa8],
                's': [0x54, 0x2a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x91, 0x1a, 0x94],
                's': [0x4, 0x12, 0x10],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x41, 0x2, 0x8b],
                's': [0x2, 0x1e, 0x2a],
                'pe': 0x1,
                't': 0xa
            }, {
                'p': [-0x5b, 0x0, 0x76],
                's': [0x74, 0x2, 0x6c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x71, 0x0, -0x10],
                's': [0x8c, 0x2, 0xa4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x8e, 0x2, 0x3e],
                's': [0x1e, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x4e, 0x2, 0x3e],
                's': [0x42, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x71, 0x2, -0x5e],
                's': [0x88, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x42, -0x10],
                's': [0x4, 0xa, 0x98],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x26, -0x4d],
                's': [0x4, 0x1c, 0x1e],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x26, -0x3],
                's': [0x4, 0x1c, 0x2a],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x26, 0x23],
                's': [0x4, 0x6, 0x22],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x2f, 0x26, -0x2b],
                's': [0x4, 0x6, 0x26],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x2f, 0x26, 0x38],
                's': [0x4, 0x1c, 0x8],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, 0x2, -0x3e],
                's': [0x4, 0x24, 0x3c],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x2f, 0x1a, -0x18],
                's': [0x4, 0xc, 0x10],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0xb1, 0x2, 0x3e],
                's': [0x8, 0x4a, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xb3, 0x2, 0x5],
                's': [0x4, 0x4a, 0x6e],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xb3, 0x2, -0x4f],
                's': [0x4, 0x4a, 0x1a],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x77, 0x1a, 0x3e],
                's': [0x10, 0x32, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xa5, 0x1a, 0x3e],
                's': [0x10, 0x32, 0x4],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x8c, 0x2, -0x50],
                's': [0x4, 0x24, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x69, 0x2, -0x42],
                's': [0x4a, 0x4a, 0x4],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x46, 0x22, -0x50],
                's': [0x4, 0x2a, 0x18],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0xb3, 0x1a, -0x3a],
                's': [0x4, 0xc, 0x10],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x3a, 0x24, -0x10],
                's': [0x14, 0x2, 0x98],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x86, 0x2, 0x20],
                's': [0x4, 0x1c, 0x38],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x2, -0x31],
                's': [0x4, 0x1c, 0x1e],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x1e, -0x2],
                's': [0x4, 0x8, 0x7c],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x64, 0x24, -0x2],
                's': [0x40, 0x2, 0x7c],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9d, 0x24, -0x3],
                's': [0x2a, 0x2, 0x7e],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xa0, 0x24, -0x4f],
                's': [0x24, 0x2, 0x1a],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xb3, 0x3e, -0x3a],
                's': [0x4, 0xe, 0x10],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x86, 0x26, -0x39],
                's': [0x4, 0x26, 0xe],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x26, 0xd],
                's': [0x4, 0x26, 0x5e],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [-0x86, 0x3c, -0x2a],
                's': [0x4, 0x10, 0x10],
                'c': 0xffd8b6,
                't': 0x5
            }, {
                'p': [0x151, -0x2, 0x63],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x132, -0x2, 0x63],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x151, -0x2, 0x5],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x132, -0x2, 0x5],
                's': [0x4, 0x28, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x142, 0x22, 0x34],
                's': [0x24, 0x2, 0x64],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xc7, 0x22, -0x2f],
                's': [0x24, 0x2, 0x52],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xd6, -0x1, -0x9],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xd6, -0x1, -0x55],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xb7, -0x1, -0x55],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xb7, -0x1, -0x9],
                's': [0x4, 0x26, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x84, 0x0, 0x2c],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xb9, 0x0, -0x3a],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x97, 0x0, 0x94],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xa5, 0x0, 0x44],
                's': [0x12, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x71, 0x4c, -0x10],
                's': [0x92, 0x4, 0xaa],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x69, 0x2c, 0x77],
                's': [0x5e, 0x4, 0x70],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xdc, 0x4b, 0x2a],
                's': [0xa5, 0x4, 0x89],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xce, 0x2c, -0x4d],
                's': [0x6c, 0x4, 0x62],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x4f, 0x2, -0x69],
                's': [0x1e, 0x76, 0x12],
                'c': 0x707070,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x4f, 0x0, -0x6b],
                's': [0x22, 0x2, 0x12],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x20, 0x2, -0xcf],
                's': [0x7c, 0x4a, 0x96],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x20, 0x4a, -0xcf],
                's': [0x88, 0x4, 0xa2],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x20, 0x0, -0xcf],
                's': [0x80, 0x2, 0x9a],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5e, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x5e, -0x1, 0xd9],
                's': [0x2, 0x18, 0x71],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xf6, -0x1, 0x9f],
                's': [0x12e, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x25, -0x1, 0xeb],
                's': [0x2, 0x18, 0x3a],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x25, -0x1, 0xcd],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xa3, -0x1, 0xcd],
                's': [0xfe, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x18e, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x18f, -0x1, 0x3b],
                's': [0x2, 0x18, 0xce],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x18f, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x104, -0x1, -0x9d],
                's': [0x154, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xa1, -0x1, -0x9d],
                's': [0x106, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x122, -0x1, 0xcc],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x123, -0x1, 0x18],
                's': [0x2, 0x18, 0x166],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x122, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xb5, 0x2, 0x3],
                's': [0x2, 0x34, 0xc],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [0x20, 0x0, -0x79],
                's': [0x30, 0x2, 0x12],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x20, 0x27, -0x7b],
                's': [0x2e, 0x3, 0x13],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0xad],
                's': [0x2, 0x18, 0x3f],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa
            }, {
                'p': [-0x10b, 0x0, 0x49],
                's': [0x2e, 0x1e, 0x2a],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x10b, 0x1e, 0x49],
                's': [0x36, 0x2, 0x32],
                'c': 0x525252,
                't': 0x5
            }, {
                'p': [0x157, 0x0, -0x8a],
                's': [0x34, 0x20, 0x24],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x157, 0x20, -0x8a],
                's': [0x38, 0x2, 0x28],
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x18f, -0x1, -0x2e],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x1a0, -0x1, -0x2d],
                's': [0x1e, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x1af, -0x1, -0x2e],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x1b0, -0x1, -0x65],
                's': [0x2, 0x18, 0x6e],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x1af, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xfa, -0x1, 0x10],
                's': [0x8, 0x18, 0x48],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0xd5, -0x1, -0x78],
                's': [0x8, 0xa, 0x14],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0xe8, 0x1a, -0x8f],
                's': [0x3a, 0x2, 0x20],
                'c': 0x6b6b6b,
                't': 0x5
            }, {
                'p': [-0xe8, 0x0, -0x8f],
                's': [0x34, 0x1a, 0x1a],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0xe9, -0x1, 0x56],
                's': [0x16, 0xa, 0x8],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x139, -0x1, -0x86],
                's': [0x8, 0xa, 0x2c],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0x90, -0x1, -0x9a],
                's': [0x7c, 0xa, 0x5],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x1b3, 0x0, -0x10],
                's': [0x34, 0x20, 0x24],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x1b3, 0x20, -0x10],
                's': [0x38, 0x2, 0x28],
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x18f, -0x2, -0x64],
                's': [0x8, 0x14, 0x38],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x156, -0x1, 0x34],
                's': [0x6, 0xa, 0x68],
                'pe': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0xcd],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0x6a],
                's': [0x2, 0x18, 0x19],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa
            }, {
                'p': [0x97, 0x2, -0x63],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x154, 0x0, -0x72],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6c, 0x0, 0x98],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6c, 0xc, 0x98],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xbf, 0x2, -0x70],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf6, 0x2, -0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x89, 0x2, 0x74],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x68, 0x2, 0xa0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x38, 0x0, 0xc6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x38, 0xc, 0xc6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x8c, 0x2, 0x6a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xf9, 0x2, -0x3b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xca, 0x0, -0x94],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x5c, 0x2, 0xa0],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0xcb, 0x2, -0x70],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x82, 0x22, 0x4f],
                's': [0xc, 0x2, 0x2a],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x88, 0x2, 0x69],
                's': [0x2, 0x2a, 0x8],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [-0x2f, 0x2c, 0x23],
                's': [0x1, 0x16, 0x22],
                'pe': 0x1,
                'c': 0x91765b,
                't': 0xa
            }, {
                'p': [-0xdb, -0x1, 0xb0],
                's': [0x4, 0x20, 0x4],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xdb, 0x1e, 0xb0],
                's': [0x1a, 0x1a, 0x1c],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xdb, 0x14, 0xb5],
                's': [0x2, 0x2, 0x8],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xdb, 0x13, 0xbc],
                's': [0x6, 0x6, 0x8],
                'pe': 0x1,
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xe0, 0x12, 0xb0],
                's': [0x6, 0x2, 0x2],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xe5, 0x11, 0xb0],
                's': [0x6, 0x4, 0x6],
                'pe': 0x1,
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x177, -0x1, 0x8a],
                's': [0x4, 0x20, 0x4],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x177, 0x1d, 0x8a],
                's': [0x1a, 0x1a, 0x1c],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x177, 0x13, 0x85],
                's': [0x2, 0x2, 0x8],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x177, 0x12, 0x7f],
                's': [0x6, 0x6, 0x8],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x173, 0xf, 0x8a],
                's': [0x6, 0x2, 0x2],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x16d, 0xe, 0x8a],
                's': [0x6, 0x4, 0x6],
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x25, 0x1, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x31, 0x1, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2c, 0x1, -0x42],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x29, 0xd, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x82, 0x2, 0x33],
                's': [0x10, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x27, 0x2, -0x1f],
                's': [0x10, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0xe1],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1
            }, {
                'p': [-0x7d, -0x1, 0xaf],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x71, 0x0, 0xaf],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x9a, 0x2, -0x2e],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x3c, 0x2, 0x73],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xa9, 0x0, -0x96],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x5a, 0x0, 0xaf],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x18b, 0x0, 0x1c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xf6, 0x0, 0x70],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x1d, 0x1, 0xe1],
                's': [0x30, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x22, 0x8, 0xe1],
                's': [0x18, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x94, 0x9, -0x2d],
                's': [0x18, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x9a, 0x3, -0x2d],
                's': [0x30, 0x8, 0x10],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x8a, 0x2c, 0x3],
                's': [0x1, 0x16, 0x26],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa
            }, {
                'p': [0x75, 0x15, 0xb4],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0x75, -0x1, 0xb4],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x40, -0x1, 0xeb],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x40, 0x15, 0xeb],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0x2a, 0x17, 0x120],
                's': [0x1b, 0x1c, 0x18],
                'pe': 0x1,
                'c': 0x5e822b,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x25, -0x1, 0x109],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x5e, -0x1, 0x113],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x2a, -0x1, 0x121],
                's': [0x4, 0x1f, 0x4],
                'pe': 0x1,
                'c': 0x64523f,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x13b, -0x1, 0xd],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x141, -0x1, -0x84],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1cb, 0xe, -0x3e],
                's': [0x1a, 0x1b, 0x23],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0xcf, 0x11, -0xbc],
                's': [0x1a, 0x19, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x66, 0x10, -0xb5],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x140, 0x13, 0xaf],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [0x55, 0x0, 0xbc],
                's': [0x2, 0x49, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4f, 0x47, 0xbc],
                's': [0xa, 0x2, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x46, 0x1f2],
                's': [0xa, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x45, 0xbc],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x1b, 0x0, 0x14c],
                's': [0x2, 0x49, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x15, 0x47, 0x14c],
                's': [0xa, 0x2, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x46, 0x14c],
                's': [0xa, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x45, 0x14c],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x9, 0x0, -0x68],
                's': [0x2, 0x49, 0x2],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9, 0x47, -0x63],
                's': [0x2, 0x2, 0x8],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9, 0x45, -0x60],
                's': [0x2, 0x1, 0x8],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x9, 0x46, -0x60],
                's': [0x3, 0x2, 0x9],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x117, 0xf, 0xb8],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x141, 0xb, -0x84],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [0xe6, 0x2, 0x2],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf6, 0x2, 0x3e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf6, 0x26, 0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xbe, 0x26, 0x4c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7e, 0x26, 0x24],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xab, 0x26, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7e, 0x2, -0x3a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x37, 0x2, -0x1],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x54, 0x26, 0x38],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x4c, 0x26, 0x38],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x60, 0x26, 0x38],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x72, 0x27, 0x1d],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x51, 0x27, 0x2f],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0xb1b1b1,
                't': 0x5
            }, {
                'p': [-0x90, 0x27, -0x39],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x6d, 0x3, -0x35],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0xaaaaaa,
                't': 0x5
            }, {
                'p': [0x3c, 0x2, -0x3e],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0x8, 0x2, 0xb2],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [-0x78, 0x26, 0x1c],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x43, 0x27, -0x3b],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.05, -3.14],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x78, 0x28, 0x1c],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x35, 0x26, 0x37],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x35, 0x28, 0x37],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x50, 0x26, -0x3e],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x50, 0x28, -0x3e],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x8a, 0x26, -0xb],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x8a, 0x28, -0xb],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x8e, 0x27, -0x5],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [3.14, -1.04, 3.14],
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x59, 0x26, -0x3a],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0x46, 0x3, 0x6c],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.05, -3.14],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x56, 0x2, 0x42],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x56, 0x4, 0x42],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x6a, 0x3, 0x7f],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.05, -3.14],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x67, 0x3, 0x77],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0],
                'c': 0xa7a7a7,
                't': 0x5
            }, {
                'p': [-0x5c, 0x4, 0x3a],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x5c, 0x2, 0x3a],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xad, 0x2, -0x14],
                's': [0x1, 0x8, 0x7],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xc3, 0x2, -0x14],
                's': [0x1, 0x8, 0x7],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xb8, 0x9, -0x14],
                's': [0xb, 0x1, 0x4],
                'pe': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [0xb8, 0x8, -0x14],
                's': [0x15, 0x1, 0x6],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xb8, 0xa, -0x14],
                's': [0x2, 0x1, 0x1],
                'pe': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [0xb8, 0xb, -0x14],
                's': [0x16, 0xb, 0x1],
                'pe': 0x1,
                'c': 0x343434,
                't': 0x5
            }, {
                'p': [0xb8, 0xc, -0x13],
                's': [0x14, 0x9, 0x1],
                'pe': 0x1,
                'c': 0x343434,
                'e': 0xffffff,
                't': 0x5
            }, {
                'p': [0xa4, 0x3, -0xd],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xeb, 0x3, 0x30],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0x8f, 0x2, 0x54],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x8f, 0x2, 0x50],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xe1, 0x3, 0x44],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0x102, 0x1e, -0x64],
                's': [0x8, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x105, 0x1c, -0x64],
                's': [0x5, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x105, 0x1b, -0x64],
                's': [0x4, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x98, 0x1b, 0x94],
                's': [0x5, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x96, 0x1d, 0x94],
                's': [0x6, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x98, 0x1a, 0x94],
                's': [0x4, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xf2, 0x1a, 0x49],
                's': [0x4, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xf0, 0x18, 0x49],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xf0, 0x17, 0x49],
                's': [0x3, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xea, 0x16, -0x80],
                's': [0x1, 0x1, 0x4],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xea, 0x14, -0x7e],
                's': [0x3, 0x2, 0x4],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xea, 0x13, -0x7e],
                's': [0x2, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x132, 0x41, 0x3f],
                's': [0x8, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x135, 0x3f, 0x3f],
                's': [0x5, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x135, 0x3e, 0x3f],
                's': [0x4, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xc6, 0x0, 0xf2],
                's': [0x7b, 0x2a, 0x78],
                'c': 0x587fc8,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xc6, 0x2a, 0xf2],
                's': [0x82, 0x2, 0x80],
                'c': 0x828282,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xa7, 0x0, 0x137],
                's': [0x1e, 0x3d, 0x12],
                'c': 0x707070,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x6, 0xba],
                's': [0x17, 0x1b, 0x17],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x14b, 0xa, 0xcd],
                's': [0x1f, 0x1e, 0x1e],
                'l': 0x1,
                'c': 0x739b3b,
                't': 0x5
            }, {
                'p': [-0x79, 0x0, 0x142],
                's': [0x7b, 0x3c, 0x78],
                'c': 0xc5a15e,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x79, 0x3c, 0x142],
                's': [0x82, 0x2, 0x7e],
                'c': 0x696969,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x3a, 0x23, 0x164],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3a, 0x24, 0x164],
                's': [0x1, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x24, 0x16a],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x24, 0x15e],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x30, 0x164],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3b, 0x24, 0x164],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x70, 0x23, 0x105],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x70, 0x24, 0x106],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x6a, 0x24, 0x106],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x76, 0x24, 0x106],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x70, 0x30, 0x106],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x70, 0x24, 0x106],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x4d, 0x31, -0x83],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x4d, 0x32, -0x84],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x47, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x53, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x4d, 0x3e, -0x84],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x4d, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5f, 0x2f, -0xa3],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5e, 0x30, -0xa3],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x5d, 0x30, -0x9d],
                's': [0x4, 0xd, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5e, 0x3c, -0xa3],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5d, 0x30, -0xa9],
                's': [0x4, 0xd, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x5d, 0x30, -0xa3],
                's': [0x4, 0xd, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x20, 0x0, -0x6d],
                's': [0x17, 0x2, 0x6],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x71, -0x1, 0x12a],
                's': [0x4, 0x1c, 0x4],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x72, 0x16, 0x12a],
                's': [0x1a, 0x1c, 0x1c],
                'c': 0x4f6b27,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x79, 0x0, 0x142],
                's': [0x87, 0x8, 0x85],
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x7c, 0xb, -0xc6],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0x1a2, 0xf, -0xb7],
                's': [0x1a, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x6e9636,
                't': 0x5
            }, {
                'p': [0xa3, 0x2, 0x1a6],
                's': [0x71, 0x4e, 0x74],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xa5, 0x0, 0x1a3],
                's': [0x86, 0x8, 0x7e],
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x55, 0x0, 0x1f2],
                's': [0x2, 0x49, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4f, 0x47, 0x1f2],
                's': [0xa, 0x2, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x46, 0xbc],
                's': [0xa, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x4b, 0x45, 0x1f2],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xa3, 0x50, 0x1a6],
                's': [0x7b, 0x3, 0x7d],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x6a, 0x36, 0x183],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x69, 0x35, 0x183],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x69, 0x42, 0x183],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x189],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x17d],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x183],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1c4],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x69, 0x35, 0x1c4],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x69, 0x42, 0x1c4],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1be],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1ca],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x6a, 0x36, 0x1c4],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xfd, -0x1, 0x178],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xfd, 0x16, 0x178],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0xe0, 0x13, 0xf8],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0xe0, -0x1, 0xf8],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x59, 0x0, 0x1d6],
                's': [0x68, 0x87, 0x74],
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x1e, -0x1, 0x188],
                's': [0x4, 0x1f, 0x4],
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x1e, 0x17, 0x188],
                's': [0x1b, 0x1c, 0x18],
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x59, 0x87, 0x1d6],
                's': [0x6e, 0x3, 0x7a],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x59, 0x41, 0x1d6],
                's': [0x6f, 0x5, 0x7c],
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x1b, 0x0, 0x28b],
                's': [0x2, 0x49, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x15, 0x47, 0x28b],
                's': [0xa, 0x2, 0x2],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x46, 0x28b],
                's': [0xa, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x11, 0x45, 0x28b],
                's': [0x9, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x6b, -0x1, 0x1f8],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x6b, 0x15, 0x1f8],
                's': [0x1b, 0x1c, 0x18],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x9c, 0x0, 0x26d],
                's': [0x7b, 0x54, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [-0x61, 0x0, 0x2ae],
                's': [0x7b, 0x34, 0x78],
                'l': 0x1,
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0x61, 0x34, 0x2ae],
                's': [0x83, 0x4, 0x84],
                'l': 0x1,
                'c': 0x575757,
                't': 0x5
            }, {
                'p': [0x9c, 0x54, 0x26d],
                's': [0x83, 0x5, 0x84],
                'l': 0x1,
                'c': 0x575757,
                't': 0x5
            }, {
                'p': [0x1e9, 0x16, 0x13],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1a8, 0x12, 0x65],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1ab, 0xf, 0x1a],
                's': [0x1b, 0x1e, 0x1e],
                'l': 0x1,
                'c': 0x739b3b,
                't': 0x5
            }, {
                'p': [0x183, 0xd, 0xbb],
                's': [0x17, 0x1b, 0x17],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x1ca, 0x12, 0x45],
                's': [0x17, 0x18, 0x1b],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x2d7, 0x0, -0x29],
                's': [0x68, 0x4a, 0x4f],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2af, 0x4a, -0x29],
                's': [0x18, 0x30, 0x1a],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2d7, 0x4a, -0x29],
                's': [0x69, 0x6, 0x4c],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2af, 0x79, -0x29],
                's': [0x1f, 0x6, 0x20],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2af, 0x7f, -0x29],
                's': [0x16, 0xd, 0x13],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2d7, 0x50, -0x29],
                's': [0x69, 0x6, 0x36],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2d7, 0x54, -0x3d],
                's': [0x73, 0x6, 0x35],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2a9, 0x9a, -0x29],
                's': [0x2, 0x19, 0x2],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2a9, 0xab, -0x29],
                's': [0x2, 0x2, 0xe],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2af, 0x7c, -0x1e],
                's': [0x16, 0x21, 0xb],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2af, 0x7c, -0x34],
                's': [0x16, 0x21, 0xb],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2d7, 0x54, -0x16],
                's': [0x73, 0x6, 0x33],
                'l': 0x1,
                'r': [0.53, 0x0, 0x0],
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2d7, 0x50, -0x29],
                's': [0x69, 0xc, 0x22],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2a2, 0x0, -0x29],
                's': [0x2, 0x39, 0x20],
                'l': 0x1,
                'c': 0x786452,
                't': 0x5
            }, {
                'p': [0x2b4, 0x10, -0x6a],
                's': [0x1a, 0x1f, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2b3, -0x1, -0x6a],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x288, 0x11, 0x8],
                's': [0x1a, 0x22, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x288, -0x1, 0x9],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1ca, 0x11, -0x8c],
                's': [0x1a, 0x1f, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x26d, 0x12, -0x9a],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x26d, -0x1, -0x9a],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xd0, 0x0, -0x178],
                's': [0x79, 0x45, 0x53],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x2a2, 0x6c, -0x29],
                's': [0x1, 0x9, 0x9],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x2a1, 0x71, -0x29],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'c': 0x2d2d2d,
                't': 0x5
            }, {
                'p': [0x2a1, 0x71, -0x29],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'r': [2.09, 0x0, 0x0],
                'c': 0x2d2d2d,
                't': 0x5
            }, {
                'p': [0x2a2, 0x40, -0x29],
                's': [0x2, 0x13, 0x4],
                'l': 0x1,
                'c': 0x202020,
                't': 0x5
            }, {
                'p': [0x2f0, 0x12, 0xa7],
                's': [0x27, 0x18, 0x49e],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x263, 0x12, -0x191],
                's': [0x101, 0x1f, 0x1b],
                'l': 0x1,
                'c': 0x5c7a34,
                't': 0x5
            }, {
                'p': [0x250, 0x1f, -0x18b],
                's': [0x26, 0x22, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2e1, 0xf, -0x17f],
                's': [0x2f, 0x24, 0x31],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, -0xc8],
                's': [0x26, 0x1c, 0x26],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, -0x124],
                's': [0x26, 0x21, 0x26],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ec, 0x0, -0x8e],
                's': [0x4, 0x17, 0x84],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x2f6, 0x0, -0x12a],
                's': [0x4, 0x17, 0xdb],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x2df, -0x1, -0x11f],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1b, 0x0, 0xac],
                's': [0x5e2, 0x0, 0x4bc],
                'i': 0x4,
                'c': '#728447',
                't': 0x5
            }, {
                'p': [0x280, 0x0, -0x195],
                's': [0x133, 0x17, 0x5],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x21e, -0x1, -0x187],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x262, 0x12, -0xeb],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x262, -0x1, -0xeb],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1cc, -0x1, -0x144],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1cc, 0x12, -0x144],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ec, 0x0, 0x14b],
                's': [0x4, 0x17, 0x354],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1f5, 0x11, -0x71],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1cb, 0x9, -0x66],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1c3, 0x16, 0x5d],
                's': [0x1a, 0x18, 0x19],
                'l': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x1ab, 0xa, 0x3c],
                's': [0x1a, 0x1c, 0x1d],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1a8, 0xf, 0x87],
                's': [0x1e, 0x1c, 0x1b],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x1f5, 0x10, -0x8],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x4b662d,
                't': 0x5
            }, {
                'p': [0x212, 0x9, -0x34],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x253, 0x9, 0x6b],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1a2, 0xd, 0xb7],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1dd, 0x14, 0xa6],
                's': [0x1b, 0x1e, 0x1e],
                'l': 0x1,
                'c': 0x739b3b,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, 0x4d],
                's': [0x26, 0x1c, 0x2c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x16, 0x8c],
                's': [0x26, 0x1d, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x1b7, 0x8, 0x2e],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x2ea, 0x17, 0xfe],
                's': [0x26, 0x1c, 0x22],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x2ea, 0x12, 0x15d],
                's': [0x26, 0x1d, 0x4a],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1c2, 0xe, -0xb1],
                's': [0x19, 0x1e, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0xa6, 0x0, -0x1ad],
                's': [0x6fa, 0x17, 0x5],
                'l': 0x1,
                'c': 0x5a4b3b,
                't': 0x5
            }, {
                'p': [-0x51, 0x13, -0x1a2],
                's': [0x4d1, 0x1f, 0x1b],
                'l': 0x1,
                'c': 0x5c7a34,
                't': 0x5
            }, {
                'p': [0x1b4, 0x10, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x13f, 0x11, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x1b5, -0x1, -0x191],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x13e, -0x1, -0x191],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x123, -0x1, -0x19c],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x173, -0x1, -0x19c],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x178, 0x1f, -0x1b7],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x123, -0x1, -0xea],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x123, 0x8, -0xed],
                's': [0x1f, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0xd0, 0x45, -0x178],
                's': [0x80, 0x3, 0x59],
                'l': 0x1,
                'c': 0x616161,
                't': 0x5
            }, {
                'p': [0x18f, -0x1, 0x2d],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x198, -0x1, -0x19f],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xf2, 0x2f, -0x14e],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xad, 0x2f, -0x14e],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xad, 0x2e, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xad, 0x3b, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf2, 0x3b, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf2, 0x2e, -0x14d],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xa7, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xb3, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xec, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf8, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xf2, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xad, 0x2f, -0x14e],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x18, 0x70, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x42, 0x1d6],
                's': [0xe, 0x39, 0x3],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x1e, 0x70, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x74, 0x1d4],
                's': [0x4, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x18, 0x65, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1e, 0x65, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x65, 0x1d4],
                's': [0x4, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x6c, 0x1d4],
                's': [0x4, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x5a, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x61, 0x1d4],
                's': [0x8, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x19, 0x4f, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x56, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x4f, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1b, 0x52, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x19, 0x44, 0x1d4],
                's': [0x2, 0x9, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x1c, 0x44, 0x1d4],
                's': [0x6, 0x2, 0x1],
                'l': 0x1,
                'c': 0x575757,
                'e': 0xff0000,
                't': 0x5
            }, {
                'p': [-0x25, 0x6c, 0x1d6],
                's': [0x6, 0x3, 0x3],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [-0x25, 0x4d, 0x1d6],
                's': [0x6, 0x3, 0x3],
                'l': 0x1,
                'c': 0x5a5a5a,
                't': 0x5
            }, {
                'p': [0x41, 0x1, 0x28e],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x20, 0x0, 0x32e],
                's': [0x4f, 0x87, 0x74],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x20, 0x87, 0x32e],
                's': [0x57, 0x3, 0x7c],
                'l': 0x1,
                'c': 0x5c5c5c,
                't': 0x5
            }, {
                'p': [0x58, -0x1, 0x2c5],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x5a, 0x11, 0x2c4],
                's': [0x1b, 0x1c, 0x18],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x21, -0x1, 0x302],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x22, 0x10, 0x302],
                's': [0x1b, 0x1c, 0x18],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [0x73, -0x2, 0x3be],
                's': [0x71, 0x41, 0x74],
                'l': 0x1,
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x73, 0x3f, 0x3be],
                's': [0x7c, 0x5, 0x7e],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x5
            }, {
                'p': [-0x3f, -0x12, 0x3a0],
                's': [0x7b, 0x70, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [-0x3f, 0x5d, 0x3a0],
                's': [0x83, 0x4, 0x7f],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x9b, -0x4b, 0x4e3],
                's': [0x4f, 0x121, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x97, -0x1f, 0x460],
                's': [0x6c, 0x8e, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x134, 0x0, 0x460],
                's': [0x4f, 0xdc, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x10d, -0x1f, 0x3f0],
                's': [0x6c, 0x8e, 0x71],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x1b5, 0x0, 0x2eb],
                's': [0x2a5, 0x17, 0x5],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x261, 0x15, 0x2ef],
                's': [0x13b, 0x18, 0x2c],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x10d, 0x15, 0x2ef],
                's': [0x176, 0x1b, 0x35],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x20d, 0x14, 0x2e8],
                's': [0x26, 0x1d, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x2e8, 0x12, 0x2e3],
                's': [0x2b, 0x23, 0x2e],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x14d, 0x16, 0x2e7],
                's': [0x26, 0x20, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x27c, 0x14, 0x2e8],
                's': [0x26, 0x1d, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x2ea, 0x17, 0x22d],
                's': [0x26, 0x1c, 0x22],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x1bb, 0x18, 0x102],
                's': [0x17, 0x18, 0x17],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [0x167, 0xb, 0xc5],
                's': [0x18, 0x18, 0x1e],
                'l': 0x1,
                'c': 0x618234,
                't': 0x5
            }, {
                'p': [0x139, 0xd, 0xf5],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0x171, 0x3c, 0x143],
                's': [0x84, 0x3, 0x82],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x171, -0x4, 0x143],
                's': [0x7b, 0x40, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [0xfc, 0xc, -0xd1],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4b612b,
                't': 0x5
            }, {
                'p': [0xd0, -0x1, -0x172],
                's': [0x89, 0xa, 0x59],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x175, 0x12, -0x103],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0xf7, 0x18, 0x2e7],
                's': [0x26, 0x20, 0x29],
                'l': 0x1,
                'c': 0x648930,
                't': 0x5
            }, {
                'p': [0x23b, -0x39, 0x4ee],
                's': [0x4f, 0xdc, 0x3d],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x233, 0xd, 0x35],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x1b7, 0x5, 0xa],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x120, 0x9, -0xb9],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x151, 0xe, -0xb7],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x668c3c,
                't': 0x5
            }, {
                'p': [0xa4, 0x6, -0xdd],
                's': [0x19, 0x1e, 0x19],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0xd5, 0xc, -0xfa],
                's': [0x15, 0x19, 0x15],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0x170, 0xf, -0xb7],
                's': [0x1a, 0x1b, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x188, 0xb, -0xc2],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x567533,
                't': 0x5
            }, {
                'p': [0x13c, 0x5, -0xcb],
                's': [0x19, 0x1a, 0x19],
                'l': 0x1,
                'c': 0x567533,
                't': 0x5
            }, {
                'p': [0x1b7, 0x8, 0x53],
                's': [0x1d, 0x19, 0x1d],
                'l': 0x1,
                'c': 0x577832,
                't': 0x5
            }, {
                'p': [0xd4, 0x12, -0x13f],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x33, 0x1f, -0x1b7],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x6f, 0x11, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x19, -0x1, -0x19c],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x6f, -0x1, -0x191],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x49, -0x1, -0x197],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x5c, 0x11, -0x197],
                's': [0x26, 0x25, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xaf, 0x1b, -0x1ab],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xaf, 0x1b, -0x1ab],
                's': [0x26, 0x21, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x5a, -0x1, -0x190],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xae, -0x1, -0x1a2],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x43, 0x16, -0x112],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x42, -0x1, -0x111],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xc, 0x32, -0x84],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xc, 0x31, -0x83],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xc, 0x3e, -0x84],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x12, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x6, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xc, 0x32, -0x84],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x3f, 0xa, -0xb5],
                's': [0x19, 0x1e, 0x19],
                'l': 0x1,
                'c': 0x688c40,
                't': 0x5
            }, {
                'p': [0x20, 0x1a, -0x7e],
                's': [0x10, 0xd, 0x16],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x7d, -0x1, 0x2],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x80, 0x0, 0x59],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x58, -0x1, 0x52],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x8e, -0x1, 0x80],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x25, -0x1, -0x37],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xef, 0x3, -0x42],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0x26, 0x3, 0x9d],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0xf7, -0x1, -0x19e],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x155, -0x1, -0x19d],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xfc, 0xf, -0x1ab],
                's': [0x33, 0x3a, 0x1c],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x174, 0xf, -0x19b],
                's': [0x30, 0x29, 0x23],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xd4, 0xa, -0xb1],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x9c, -0x1, 0xeb],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x9d, 0xf, 0xeb],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [0xa5, -0x1, -0xd5],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xcb, -0x1, -0xba],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x7c, -0x1, -0xbc],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x11d, -0x1, -0xb9],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xfa, -0x1, -0xca],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x7d, -0x1, -0x69],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x106, -0x1, -0x11],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xf5, -0x1, 0xbe],
                's': [0x4, 0x2, 0x6],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x188, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x109, -0x1, -0x41],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x6d, -0x1, -0x92],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xd5, -0x1, -0x13e],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xd5, -0x1, -0xf8],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x37, -0x1, -0x197],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x18, 0x1, 0x18b],
                's': [0x33, 0xf, 0x14],
                'i': 0x7,
                'l': 0x1,
                'r': [3.14, -1.22, 3.14]
            }, {
                'p': [-0x103, 0x11, 0xe7],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0xcb, 0x12, 0x123],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0xcb, -0x1, 0x124],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x9b, -0x4b, 0x4e3],
                's': [0x4, 0x155, 0x4],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x134, 0x55, 0x460],
                's': [0x4, 0xbd, 0x2],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x66, -0x1, -0xb4],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x40, -0x1, -0xb4],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x11d, -0x1, -0x4e],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x27, -0x1, -0x8d],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x15e, -0x1, 0x5],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x1ab, -0x1, -0x88],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x147, -0x1, 0x9a],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xc8, -0x1, 0x79],
                's': [0x4, 0x2, 0x4],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xb, 0x0, -0x4b],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x85, 0x0, 0xf],
                's': [0x1, 0xf, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x85, 0x0, 0xb],
                's': [0x1, 0xf, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x2f, 0x2, 0x16],
                's': [0x4, 0x24, 0x4c],
                'c': 0x587fc8,
                't': 0x5
            }, {
                'p': [-0xfd, 0x10, -0xb0],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0xb6, 0x0, -0xf5],
                's': [0x79, 0x33, 0x53],
                'c': 0xcfcfcf,
                't': 0x5
            }, {
                'p': [-0xd1, -0x1, -0xb0],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0xb7, 0x42, -0x3a],
                's': [0x4, 0x1, 0x1],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xb9, 0x40, -0x3a],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xb9, 0x3f, -0x3a],
                's': [0x3, 0x1, 0x2],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xb6, 0x33, -0xf5],
                's': [0x82, 0x3, 0x5f],
                'c': 0x6b6b6b,
                't': 0x5
            }, {
                'p': [-0xad, 0x1f, -0xcb],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0xb3, 0x1f, -0xcb],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xa7, 0x1f, -0xcb],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xad, 0x1f, -0xcb],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xad, 0x1e, -0xcb],
                's': [0xe, 0x1, 0x4],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0xad, 0x2b, -0xcb],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x188, 0x0, 0x2eb],
                's': [0x2a5, 0x17, 0x5],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x181, 0x15, 0x2ef],
                's': [0x2b3, 0x1b, 0x35],
                'l': 0x1,
                'c': 0x486126,
                't': 0x5
            }, {
                'p': [-0x195, 0x0, -0x33],
                's': [0x7b, 0x3c, 0x78],
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [-0x193, 0x3c, -0x33],
                's': [0x82, 0x2, 0x82],
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [-0x13c, 0xf, 0xb],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0x140, -0x1, 0xad],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x2c3, 0x13, 0xa5],
                's': [0x2c, 0x1f, 0x514],
                'l': 0x1,
                'c': 0x5c7a34,
                't': 0x5
            }, {
                'p': [-0x2b6, 0x0, 0xb7],
                's': [0x1, 0x17, 0x4b8],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x157, 0x28, -0x53],
                's': [0x1, 0xc, 0xb],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x158, 0x34, -0x53],
                's': [0x4, 0x1, 0xd],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x157, 0x27, -0x53],
                's': [0x4, 0x1, 0xe],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x158, 0x28, -0x59],
                's': [0x4, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x158, 0x28, -0x4d],
                's': [0x4, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x158, 0x28, -0x53],
                's': [0x4, 0xc, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x13b, 0x5, -0x2d],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x678e30,
                't': 0x5
            }, {
                'p': [-0x173, -0x19, 0x10],
                's': [0x1b, 0x69, 0xf],
                'c': 0x646464,
                't': 0x5
            }, {
                'p': [-0x136, 0x10, -0xa6],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x136, -0x1, -0xa7],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x122, 0xb, -0xd5],
                's': [0x1a, 0x1e, 0x1c],
                'l': 0x1,
                'c': 0x75a236,
                't': 0x5
            }, {
                'p': [-0x10e, 0x10, -0x112],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x10d, -0x1, -0x10f],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x14e, 0x10, -0xd8],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x148, -0x1, -0xdb],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x2a, 0x0, 0x19],
                's': [0x6, 0x9, 0x4e],
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x11, 0x2, -0x7e],
                's': [0xe, 0x25, 0x16],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x20, 0x2, -0x77],
                's': [0x10, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x2f, 0x2, -0x7e],
                's': [0xe, 0x25, 0x16],
                'c': 0xc5b960,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0xff, -0x1, 0xe6],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x113, -0x1, 0xb7],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x20, 0x2a, -0x84],
                's': [0x1d, 0x12, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x11, 0x2a, -0x84],
                's': [0x1, 0x12, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x20, 0x2a, -0x84],
                's': [0x1, 0x12, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x20, 0x3c, -0x84],
                's': [0x1f, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0xb, 0x2a, -0x74],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x2a, -0x74],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x2a, -0x83],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0xb, 0x2a, -0x83],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0xb, 0x2a, -0x7b],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x2a, -0x7c],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x2e, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x12, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x1b, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x24, 0x2a, -0x74],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x20, 0x31, -0x74],
                's': [0x2a, 0x1, 0x2],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0x35, 0x31, -0x7c],
                's': [0x2, 0x1, 0xe],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [0xb, 0x31, -0x7b],
                's': [0x2, 0x1, 0xe],
                'l': 0x1,
                'c': 0x505050,
                't': 0x5
            }, {
                'p': [-0xb7, 0x24, -0x3a],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x132, 0x24, 0x40],
                's': [0x4, 0x2, 0x14],
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x2f, 0x2a, -0x84],
                's': [0x1, 0x12, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x154, -0x1, -0xb6],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x171, -0x1, -0xb6],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x1a3, -0x1, -0xb7],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x187, -0x1, -0xc1],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x46, 0x2, 0xa0],
                's': [0x3, 0x6, 0x6],
                'l': 0x1,
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [-0x46, 0x7, 0xa2],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': 0x878787,
                't': 0x5
            }, {
                'p': [0x62, 0x2, -0xd4],
                's': [0xe, 0x64, 0x19],
                'c': 0x707070,
                't': 0xb
            }, {
                'p': [-0x18d, 0x10, -0x80],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x185, -0x1, -0x80],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x2b1, 0xf, -0x133],
                's': [0x30, 0x29, 0x3a],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x2b1, 0x11, -0xd0],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x23e, 0x11, -0x19d],
                's': [0x30, 0x29, 0x23],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x194, 0x11, -0xb0],
                's': [0x1a, 0x1f, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [-0x195, -0x1, -0xb1],
                's': [0x4, 0x22, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x1cc, 0xf, -0x19b],
                's': [0x24, 0x2b, 0x23],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [0x171, 0x27, 0x107],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x171, 0x26, 0x106],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x171, 0x33, 0x107],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x177, 0x27, 0x107],
                's': [0x1, 0xc, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x16b, 0x27, 0x107],
                's': [0x1, 0xc, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x171, 0x27, 0x107],
                's': [0x1, 0xc, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x174, 0x0, 0x62],
                's': [0x68, 0x6a, 0x74],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [-0x174, 0x69, 0x62],
                's': [0x73, 0x3, 0x7e],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x16e, 0x11, 0x2e1],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x1e9, 0x11, 0x2e1],
                's': [0x42, 0x24, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0xcd, 0x11, 0x2e1],
                's': [0x42, 0x24, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x270, 0x11, 0x2e1],
                's': [0x42, 0x27, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x2b1, 0x11, 0xca],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x2b1, 0x11, 0x13e],
                's': [0x30, 0x29, 0x29],
                'l': 0x1,
                'c': 0x56732d,
                't': 0x5
            }, {
                'p': [-0x132, 0x17, 0xcd],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x132, -0x1, 0xcd],
                's': [0x4, 0x1f, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [-0x122, 0xc, 0xf3],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x84af48,
                't': 0x5
            }, {
                'p': [-0x120, -0x1, 0xf9],
                's': [0x4, 0x17, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0x7e, 0x0, 0x3c],
                's': [0x2, 0x25, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x7e, 0x0, 0x62],
                's': [0x2, 0x25, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xa1, -0x1, 0xcd],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x122, -0x1, -0x31],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xee, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xb6, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x128, -0x1, 0x9f],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x3f1, 0xa, 0x86],
                's': [0x41, 0x4c, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x3e3, 0x15, -0x182],
                's': [0x41, 0x35, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x22b, 0x15, -0x22f],
                's': [0x89, 0x36, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x39c, 0xa, 0x25e],
                's': [0x4a, 0x4a, 0x57],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [-0x121, -0x7, 0x135],
                's': [0x52, 0x6a, 0x56],
                'l': 0x1,
                'c': 0xa2a2a2,
                't': 0x5
            }, {
                'p': [0x351, -0x8, -0x208],
                's': [0x41, 0x54, 0x4c],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [0x295, -0x4, 0xa5],
                's': [0x7b, 0x40, 0x78],
                'l': 0x1,
                'c': 0xc5a15e,
                't': 0x5
            }, {
                'p': [0x295, 0x3c, 0xa5],
                's': [0x84, 0x4, 0x83],
                'l': 0x1,
                'c': 0x616161,
                't': 0x5
            }, {
                'p': [-0x121, 0x63, 0x135],
                's': [0x59, 0x4, 0x5d],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x159, 0x12, 0xf7],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x1af, 0xe, 0xa6],
                's': [0x1a, 0x1a, 0x1c],
                'l': 0x1,
                'c': 0x5e822b,
                't': 0x5
            }, {
                'p': [-0x10d, 0x4a, 0x10a],
                's': [0xb, 0xc, 0x1],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x10d, 0x49, 0x109],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x10d, 0x56, 0x10a],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x107, 0x4a, 0x10a],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x113, 0x4a, 0x10a],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x10d, 0x4a, 0x10a],
                's': [0x1, 0xc, 0x2],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x3e3, 0x11, -0x99],
                's': [0x41, 0x44, 0x2f],
                'l': 0x1,
                'c': 0x608230,
                't': 0x5
            }, {
                'p': [-0x88, 0x3, -0x50],
                's': [0x7, 0x20, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x82, 0x3, -0x50],
                's': [0x7, 0x1d, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x7c, 0x3, -0x50],
                's': [0x7, 0x1a, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x76, 0x3, -0x50],
                's': [0x7, 0x17, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x70, 0x3, -0x50],
                's': [0x7, 0x14, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x6a, 0x3, -0x50],
                's': [0x7, 0x11, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x64, 0x3, -0x50],
                's': [0x7, 0xe, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x5e, 0x3, -0x50],
                's': [0x7, 0xb, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x58, 0x3, -0x50],
                's': [0x7, 0x8, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x52, 0x3, -0x50],
                's': [0x7, 0x5, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x4c, 0x2, -0x50],
                's': [0x7, 0x3, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [-0x66, 0x2, -0x50],
                's': [0x48, 0x24, 0x18],
                'i': 0x9,
                'v': 0x1,
                't': 0x5,
                'd': 0x2
            }, {
                'p': [-0x7d, 0x3, 0x36],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 1.04, 0x0],
                'c': 0xaaaaaa,
                't': 0x5
            }, {
                'p': [0xfb, 0x3, 0x62],
                's': [0x7, 0x20, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xf4, 0x3, 0x62],
                's': [0x7, 0x1d, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xed, 0x3, 0x62],
                's': [0x7, 0x1a, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xe6, 0x3, 0x62],
                's': [0x7, 0x17, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xdf, 0x3, 0x62],
                's': [0x7, 0x14, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xd8, 0x3, 0x62],
                's': [0x7, 0x11, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xd1, 0x3, 0x62],
                's': [0x7, 0xe, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xca, 0x3, 0x62],
                's': [0x7, 0xb, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xc3, 0x3, 0x62],
                's': [0x7, 0x8, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xbc, 0x3, 0x62],
                's': [0x7, 0x5, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xb5, 0x2, 0x62],
                's': [0x7, 0x3, 0x17],
                'c': 0x7f7f7f,
                't': 0x5
            }, {
                'p': [0xd4, 0x2, 0x62],
                's': [0x54, 0x24, 0x18],
                'i': 0x9,
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x43],
                's': [0x1, 0x14, 0x17],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x7d],
                's': [0x1, 0x14, 0x17],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x13f, 0x47, 0x43],
                's': [0x3, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x5c, 0x43],
                's': [0x2, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x37],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x4f],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x43],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x13f, 0x47, 0x7d],
                's': [0x3, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x5c, 0x7d],
                's': [0x2, 0x1, 0x1b],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x89],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x71],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [-0x140, 0x48, 0x7d],
                's': [0x2, 0x14, 0x1],
                'l': 0x1,
                'c': 0x5f5f5f,
                't': 0x5
            }, {
                'p': [0x89, -0x1, -0x9c],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x77, 0x0, -0xf],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x2f, -0x1, 0x165],
                's': [0x26, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x74, -0x1, 0x113],
                's': [0x29, 0x18, 0x2],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x46, 0x2, 0x165],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [-0xc, 0x2, 0xf9],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [-0x31, -0x1, 0x109],
                's': [0x15, 0x18, 0x2],
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x1d, -0x1, 0x165],
                's': [0x4, 0x1a, 0x4],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x29, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x3a, 0x9, 0x171],
                's': [0x28, 0x3, 0x1],
                'l': 0x1,
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x29, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x4b, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x4b, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x3, 0x9, 0x171],
                's': [0x28, 0x3, 0x1],
                'l': 0x1,
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [-0xe, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x14, -0x1, 0x16d],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [-0xe, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x14, -0x1, 0x175],
                's': [0x3, 0xc, 0x1],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0xc8c8c8,
                't': 0x5
            }, {
                'p': [0x3a, 0x1, 0x17e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1f, 0x0, 0x171],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x5, 0x1, 0x179],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2f, 0x1, 0x17a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x22, 0x1, 0x170],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x59, 0x0, 0x175],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x49, 0x2, 0x196],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [3.14, -1.39, 3.14],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [0x4b, 0x2, 0x11a],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -1.4, 0x0],
                'c': 0x9d9d9d,
                't': 0x5
            }, {
                'p': [0x5a, 0x0, 0x10a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x64, -0x1, 0x15c],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0xa4, -0x1, 0x156],
                's': [0x2, 0x1b, 0x30],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x85, 0x0, 0x124],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x18, -0x1, 0x1ac],
                's': [0xa8, 0xd, 0x77],
                'v': 0x1,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x2f, -0x1, 0x16b],
                's': [0x25, 0xd, 0xe],
                'v': 0x1,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x14, 0x1, 0x174],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xbc, -0x1, 0x153],
                's': [0x4, 0x1c, 0x4],
                'l': 0x1,
                'c': 0x64523f,
                't': 0x5
            }, {
                'p': [0xbd, 0x16, 0x155],
                's': [0x1a, 0x1c, 0x1c],
                'l': 0x1,
                'c': 0x4f6b27,
                't': 0x5
            }, {
                'p': [0xdd, -0x1, 0x15f],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x121, -0x1, 0x16e],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'c': 0x6a933b,
                't': 0x5
            }, {
                'p': [0x71, 0x3, -0x25],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xa7, 0x3, -0x4b],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xa4, 0x27, -0xd],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xf9, 0x27, 0x2f],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0x8e, 0x2, 0x19],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xaf, 0x2, -0x1c],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0xaf, 0x4, -0x1c],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xf3, 0x2, 0x8],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x81, 0x2, 0xc],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x8b, 0x2, 0x4a],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0x8b, 0x2, 0x51],
                's': [0x1, 0x11, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x9e, 0x26, -0x16],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0x9e, 0x28, -0x16],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xca, 0x26, 0x4d],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xd1, 0x26, 0x4d],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x91, 0x2, -0x16],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0x91, 0x4, -0x16],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xbc, 0x8, 0x58],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0xbc, 0xa, 0x58],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x5d, 0xe, -0x46],
                's': [0x2, 0x4, 0x2],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [-0x5d, 0x10, -0x46],
                's': [0x1, 0x4, 0x1],
                'l': 0x1,
                'pe': 0x1,
                'c': 0x4f8444,
                't': 0x5
            }, {
                'p': [0x91, 0x27, 0x69],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [0x0, 1.39, 0x0],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [0xa8, 0x26, 0x6a],
                's': [0x4, 0x16, 0x2],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0x23, 0x1, 0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x17, 0x1, 0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1d, 0xd, 0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x5c, 0x20, -0x2],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x22, -0x2],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x1f, -0x2],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [-0x5c, 0x4a, -0x2],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x48, -0x2],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0x5c, 0x47, -0x2],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xb7, 0x4a, 0x27],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x48, 0x27],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x47, 0x27],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0xb7, 0x22, 0x27],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x110, 0x20, 0x27],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x1f, 0x27],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x110, 0x22, 0x27],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0xb7, 0x20, 0x27],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [0x110, 0x1f, 0x27],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x126, 0x2, 0x17],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x120, 0x3, 0x9],
                's': [0x4, 0x0, 0x5],
                'i': 0x4,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14],
                'c': 0x939393,
                't': 0x5
            }, {
                'p': [-0xa3, 0x20, -0x2],
                's': [0x7, 0x2, 0x7],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xa3, 0x22, -0x2],
                's': [0x3, 0x2, 0x3],
                'c': 0x898686,
                't': 0x5
            }, {
                'p': [-0xa3, 0x1f, -0x2],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'c': 0x0,
                'e': 0xffd87a,
                't': 0x5
            }, {
                'p': [0x1c, 0x1, 0x131],
                's': [0x48, 0x32, 0x3f],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x59, 0x26, -0x8],
                's': [0x3d, 0x26, 0x41],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xb8, 0x2, 0x25],
                's': [0x3d, 0x21, 0x3b],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x16f, 0x0, 0x20],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [-0xd7, 0x0, 0x23],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [-0x64, 0xe, 0x46],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x64, 0x2, 0x46],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0x23, -0x1, -0x12],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x23, -0x1, -0x1c],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x23, -0x1, -0x17],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x1d, -0x1, -0x1c],
                's': [0x5, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x1d, -0x1, -0x12],
                's': [0x5, 0x2, 0x4],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0x1d, -0x1, -0x17],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x7f, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x7f, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x7f, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x6d, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x79, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x73, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x67, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x79, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x6d, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x73, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x73, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x61, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x61, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5b, -0x1, 0x2c],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x55, -0x1, 0x28],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x55, -0x1, 0x30],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x67, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5b, -0x1, 0x31],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x5b, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [0x67, -0x1, 0x27],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': 0x707070,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0x8d],
                's': [0x4, 0x1a, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [-0xfb, -0x1, 0x76],
                's': [0x4, 0x1a, 0x4],
                'pe': 0x1,
                'c': 0x755f47,
                't': 0x5
            }, {
                'p': [0xdc, 0x52, 0x2b],
                's': [0xb2, 0x4, 0x98],
                'r': [0.09, 0x0, 0x0],
                'c': 0x505050,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x54, -0x1],
                's': [0x4, 0x3, 0x2e],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x57, -0xd],
                's': [0x4, 0x3, 0x16],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x12e, 0x26, 0x5b],
                's': [0x4, 0x26, 0x26],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x4c, 0x5b],
                's': [0x4, 0x3, 0x26],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x8a, 0x42, 0x51],
                's': [0x4, 0xf, 0x22],
                'c': 0xc54343,
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x8a, 0x57, -0xe],
                's': [0x4, 0x1, 0x4],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x38, 0x1, 0x73],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x38, 0x6, 0x6f],
                's': [0x1, 0x3, 0x1],
                'c': 0x878787,
                't': 0x5
            }, {
                'p': [0x38, 0x1, 0x6d],
                's': [0x3, 0x6, 0x6],
                'c': 0xc54343,
                't': 0x5
            }, {
                'p': [0x28, 0xa, 0x30],
                's': [0x18, 0x2, 0x64],
                'pe': 0x1,
                'c': 0x2c3f55,
                't': 0x5
            }, {
                'p': [0x28, 0x25, 0x30],
                's': [0x1c, 0x2, 0x64],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x26],
                's': [0x1b, 0x4, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x16],
                's': [0x1b, 0x4, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x22, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x22, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x33, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x2e, 0x1, 0x26],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x33, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x2e, 0x1, 0x16],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x28, 0xc, 0x61],
                's': [0x18, 0x19, 0x2],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x28, 0x6, 0x3b],
                's': [0x5, 0x4, 0x55],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x28, 0x6, -0x1],
                's': [0x18, 0x4, 0x3],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x2f, 0xc, -0x2],
                's': [0xc, 0x19, 0x2],
                'pe': 0x1,
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x1a, 0xc, 0x3],
                's': [0x2, 0x19, 0xc],
                'c': '#6b6b6b',
                't': 0x5
            }, {
                'p': [0x28, 0x5, -0x1],
                's': [0x1b, 0x1, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x6e],
                's': [0x1b, 0x4, 0x4],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x33, 0x1, 0x6e],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x1d, 0x1, 0x6e],
                's': [0x4, 0x8, 0x8],
                'c': 0x161616,
                't': 0x5
            }, {
                'p': [0x32, 0x7, -0x2],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': 0xff4b00,
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x1e, 0x7, -0x2],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#ff4b00',
                'e': 0xff0000,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x28, 0x5, 0x66],
                's': [0x18, 0x1c, 0x4],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x5, 0x76],
                's': [0x18, 0x18, 0x4],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x6, 0x6f],
                's': [0x11, 0x6, 0xe],
                'c': '#595959',
                't': 0x5
            }, {
                'p': [0x28, 0x5, 0x79],
                's': [0x19, 0x6, 0x3],
                'c': '#5c5c5c',
                't': 0x5
            }, {
                'p': [0x28, 0x11, 0x7a],
                's': [0x16, 0xa, 0x1],
                'l': 0x1,
                'c': '#22272d',
                't': 0x5
            }, {
                'p': [0x28, 0xb, 0x79],
                's': [0x18, 0x6, 0x2],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x11, 0x79],
                's': [0x18, 0xb, 0x2],
                'l': 0x1,
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x28, 0x11, 0x79],
                's': [0x18, 0xb, 0x2],
                'v': 0x1,
                'c': '#213041',
                't': 0x5
            }, {
                'p': [0x32, 0xc, 0x7a],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'e': 0xffd100,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x1e, 0xc, 0x7a],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'e': 0xffd100,
                'o': 0.8,
                't': 0x5
            }, {
                'p': [0x28, 0xc, 0x7a],
                's': [0xe, 0x4, 0x2],
                'c': '#6e6e6e',
                't': 0x5
            }, {
                'p': [0x28, 0x14, 0x76],
                's': [0x1c, 0x4, 0x1],
                'c': '#6e6e6e',
                't': 0x5
            }, {
                'p': [0x28, 0x3, 0x56],
                's': [0x16, 0x6, 0x16],
                'c': 0x827d7d,
                't': 0x5
            }, {
                'p': [0x1e, 0xc, 0x64],
                's': [0x1, 0x19, 0x1],
                'c': '#666666',
                'e': 0x181818,
                't': 0x5
            }, {
                'p': [0x32, 0xc, 0x64],
                's': [0x1, 0x19, 0x1],
                'c': '#666666',
                'e': 0x181818,
                't': 0x5
            }, {
                'p': [0x28, 0x8, 0x31],
                's': [0x1c, 0x2, 0x62],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x2c3f55,
                't': 0x5
            }, {
                'p': [0x28, 0x14, 0x71],
                's': [0x19, 0x8, 0x8],
                'c': '#22272d',
                't': 0x5
            }, {
                'p': [0x28, 0xc, 0x6f],
                's': [0x18, 0x12, 0xe],
                'c': '#bbbbbb',
                't': 0x5
            }, {
                'p': [0x2d, 0xc, 0x2e],
                's': [0x6, 0x2, 0x5c],
                'l': 0x1,
                'c': 0x6b5946,
                't': 0x2
            }, {
                'p': [0x2f, 0xc, -0x3],
                's': [0x4, 0x19, 0x2],
                'i': 0x3,
                't': 0x2,
                'd': 0x3
            }, {
                'p': [0xb, 0x1, 0x16],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [0x38, 0x1, -0xc],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [0x17, 0x1, -0xc],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [0x23, 0xc, 0x57],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x1b, 0xa, 0x4e],
                's': [0x2, 0x1b, 0x28],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x1b, 0xa, 0x13],
                's': [0x2, 0x1b, 0x2a],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x35, 0xa, 0x59],
                's': [0x2, 0x1b, 0x12],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x35, 0xa, 0x1e],
                's': [0x2, 0x1b, 0x40],
                'pe': 0x1,
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x35, 0x20, 0x47],
                's': [0x1, 0x5, 0x12],
                'c': '#ffffff',
                't': 0xa
            }, {
                'p': [0x1b, 0x20, 0x31],
                's': [0x1, 0x5, 0x12],
                'c': '#ffffff',
                't': 0xa
            }, {
                'p': [0x35, 0xa, 0x47],
                's': [0x2, 0x2, 0x12],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x1b, 0xa, 0x31],
                's': [0x2, 0x2, 0x12],
                'c': '#2c3f55',
                't': 0x5
            }, {
                'p': [0x12, 0x1, 0x4b],
                's': [0x6, 0x2, 0x5c],
                'c': 0x846c53,
                't': 0x2
            }, {
                'p': [0xb, 0x1, 0x4a],
                's': [0x6, 0x2, 0x5c],
                'c': 0x755f47,
                't': 0x2
            }, {
                'p': [0x4, 0x1, 0x4c],
                's': [0x6, 0x2, 0x5c],
                'c': 0x503f2e,
                't': 0x2
            }, {
                'p': [0x6, 0x3, 0x4b],
                's': [0x6, 0x2, 0x5c],
                'c': 0x755f47,
                't': 0x2
            }, {
                'p': [0xe, 0x3, 0x4c],
                's': [0x6, 0x2, 0x5c],
                'c': 0x755f47,
                't': 0x2
            }, {
                'p': [0xa, 0x5, 0x4c],
                's': [0x6, 0x2, 0x5c],
                'c': 0x6b5946,
                't': 0x2
            }, {
                'p': [0xb, 0x1, 0x7d],
                's': [0x4, 0x7, 0x4],
                'i': 0x10,
                'l': 0x1
            }, {
                'p': [-0x22, 0x0, 0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x25, 0x0, -0x3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x1a, 0x0, 0x25],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x1a, 0x0, -0x2c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x27, 0x0, -0x60],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0xe, 0x0, -0x69],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x5, 0x0, -0x66],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x6, 0x0, -0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x24, -0x1, -0x65],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x3c, 0x0, -0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x5a, 0x0, -0x80],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x63, 0x0, -0x88],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.79, 0x0],
                'c': '#d1f777'
            }, {
                'p': [0x6a, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x6a, 0x0, -0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x55, 0x0, -0x1d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x83, -0x1, -0x16],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x54, 0x0, 0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x83, 0x0, 0x1b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x53, 0x0, 0x3b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x56, 0x0, 0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x9e, 0x0, -0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x5a, 0x0, 0xa6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x57, 0x0, 0xee],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1b, 0x0, 0xed],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x21, 0x0, 0xca],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1f, 0x0, 0x95],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x19, 0x0, 0x7a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x45, 0x0, 0xae],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x60, 0x0, 0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x43, 0x0, 0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xaa, 0x0, 0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x93, 0x0, 0xae],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd8, 0x0, 0xb4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd8, 0x0, 0xac],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf7, 0x0, 0xc6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf7, 0x0, 0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb4, 0x0, 0x44],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x97, 0x0, 0x45],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x97, 0x0, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf3, 0x0, 0x32],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xf1, 0x0, 0x4f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd7, 0x0, -0x5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb8, 0x0, -0x2e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x101, 0x0, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xfe, 0x0, -0x80],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xda, 0x0, -0x58],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xc4, 0x0, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xcc, 0x0, -0x8f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x86, 0x0, -0x95],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x63, 0x0, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x9e, 0x0, -0x64],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x23, 0x0, -0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x41, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1c, 0x0, 0x134],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x67, 0x0, 0x117],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x6d, 0x0, 0x12e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x55, 0x0, 0x152],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x5e, 0x0, 0x16a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x90, 0x0, 0x161],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xa0, 0x0, 0x143],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1a, -0x1, 0x17d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x21, -0x1, 0x19d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x54, -0x1, 0x19e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x85, 0x0, 0x45],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x84, 0x0, 0x70],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x97, 0x0, 0x83],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xbd, 0x0, 0x84],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xe5, 0x0, 0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x10f, 0x0, 0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x11e, 0x0, 0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x14e, 0x0, 0x9c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x134, 0x0, 0x72],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x134, 0x0, 0x3b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x15d, 0x0, 0x26],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x173, 0x0, 0x87],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x18b, 0x0, 0x74],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x187, 0x0, 0x16],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x18c, 0x0, -0x1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x133, 0x0, -0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x128, 0x0, -0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x104, 0x0, -0x23],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x104, 0x0, -0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x18a, 0x0, -0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x194, 0x0, -0x31],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x1ad, 0x0, -0x3c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x195, 0x0, -0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x124, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xce, 0x0, -0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xb1, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xb1, 0x0, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xa, 0x0, -0x6c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x40, 0x0, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [-0x11f, 0x0, -0x36],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x6c, -0x1, 0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x63, -0x1, 0x98],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x7c, 0x0, 0x97],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x6e, 0x0, 0x90],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x5a, 0x0, 0xb3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x58, 0x0, 0x108],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x1f, 0x0, 0x109],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x20, 0x0, 0xff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x21, 0x0, 0xdf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x69, -0x1, 0x52],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x6d, 0x0, 0xa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x5f, 0x0, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x4a, -0x1, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x60, 0x0, -0x67],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'c': '#d1f777'
            }, {
                'p': [0x88, 0x0, -0x94],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x63, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.61, 0x0],
                'c': '#d1f777'
            }, {
                'p': [0xaa, 0x0, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xd3, 0x0, -0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0xf3, 0x0, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x106, 0x0, -0x98],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x134, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x11f, 0x0, -0x59],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x145, 0x0, -0x24],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x14d, 0x0, -0x69],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x133, 0x0, -0x40],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x167, 0x0, -0x4c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x16c, 0x0, -0x1e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x178, 0x0, 0x37],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x166, 0x0, 0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x182, 0x0, 0x9b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x16b, 0x0, -0x76],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x17a, 0x0, -0x94],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x1a7, 0x0, -0x94],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x1ad, 0x0, -0x69],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x195, 0x0, -0x62],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x188, 0x0, -0x79],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x187, 0x0, -0x63],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x187, 0x0, -0x4f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x154, 0x0, 0x0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x153, 0x0, 0x37],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [0x152, 0x0, 0x56],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x83, 0x0, 0xc8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd5, 0x0, 0xc8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xab, 0x0, 0xac],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xca, 0x0, 0x83],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb4, 0x0, 0x6b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd3, 0x0, 0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd7, 0x0, 0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x11c, 0x0, 0x66],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x104, 0x0, 0x66],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x120, 0x0, 0x8e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x121, 0x0, 0xbf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x108, 0x0, 0xca],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xfe, 0x0, 0xb3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x102, 0x0, 0x99],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb7, 0x2, 0x2e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xb9, 0x0, 0x6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x100, 0x0, 0xf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xff, 0x0, 0x26],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x120, 0x0, 0x24],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x11f, 0x0, 0x1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x11f, 0x0, -0x1e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x102, 0x0, -0x51],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xea, 0x0, -0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xd0, 0x0, -0x2c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xc5, 0x0, -0x58],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x10c, 0x0, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x116, 0x0, -0x8b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0xa5, 0x0, -0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x5b, 0x0, -0x86],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x2f, 0x0, 0x15e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1
            }, {
                'p': [-0x71, 0x55, -0x10],
                's': [0x89, 0xa, 0x9f],
                'i': 0xc,
                'l': 0x1
            }, {
                'p': [0xdb, 0x55, 0x2b],
                's': [0xaa, 0xa, 0x92],
                'i': 0xc,
                'l': 0x1
            }, {
                'p': [0xd0, 0x32, -0x4e],
                's': [0x5d, 0xa, 0x57],
                'i': 0xc,
                'l': 0x1
            }, {
                'p': [-0x69, 0x32, 0x77],
                's': [0x57, 0xa, 0x63],
                'i': 0xc,
                'l': 0x1
            }]
        }, {
            'name': 'Sandstorm',
            'ambInd': 0x3,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x0,
            'skyDomeCol0': '#7bd7ff',
            'skyDomeCol1': '#f7d4b4',
            'skyDomeCol2': '#dce8ed',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0xa29290,
            'light': 0xffffff,
            'sky': 0xdce8ed,
            'fog': 0xbb9999,
            'fogD': 633.4396002067896,
            'dthY': -0x64,
            'modes': [0x0],
            'camPos': [-0x7c, 0x3e, -0x10d],
            'spawns': [[0x0, 0xd, -0x3, 0x0], [-0x4d, 0x21, -0x15b, 0x0, 0x1], [0x116, 0x21, 0x7a, 0x0, 0x2], [-0x69, 0x30, 0x56, 0x0, 0x1], [0xf1, 0x21, -0x142, 0x0, 0x1], [-0x2a, 0x30, 0x30, 0x0], [-0x27, 0x21, -0xd2, 0x0, 0x3]],
            'ambO': 0.7,
            'ambS': 0x5,
            'shadLength': 0x183,
            'shadWidth': 0x1a9,
            'objects': [{
                'p': [-0x5, 0xc, 0x0],
                's': [0x5e, 0x1, 0x72],
                't': 0x1
            }, {
                'p': [-0x43, 0xc, 0x0],
                's': [0x1e, 0x1, 0x2c],
                't': 0x1
            }, {
                'p': [-0xb2, 0x20, 0x0],
                's': [0x7a, 0x1, 0x96],
                't': 0x1
            }, {
                'p': [-0xa3, 0xe, 0x9d],
                's': [0x9a, 0x22, 0x38],
                't': 0x1
            }, {
                'p': [-0x1c, 0x9, 0x68],
                's': [0x138, 0x27, 0x32],
                't': 0x1
            }, {
                'p': [0x1, 0x2f, -0x1a],
                's': [0x68, 0x1, 0xd2],
                't': 0x1
            }, {
                'p': [0xc2, -0x4, 0x38],
                's': [0xd8, 0x25, 0xdd],
                't': 0x1
            }, {
                'p': [-0xaf, 0x13, -0x89],
                's': [0x35, 0x19, 0x40],
                't': 0x1
            }, {
                'p': [0x40, 0xd, -0x4],
                's': [0x2c, 0x14, 0x24],
                'i': 0x9,
                't': 0x1
            }, {
                'p': [-0xd0, 0x21, 0x65],
                's': [0x24, 0xf, 0x38],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0xae, 0x21, -0x59],
                's': [0x30, 0xb, 0x20],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0xaf, 0x21, -0xb9],
                's': [0x35, 0xb, 0x20],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [0x50, 0x21, -0x6a],
                's': [0x36, 0xf, 0x31],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0x6e, 0x21, 0x36],
                's': [0x24, 0xf, 0x32],
                'i': 0x9,
                't': 0x1,
                'd': 0x1
            }, {
                'p': [-0x8a, 0x1a, 0x4c],
                's': [0x68, 0x1d, 0x6],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xbb, 0x1a, 0x68],
                's': [0x6, 0x1d, 0x32],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x9f, 0x20, 0x67],
                's': [0x26, 0x1, 0x37],
                't': 0x1
            }, {
                'p': [-0x32, 0x10, -0xe1],
                's': [0x6, 0x16, 0x19],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0xf6],
                's': [0x6, 0x24, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x1f, -0xcf],
                's': [0x6, 0x13, 0xb],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x26, -0xd8],
                's': [0x6, 0x4, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xdc, 0x21, 0x7d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x67, 0x20, -0x80],
                's': [0x60, 0x2, 0x6f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x67, 0x6d, -0x81],
                's': [0x64, 0x3, 0x75],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x3d, 0x57, -0xf5],
                's': [0x57, 0x4, 0x4d],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x14, 0x57, -0xa7],
                's': [0xa9, 0x4, 0x4f],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x3d, 0x1e, -0xf2],
                's': [0x52, 0x4, 0x4f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x14, 0x1e, -0xa6],
                's': [0xa4, 0x4, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0x2
            }, {
                'p': [0x14, 0x20, -0xa6],
                's': [0xa2, 0x37, 0x47],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x21, 0x33, -0xca],
                's': [0xf, 0x1, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x28, 0x22, -0xca],
                's': [0x1, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x1a, 0x22, -0xca],
                's': [0x1, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x21, 0x22, -0xc9],
                's': [0xd, 0x11, 0x2],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0x93, 0x70, -0x78],
                's': [0x23, 0x3, 0xf],
                'c': 0x505050,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x85, 0x21, -0xc2],
                's': [0x24, 0x1, 0x15],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x9f, 0x28, -0x134],
                's': [0x57, 0x1, 0x39],
                't': 0x1
            }, {
                'p': [-0xbb, 0x21, -0x10c],
                's': [0x1f, 0x8, 0x17],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x8d, 0x28, -0x10e],
                's': [0x33, 0x1, 0x13],
                't': 0x1
            }, {
                'p': [-0xa9, 0x11, -0x10e],
                's': [0x5, 0x1d, 0x13],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x8d, 0x11, -0x102],
                's': [0x3d, 0x1d, 0x5],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x71, 0x11, -0x12b],
                's': [0x5, 0x1d, 0x4d],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x67, 0x11, -0x81],
                's': [0x5e, 0x5c, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x61, 0x21, -0x15d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xc5, 0x2c, -0x9b],
                's': [0x1, 0x13, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xe5, 0x20, -0xa2],
                's': [0x38, 0x2d, 0x6f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xe5, 0x4d, -0xa2],
                's': [0x3d, 0x3, 0x73],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf8, 0x20, -0x135],
                's': [0x5e, 0x5e, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xf8, 0x7e, -0x135],
                's': [0x66, 0x3, 0x75],
                'c': 0x575757,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf1, 0x20, -0xed],
                's': [0x38, 0x21, 0x6f],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf1, 0x41, -0xed],
                's': [0x3e, 0x3, 0x6f],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xf1, 0x1f, -0xec],
                's': [0x3a, 0x3, 0x23],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0xe5, 0x1f, -0xa2],
                's': [0x3a, 0x3, 0x70],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x154, 0x20, -0xc7],
                's': [0x5b, 0x49, 0x74],
                'c': '#ffd5b1'
            }, {
                'p': [-0xc5, 0x2c, -0xa3],
                's': [0x1, 0x13, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x3f, 0x20, -0x19b],
                's': [0x51, 0x55, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x61, -0x188],
                's': [0x8c, 0x4, 0x78],
                'c': 0x434343,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x6e, 0x52, -0x14f],
                's': [0x4, 0x4, 0x8],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x20, -0x188],
                's': [0x85, 0x41, 0x70],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x3f, 0x75, -0x19b],
                's': [0x57, 0x4, 0x77],
                'c': 0x4d4d4d,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x3f, 0x9a, -0x19b],
                's': [0x3a, 0x3, 0x38],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0x16, 0x3d, -0x17d],
                's': [0x5b, 0x20, 0x58],
                'c': '#ffd5b1'
            }, {
                'p': [-0xcb, 0x86, -0x1e3],
                's': [0x61, 0x5, 0x5e],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x67, 0x54, -0x81],
                's': [0x5f, 0x2, 0x71],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x67, 0x3b, -0x81],
                's': [0x60, 0x2, 0x71],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x3f, 0x7b, -0x19b],
                's': [0x34, 0x20, 0x31],
                'c': '#ffd5b1'
            }, {
                'p': [0x3d, 0x20, -0xf1],
                's': [0x50, 0x37, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x3f, 0x59, -0x19b],
                's': [0x53, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x3f, 0x3b, -0x19b],
                's': [0x53, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0xfa, 0x52, -0x135],
                's': [0x64, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x3d, 0x3b, -0xf2],
                's': [0x52, 0x2, 0x4f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x14, 0x3b, -0xa6],
                's': [0xa4, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x3f, 0x20, -0x19b],
                's': [0x53, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x97, 0x52, -0x14f],
                's': [0x4, 0x4, 0x9],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xbd, 0x52, -0x14f],
                's': [0x4, 0x4, 0xa],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x85, 0x20, -0xc2],
                's': [0x22, 0x1b, 0x12],
                'c': '#ffd5b1'
            }, {
                'p': [0xf, 0x2d, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xf, 0x21, -0xdc],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xcc, 0x20, -0x1e5],
                's': [0x5b, 0x66, 0x57],
                'c': '#ffd5b1'
            }, {
                'p': [0x16, 0x5a, -0x17d],
                's': [0x62, 0x4, 0x5d],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x16, 0x3b, -0x17d],
                's': [0x5c, 0x2, 0x59],
                'l': 0x1,
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x16, 0x20, -0x17d],
                's': [0x5d, 0x2, 0x59],
                'l': 0x1,
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0xfd, 0x20, -0xa0],
                's': [0x40, 0x35, 0x48],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xc1, 0x5f, -0x125],
                's': [0x46, 0x3, 0x75],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xc1, 0x36, -0x124],
                's': [0x45, 0x2, 0x73],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xc1, 0x20, -0x11d],
                's': [0x46, 0x2, 0x65],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x9a, 0x3b, -0x111],
                's': [0x12, 0x2, 0x2c],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x93, 0x21, -0x125],
                's': [0x2, 0x1d, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x93, 0x21, -0xfd],
                's': [0x2, 0x1d, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x9e, 0x21, -0xf4],
                's': [0x1, 0x26, 0x4],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [0x81, 0x20, -0x193],
                's': [0x7c, 0x49, 0x5d],
                'c': '#ffd5b1'
            }, {
                'p': [0x81, 0x69, -0x194],
                's': [0x84, 0x4, 0x73],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xa8, 0x21, -0x194],
                's': [0x2c, 0x1, 0x73],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x81, 0x21, -0x163],
                's': [0x25, 0x24, 0x6],
                'c': 0x828282,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xec, 0x20, -0x16f],
                's': [0x5a, 0x20, 0x3d],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xec, 0x40, -0x16f],
                's': [0x61, 0x5, 0x44],
                'c': 0x525252,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xec, 0x1d, -0x16f],
                's': [0x5c, 0x5, 0x3f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x4a, 0x21, -0x155],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x39, 0x21, -0x120],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x105, 0x21, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x111, 0x21, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xd5, 0x3b, -0xf6],
                's': [0xa, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd5, 0x3b, -0xe1],
                's': [0xa, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x3b, 0x21, -0x150],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x3b, 0x21, -0x15c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x32, 0x10, -0x168],
                's': [0x6, 0x28, 0xf],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0x10e],
                's': [0x6, 0x28, 0x29],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0xf0],
                's': [0x6, 0x1d, 0x5],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x26, -0xea],
                's': [0x6, 0x2, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x32, -0xcc],
                's': [0x6, 0x6, 0x5],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x11e],
                's': [0x6, 0x3, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x10e],
                's': [0x6, 0x2, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0xfe],
                's': [0x6, 0x3, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0xc8],
                's': [0x6, 0x3, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x13f],
                's': [0x6, 0x2, 0x9],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x38, -0x14e],
                's': [0x6, 0x3, 0x7],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xf, 0x21, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x3, 0x21, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x9, 0x21, -0xd0],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x9e, 0x29, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x92, 0x29, -0x14a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7c, 0x29, -0x10d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa9, 0x20, -0x160],
                's': [0x2c, 0x49, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x5a, 0x20, -0x160],
                's': [0x2e, 0x49, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x82, 0x45, -0x160],
                's': [0x22, 0x24, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x56, 0x21, -0x155],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x13f, 0x20, -0x13d],
                's': [0x4f, 0x3a, 0xb7],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x13f, 0x5a, -0x13d],
                's': [0x57, 0x4, 0xbd],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x13f, 0x3c, -0x119],
                's': [0x50, 0x2, 0x70],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x13f, 0x20, -0x119],
                's': [0x51, 0x2, 0x71],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x119, 0x46, -0xf0],
                's': [0x4, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x119, 0x46, -0x10e],
                's': [0x4, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x11a, 0x45, -0x10e],
                's': [0x7, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x11a, 0x45, -0xf0],
                's': [0x7, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x7e, 0x2b, -0x163],
                's': [0x3, 0x5, 0x8],
                'c': '#464646',
                't': 0x5
            }, {
                'p': [0x147, 0x20, -0x1d6],
                's': [0x8e, 0x63, 0x57],
                'c': '#ffd5b1'
            }, {
                'p': [0x148, 0x82, -0x1d6],
                's': [0x98, 0x4, 0x60],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0xbf, 0x20, -0x22b],
                's': [0x6d, 0x4c, 0x57],
                'c': '#ffd5b1'
            }, {
                'p': [0xbf, 0x69, -0x22d],
                's': [0x71, 0x5, 0x64],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [0x145, 0x20, -0xba],
                's': [0x50, 0x4d, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x146, 0x6d, -0xb9],
                's': [0x58, 0x3, 0x56],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x146, 0x56, -0xba],
                's': [0x53, 0x2, 0x50],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x146, 0x3c, -0xba],
                's': [0x53, 0x2, 0x50],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xa8, 0x3e, -0xa0],
                's': [0x14, 0x2, 0x2c],
                'c': '#7d7d7d',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb0, 0x40, -0xb4],
                's': [0x2, 0x7, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xb0, 0x47, -0xa0],
                's': [0x3, 0x1, 0x2c],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xab, 0x47, -0xb5],
                's': [0x7, 0x1, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa7, 0x40, -0xa0],
                's': [0x1, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0xa7, 0x51, -0xa0],
                's': [0x2, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xa7, 0x40, -0xa7],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0x12b, 0x20, -0x64],
                's': [0x34, 0x3f, 0x5d],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x146, 0x20, -0xb9],
                's': [0x54, 0x2, 0x4f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x12b, 0x5f, -0x64],
                's': [0x39, 0x3, 0x61],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x116, 0x1d, -0x64],
                's': [0xc, 0x5, 0x5f],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x109, 0x27, -0x100],
                's': [0x3, 0x1, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x109, 0x21, -0x100],
                's': [0x1, 0x6, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xf1, 0x21, -0x119],
                's': [0x1, 0x6, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xf1, 0x27, -0x119],
                's': [0x3, 0x1, 0x1e],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xe9, 0x3f, -0x109],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x10d],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x115],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x125],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x111],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x119],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x121],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [0xe9, 0x3f, -0x129],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x432316,
                't': 0x5
            }, {
                'p': [-0x85, 0x3b, -0xc3],
                's': [0x24, 0x2, 0x13],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x85, 0x3c, -0xc2],
                's': [0x22, 0x1, 0x13],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x434343,
                't': 0x2
            }, {
                'p': [0xd7, 0x21, -0xb3],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd7, 0x21, -0xa7],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xc7, 0x21, -0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xad, 0x1e, -0x155],
                's': [0x2, 0x8, 0x2],
                'l': 0x1,
                'c': 0x5b5f4c,
                't': 0x5
            }, {
                'p': [0x145, 0x20, -0xe],
                's': [0x50, 0x37, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x13f, 0x20, 0x87],
                's': [0x44, 0x4c, 0x73],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x145, 0x57, -0xe],
                's': [0x56, 0x3, 0x55],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x145, 0x1d, -0xe],
                's': [0x52, 0x5, 0x51],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x130, 0x20, 0x1e],
                's': [0xd, 0x2b, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x130, 0x20, 0x49],
                's': [0xd, 0x2b, 0x9],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x130, 0x4b, 0x33],
                's': [0xd, 0x9, 0x35],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x12e, 0x2b, 0x2f],
                's': [0x3, 0x8, 0x3],
                'c': '#4d4d4d',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x12e, 0x21, 0x33],
                's': [0x1, 0x2a, 0x27],
                'c': 0x828282,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x145, 0x3c, -0xe],
                's': [0x51, 0x2, 0x50],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x130, 0x4d, 0x33],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x3e],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x48],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x28],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x130, 0x4d, 0x1e],
                's': [0x1a, 0x4, 0x4],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1af, 0xc, -0x60],
                's': [0x5c, 0x66, 0xa0],
                'c': '#ffd5b1'
            }, {
                'p': [0x1af, 0x71, -0x60],
                's': [0x63, 0x4, 0xa5],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0x13f, 0x6c, 0x87],
                's': [0x4a, 0x3, 0x79],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x13f, 0x53, 0x87],
                's': [0x45, 0x2, 0x74],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x13f, 0x38, 0x87],
                's': [0x45, 0x2, 0x74],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x5e, -0x2, -0x34],
                's': [0x50, 0x72, 0x3c],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xb4, 0x20, -0x30],
                's': [0x5c, 0x28, 0x40],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xb4, 0x48, -0x30],
                's': [0x5f, 0x4, 0x42],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x5e, 0x6f, -0x34],
                's': [0x58, 0x4, 0x43],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x5e, 0x20, -0x34],
                's': [0x52, 0x2, 0x3d],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xb4, 0x20, -0x30],
                's': [0x5e, 0x2, 0x41],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x13f, 0x20, 0x87],
                's': [0x46, 0x2, 0x75],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x5c, 0x21, -0x194],
                's': [0x2c, 0x1, 0x73],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x90, 0x20, -0x159],
                's': [0x53, 0x2, 0x14],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x10d, 0x1d, -0x4c],
                's': [0x6, 0x5, 0x19],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x9c, 0x2c, -0x88],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x118, 0x21, 0x0],
                's': [0x1, 0x17, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x119, 0x21, 0xa],
                's': [0x1, 0x12, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0xf0, 0x20, 0xa3],
                's': [0x5c, 0x33, 0x40],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xf0, 0x53, 0xa3],
                's': [0x61, 0x3, 0x46],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xef, 0x38, 0xa3],
                's': [0x5b, 0x2, 0x41],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xf0, 0x20, 0xa3],
                's': [0x5a, 0x2, 0x42],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xeb, 0x39, 0x7b],
                's': [0x31, 0x2, 0x11],
                'pe': 0x1,
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0xd5, 0x20, 0x75],
                's': [0x2, 0x1c, 0x2],
                'pe': 0x1,
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0x101, 0x20, 0x75],
                's': [0x2, 0x1c, 0x2],
                'pe': 0x1,
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0xcd, 0x21, 0x82],
                's': [0x5, 0x22, 0x1],
                'i': 0x3,
                't': 0x2,
                'd': 0x3
            }, {
                'p': [0x5e, 0x3b, -0x34],
                's': [0x51, 0x2, 0x3d],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x5e, 0x56, -0x34],
                's': [0x51, 0x2, 0x3d],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xe2, 0x22, -0x43],
                's': [0x1, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0xe2, 0x22, -0x3c],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xe2, 0x33, -0x43],
                's': [0x2, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xe2, 0x22, -0x4a],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x9f, 0x4c, -0x78],
                's': [0x2, 0x26, 0x2],
                'l': 0x1,
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [0x9e, 0x20, 0x48],
                's': [0x3c, 0x44, 0x5d],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x9e, 0x43, 0x48],
                's': [0x3d, 0x2, 0x5e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x8e, 0x4b, 0x1f],
                's': [0x5, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x8e, 0x4a, 0x1f],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xc2, 0x21, 0x22],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x95, 0x26, 0x9e],
                's': [0x46, 0x3c, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x4d, 0x20, 0xa9],
                's': [0x4a, 0x45, 0x50],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xc0, 0x21, 0x7d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x4d, 0x65, 0xa9],
                's': [0x51, 0x4, 0x57],
                'c': '#525252',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x4d, 0x4c, 0xa9],
                's': [0x4a, 0x2, 0x51],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x4d, 0x2f, 0xa9],
                's': [0x4a, 0x2, 0x51],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x9a, 0x21, 0x73],
                's': [0x2f, 0x1, 0x5],
                'l': 0x1,
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0x73, 0x21, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x7f, 0x21, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x4f, 0x3d, 0xe],
                's': [0xa, 0x1, 0x2],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xb6, 0x4f, 0x20],
                's': [0x5, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0xb6, 0x4e, 0x20],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x61, 0x21, -0xc7],
                's': [0x1e, 0x6, 0x1],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x71, 0x21, -0xc7],
                's': [0x2, 0x19, 0x2],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x51, 0x21, -0xc7],
                's': [0x2, 0x19, 0x2],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x61, 0x27, -0xc7],
                's': [0x1e, 0x1, 0x3],
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x51, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x71, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x55, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [-0x6d, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [-0x69, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x65, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [-0x61, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x59, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x3e4659,
                't': 0x5
            }, {
                'p': [-0x5d, 0x3a, -0xc1],
                's': [0x4, 0x2, 0x14],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': 0x7a7a7a,
                't': 0x5
            }, {
                'p': [0x41, 0x5b, 0x33],
                's': [0x3a, 0x4, 0x50],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x85, 0x21, 0x16],
                's': [0x4, 0x11, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x8c, 0x21, 0x16],
                's': [0x4, 0x11, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x41, 0x36, 0x33],
                's': [0x37, 0x2, 0x4b],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x4f, 0x3e, 0x10],
                's': [0x9, 0xe, 0x5],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x66, 0x22, -0x11],
                's': [0x2a, 0x3d, 0x3e],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x66, 0x5c, -0x11],
                's': [0x2f, 0x4, 0x43],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x20, -0x12],
                's': [0x2c, 0x2, 0x3e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xce, 0xd, -0xf],
                's': [0xf, 0x4a, 0x7],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xce, 0x20, -0xd],
                's': [0x11, 0x2, 0x5],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xb4, 0x1e, 0x73],
                's': [0x2, 0x9, 0x2],
                'l': 0x1,
                'c': 0x5b5f4c,
                't': 0x5
            }, {
                'p': [-0x57, 0x64, 0x2f],
                's': [0x43, 0x4, 0x48],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x57, 0x66, 0x30],
                's': [0x2d, 0xa, 0x37],
                'c': '#ffd5b1'
            }, {
                'p': [-0x57, 0x70, 0x30],
                's': [0x33, 0x4, 0x3d],
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x57, 0x4c, 0x2f],
                's': [0x3f, 0x2, 0x43],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x57, 0x34, 0x2f],
                's': [0x3f, 0x2, 0x43],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x43, 0x54, 0x1a],
                's': [0x9, 0xe, 0x7],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x43, 0x53, 0x17],
                's': [0xa, 0x1, 0x2],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x49, 0x20, 0x34],
                's': [0x28, 0x2, 0x4e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x41, 0xd, 0x33],
                's': [0x36, 0x4f, 0x4a],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x1c, 0xc, -0x2e],
                's': [0xa9, 0x2, 0x36],
                'c': '#6e6e6e',
                't': 0x2
            }, {
                'p': [0x1b, 0xc, 0x25],
                's': [0xa7, 0x2, 0x34],
                'c': '#6e6e6e',
                't': 0x2
            }, {
                'p': [-0x34, 0x2e, -0x20],
                's': [0x8, 0x1f, 0xd2],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x2e, -0x1c],
                's': [0x8, 0x1f, 0x75],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0x50],
                's': [0x8, 0x2, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0x3a],
                's': [0x8, 0x3, 0xf],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0x24],
                's': [0x8, 0x5, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, -0xe],
                's': [0x8, 0x3, 0x10],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x32, 0x4d, 0x8],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x8],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x1e],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x4a],
                's': [0x8, 0x4, 0xe],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, 0x34],
                's': [0x8, 0x3, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0xe],
                's': [0x8, 0x2, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x24],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x3a],
                's': [0x8, 0x3, 0x10],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x50],
                's': [0x8, 0x4, 0xa],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x66],
                's': [0x8, 0x3, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x34, 0x4d, -0x7c],
                's': [0x8, 0x4, 0xd],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1, 0xc, 0x13],
                's': [0x6e, 0x22, 0xe],
                'c': '#786555',
                't': 0xb
            }, {
                'p': [-0x1, 0xb, -0x33],
                's': [0x6e, 0x23, 0x3e],
                'c': '#786555',
                't': 0xb
            }, {
                'p': [-0x1, 0x2e, -0x2],
                's': [0x5e, 0x1, 0x39],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x33, 0x20, 0xbc],
                's': [0x49, 0x4c, 0x74],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x7c, 0x20, 0xd7],
                's': [0x49, 0x4c, 0x3e],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x20, 0xd9],
                's': [0x49, 0x34, 0x4f],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xd, 0x2f, 0xa3],
                's': [0x3c, 0x2, 0x51],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x34, 0x2f, 0x9d],
                's': [0x49, 0x2, 0x38],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x7e, 0x2f, 0xd3],
                's': [0x4b, 0x2, 0x37],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x109, -0x3, 0xb7],
                's': [0x3f, 0x68, 0x6c],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x10c, 0x3e, 0x4a],
                's': [0x54, 0x37, 0x6f],
                'c': '#ffd5b1'
            }, {
                'p': [-0x10c, 0x20, -0xa],
                's': [0x49, 0x38, 0x3c],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x3d, -0x49],
                's': [0x44, 0x31, 0x44],
                'c': '#ffd5b1'
            }, {
                'p': [-0x33, 0x6c, 0xbb],
                's': [0x51, 0x3, 0x79],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x80, 0x6c, 0xd6],
                's': [0x49, 0x3, 0x44],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x46, 0x20, 0x7f],
                's': [0x1c, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x46, 0x2f, 0x7d],
                's': [0x1e, 0x2, 0x8],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x33, 0x4d, 0x9d],
                's': [0x4b, 0x2, 0x38],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x7e, 0x4d, 0xd3],
                's': [0x4b, 0x2, 0x37],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x75, 0x32, 0x9a],
                's': [0x19, 0x1, 0x19],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0xe, 0x18, -0xf5],
                's': [0x1d, 0xd, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x75, 0x18, 0xa8],
                's': [0x1f, 0x1c, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x67, 0x18, 0x9a],
                's': [0x3, 0x1c, 0x19],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x83, 0x18, 0x9a],
                's': [0x3, 0x1c, 0x19],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xc4, 0x2f, 0xb4],
                's': [0x49, 0x2, 0x7],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xf2, 0x2f, 0x9a],
                's': [0x13, 0x2, 0x39],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xf2, 0x49, 0x9a],
                's': [0x13, 0x2, 0x39],
                'l': 0x1,
                'h': 0xbe,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xc4, 0x54, 0xd6],
                's': [0x50, 0x3, 0x51],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x43, 0x21, -0x11d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x109, 0x65, 0xb2],
                's': [0x46, 0x3, 0x7c],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xe4, 0x20, 0x31],
                's': [0x5, 0x2, 0x3e],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xea, 0x20, -0x9],
                's': [0x7, 0x2, 0x3f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xd6, 0x20, -0x47],
                's': [0x22, 0x2, 0x41],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x109, 0x75, 0x4a],
                's': [0x56, 0x3, 0x77],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x1af, 0x28, -0x60],
                's': [0x42, 0x66, 0x7d],
                'c': '#ffd5b1'
            }, {
                'p': [0x1af, 0x8d, -0x60],
                's': [0x4d, 0x4, 0x87],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [-0x10a, 0x4e, -0xb],
                's': [0x4e, 0x3, 0x3b],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x6d, -0x49],
                's': [0x4a, 0x3, 0x48],
                'c': '#393939',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xef, 0x3e, 0x4a],
                's': [0x1b, 0x2, 0x70],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x10c, 0x58, 0x4a],
                's': [0x55, 0x2, 0x70],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe8, 0x3c, -0x49],
                's': [0x45, 0x2, 0x45],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe8, 0x54, -0x49],
                's': [0x45, 0x2, 0x45],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe3, 0x30, 0xab],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xd7, 0x30, 0xab],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4e, 0x30, 0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb0, 0x30, 0x57],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x7d, 0x21, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x89, 0x21, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x5a, 0x30, 0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xe1, 0x21, -0x22],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xd5, 0x21, -0x22],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x81, 0x21, -0x21],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb3, 0x30, 0xae],
                's': [0x6, 0x13, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xbd, 0x30, 0xae],
                's': [0x6, 0x13, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xe4, 0x78, 0x2a],
                's': [0x23, 0x3, 0xf],
                'c': 0x505050,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd9, 0x45, 0x2a],
                's': [0x2, 0x35, 0x2],
                'l': 0x1,
                'c': 0xbbbbbb,
                't': 0x2
            }, {
                'p': [-0xe8, 0x22, 0x3],
                's': [0x2, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0xe7, 0x22, -0x4],
                's': [0x1, 0x11, 0x1],
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0xe7, 0x22, 0xa],
                's': [0x1, 0x11, 0x1],
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0xe7, 0x33, 0x3],
                's': [0x1, 0x1, 0xf],
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0xe8, 0x48, 0xe],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, -0xb],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, 0x1],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, -0x18],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe8, 0x48, -0x23],
                's': [0xa, 0x3, 0x3],
                'pe': 0x1,
                'c': 0x6b6b6b,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xde, 0x20, 0x3b],
                's': [0x1, 0x17, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xde, 0x21, 0x34],
                's': [0x1, 0x10, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x37, 0xd, -0x13],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x37, 0x2d, -0x4],
                's': [0x4, 0x2, 0x1c],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x2f, 0x30, 0x7b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6e, 0x30, 0x7d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x28, 0x30, -0x4e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1d, 0x2f, -0x1c],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x1d, 0x2f, 0x4],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x24, 0x4e, 0x4],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x4],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, 0x0],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x8],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0xc],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x10],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x14],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x18],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x6e6e6e,
                't': 0x5
            }, {
                'p': [0x24, 0x4e, -0x1c],
                's': [0x15, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x522e37,
                't': 0x5
            }, {
                'p': [0x1d, 0x2f, -0xc],
                's': [0x1, 0x7, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x1d, 0x36, -0xc],
                's': [0x3, 0x1, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x28, 0x30, -0x42],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2e, 0x2f, 0x4],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x2e, 0x2f, -0x1c],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, 0x8],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x26, 0x4e, 0x8],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0xc],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x14],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x10],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x18],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x1c],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x20],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x24],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, 0x28],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x2e3e52,
                't': 0x5
            }, {
                'p': [-0x1e, 0x2f, 0x28],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, 0x18],
                's': [0x1, 0x7, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x36, 0x18],
                's': [0x3, 0x1, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, 0x8],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, 0x28],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, -0x3b],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x26, 0x4e, -0x3b],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x3f],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x43],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x47],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x4b],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x4f],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x53],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x57],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x26, 0x4e, -0x5b],
                's': [0x16, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x59412a,
                't': 0x5
            }, {
                'p': [-0x1e, 0x2f, -0x5b],
                's': [0x2, 0x1f, 0x2],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, -0x3b],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x30, 0x2f, -0x5b],
                's': [0x2, 0x21, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x2f, -0x4b],
                's': [0x1, 0x7, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x1e, 0x36, -0x4b],
                's': [0x3, 0x1, 0x1e],
                'pe': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x2c, 0x2f, -0x11],
                's': [0x1, 0x17, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x2c, 0x2f, -0x8],
                's': [0x1, 0x17, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [0x23, 0x5b, -0x8f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [0x20, 0x30, 0x2b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x20, 0x30, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x20, 0x30, 0x37],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x28, 0x2e, 0x4d],
                's': [0x20, 0x1f, 0x8],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x1a, 0x2e, 0x4d],
                's': [0x18, 0x1f, 0x8],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x2e, 0x4d, 0x4d],
                's': [0x4, 0x4, 0x8],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1e, 0x4d, 0x4d],
                's': [0x8, 0x3, 0xc],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x14, 0x4d, 0x4d],
                's': [0x8, 0x2, 0xc],
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x24, 0x4d, 0x4d],
                's': [0x4, 0x2, 0x8],
                'l': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x2a, 0x30, 0x43],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe3, 0x21, -0x129],
                's': [0x3, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0xe3, 0x21, -0x109],
                's': [0x3, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x118, 0x21, -0xf0],
                's': [0x4, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x9f, 0x29, -0x134],
                's': [0x53, 0x32, 0x37],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xf0, 0x21, 0x6a],
                's': [0x57, 0x32, 0x2d],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x97, 0x30, 0x68],
                's': [0x40, 0x32, 0x30],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x1, 0x30, -0x17],
                's': [0x59, 0x32, 0x48],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x1, 0x30, -0x23],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1, 0x30, -0x17],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xc3, 0x29, -0x135],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xc3, 0x35, -0x135],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9e, 0x64, 0x48],
                's': [0x43, 0x3, 0x65],
                'c': 0x4a4a4a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x20, 0x48],
                's': [0x3e, 0x2, 0x5f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x7e, 0x29, 0x5e],
                's': [0x6, 0x30, 0x18],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xa9, 0x20, -0x155],
                's': [0x16, 0x2, 0xb],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x99, 0x21, -0x145],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xbc, 0x20, -0xde],
                's': [0x123, 0x1, 0x14f],
                't': 0x1
            }, {
                'p': [0x86, 0x20, -0xa0],
                's': [0x42, 0x4c, 0x48],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xc1, 0x36, -0x124],
                's': [0x44, 0x2b, 0x72],
                'c': '#ffd5b1'
            }, {
                'p': [0x111, 0x3f, -0xf0],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0xf4],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x111, 0x3f, -0xfc],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x111, 0x3f, -0xf8],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x100],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x108],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x104],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x111, 0x3f, -0x110],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x5d537f,
                't': 0x1
            }, {
                'p': [0x111, 0x3f, -0x10c],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x118, 0x21, -0x110],
                's': [0x4, 0x20, 0x2],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x86, 0x6c, -0xa0],
                's': [0x47, 0x4, 0x4d],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xf6, 0x1d, -0xa0],
                's': [0x34, 0x5, 0x4a],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x116, 0x1d, -0xae],
                's': [0xc, 0x5, 0x2e],
                'l': 0x1,
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xfc, 0x3c, -0xa0],
                's': [0x3f, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x11c, 0x3c, -0xa0],
                's': [0x1, 0x2, 0x49],
                'l': 0x1,
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xfd, 0x55, -0xa0],
                's': [0x43, 0x3, 0x4b],
                'c': '#4a4a4a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x87, 0x1d, -0xa0],
                's': [0x42, 0x5, 0x4a],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x87, 0x3b, -0xa0],
                's': [0x42, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x65, 0x3b, -0x7e],
                's': [0x2, 0x2, 0x5],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x65, 0x3b, -0x81],
                's': [0x2, 0x2, 0x1],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x86, 0x54, -0xa0],
                's': [0x43, 0x2, 0x49],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0xb0, 0x40, -0x8c],
                's': [0x2, 0x7, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0xab, 0x47, -0x8b],
                's': [0x7, 0x1, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa7, 0x40, -0x99],
                's': [0x2, 0x11, 0x1],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0xab, 0x21, -0x9b],
                's': [0x1, 0x14, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0xab, 0x21, -0x8e],
                's': [0x1, 0x14, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#616161',
                't': 0x2
            }, {
                'p': [0x90, 0x21, -0xca],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x90, 0x2d, -0xca],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xb5, 0x21, -0xe5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x10b, 0x21, -0x76],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x15, 0x21, -0x14b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x15, 0x2d, -0x14b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x29, 0x21, -0x15d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xe, 0x23, -0x102],
                's': [0x17, 0x1, 0x17],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0x75, 0x18, 0x8c],
                's': [0x1f, 0x1c, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1b, 0x18, -0x102],
                's': [0x3, 0xd, 0x17],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xe, 0x18, -0x10f],
                's': [0x1d, 0xd, 0x3],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1, 0x18, -0x102],
                's': [0x3, 0xd, 0x17],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x119, 0x20, 0x50],
                's': [0x9, 0xe, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xda, 0x20, 0x50],
                's': [0x5, 0x10, 0x5],
                'c': '#9d8672'
            }, {
                'p': [0x94, 0x21, -0x76],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xe9, 0x3f, -0x11d],
                's': [0x14, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.18],
                'c': 0x666666,
                't': 0x5
            }, {
                'p': [0x117, 0x21, 0x6c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xcb, 0x20, 0x50],
                's': [0x1e, 0xf, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xff, 0x20, 0x50],
                's': [0x5, 0x10, 0x5],
                'c': '#9d8672'
            }, {
                'p': [-0xa6, 0x30, 0x55],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe5, 0x30, 0x86],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe5, 0x30, 0x8d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xe5, 0x30, 0x94],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x93, 0x21, 0x45],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x29, 0xd, 0x8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x22, 0xd, 0x8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x5c, 0x30, 0xb4],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x5c, 0x30, 0xad],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x99, 0x2c, -0x7f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x86, 0x29, -0x10b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xc6, 0x29, -0x12b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd0, 0x21, -0xf9],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xd0, 0x21, -0xf2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x1e, 0x21, -0x15e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xb, 0x21, -0x14d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x60, 0x21, -0x157],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x9a, 0x21, -0x11a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x9a, 0x21, -0x113],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xbf, 0x21, -0xe7],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x118, 0x21, -0xc9],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x118, 0x21, -0xd0],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x101, 0x21, -0x78],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xbd, 0x21, -0x54],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xe6, 0x21, -0x24],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xe6, 0x21, -0x1d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xc1, 0x21, 0x2c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xe6, 0x21, 0x7f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xed, 0x21, 0x7f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x44, 0x30, 0x54],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x16, 0x30, 0x45],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x2c, 0x30, 0x39],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x2c, 0x30, -0x1a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x2c, 0x30, -0x72],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x9, 0x30, -0x18],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x18b, 0x7, 0x67],
                's': [0x50, 0x58, 0x3b],
                'c': '#ffd5b1'
            }, {
                'p': [0x18c, 0x5f, 0x68],
                's': [0x58, 0x4, 0x43],
                'c': 0x4a4a4a,
                't': 0xb
            }, {
                'p': [0xb8, 0x20, 0xeb],
                's': [0x66, 0x4c, 0x31],
                'c': '#ffd5b1'
            }, {
                'p': [0xb8, 0x6c, 0xeb],
                's': [0x6d, 0x5, 0x39],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x59, 0x21, -0x89],
                's': [0x36, 0x1, 0x61],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [-0x79, 0x20, 0xe],
                's': [0x6, 0x2, 0x2],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x44, 0x20, 0x2f],
                's': [0x1a, 0x2, 0x44],
                'l': 0x1,
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x66, 0x3e, -0x11],
                's': [0x2b, 0x2, 0x3f],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x7b, 0x22, 0x0],
                's': [0x1, 0x11, 0xd],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0x7a, 0x22, -0x7],
                's': [0x4, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x7a, 0x22, 0x7],
                's': [0x4, 0x11, 0x1],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x7a, 0x33, 0x0],
                's': [0x4, 0x1, 0xf],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [-0x3c, 0x18, -0x45],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x54, 0x2b, -0x22],
                's': [0x7, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x54, 0x2a, -0x22],
                's': [0x8, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x6f, 0xa, -0x3e],
                's': [0xc, 0x17, 0x2b],
                't': 0x1
            }, {
                'p': [-0x5d, 0x18, -0x3e],
                's': [0x18, 0x9, 0x1c],
                'i': 0x9,
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0xf1, 0x21, -0x129],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xf1, 0x21, -0x109],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x109, 0x21, -0x110],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x109, 0x21, -0xf0],
                's': [0x2, 0x1e, 0x2],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x3d, 0x3, -0x3d],
                's': [0x28, 0x15, 0x1a],
                't': 0x1
            }, {
                'p': [-0x45, 0xd, -0x23],
                's': [0x1a, 0xb, 0x1a],
                'i': 0x9,
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x55, 0x20, -0x13e],
                's': [0xff, 0x1, 0x119],
                'c': '#ffffff',
                't': 0x1
            }, {
                'p': [0x34, 0x21, -0x6a],
                's': [0x2, 0xe, 0x32],
                't': 0x1
            }, {
                'p': [0x12e, 0x2b, 0x39],
                's': [0x3, 0x8, 0x3],
                'c': '#4d4d4d',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x86, 0x2b, -0x163],
                's': [0x3, 0x5, 0x8],
                'c': '#464646',
                't': 0x5
            }, {
                'p': [-0x28, 0x21, -0xdb],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'r': [0x0, 0.52, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x3b, 0x21, -0xe6],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.52, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x40, 0x21, -0xdf],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [0x190, 0x7b, -0x44],
                's': [0x5, 0xe, 0x9],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [0x190, 0x7a, -0x44],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xec, 0x21, 0x65],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [-0x90, 0x29, -0x12d],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [-0xcd, 0x20, -0xed],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.96, 0x0],
                'c': '#d2b559'
            }, {
                'p': [-0xd0, 0x20, -0xe0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.13, -3.14],
                'c': '#d2b559'
            }, {
                'p': [-0x41, 0x20, -0xbf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.13, -3.14]
            }, {
                'p': [-0x4e, 0x20, -0xc6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.62, -3.14]
            }, {
                'p': [-0x39, 0x20, -0xcd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.62, -3.14]
            }, {
                'p': [-0x64, 0x20, -0x154],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.62, -3.14]
            }, {
                'p': [-0x43, 0x20, -0x15f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.3, 0x0]
            }, {
                'p': [-0x57, 0x20, -0x160],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x32, 0x10, -0x146],
                's': [0x6, 0x28, 0x17],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x32, 0x10, -0x159],
                's': [0x6, 0x22, 0xf],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x1c, 0x20, -0x157],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [-0x13, 0x20, -0xce],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [-0x16, 0x23, -0xfc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.6, 0x0]
            }, {
                'p': [-0x9, 0x23, -0x109],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [-0xbf, 0x27, -0x12c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0xa7, 0x28, -0x14b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0x88, 0x29, -0x14c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0xc5, 0x28, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0x78, 0x28, -0x116],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.61, -3.14]
            }, {
                'p': [-0x86, 0x28, -0x111],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.05, -3.14]
            }, {
                'p': [-0x98, 0x20, -0xcd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.36, -3.14]
            }, {
                'p': [0x17, 0x20, -0x11e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x4, 0x20, -0xd9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0x10, 0x20, -0xe5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.16, 0x0]
            }, {
                'p': [-0x6b, 0x20, -0x102],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.88, -3.14]
            }, {
                'p': [-0x6a, 0x21, -0x128],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x5, 0x20, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0]
            }, {
                'p': [0xc, 0x20, -0x146],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.1, 0x0]
            }, {
                'p': [0x1f, 0x20, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x30, 0x20, -0x123],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x44, 0x20, -0x14d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x49, 0x20, -0x11c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x9c, 0x20, -0x13c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x95, 0x20, -0x116],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.8, 0x0]
            }, {
                'p': [0x9c, 0x20, -0x158],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0]
            }, {
                'p': [0x67, 0x20, -0x11a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.08, 0x0]
            }, {
                'p': [0x69, 0x20, -0xf9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.97, 0x0]
            }, {
                'p': [-0x46, 0x60, 0x82],
                's': [0x1e, 0x4, 0x17],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x46, 0x45, 0x7b],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x46, 0x44, 0x79],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x27, 0x20, -0x11b],
                's': [0x19, 0x2, 0x9],
                'l': 0x1,
                'c': '#4a4a4a',
                't': 0xb
            }, {
                'p': [0x27, 0xe, -0x11a],
                's': [0x18, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x27, 0x4f, -0x116],
                's': [0x19, 0x3, 0x16],
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x26, 0x33, -0x11e],
                's': [0xf, 0x1, 0x7],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x26, 0x32, -0x120],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x107, 0xe, -0xc5],
                's': [0x18, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x107, 0x4f, -0xc1],
                's': [0x1a, 0x3, 0x16],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [0x106, 0x33, -0xc9],
                's': [0xf, 0x1, 0x7],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x106, 0x32, -0xcb],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x92, 0x57, 0xb9],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x92, 0x56, 0xb7],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x64, 0x52, 0x82],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x64, 0x51, 0x80],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x52, 0x5b, -0xb8],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x52, 0x5a, -0xba],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x85, 0x25, -0xbc],
                's': [0x1c, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x85, 0x34, -0xbe],
                's': [0x1e, 0x2, 0x8],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x85, 0x65, -0xb9],
                's': [0x1e, 0x4, 0x17],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [-0x85, 0x4a, -0xc0],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x85, 0x49, -0xc2],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x57, 0x42, -0x119],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x57, 0x41, -0x11a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xd, 0x20, 0xa0],
                's': [0x37, 0x6e, 0x3c],
                'c': '#ffd5b1'
            }, {
                'p': [0xd, 0x25, 0x80],
                's': [0x38, 0x40, 0xa],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xd, 0x62, 0x7e],
                's': [0x3b, 0x4, 0xe],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x525252,
                't': 0xb
            }, {
                'p': [0x1b, 0x4a, 0x7c],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x1b, 0x49, 0x7a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xd, 0x8d, 0xa0],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x2, 0x49, 0x7a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x2, 0x4a, 0x7c],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x2b, 0x83, 0x95],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x2b, 0x6f, 0x95],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [-0x45, 0x6f, 0x87],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x11, 0x6f, 0x87],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x2c, 0x6f, 0x87],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x2c, 0x6f, 0xa4],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x45, 0x6f, 0xa3],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x11, 0x6f, 0xa3],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x1d, 0x74, 0x85],
                's': [0xb, 0x1, 0x3],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [-0x1d, 0x70, 0x83],
                's': [0xb, 0x5, 0x1],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [-0x3c, 0x7d, 0x83],
                's': [0x8, 0x8, 0x1],
                'l': 0x1,
                'c': '#b2d4b2',
                't': 0x2
            }, {
                'p': [-0x3c, 0x84, 0x85],
                's': [0x8, 0x1, 0x3],
                'l': 0x1,
                'c': '#b2d4b2',
                't': 0x2
            }, {
                'p': [-0x4b, 0x6f, 0x83],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x56, 0x6f, 0x84],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0xd, 0x71, 0x7e],
                's': [0x28, 0x2, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x1f, 0x71, 0x7b],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x5, 0x71, 0x7b],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0xd, 0x79, 0x7b],
                's': [0x28, 0x1, 0x3],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x1f, 0x79, 0x81],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0x5, 0x79, 0x81],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x14, 0x74, 0x83],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0xd, 0x74, 0x82],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x1b, 0x74, 0x82],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x14, 0x85, 0x82],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x14, 0x73, 0x82],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x5, 0x6c, 0x79],
                's': [0x6, 0xe, 0x1],
                'l': 0x1,
                'c': '#dec28f',
                't': 0x2
            }, {
                'p': [0x1, 0x6c, 0x79],
                's': [0x2, 0xe, 0x1],
                'l': 0x1,
                'c': '#a4be8d',
                't': 0x2
            }, {
                'p': [0x1, 0x7a, 0x7b],
                's': [0x2, 0x1, 0x5],
                'l': 0x1,
                'c': '#a4be8d',
                't': 0x2
            }, {
                'p': [0x5, 0x7a, 0x7b],
                's': [0x6, 0x1, 0x5],
                'l': 0x1,
                'c': '#dec28f',
                't': 0x2
            }, {
                'p': [0x28, 0x66, 0x8f],
                's': [0x8, 0x32, 0xe],
                'c': '#ffd5b1'
            }, {
                'p': [-0x8, 0xa1, 0x9d],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x15, 0x84, 0x8e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x4c, 0x67, 0x8d],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x4c, 0x7b, 0x8d],
                's': [0x1, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x3b, 0x7b, 0x89],
                's': [0x21, 0x1, 0x1],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x41, 0x71, 0x8e],
                's': [0x6, 0xb, 0x1],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [0x34, 0x71, 0x88],
                's': [0x7, 0xb, 0x1],
                'l': 0x1,
                'c': '#7ec382',
                't': 0x2
            }, {
                'p': [0x41, 0x7c, 0x8b],
                's': [0x6, 0x1, 0x7],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [0x41, 0x79, 0x88],
                's': [0x6, 0x3, 0x1],
                'l': 0x1,
                'c': '#d28181',
                't': 0x2
            }, {
                'p': [0x34, 0x7c, 0x8b],
                's': [0x7, 0x1, 0x7],
                'l': 0x1,
                'c': '#7ec382',
                't': 0x2
            }, {
                'p': [0x34, 0x7a, 0x8e],
                's': [0x7, 0x2, 0x1],
                'c': '#7ec382',
                't': 0x2
            }, {
                'p': [0x3b, 0x7b, 0x8d],
                's': [0x21, 0x1, 0x1],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x3b, 0x7b, 0x91],
                's': [0x21, 0x1, 0x1],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [-0xd4, 0x77, 0xf7],
                's': [0x78, 0x3, 0x21],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xd4, 0x50, 0x101],
                's': [0x78, 0x23, 0x2d],
                'c': '#ffd5b1'
            }, {
                'p': [-0xd4, 0x73, 0x101],
                's': [0x78, 0x14, 0xf],
                'c': '#ffd5b1'
            }, {
                'p': [-0xd4, 0x88, 0x100],
                's': [0x79, 0x3, 0x11],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x84, 0x34, 0xfe],
                's': [0x28, 0x59, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x76, 0x8f, 0xfe],
                's': [0xc, 0xe, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x84, 0x9e, 0xfe],
                's': [0x28, 0x8, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x84, 0x8d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x84, 0xa5, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x92, 0x8f, 0xfe],
                's': [0xc, 0xe, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x91, 0xa7, 0xf1],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x91, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x77, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x77, 0xa7, 0xf0],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x84, 0x9d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x83, 0x89, 0xe4],
                's': [0x4, 0x4, 0xf],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x83, 0x86, 0xe8],
                's': [0x3, 0x2, 0xd],
                'l': 0x1,
                'r': [0.7, 0x0, 0x0],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x124, 0x34, 0xfe],
                's': [0x28, 0x5b, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8f, 0xfe],
                's': [0x28, 0x17, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x124, 0xa5, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0xf1],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0x10b],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0xf0],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x9d, 0xfe],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [0x73, 0x61, -0x66],
                's': [0x2, 0x2, 0x45],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x7b, 0x61, -0x66],
                's': [0x2, 0x2, 0x42],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x83, 0x61, -0x66],
                's': [0x2, 0x2, 0x41],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x76, 0x63, -0x68],
                's': [0xb, 0x1, 0xc],
                'l': 0x1,
                'c': '#acb1af',
                'e': '#502323',
                't': 0x2
            }, {
                'p': [0x7f, 0x63, -0x5a],
                's': [0xb, 0x1, 0xc],
                'l': 0x1,
                'c': '#868785',
                'e': '#0e110b',
                't': 0x2
            }, {
                'p': [0x84, 0x51, -0x5a],
                's': [0x1, 0x12, 0xc],
                'l': 0x1,
                'c': '#868785',
                'e': '#0e110b',
                't': 0x2
            }, {
                'p': [0x7e, 0x63, -0x74],
                's': [0xb, 0x1, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [0x79, 0x56, -0x74],
                's': [0x1, 0xd, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [0x71, 0x5a, -0x68],
                's': [0x1, 0x9, 0xc],
                'l': 0x1,
                'c': '#acb1af',
                'e': '#502323',
                't': 0x2
            }, {
                'p': [-0x6f, 0x44, -0x40],
                's': [0x2, 0x2, 0x45],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x67, 0x44, -0x40],
                's': [0x2, 0x2, 0x42],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x6c, 0x46, -0x40],
                's': [0xb, 0x1, 0x8],
                'c': '#bb5d5d',
                't': 0x2
            }, {
                'p': [-0x64, 0x46, -0x52],
                's': [0xb, 0x1, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [-0x69, 0x41, -0x52],
                's': [0x1, 0x5, 0x6],
                'l': 0x1,
                'c': '#617187',
                'e': '#0f1b2d',
                't': 0x2
            }, {
                'p': [-0x71, 0x3d, -0x40],
                's': [0x1, 0x9, 0x8],
                'l': 0x1,
                'c': '#bb5d5d',
                't': 0x2
            }, {
                'p': [-0x10c, 0x21, 0x4a],
                's': [0x54, 0x1f, 0x6f],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x77, 0x1a, 0x9a],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': '#7f6e38'
            }, {
                'p': [-0xaf, 0x2f, 0xab],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xe5, 0x2f, 0x9a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0x9b, 0x2f, 0xb3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x9f, 0x2f, 0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xb3, 0x2f, 0x61],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.7, 0x0]
            }, {
                'p': [-0x65, 0x2f, 0x57],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x58, 0x2f, 0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x34, 0x2f, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x3c, 0x2f, 0x53],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0]
            }, {
                'p': [0x1f, 0x2f, 0x55],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x24, 0x2f, 0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x13, 0x2f, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x38, 0x2d, -0x2f],
                's': [0x2, 0x2, 0x36],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe8, 0x20, -0x49],
                's': [0x44, 0x1c, 0x43],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x8, 0x8e, 0x9d],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x18, 0x2d, 0x81],
                's': [0x2, 0x3a, 0x2],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x29, 0x67, 0x81],
                's': [0x24, 0x2, 0x2],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x3a, 0x69, 0x81],
                's': [0x2, 0x9, 0x2],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x57, 0x22, 0x2f],
                's': [0x3e, 0x42, 0x42],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [-0x57, 0xd, 0x2f],
                's': [0x3e, 0x13, 0x42],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x66, 0xd, -0x11],
                's': [0x2a, 0x13, 0x3e],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x154, 0x69, -0xc7],
                's': [0x5d, 0x4, 0x77],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x16, 0x20, -0x17d],
                's': [0x5b, 0x1b, 0x58],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x124, 0x34, 0x70],
                's': [0x28, 0x59, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8f, 0x62],
                's': [0x28, 0xe, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x9e, 0x70],
                's': [0x28, 0x8, 0x28],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x8d, 0x70],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x124, 0xa5, 0x70],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0x63],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x131, 0xa7, 0x7d],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0x7d],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x117, 0xa7, 0x62],
                's': [0xc, 0x6, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x124, 0x9d, 0x70],
                's': [0x29, 0x2, 0x29],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x10c, 0x89, 0x6f],
                's': [0xf, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x124, 0x8f, 0x7e],
                's': [0x28, 0xe, 0xc],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x11d, 0x77, 0xb8],
                's': [0x78, 0x3, 0x21],
                'l': 0x1,
                'r': [-1.57, -1.05, -1.57],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x128, 0x73, 0xbe],
                's': [0xf, 0x14, 0x78],
                'c': '#ffd5b1'
            }, {
                'p': [-0x128, 0x88, 0xbb],
                's': [0x79, 0x3, 0x11],
                'l': 0x1,
                'r': [-1.57, -1.05, -1.57],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x127, 0x50, 0xbb],
                's': [0x2d, 0x23, 0x78],
                'c': '#ffd5b1'
            }, {
                'p': [-0xe2, 0x2d, 0x7a],
                's': [0x2, 0x3a, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe2, 0x67, 0x7c],
                's': [0x2, 0x2, 0x6],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe2, 0x69, 0x7e],
                's': [0x2, 0x12, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xa4, 0x22, 0x8e],
                's': [0x3c, 0x69, 0x30],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0xa4, 0x8b, 0x8e],
                's': [0x3f, 0x5, 0x33],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [0xa4, 0x90, 0x8e],
                's': [0x38, 0x15, 0x28],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xa5, 0x8e],
                's': [0x1e, 0x23, 0x1e],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xc8, 0x8e],
                's': [0x22, 0x6, 0x22],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xce, 0x8e],
                's': [0x1d, 0x6, 0x1c],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xd4, 0x8e],
                's': [0x17, 0x6, 0x16],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xda, 0x8e],
                's': [0x11, 0x6, 0x10],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0xa4, 0xe0, 0x8e],
                's': [0x5, 0xd, 0x9],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xed, 0x8e],
                's': [0x3, 0x20, 0x4],
                'c': '#ffd5b1'
            }, {
                'p': [0xa4, 0xa5, 0x8e],
                's': [0x3a, 0x3, 0x2a],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [0xa4, 0xa5, 0x9d],
                's': [0xa, 0x14, 0x1],
                'c': '#3c3c3c'
            }, {
                'p': [0x8e, 0x81, 0x8e],
                's': [0x4, 0x4, 0x3a],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xba, 0x81, 0x8e],
                's': [0x4, 0x4, 0x3a],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x81, 0x80],
                's': [0x44, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x81, 0x9c],
                's': [0x44, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x32, 0xa5],
                's': [0x10, 0x2, 0x8],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0x5e, 0xa5],
                's': [0x10, 0x2, 0x8],
                'l': 0x1,
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x22, 0x1a],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0x9a, 0x22, 0x19],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0xa8, 0x22, 0x19],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0xa1, 0x33, 0x19],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0xa1, 0x21, 0x19],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x95, 0x60, 0x9e],
                's': [0x47, 0x4, 0x51],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [-0x77, 0x39, 0x1f],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x75, 0x3a, 0x1f],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x77, 0x39, 0x3e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x75, 0x3a, 0x3e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x97, 0x59, -0x5a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x95, 0x5a, -0x5a],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xd8, 0x5a, 0xe9],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xd8, 0x5b, 0xeb],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xb1, 0x5a, 0xe9],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xb1, 0x5b, 0xeb],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xd8, 0x59, -0x26],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xd8, 0x5a, -0x28],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xc5, 0x59, -0x5d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xc7, 0x5a, -0x5d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xe1, 0x20, 0xf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0xcb, 0x20, -0x23],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0x80, 0x20, -0x17],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x7b, 0x20, 0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x7b, 0x20, 0x37],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [-0x95, 0x20, 0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.39, 0x0]
            }, {
                'p': [-0xbb, 0x20, 0x45],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0xde, 0x20, 0x2c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x99, 0x20, -0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0]
            }, {
                'p': [-0x8c, 0x21, -0x48],
                's': [0x2, 0x2d, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x84, 0x59, -0x48],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x84, 0x5a, -0x4a],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x8f, 0x4e, -0x48],
                's': [0x8, 0x2, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x92, 0x50, -0x48],
                's': [0x2, 0x22, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc5, 0x21, -0x2c],
                's': [0x2, 0x52, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x23d, 0xd, -0xa2],
                's': [0x37, 0x28, 0x3c],
                'c': '#ffd5b1'
            }, {
                'p': [0x23d, 0x34, -0xa2],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x205, 0x2a, -0xad],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0x205, 0x16, -0xad],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [0x1eb, 0x16, -0xbb],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x21f, 0x16, -0xbb],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x204, 0x16, -0xbb],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x204, 0x16, -0x9e],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x1eb, 0x16, -0x9f],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x21f, 0x16, -0x9f],
                's': [0x2, 0x16, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x213, 0x1b, -0xbd],
                's': [0xb, 0x1, 0x3],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0x213, 0x17, -0xbf],
                's': [0xb, 0x5, 0x1],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0x1f4, 0x24, -0xbf],
                's': [0x8, 0x8, 0x1],
                'c': '#a1e1a1',
                't': 0x2
            }, {
                'p': [0x1f4, 0x2b, -0xbd],
                's': [0x8, 0x1, 0x3],
                'c': '#a1e1a1',
                't': 0x2
            }, {
                'p': [0x1ff, 0x1b, -0xbb],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x23d, 0x18, -0xc4],
                's': [0x28, 0x2, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x24f, 0x18, -0xc7],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x22b, 0x18, -0xc7],
                's': [0x2, 0x8, 0x2],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x23d, 0x20, -0xc7],
                's': [0x28, 0x1, 0x3],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x24f, 0x20, -0xc1],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x22b, 0x20, -0xc1],
                's': [0x3, 0x1, 0x9],
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x244, 0x1b, -0xbf],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0x23d, 0x1b, -0xc0],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x24b, 0x1b, -0xc0],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x244, 0x2c, -0xc0],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x244, 0x1a, -0xc0],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [0x235, 0x13, -0xc9],
                's': [0x6, 0xe, 0x1],
                'c': '#e6ab3e',
                't': 0x2
            }, {
                'p': [0x231, 0x13, -0xc9],
                's': [0x2, 0xe, 0x1],
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x231, 0x21, -0xc7],
                's': [0x2, 0x1, 0x5],
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x235, 0x21, -0xc7],
                's': [0x6, 0x1, 0x5],
                'c': '#e6ab3e',
                't': 0x2
            }, {
                'p': [0x228, 0x48, -0xa5],
                's': [0x1, 0x7, 0x1],
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x21b, 0x2b, -0xb4],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x228, 0x35, -0xa5],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x132, 0x58, -0xa9],
                's': [0x36, 0x2c, 0x38],
                'c': '#ffd5b1'
            }, {
                'p': [0x132, 0x82, -0xa9],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xfa, 0x6c, -0xb4],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xfa, 0x58, -0xb4],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [0xe0, 0x58, -0xc2],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x114, 0x58, -0xc2],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf9, 0x58, -0xc2],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf9, 0x58, -0xa5],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xe0, 0x58, -0xa6],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x114, 0x58, -0xa6],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x108, 0x5d, -0xc4],
                's': [0xb, 0x1, 0x3],
                'c': '#dc7c7c',
                't': 0x2
            }, {
                'p': [0x108, 0x55, -0xc6],
                's': [0xb, 0x9, 0x1],
                'c': '#d26262',
                't': 0x2
            }, {
                'p': [0xdd, 0x66, -0xad],
                's': [0x1, 0x8, 0x7],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0xf4, 0x5d, -0xc2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x11d, 0x95, -0xac],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x110, 0x6d, -0xbb],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [0x11d, 0x83, -0xac],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdf, 0x6d, -0xad],
                's': [0x3, 0x1, 0x7],
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [0x88, 0x54, -0xc6],
                's': [0x28, 0x2, 0x9],
                'c': '#7d7d7d',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9a, 0x54, -0xc9],
                's': [0x2, 0x8, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x76, 0x54, -0xc9],
                's': [0x2, 0x8, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x88, 0x5c, -0xc9],
                's': [0x28, 0x1, 0x3],
                'c': '#7d7d7d',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9a, 0x5c, -0xc3],
                's': [0x3, 0x1, 0x9],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x76, 0x5c, -0xc3],
                's': [0x3, 0x1, 0x9],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x7c, 0x4f, -0xcb],
                's': [0x5, 0xe, 0x1],
                'l': 0x1,
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x7c, 0x5d, -0xc9],
                's': [0x5, 0x1, 0x5],
                'l': 0x1,
                'c': '#8de63e',
                't': 0x2
            }, {
                'p': [0x110, 0x58, -0x9c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [0x110, 0x64, -0x9c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [0x88, 0x56, -0xc5],
                's': [0x1, 0x11, 0x1],
                'l': 0x1,
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x96, 0x56, -0xc5],
                's': [0x1, 0x11, 0x1],
                'l': 0x1,
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x8f, 0x67, -0xc5],
                's': [0xf, 0x1, 0x1],
                'l': 0x1,
                'c': '#393939',
                't': 0x2
            }, {
                'p': [0x8f, 0x56, -0xc4],
                's': [0xd, 0x11, 0x2],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [-0xe8, 0x50, 0x91],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xea, 0x51, 0x91],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xe1, 0x5f, 0x65],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xe3, 0x60, 0x65],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x7f, 0x58, 0x5e],
                's': [0x8, 0x3, 0x1a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x7a, 0x42, 0x5e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x7c, 0x43, 0x5e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xd, 0xb, -0x101],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -0.35, 3.14],
                'c': '#846d22'
            }, {
                'p': [0x6f, 0x4e, 0x1c],
                's': [0x2f, 0x2, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x6f, 0x4e, 0x24],
                's': [0x2f, 0x2, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x77, 0x50, 0x20],
                's': [0x8, 0x1, 0xb],
                'l': 0x1,
                'c': '#d28d8d',
                't': 0x2
            }, {
                'p': [0x77, 0x47, 0x1b],
                's': [0x8, 0x9, 0x1],
                'l': 0x1,
                'c': '#d28d8d',
                't': 0x2
            }, {
                'p': [0x63, 0x47, 0x25],
                's': [0x3, 0x9, 0x1],
                'l': 0x1,
                'c': '#bbd9bb',
                't': 0x2
            }, {
                'p': [0x63, 0x50, 0x20],
                's': [0x3, 0x1, 0xb],
                'l': 0x1,
                'c': '#bbd9bb',
                't': 0x2
            }, {
                'p': [0x63, 0x4b, 0x1b],
                's': [0x3, 0x5, 0x1],
                'l': 0x1,
                'c': '#bbd9bb',
                't': 0x2
            }, {
                'p': [0x77, 0x4d, 0x25],
                's': [0x8, 0x3, 0x1],
                'l': 0x1,
                'c': '#d28d8d',
                't': 0x2
            }, {
                'p': [-0xc8, 0x5f, -0x114],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xca, 0x60, -0x114],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xc8, 0x5f, -0x138],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xca, 0x60, -0x138],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x7c, 0x44, -0x21],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x7a, 0x45, -0x21],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x14, 0x41, -0xe1],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x16, 0x42, -0xe1],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x9e, 0x46, -0x13e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xa0, 0x47, -0x13e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x2a, 0x60, -0x162],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x2a, 0x61, -0x164],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x8, 0x43, -0x150],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x8, 0x44, -0x152],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x5a, 0x4e, -0x15a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x5a, 0x4f, -0x15c],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x37, 0xd, 0xb],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x35, 0xd, -0x13],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x35, 0xd, 0xb],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [0x35, 0x2d, -0x4],
                's': [0x4, 0x2, 0x1c],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x1, 0xd, 0xb],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x1, 0xd, -0x13],
                's': [0x4, 0x22, 0x2],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x1, 0x2d, -0x4],
                's': [0x4, 0x2, 0x1c],
                'l': 0x1,
                'c': '#575757',
                't': 0x2
            }, {
                'p': [-0x70, 0x2d, 0x51],
                's': [0x2, 0x42, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe1, 0x67, -0x80],
                's': [0x2b, 0x2, 0x48],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xe1, 0x50, -0x80],
                's': [0x2b, 0x8, 0x48],
                'c': '#ffd5b1'
            }, {
                'p': [-0xce, 0x58, -0xa2],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xce, 0x58, -0x6d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x58, -0xa2],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x58, -0x6d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x58, -0x88],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xce, 0x58, -0x88],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xc9, 0x7c, -0x68],
                's': [0x1, 0x7, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc9, 0x69, -0x68],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xd5, 0x69, -0x71],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xcd, 0x50, -0xa9],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xd8, 0x50, -0xaa],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0xcf, 0x69, -0x91],
                's': [0x9, 0x1, 0xd],
                'l': 0x1,
                'c': '#6383ed',
                't': 0x2
            }, {
                'p': [-0xcb, 0x5f, -0x91],
                's': [0x1, 0xa, 0xd],
                'l': 0x1,
                'c': '#6383ed',
                't': 0x2
            }, {
                'p': [-0xc8, 0x21, -0x102],
                's': [0x2, 0x53, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc8, 0x74, -0x106],
                's': [0x2, 0x12, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc8, 0x74, -0x103],
                's': [0x2, 0x2, 0x4],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xe2, 0x44, -0xf4],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [-0xda, 0x44, -0xea],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0x10e, 0x22, -0x4c],
                's': [0x6, 0x30, 0x18],
                'c': '#ffd5b1',
                'bo': 0x1
            }, {
                'p': [0x10f, 0x51, -0x4c],
                's': [0xc, 0x3, 0x1a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x10a, 0x3b, -0x4c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x10c, 0x3c, -0x4c],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x11c, 0x3e, 0x5e],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x11e, 0x3f, 0x5e],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x11c, 0x41, 0x3],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x11e, 0x42, 0x3],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xbd, 0x4b, 0x61],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0xbb, 0x4c, 0x61],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xbd, 0x4b, 0x33],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0xbb, 0x4c, 0x33],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xdc, 0x41, -0xb5],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xde, 0x42, -0xb5],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xc1, 0x22, -0x124],
                's': [0x44, 0x14, 0x71],
                'c': '#9d8672',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xa1, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x107, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0xc3, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0xe4, 0x8d, 0x107],
                's': [0x11, 0x5, 0x3],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x130, 0x8d, 0xe1],
                's': [0x5, 0x5, 0x11],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x130, 0x8d, 0x8d],
                's': [0x5, 0x5, 0x11],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x130, 0x8d, 0xb3],
                's': [0x5, 0x5, 0x11],
                'c': '#313131',
                't': 0xb
            }, {
                'p': [-0x13f, 0x22, -0x46],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.87, 0x0]
            }, {
                'p': [-0x14f, 0x2e, 0x4],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14]
            }, {
                'p': [-0x181, 0x32, -0x2f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0]
            }, {
                'p': [0xb5, 0x78, -0x128],
                's': [0x2b, 0x2, 0x48],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [0xb5, 0x61, -0x127],
                's': [0x2b, 0x8, 0x48],
                'c': '#ffd5b1'
            }, {
                'p': [0xc8, 0x69, -0x143],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x69, -0x106],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x69, -0x121],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa1, 0x69, -0x13d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc2, 0x7a, -0x108],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0xc9, 0x61, -0x14a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [0xbe, 0x61, -0x14b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa3, 0x7a, -0x132],
                's': [0x9, 0x1, 0xd],
                'l': 0x1,
                'c': '#3661f0',
                't': 0x2
            }, {
                'p': [0x9f, 0x70, -0x132],
                's': [0x1, 0xa, 0xd],
                'l': 0x1,
                'c': '#3661f0',
                't': 0x2
            }, {
                'p': [0xac, 0x7a, -0x10a],
                's': [0x9, 0x1, 0xd],
                'l': 0x1,
                'c': '#66b18e',
                't': 0x2
            }, {
                'p': [0xac, 0x6e, -0x104],
                's': [0x9, 0xc, 0x1],
                'l': 0x1,
                'c': '#66b18e',
                't': 0x2
            }, {
                'p': [0xb5, 0x5f, -0x15a],
                's': [0x2c, 0x20, 0x36],
                'c': '#ffd5b1'
            }, {
                'p': [0xb5, 0x7f, -0x15a],
                's': [0x2e, 0x2, 0x38],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0xc9, 0x69, -0x121],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc9, 0x69, -0x106],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc8, 0x69, -0x13d],
                's': [0x2, 0x13, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xc5, 0x62, -0xfd],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [0xa4, 0x69, -0x10a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0]
            }, {
                'p': [0x9e, 0x21, -0x155],
                's': [0x2, 0x50, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x9e, 0x71, -0x14b],
                's': [0x2, 0x13, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x9e, 0x71, -0x151],
                's': [0x2, 0x2, 0xa],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xb1, 0x7d, -0x15a],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xb1, 0x90, -0x15a],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xb1, 0x95, -0x158],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xa6, 0x30, -0x50],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xa6, 0x2f, -0x51],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x46, 0x5c, -0x52],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x46, 0x5b, -0x53],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x10c, 0x3e, 0x83],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x10c, 0x3d, 0x82],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x43, 0x52, 0xe],
                's': [0xf, 0x1, 0x4],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x43, 0x51, 0xd],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x50, 0x47, -0x13],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0x52, 0x48, -0x13],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x87, 0x5a, -0x27],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x85, 0x5b, -0x27],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x66, 0x41, -0x106],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x64, 0x42, -0x106],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xe4, 0x46, -0x13c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0xe2, 0x47, -0x13c],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x97, 0x40, -0x7b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x97, 0x41, -0x7d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xe9, 0x41, -0x7b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xe9, 0x42, -0x7d],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x97, 0x30, -0xf],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x97, 0x31, -0x11],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xd3, 0x43, -0xea],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xd2, 0x44, -0xec],
                's': [0x6, 0x1, 0x10],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0xc8, 0x36, -0xcc],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xca, 0x37, -0xcc],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x44, 0x5b, -0x15],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x44, 0x5c, -0x17],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x35, 0x5b, -0x36],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x37, 0x5c, -0x36],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x3f, 0x40, -0x81],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x3f, 0x41, -0x83],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x10, 0x40, -0x81],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x10, 0x41, -0x83],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x4f, 0x40, -0x48],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x4f, 0x41, -0x4a],
                's': [0x6, 0x1, 0xf],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x1c, 0x21, -0x82],
                's': [0x2, 0x3d, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x11c, 0x21, 0x17],
                's': [0x2, 0x2b, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x11c, 0x4e, 0x11],
                's': [0x2, 0xf, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x11c, 0x4c, 0x14],
                's': [0x2, 0x2, 0x8],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdb, 0x21, -0x51],
                's': [0x2, 0x2f, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdc, 0x20, -0x84],
                's': [0x2, 0x28, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdc, 0x48, -0x87],
                's': [0x2, 0x2, 0x8],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xdc, 0x4a, -0x8a],
                's': [0x2, 0x10, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x8c, 0x22, -0xcb],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x7e, 0x22, -0xcb],
                's': [0x1, 0x11, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x85, 0x33, -0xcb],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#a5a5a5',
                't': 0x2
            }, {
                'p': [-0x85, 0x22, -0xca],
                's': [0xd, 0x11, 0x3],
                'l': 0x1,
                'c': 0x7d736b,
                't': 0x2
            }, {
                'p': [0x161, 0x15, -0x4d],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [0x168, 0x1d, -0x7f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-0.01, -1.4, -0.01]
            }, {
                'p': [0x10a, 0xb, 0xe7],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [0xe2, 0x0, -0x1b2],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [-0x9c, 0x2b, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.13, -3.14]
            }, {
                'p': [-0x9b, 0x2b, -0xa4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [-0xc6, 0x2b, -0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [-0xa0, 0x2b, -0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [-0xc4, 0x2b, -0x93],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.79, -3.14]
            }, {
                'p': [0x69, 0x20, -0xcb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.97, 0x0]
            }, {
                'p': [0x84, 0x20, -0xcb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.08, -3.14]
            }, {
                'p': [0xac, 0x20, -0xe7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0x9a, 0x20, -0xc8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.8, 0x0]
            }, {
                'p': [0xbf, 0x20, -0xe1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.8, 0x0]
            }, {
                'p': [0xc7, 0x20, -0xe7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.45, 3.14]
            }, {
                'p': [0xd8, 0x20, -0xbf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.45, 3.14]
            }, {
                'p': [0xf7, 0x20, -0xc9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [0x111, 0x20, -0xce],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [0x118, 0x20, -0xdd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.97, 3.14]
            }, {
                'p': [0x108, 0x20, -0xed],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.95, 0x0]
            }, {
                'p': [0xe6, 0x20, -0xea],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.47, -3.14]
            }, {
                'p': [0xef, 0x20, -0x106],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.47, -3.14]
            }, {
                'p': [0x113, 0x20, -0x10f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0xf0, 0x20, -0x12d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0x113, 0x20, -0x140],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.97, -3.14]
            }, {
                'p': [0xfd, 0x20, -0x14b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.62, 0x0]
            }, {
                'p': [0xac, 0x20, -0xa1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.45, 3.14]
            }, {
                'p': [0xd8, 0x20, -0x9d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.77, 0x0]
            }, {
                'p': [0xab, 0x20, -0x89],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.59, -3.14]
            }, {
                'p': [0xbd, 0x20, -0x5b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.59, -3.14]
            }, {
                'p': [0xb6, 0x20, -0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [0x9e, 0x20, -0x78],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [0xe1, 0x20, -0x54],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.59, -3.14]
            }, {
                'p': [0xd8, 0x20, -0x80],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.12, -1.5, -3.12]
            }, {
                'p': [0xfa, 0x20, -0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.59, 0x0]
            }, {
                'p': [0x101, 0x20, -0x70],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.11, 0x0]
            }, {
                'p': [0x10d, 0x20, -0x6d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.24, 0x0]
            }, {
                'p': [0x10a, 0x20, -0x5a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.41, 0x0]
            }, {
                'p': [0xe6, 0x20, -0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.41, -3.14]
            }, {
                'p': [0x10e, 0x20, -0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.41, -3.14]
            }, {
                'p': [0x118, 0x20, -0x31],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.41, -3.14]
            }, {
                'p': [0x118, 0x20, -0x6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.11, 0x0]
            }, {
                'p': [0xe7, 0x20, -0x17],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.06, 0x0]
            }, {
                'p': [0xda, 0x20, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.81, 0x0]
            }, {
                'p': [0x126, 0x20, 0x1f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.76, 0x0]
            }, {
                'p': [0x126, 0x20, 0x48],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.76, 0x0]
            }, {
                'p': [0xfb, 0x20, 0x4d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.28, 0x0]
            }, {
                'p': [0xc7, 0x20, 0x2b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xbf, 0x20, 0x19],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xc0, 0x20, 0x4a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xc0, 0x20, 0x55],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xc2, 0x20, 0x71],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0xd2, 0x20, 0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.82, -3.14]
            }, {
                'p': [0xc5, 0x20, 0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.82, -3.14]
            }, {
                'p': [0xe4, 0x20, 0x78],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.34, -3.14]
            }, {
                'p': [0xf2, 0x20, 0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.75, 0x0]
            }, {
                'p': [0xd9, 0x20, 0x73],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.34, -3.14]
            }, {
                'p': [0x117, 0x20, 0x62],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.34, -3.14]
            }, {
                'p': [0x11a, 0x20, 0x56],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.75, 0x0]
            }, {
                'p': [0x89, 0x20, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0x90, 0x20, 0x15],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.58, -3.14]
            }, {
                'p': [0x60, 0x20, 0x1a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.99, -3.14]
            }, {
                'p': [0x6a, 0x20, -0x11],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.99, -3.14]
            }, {
                'p': [0x39, 0x2f, 0x7c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x67, 0x2f, 0x7d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0]
            }, {
                'p': [0x7b, 0x2f, 0x74],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0]
            }, {
                'p': [0x5e, 0x2f, 0x57],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x30, 0x44, 0x18],
                's': [0x2, 0x2, 0x1e],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [-0x2d, 0x37, -0x19],
                's': [0x2, 0x3, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x2e, 0x44, -0xc],
                's': [0x2, 0x2, 0x1e],
                'l': 0x1,
                'c': 0x919191,
                't': 0x2
            }, {
                'p': [0x17, 0x37, 0x46],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x15, 0x37, 0x46],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x16, 0x36, 0x44],
                's': [0x2, 0x3, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0xe, 0x5b, -0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x1c, 0x5b, -0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x7, 0x5c, -0x82],
                's': [0x2d, 0x14, 0x1],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [-0x2a, 0x30, -0x7c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2f, 0x5b, -0x87],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.17, 0x0]
            }, {
                'p': [-0x11, 0x5b, -0x87],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0]
            }, {
                'p': [0x7, 0x5c, -0x82],
                's': [0x2e, 0x1, 0x2],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [0x26, 0x67, -0x8f],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.17, 0x0]
            }, {
                'p': [-0x10, 0x62, -0x88],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0]
            }, {
                'p': [-0x4c, 0x6a, -0x96],
                's': [0x22, 0x14, 0x28],
                'c': '#ffd5b1'
            }, {
                'p': [-0x4c, 0x7e, -0x96],
                's': [0x24, 0x3, 0x2a],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x3f, 0x7a, -0x87],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x3f, 0x8d, -0x87],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x3f, 0x92, -0x85],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x46, 0x6b, 0x19],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x46, 0x7e, 0x19],
                's': [0x1, 0x6, 0x1],
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x46, 0x83, 0x1b],
                's': [0x1, 0x3, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x1e, 0x5e, -0x82],
                's': [0x6, 0x2, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x20, 0x60, -0x82],
                's': [0x2, 0x6, 0x2],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xfa, 0x62, -0x12],
                's': [0x1f, 0x2, 0x48],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xec, 0x58, -0x25],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xec, 0x58, 0x10],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xec, 0x58, -0xa],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x108, 0x58, -0xa],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x108, 0x58, 0x10],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x107, 0x58, -0x25],
                's': [0x2, 0xd, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xf4, 0x64, -0x1e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [-0xeb, 0x6f, -0x2b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xef, 0x58, 0xb],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.52, 0x0]
            }, {
                'p': [-0xa6, 0x79, -0x15f],
                's': [0x3a, 0x1, 0x22],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0xa6, 0x65, -0x15f],
                's': [0x3a, 0x5, 0x22],
                'c': '#ffd5b1'
            }, {
                'p': [-0xc0, 0x65, -0x16d],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x8c, 0x65, -0x16d],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xa7, 0x65, -0x16d],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xa7, 0x65, -0x150],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xc0, 0x65, -0x151],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x8c, 0x65, -0x151],
                's': [0x2, 0x16, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0x88, 0x73, -0x158],
                's': [0x1, 0x8, 0x7],
                'l': 0x1,
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [-0xb3, 0x6a, -0x153],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x90, 0x7a, -0x166],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0x8a, 0x7a, -0x158],
                's': [0x3, 0x1, 0x7],
                'l': 0x1,
                'c': '#e63f3f',
                't': 0x2
            }, {
                'p': [-0x5f, 0x79, -0x17f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0x6e, 0x65, -0x161],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0xde, 0x65, -0x16a],
                's': [0x36, 0x2c, 0x38],
                'c': '#ffd5b1'
            }, {
                'p': [-0xde, 0x8f, -0x16a],
                's': [0x3a, 0x3, 0x3e],
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x2b, 0x37, -0x19],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0x2d, 0x37, -0x1b],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0x2b, 0x37, -0x1b],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0xde, 0x55, 0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0x108, 0x55, 0x84],
                's': [0x2, 0x17, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf3, 0x57, 0x83],
                's': [0x2d, 0x14, 0x1],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [0xd9, 0x55, 0x86],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0]
            }, {
                'p': [0xf3, 0x57, 0x82],
                's': [0x2e, 0x1, 0x2],
                'c': '#4d4d4d',
                't': 0x2
            }, {
                'p': [0xd5, 0x5d, 0x89],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 1.21, 0x0]
            }, {
                'p': [0x145, 0x39, -0x4],
                's': [0x12, 0x2e, 0x26],
                'c': '#ffd5b1'
            }, {
                'p': [0x145, 0x67, -0x4],
                's': [0x15, 0x3, 0x28],
                'c': '#525252',
                't': 0xb
            }, {
                'p': [0x144, 0x5f, 0xa],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x144, 0x72, 0xa],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0x144, 0x77, 0xc],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x53, 0x79, -0x17c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1
            }, {
                'p': [-0xcc, 0x89, -0x131],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.88, 0x0]
            }, {
                'p': [-0xcb, 0x81, -0x130],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0xcc, 0x7f, -0x126],
                's': [0x2, 0x19, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xcb, 0x83, -0x116],
                's': [0x1, 0x14, 0x2c],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xcb, 0x83, -0x116],
                's': [0x3, 0x1, 0x2d],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xcc, 0x7f, -0x106],
                's': [0x2, 0x19, 0x2],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [-0xca, 0x81, -0x137],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.18, 0x0]
            }, {
                'p': [-0xd6, 0x81, -0x103],
                's': [0xc, 0xc, 0xc],
                'i': 0x1,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0]
            }, {
                'p': [-0xe3, 0x81, -0xff],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, -0.17, 0x0]
            }, {
                'p': [-0xc9, 0x88, -0x153],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc9, 0x9b, -0x153],
                's': [0x1, 0x6, 0x1],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0xc9, 0xa0, -0x151],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [0xd2, 0x55, 0x8a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2,
                'l': 0x1,
                'r': [0x0, 0.34, 0x0]
            }, {
                'p': [0x27, 0xc, -0x10],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.16, 0x0]
            }, {
                'p': [-0x1b, 0xc, 0x7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.76, -3.14]
            }, {
                'p': [-0x3d, 0xc, 0xa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.81, -3.14]
            }, {
                'p': [-0x3b, 0x16, -0x3f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.24, 0x0]
            }, {
                'p': [-0x4d, 0x16, -0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.41, 0x0]
            }, {
                'p': [-0x80, 0x20, -0x2a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x57, 0x20, 0x2f],
                's': [0x3f, 0x2, 0x43],
                'l': 0x1,
                'c': '#393939',
                't': 0xb
            }, {
                'p': [-0x76, 0x18, 0x99],
                's': [0x5, 0x7f, 0x6],
                'v': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0xe, 0x24, -0x101],
                's': [0x5, 0x7b, 0x6],
                'v': 0x1,
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x1b6, 0x20, 0x42],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.17, -3.14]
            }, {
                'p': [0x18d, 0x20, 0xf],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0]
            }, {
                'p': [0x16, 0x2f, 0x3f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [0x22, 0x2f, 0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x20, 0x2f, 0x44],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0]
            }, {
                'p': [-0x2d, 0x2f, 0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [-0x1d, 0x2f, 0x2a],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.06, 1.56, 3.06]
            }, {
                'p': [-0x2a, 0x2f, -0xd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.06, 1.56, 3.06]
            }, {
                'p': [-0x2a, 0x2f, -0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x9, 0x2f, -0x1f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [-0x2c, 0x2f, -0x5b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [-0x20, 0x2f, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x2a, 0x2f, -0x38],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x2a, 0x2f, -0x58],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x20, 0x2f, -0x1d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.23, 3.14]
            }, {
                'p': [0x8a, 0x20, -0x77],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [0x8a, 0x20, -0x55],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.98, -3.14]
            }, {
                'p': [-0xa, 0x2f, -0x29],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.19, 3.14]
            }, {
                'p': [0xa, 0x2f, -0x11],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.06, 0x0]
            }, {
                'p': [0x105, 0x20, 0x50],
                's': [0x9, 0xe, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x10f, 0x20, 0x50],
                's': [0xc, 0x3, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [0x10f, 0x2c, 0x50],
                's': [0xb, 0x3, 0x4],
                'c': '#7a6a5d',
                't': 0xb
            }, {
                'p': [0x113, 0x23, 0x4e],
                's': [0x3, 0xa, 0x1],
                'pe': 0x1,
                'c': '#b4b4b4',
                't': 0x2
            }, {
                'p': [0x110, 0x22, 0x4e],
                's': [0x3, 0xc, 0x1],
                'pe': 0x1,
                'c': '#898989',
                't': 0x2
            }, {
                'p': [0x10d, 0x23, 0x4e],
                's': [0x3, 0xa, 0x1],
                'pe': 0x1,
                'c': '#cacaca',
                't': 0x2
            }, {
                'p': [0x10a, 0x23, 0x4e],
                's': [0x3, 0xb, 0x1],
                'pe': 0x1,
                'c': '#898989',
                't': 0x2
            }, {
                'p': [0xcb, 0x2f, 0x50],
                's': [0xb, 0x1, 0x4],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x71, 0x2e, -0x13f],
                's': [0x5, 0x1, 0xb],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x71, 0x2e, -0x123],
                's': [0x5, 0x2, 0xb],
                'c': '#9d8672',
                't': 0xb
            }, {
                'p': [-0x68, 0x21, -0x149],
                's': [0x7, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.36, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x32, 0x4d, -0x24],
                's': [0x8, 0x1, 0x65],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1
            }, {
                'p': [-0x34, 0x4d, -0x19],
                's': [0x8, 0x1, 0xd4],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1,
                'd': 0x2
            }, {
                'p': [-0x29, 0x4d, 0x4d],
                's': [0x22, 0x1, 0x8],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1,
                'd': 0x1
            }, {
                'p': [0x1a, 0x4d, 0x4d],
                's': [0x18, 0x1, 0x8],
                'i': 0x9,
                'v': 0x1,
                'b': -0.1,
                'd': 0x1
            }, {
                'p': [0xb0, 0x43, -0xea],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xb0, 0x44, -0xec],
                's': [0x6, 0x1, 0x10],
                'l': 0x1,
                'r': [0x0, 1.57, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [-0x2e, 0x5a, -0xc3],
                's': [0x1, 0x13, 0x1],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x2e, 0x6d, -0xc3],
                's': [0x1, 0x5, 0x1],
                'l': 0x1,
                'r': [-0.44, 0x0, 0x0],
                'c': '#2f2f2f',
                't': 0x5
            }, {
                'p': [-0x34, 0xc, -0x12],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.76, -3.14]
            }, {
                'p': [0x2, 0xc, -0xf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.16, 0x0]
            }, {
                'p': [-0xd9, 0x20, -0x19],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.53, 0x0]
            }, {
                'p': [-0x95, 0x20, -0xfc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.62, 0x0],
                'c': '#d2b559'
            }, {
                'p': [-0x6e, 0x32, 0x92],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.87, 0x0]
            }, {
                'p': [-0x7c, 0x32, 0xa1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.26, 0x0]
            }, {
                'p': [0xc3, 0x20, -0xc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.28, 0x0]
            }, {
                'p': [-0xe1, 0x2f, 0x84],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.04, 3.14]
            }, {
                'p': [-0x87, 0x20, -0x46],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.97, 0x0]
            }, {
                'p': [0xa4, 0xc0, 0x8e],
                's': [0x4, 0x4, 0x28],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xa4, 0xc0, 0x8e],
                's': [0x29, 0x4, 0x4],
                'c': '#7d7d7d',
                't': 0x2
            }, {
                'p': [0xf0, 0x21, -0xca],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x10b, 0x21, -0x65],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0xd8, 0x20, -0x7],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x11e, 0x20, 0x1f],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x10d, 0x20, -0x35],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x103, 0x20, 0x4a],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x15, 0xc, 0x7],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x8, 0xd, -0xf],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.27, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x9d, 0x20, 0x42],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0xdd, 0x21, 0x17],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [3.14, -1.49, 3.14],
                'c': '#9d8672'
            }, {
                'p': [-0x88, 0x30, 0x8a],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 1.14, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x81, 0x21, -0xe],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.04, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x8f, 0x21, -0xfb],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [-0xcc, 0x21, -0xe7],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [0x99, 0x21, -0x137],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x7c, 0x21, -0xcb],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.09, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0xd8, 0x21, -0x8d],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x96, 0x21, 0x15],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x16, 0x30, 0x55],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.34, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x24, 0x30, 0x39],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.34, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x36, 0x30, 0x55],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 0.18, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x28, 0x30, -0x15],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x11, 0x30, 0x47],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0xa, 0x37, -0x17],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0xa, 0x37, -0x19],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [0x8, 0x35, -0x18],
                's': [0x2, 0x3, 0x2],
                'l': 0x1,
                'c': '#571f1f',
                't': 0x5
            }, {
                'p': [-0xc1, 0x20, -0x29],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, -0.87, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0xc3, 0x20, -0x23],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x85, 0x20, -0x14],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -0.43, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x97, 0x21, -0xd0],
                's': [0x4, 0x2, 0x4],
                'l': 0x1,
                'c': '#9d8672'
            }, {
                'p': [0xdf, 0x20, 0x4d],
                's': [0x3, 0x2, 0x3],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0xf8, 0x20, 0x4b],
                's': [0x2, 0x2, 0x2],
                'l': 0x1,
                'r': [0x0, -1.39, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0xb9, 0x30, 0x84],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                'r': [0x0, 1.14, 0x0],
                'c': '#9d8672'
            }, {
                'p': [-0x14, 0x30, 0x4c],
                's': [0x6, 0x2, 0x4],
                'l': 0x1,
                'r': [0x0, 1.49, 0x0],
                'c': '#9d8672'
            }, {
                'p': [0x2c, 0x2f, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.86, 3.14]
            }, {
                'p': [0x7, 0x2f, -0x7f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.32, 0x0]
            }]
        }, {
            'name': 'Subzero',
            'ambInd': 0x1,
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0x800,
            'terrainHeight': 0x800,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#a0a0a0',
            'terrainGrsCol': '#4a6904',
            'terrainDrtCol': '#8c6835',
            'skyDome': !0x1,
            'skyDomeCol0': '#ffffff',
            'skyDomeCol1': '#7196a2',
            'skyDomeCol2': '#184452',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 0x400,
            'ambient': 0x828c96,
            'light': 0xf5f8fa,
            'sky': 0xd3d9dc,
            'fog': 0xc6d3d9,
            'fogD': 601.943118216585,
            'dthY': -0x64,
            'camPos': [-0xd, 0x5d, -0x6],
            'spawns': [[-0x29, 0x43, -0x3a, 0x0, 0x0, 0x0], [-0xbb, 0x36, -0xee, 0x0, 0x2, 0x0], [-0x12b, 0x36, 0x2, 0x0, 0x3, 0x0], [0x83, 0x43, -0xcb, 0x0, 0x3, 0x0], [0xbb, 0x43, -0x150, 0x0, 0x1, 0x0], [0x15e, 0x43, -0x11f, 0x0, 0x1, 0x0], [0x13f, 0x56, -0x3b, 0x0, 0x0, 0x0], [0xb2, 0x54, -0x31, 0x0, 0x0, 0x0], [0x8c, 0x54, -0xd, 0x0, 0x1, 0x0], [-0xa2, 0x43, 0x3f, 0x0, 0x0, 0x0]],
            'ambO': 0x1,
            'ambS': 0x5,
            'objects': [{
                'p': [-0x1, 0x40, 0x0],
                's': [0x8c, 0x2, 0x8e],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x64, 0x40, 0x32],
                's': [0x3a, 0x2, 0x2a],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x95, 0x35, 0x8],
                's': [0x28, 0xd, 0x7e],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x8b, 0x33, -0x6f],
                's': [0xac, 0x2, 0x82],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x115, 0x33, -0x4d],
                's': [0x68, 0x2, 0xca],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x5, 0x40, -0x7b],
                's': [0x3c, 0x2, 0x68],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x36, 0x33, -0x8f],
                's': [0x3a, 0xf, 0x2a],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xf0, 0x41, -0x145],
                's': [0x84, 0x2, 0x26],
                'c': 0x575757,
                't': 0xb
            }, {
                'p': [0xd5, 0x40, -0xcf],
                's': [0x28, 0x2, 0x3f],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xd5, 0x40, -0x70],
                's': [0x27, 0x14, 0x25],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x7c, 0x33, -0x11d],
                's': [0xcb, 0x2, 0x32],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc6, 0x32, -0xda],
                's': [0x26, 0x2, 0x54],
                'c': 0x737373,
                't': 0x1
            }, {
                'p': [0x157, 0x40, -0x106],
                's': [0x4d, 0x2, 0x48],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x157, 0x40, -0x7a],
                's': [0x52, 0x2, 0xd9],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x147, 0x40, -0xb],
                's': [0x8c, 0x14, 0x81],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x146, 0xb, -0x4d],
                's': [0x9, 0x2f, 0x278],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [-0xaab, 0xb, -0x4d],
                's': [0x14f2, 0x1f, 0x2d05],
                'l': 0x1,
                'c': 0x4f677d,
                't': 0x5
            }, {
                'p': [-0x122, 0x33, -0xd9],
                's': [0x4e, 0x38, 0x50],
                'c': 0x8e8d7a,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x33, -0xb2],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x148, 0x38, -0xb2],
                's': [0x4, 0x33, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x33, -0x100],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x122, 0x4c, -0xb2],
                's': [0x48, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x122, 0x67, -0xb2],
                's': [0x48, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x122, 0x33, -0xb2],
                's': [0x4, 0x46, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x4c, -0xd9],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0xfc, 0x67, -0xd9],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x10c, 0x71, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [-0x138, 0x71, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [-0x122, 0x6b, -0xd9],
                's': [0x4d, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x122, 0x78, -0xd9],
                's': [0x5, 0x5, 0x59],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x10b, 0x73, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x139, 0x73, -0xd9],
                's': [0x2d, 0x2, 0x54],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x122, 0x7d, -0xd9],
                's': [0x5, 0x2, 0x59],
                't': 0x5
            }, {
                'p': [-0x114, 0x33, -0xb2],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x108, 0x33, -0xb2],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x10e, 0x47, -0xb2],
                's': [0xe, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x122, 0x6f, -0xd9],
                's': [0x37, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x122, 0x73, -0xd9],
                's': [0x22, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x122, 0x77, -0xd9],
                's': [0xd, 0x2, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0x13f, 0x38, -0xc6],
                's': [0x9, 0x48, 0x14],
                'c': 0x7f7f7f,
                't': 0xb
            }, {
                'p': [-0xea, 0x33, -0xd4],
                's': [0x22, 0x28, 0x60],
                'c': 0x878787,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x97, 0x33, -0xd4],
                's': [0x3c, 0x28, 0x60],
                'c': 0x7f7f7f,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0xba, 0x5a, -0xd4],
                's': [0x80, 0x1f, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xf9, 0x5b, -0xa6],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xcf, 0x5b, -0xa6],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa5, 0x5b, -0xa6],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x7b, 0x5b, -0xa6],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xd9, 0x35, -0xa4],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb5, 0x35, -0xa4],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc7, 0x51, -0xa4],
                's': [0x21, 0x3, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xdd, 0x83, -0xd4],
                's': [0x46, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x787777,
                't': 0x2
            }, {
                'p': [-0xba, 0x8d, -0xd4],
                's': [0x7, 0x7, 0x6c],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0x96, 0x83, -0xd4],
                's': [0x49, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x787777,
                't': 0x2
            }, {
                'p': [-0x95, 0x86, -0xd4],
                's': [0x49, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0xba, 0x94, -0xd4],
                's': [0x7, 0x3, 0x6c],
                't': 0x5
            }, {
                'p': [-0xa5, 0x79, -0xa6],
                's': [0x4, 0x10, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xcf, 0x79, -0xa6],
                's': [0x4, 0x11, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xba, 0x79, -0xd4],
                's': [0x7d, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0xba, 0x7f, -0xd4],
                's': [0x5d, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0xba, 0x85, -0xd4],
                's': [0x3c, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0xba, 0x8b, -0xd4],
                's': [0x20, 0x4, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x87, 0x4c, -0xec],
                's': [0x9, 0x48, 0x14],
                'c': 0x575757,
                't': 0xb
            }, {
                'p': [-0x102, 0x33, -0x11e],
                's': [0x42, 0x3a, 0x38],
                'c': 0x7a858c,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x7b, 0x5b, -0x102],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xf9, 0x5b, -0x102],
                's': [0x4, 0x1e, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xcf, 0x5b, -0x102],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa5, 0x5b, -0x102],
                's': [0x4, 0x1a, 0x4],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xcf, 0x79, -0x102],
                's': [0x4, 0x11, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xa5, 0x79, -0x102],
                's': [0x4, 0x11, 0x4],
                'c': 0x848484,
                't': 0x2
            }, {
                'p': [-0xe2, 0x35, -0x105],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe2, 0x4d, -0x120],
                's': [0x4, 0x4, 0x32],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0xe2, 0x69, -0x120],
                's': [0x4, 0x4, 0x32],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x101, 0x76, -0x11f],
                's': [0x48, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x101, 0x71, -0x12f],
                's': [0x44, 0x2, 0x20],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x101, 0x70, -0x10b],
                's': [0x44, 0x2, 0x28],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x102, 0x6d, -0x11f],
                's': [0x42, 0x3, 0x38],
                'c': 0x7a858c,
                't': 0xa
            }, {
                'p': [-0x101, 0x73, -0x12f],
                's': [0x44, 0x2, 0x21],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x101, 0x7a, -0x11f],
                's': [0x48, 0x2, 0x4],
                't': 0x5
            }, {
                'p': [-0x102, 0x70, -0x11e],
                's': [0x42, 0x4, 0x26],
                'c': 0x7a858c,
                't': 0xa
            }, {
                'p': [-0x102, 0x74, -0x11f],
                's': [0x42, 0x3, 0x15],
                'c': 0x7a858c,
                't': 0xa
            }, {
                'p': [-0x101, 0x72, -0x10a],
                's': [0x44, 0x2, 0x29],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xe1, 0x33, -0x10f],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x33, -0x11b],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x47, -0x115],
                's': [0x2, 0x2, 0xe],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc1, 0x33, -0x149],
                's': [0x42, 0x26, 0x38],
                'c': 0x6c7f76,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xdf, 0x35, -0x12e],
                's': [0x4, 0x2a, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa1, 0x35, -0x12e],
                's': [0x4, 0x2a, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc0, 0x57, -0x12e],
                's': [0x3a, 0x8, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe2, 0x35, -0x13b],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc0, 0x60, -0x147],
                's': [0x44, 0x2, 0x39],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': 0x555555,
                't': 0x2
            }, {
                'p': [-0xc0, 0x62, -0x147],
                's': [0x44, 0x2, 0x39],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xc1, 0x59, -0x149],
                's': [0x42, 0x6, 0x38],
                'c': 0x6c7f76,
                't': 0xa
            }, {
                'p': [-0xc1, 0x5c, -0x153],
                's': [0x42, 0x3, 0x24],
                'c': 0x6c7f76,
                't': 0x5
            }, {
                'p': [-0xc1, 0x5f, -0x15b],
                's': [0x42, 0x3, 0x14],
                'c': 0x6c7f76,
                't': 0xa
            }, {
                'p': [-0xba, 0x33, -0x12e],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xae, 0x33, -0x12e],
                's': [0x2, 0x14, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb4, 0x47, -0x12e],
                's': [0xe, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd8, 0x33, -0xfe],
                's': [0x13, 0x2, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc3, 0x33, -0x101],
                's': [0xc, 0x2, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xb9, 0x33, -0xfe],
                's': [0x8, 0x2, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xd3, 0x33, -0xb7],
                's': [0xc, 0x2, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc9, 0x33, -0xb3],
                's': [0x8, 0x2, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xb7, 0x33, -0xb6],
                's': [0x8, 0x2, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xc5, 0x33, -0x3e],
                's': [0x38, 0x39, 0x50],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xe0, 0x33, -0x65],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe0, 0x33, -0x17],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x33, -0x17],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x33, -0x65],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x4d, -0x65],
                's': [0x32, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0xc5, 0x69, -0x65],
                's': [0x32, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x69, -0x3e],
                's': [0x3a, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x79, -0x3e],
                's': [0x41, 0x6, 0x6],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x74, -0x54],
                's': [0x3f, 0x2, 0x2b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x666666,
                't': 0x2
            }, {
                'p': [-0xc5, 0x74, -0x28],
                's': [0x3f, 0x2, 0x2c],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x666666,
                't': 0x2
            }, {
                'p': [-0xc5, 0x76, -0x27],
                's': [0x3f, 0x2, 0x2c],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xc5, 0x76, -0x55],
                's': [0x3f, 0x2, 0x2b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xc5, 0x7f, -0x3e],
                's': [0x41, 0x2, 0x6],
                't': 0x5
            }, {
                'p': [-0xc5, 0x6d, -0x3e],
                's': [0x38, 0x3, 0x52],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xba, 0x75, -0xd4],
                's': [0x7a, 0x4, 0x60],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x70, -0x3e],
                's': [0x38, 0x3, 0x42],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xc5, 0x73, -0x3e],
                's': [0x38, 0x4, 0x32],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xc5, 0x77, -0x3e],
                's': [0x38, 0x4, 0x1c],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0xe0, 0x33, -0x3e],
                's': [0x5, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xaa, 0x33, -0x3e],
                's': [0x5, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb0, 0x5c, -0x5a],
                's': [0x7, 0x27, 0xc],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [-0xe1, 0x33, -0x24],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x33, -0x30],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe1, 0x47, -0x2a],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x33, 0xe],
                's': [0x4a, 0x48, 0x46],
                'c': 0x607060,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xe9, 0x33, -0x14],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xe9, 0x33, 0x30],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0xa1, 0x33, 0x30],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa1, 0x33, -0x14],
                's': [0x4, 0x49, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x35, 0xe],
                's': [0x4d, 0xc, 0x49],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [-0xa0, 0x5b, 0xe],
                's': [0x2, 0x4, 0x40],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0xc5, 0x78, 0xe],
                's': [0x4c, 0x4, 0x40],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa0, 0x42, -0x9],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa0, 0x42, 0x3],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xa0, 0x54, -0x3],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x78, -0x14],
                's': [0x44, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x78, 0x30],
                's': [0x44, 0x4, 0x4],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0xc5, 0x88, 0xe],
                's': [0x5, 0x5, 0x50],
                'c': 0x969696,
                't': 0x2
            }, {
                'p': [-0xdb, 0x82, 0xe],
                's': [0x2a, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0xb0, 0x82, 0xe],
                's': [0x29, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0xc5, 0x7c, 0xe],
                's': [0x4a, 0x4, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xb0, 0x84, 0xe],
                's': [0x2b, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0xdb, 0x84, 0xe],
                's': [0x2c, 0x2, 0x4d],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0xc5, 0x8d, 0xe],
                's': [0x5, 0x2, 0x50],
                't': 0x5
            }, {
                'p': [-0xc5, 0x80, 0xe],
                's': [0x35, 0x4, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xc5, 0x88, 0xe],
                's': [0xb, 0x3, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xc5, 0x84, 0xe],
                's': [0x1f, 0x4, 0x46],
                'c': 0x607060,
                't': 0xa
            }, {
                'p': [-0xc5, 0x5b, -0x14],
                's': [0x44, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x119, 0x33, 0x40],
                's': [0x60, 0x3a, 0x50],
                'c': 0x735656,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x11a, 0x4e, 0x19],
                's': [0x58, 0x4, 0x4],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [-0x11a, 0x78, 0x40],
                's': [0x66, 0x7, 0x7],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x11a, 0x74, 0x2b],
                's': [0x64, 0x2, 0x30],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x11a, 0x73, 0x57],
                's': [0x64, 0x2, 0x31],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x11a, 0x76, 0x2a],
                's': [0x64, 0x2, 0x30],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x11a, 0x75, 0x58],
                's': [0x64, 0x2, 0x31],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x11a, 0x7f, 0x40],
                's': [0x66, 0x2, 0x7],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x119, 0x6d, 0x40],
                's': [0x60, 0x4, 0x50],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x119, 0x71, 0x40],
                's': [0x60, 0x4, 0x3a],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x119, 0x75, 0x40],
                's': [0x60, 0x4, 0x23],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x119, 0x79, 0x40],
                's': [0x60, 0x3, 0xf],
                'c': 0x695555,
                't': 0xa
            }, {
                'p': [-0x108, 0x33, 0x19],
                's': [0x2, 0x16, 0x4],
                'c': 0x898888,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xfc, 0x33, 0x19],
                's': [0x2, 0x16, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x102, 0x47, 0x19],
                's': [0xa, 0x2, 0x4],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x146, 0x3a, -0x4d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x3d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x5d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x6d],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x7e],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x8f],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0xa0],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0xb1],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x2c],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0x1b],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, -0xa],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, 0x7],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3a, 0x18],
                's': [0x5, 0x7, 0x5],
                'c': 0x7d7c7c,
                't': 0xb
            }, {
                'p': [-0x146, 0x3d, -0x4f],
                's': [0x2, 0x2, 0xcd],
                'c': 0xcfcfcf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x78, 0x33, -0x9f],
                's': [0x4, 0x37, 0x4],
                'c': 0x939393,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x33, -0x9f],
                's': [0x4, 0x37, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x33, -0x109],
                's': [0x4, 0x37, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x78, 0x33, -0x109],
                's': [0x4, 0x37, 0x4],
                'c': 0x7a7a7a,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x109],
                's': [0x4, 0x48, 0x5],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x9f],
                's': [0x4, 0x48, 0x5],
                'c': 0x8c8c8c,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x64, 0x72, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0x48, 0x7a, -0xd4],
                's': [0x6, 0x6, 0x77],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x2d, 0x72, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0x48, 0x4e, -0x109],
                's': [0x5c, 0x4, 0x4],
                'c': 0x757575,
                't': 0x2
            }, {
                'p': [-0x18, 0x4e, -0xd4],
                's': [0x4, 0x4, 0x66],
                'c': 0x7f7f7f,
                't': 0x2
            }, {
                'p': [-0x48, 0x4e, -0x9f],
                's': [0x5c, 0x4, 0x4],
                'c': 0x8c8c8c,
                't': 0x2
            }, {
                'p': [-0x78, 0x4e, -0xd4],
                's': [0x4, 0x4, 0x66],
                'l': 0x1,
                'c': 0x828282,
                't': 0x2
            }, {
                'p': [-0x48, 0x66, -0x9f],
                's': [0x5c, 0x4, 0x4],
                'c': 0x919191,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x66, -0x109],
                's': [0x5c, 0x4, 0x4],
                'c': 0x939393,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x33, -0xd4],
                's': [0x5, 0x37, 0x4],
                'c': 0x7f7f7f,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x18, 0x66, -0xd4],
                's': [0x4, 0x4, 0x66],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x78, 0x66, -0xd4],
                's': [0x4, 0x4, 0x66],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x2c, 0x75, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x65, 0x75, -0xd4],
                's': [0x38, 0x3, 0x72],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x48, 0x80, -0xd4],
                's': [0x6, 0x2, 0x77],
                't': 0x5
            }, {
                'p': [-0x6f, 0x33, -0x109],
                's': [0x2, 0x17, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x63, 0x33, -0x109],
                's': [0x2, 0x17, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x69, 0x48, -0x109],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x6c, 0x33, -0x164],
                's': [0x66, 0x3c, 0x5c],
                'c': 0x7d6565,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x3a, 0x35, -0x137],
                's': [0x4, 0x3b, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9e, 0x35, -0x137],
                's': [0x4, 0x3b, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9e, 0x35, -0x165],
                's': [0x4, 0x37, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x7c, 0x35, -0x137],
                's': [0x4, 0x4a, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x5c, 0x35, -0x137],
                's': [0x4, 0x4b, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x6c, 0x4f, -0x137],
                's': [0x60, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x6c, 0x6c, -0x137],
                's': [0x60, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x6c, 0x81, -0x164],
                's': [0x6, 0x6, 0x69],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x88, 0x79, -0x164],
                's': [0x39, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x595959,
                't': 0x2
            }, {
                'p': [-0x3a, 0x6c, -0x166],
                's': [0x4, 0x4, 0x5a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9e, 0x6c, -0x163],
                's': [0x4, 0x4, 0x54],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x89, 0x7c, -0x164],
                's': [0x39, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x6c, 0x87, -0x164],
                's': [0x6, 0x2, 0x69],
                't': 0x5
            }, {
                'p': [-0x4f, 0x7c, -0x164],
                's': [0x39, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x50, 0x79, -0x164],
                's': [0x39, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x5c5c5c,
                't': 0x2
            }, {
                'p': [-0x6c, 0x70, -0x164],
                's': [0x66, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x75, -0x164],
                's': [0x4d, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x7a, -0x164],
                's': [0x31, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x7f, -0x164],
                's': [0x16, 0x5, 0x5c],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x94, 0x33, -0x137],
                's': [0x2, 0x16, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x88, 0x33, -0x137],
                's': [0x2, 0x16, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x8e, 0x47, -0x137],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x65, 0x33, -0x14],
                's': [0x3c, 0x3e, 0x64],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x82, -0x14],
                's': [0x5, 0x5, 0x6c],
                'c': 0x969696,
                't': 0x2
            }, {
                'p': [-0x82, 0x33, 0x1d],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, 0x1d],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x47],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x33, -0x47],
                's': [0x4, 0x46, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x33, -0x79],
                's': [0x4, 0x46, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x80, 0x33, -0x79],
                's': [0x4, 0x46, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x4e, 0x33, -0x79],
                's': [0x4, 0x46, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x48, 0x33, -0x13],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x57, 0x1d],
                's': [0x36, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x65, 0x6e, 0x1d],
                's': [0x36, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x67, 0x5b, -0x79],
                's': [0x2e, 0x4, 0x4],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x34, 0x5b, -0x79],
                's': [0x30, 0x4, 0x4],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x31, 0x5b, -0x47],
                's': [0x2a, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x34, 0x75, -0x79],
                's': [0x30, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x67, 0x75, -0x79],
                's': [0x2e, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x57, 0x5],
                's': [0x3e, 0x4, 0x2c],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x80, 0x5b, -0x5f],
                's': [0x4, 0x4, 0x30],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x1a, 0x75, -0x60],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x1a, 0x5b, -0x60],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x54, 0x7a, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [-0x76, 0x7a, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, 0.53],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [-0x34, 0x75, -0x47],
                's': [0x30, 0x4, 0x4],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x82, 0x33, -0x45],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x82, 0x33, -0x13],
                's': [0x5, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x72, -0x14],
                's': [0x3d, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x65, 0x76, -0x14],
                's': [0x32, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [-0x65, 0x7a, -0x14],
                's': [0x23, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [-0x65, 0x7e, -0x14],
                's': [0x16, 0x4, 0x64],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [-0x65, 0x82, -0x14],
                's': [0x9, 0x1, 0x64],
                'c': 0x6a686e,
                't': 0x5
            }, {
                'p': [-0x77, 0x7c, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, 0.53],
                't': 0x5
            }, {
                'p': [-0x53, 0x7c, -0x14],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [-0x65, 0x87, -0x14],
                's': [0x5, 0x2, 0x6c],
                't': 0x5
            }, {
                'p': [-0x4d, 0x33, -0x60],
                's': [0x68, 0x44, 0x34],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x80, 0x75, -0x5f],
                's': [0x4, 0x4, 0x30],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x4d, 0x77, -0x60],
                's': [0x68, 0x5, 0x34],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [-0x4d, 0x81, -0x60],
                's': [0x72, 0x5, 0x5],
                'l': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x4d, 0x7d, -0x70],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x4d, 0x7d, -0x50],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x575757,
                't': 0x2
            }, {
                'p': [-0x4d, 0x7f, -0x71],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x4d, 0x7f, -0x4f],
                's': [0x6c, 0x2, 0x1f],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x4d, 0x86, -0x60],
                's': [0x72, 0x2, 0x5],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x4d, 0x7c, -0x60],
                's': [0x68, 0x4, 0x26],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [-0x4d, 0x80, -0x60],
                's': [0x68, 0x4, 0x10],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [-0x2e, 0x41, -0x4b],
                's': [0xc, 0x4d, 0x6],
                'c': 0xa2a2a2,
                't': 0xb
            }, {
                'p': [-0x19, 0x40, -0x66],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x19, 0x40, -0x5a],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x19, 0x54, -0x60],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x5c, 0x35, -0x57],
                's': [0x4d, 0xc, 0x49],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [0xaf, 0x42, -0xfe],
                's': [0x6, 0x5, 0x2e],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xaf, 0x67, -0x14e],
                's': [0x6, 0x15, 0x1b],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xf2, 0x42, -0x15b],
                's': [0x80, 0x3e, 0x7],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x10b, 0x42, -0xec],
                's': [0x4e, 0x31, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x42, -0x148],
                's': [0x6, 0x25, 0x2e],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xb7, 0x42, -0xd4],
                's': [0x26, 0x66, 0x26],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xef, 0x41, -0x103],
                's': [0x7d, 0x2, 0x26],
                'c': 0x575757,
                't': 0xb
            }, {
                'p': [0xf0, 0x41, -0x124],
                's': [0x7b, 0x2, 0x1c],
                'c': 0x662828,
                't': 0x5
            }, {
                'p': [-0x66, 0x42, 0x76],
                's': [0x7e, 0x26, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xa4, 0x42, 0x48],
                's': [0x4, 0x26, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x28, 0x42, 0x48],
                's': [0x4, 0x26, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x42, 0x48],
                's': [0x4, 0x3e, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x64, 0x48],
                's': [0x78, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x7e, 0x75],
                's': [0x6, 0x6, 0x66],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x43, 0x73, 0x75],
                's': [0x47, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x505050,
                't': 0x2
            }, {
                'p': [-0x89, 0x73, 0x75],
                's': [0x45, 0x3, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x505050,
                't': 0x2
            }, {
                'p': [-0x89, 0x76, 0x75],
                's': [0x47, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [-0x66, 0x84, 0x75],
                's': [0x6, 0x2, 0x66],
                't': 0x5
            }, {
                'p': [-0x42, 0x76, 0x75],
                's': [0x47, 0x2, 0x63],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [-0x66, 0x68, 0x76],
                's': [0x82, 0x6, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x66, 0x6e, 0x76],
                's': [0x61, 0x5, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x66, 0x73, 0x76],
                's': [0x46, 0x5, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x66, 0x78, 0x76],
                's': [0x2b, 0x5, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x66, 0x7d, 0x76],
                's': [0x11, 0x3, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x7f, 0x42, 0x48],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x8b, 0x42, 0x48],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x85, 0x55, 0x48],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc2, 0x33, 0x4d],
                's': [0x38, 0x31, 0x41],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0xb3, 0x69, 0x3b],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [-0xb2, 0x6b, 0x3b],
                's': [0x27, 0x2, 0x69],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [-0xa7, 0x5d, 0x3c],
                's': [0x4, 0x4, 0x16],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x33, -0x8d],
                's': [0x54, 0x3e, 0x8e],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x3e, -0x81],
                's': [0x52, 0x32, 0x80],
                'c': 0x7d6565,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x30, 0x5c, 0x58],
                's': [0x7, 0x22, 0xc],
                'c': 0x666666,
                't': 0xb
            }, {
                'p': [0x23, 0x42, -0xd3],
                's': [0x4, 0x30, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x75, 0x42, -0xd3],
                's': [0x4, 0x30, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x42, -0x47],
                's': [0x4, 0x30, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x42, -0xa5],
                's': [0x5, 0x45, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x42, -0x75],
                's': [0x5, 0x45, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x42, -0xd3],
                's': [0x4, 0x30, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xc5, 0x4d, -0x3e],
                's': [0x3a, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x4c, 0x57, -0xd3],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x4c, 0x6e, -0xd3],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x6e, -0x8d],
                's': [0x4, 0x4, 0x88],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x23, 0x57, -0x8d],
                's': [0x4, 0x4, 0x88],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x4c, 0x57, -0x47],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x4c, 0x6e, -0x47],
                's': [0x4e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x8a, -0x8d],
                's': [0x66, 0x6, 0x6],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4c, 0x7e, -0xb3],
                's': [0x5c, 0x3, 0x51],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x464545,
                't': 0x2
            }, {
                'p': [0x4c, 0x7e, -0x67],
                's': [0x5c, 0x3, 0x51],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x464545,
                't': 0x2
            }, {
                'p': [0x4c, 0x81, -0x66],
                's': [0x5c, 0x2, 0x51],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x4c, 0x90, -0x8d],
                's': [0x66, 0x2, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4c, 0x72, -0x8d],
                's': [0x54, 0x14, 0x2f],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x86, -0x8d],
                's': [0x54, 0x5, 0x21],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x81, -0xb4],
                's': [0x5c, 0x2, 0x51],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0xdd, 0x86, -0xd4],
                's': [0x48, 0x3, 0x64],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x75, 0x6e, -0x8d],
                's': [0x4, 0x4, 0x88],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xc6, 0x42, -0xc0],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xc6, 0x42, -0x42],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9f, 0x54, -0x42],
                's': [0x4, 0x33, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xc6, 0x42, -0x81],
                's': [0x5, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x42, -0x9e],
                's': [0x55, 0x11, 0x4a],
                'c': 0x6e665e,
                't': 0xb
            }, {
                'p': [0x75, 0x57, -0xbc],
                's': [0x4, 0x4, 0x2a],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x9f, 0x86, -0x81],
                's': [0x5, 0x5, 0x8c],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb5, 0x7c, -0x81],
                's': [0x32, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0x9f, 0x6d, -0x42],
                's': [0x4a, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9f, 0x53, -0xc0],
                's': [0x4, 0x33, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9f, 0x6d, -0xc0],
                's': [0x4a, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x78, 0x42, -0xc0],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x88, 0x7e, -0x81],
                's': [0x33, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                't': 0x5
            }, {
                'p': [0x88, 0x7c, -0x81],
                's': [0x30, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xb6, 0x7e, -0x81],
                's': [0x33, 0x2, 0x87],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [0x9f, 0x8b, -0x81],
                's': [0x5, 0x2, 0x8c],
                't': 0x5
            }, {
                'p': [0xc6, 0x6d, -0x81],
                's': [0x4, 0x4, 0x7a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x70, -0x81],
                's': [0x52, 0x5, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x75, -0x81],
                's': [0x45, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x79, -0x81],
                's': [0x37, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x7d, -0x81],
                's': [0x28, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x81, -0x81],
                's': [0x1a, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x9e, 0x85, -0x81],
                's': [0xd, 0x4, 0x80],
                'l': 0x1,
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x22, 0x3f, -0x87],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x22, 0x3f, -0x93],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x22, 0x53, -0x8d],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x66, 0x40, -0xd4],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x60, 0x54, -0xd4],
                's': [0xa, 0x2, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x5a, 0x40, -0xd4],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb7, 0x76, -0xd4],
                's': [0x21, 0x66, 0x21],
                'c': 0xd2c2b8,
                't': 0xb
            }, {
                'p': [0xb7, 0xdb, -0xd4],
                's': [0x26, 0x7, 0x26],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0x100, -0xd4],
                's': [0x3, 0x3, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xe3, -0xe7],
                's': [0x26, 0x27, 0x3],
                'l': 0x1,
                'r': [0.52, 0x0, 0x0],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xb7, 0xe3, -0xc0],
                's': [0x26, 0x27, 0x3],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xcb, 0xe3, -0xd4],
                's': [0x3, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xa3, 0xe3, -0xd4],
                's': [0x3, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xb7, 0xe3, -0xd4],
                's': [0x25, 0xb, 0x1d],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xee, -0xd4],
                's': [0x25, 0x6, 0x17],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xf4, -0xd4],
                's': [0x25, 0x6, 0x10],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xfa, -0xd4],
                's': [0x25, 0x6, 0x9],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0x100, -0xd4],
                's': [0x25, 0x5, 0x3],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xe3, -0xd4],
                's': [0x1f, 0xb, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xee, -0xd4],
                's': [0x18, 0x6, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xf4, -0xd4],
                's': [0x11, 0x6, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0xfa, -0xd4],
                's': [0xa, 0x6, 0x25],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb7, 0x76, -0xd4],
                's': [0x24, 0x66, 0xa],
                'c': 0x8e8b89,
                't': 0x2
            }, {
                'p': [0xb7, 0x76, -0xd4],
                's': [0xb, 0x66, 0x24],
                'c': 0x8e8b89,
                't': 0x2
            }, {
                'p': [0xb7, 0x103, -0xd4],
                's': [0x3, 0x3, 0x29],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xb7, 0x103, -0xd4],
                's': [0x28, 0x3, 0x3],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0xa1, 0xe4, -0xd4],
                's': [0x2, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, -0.52],
                't': 0x5
            }, {
                'p': [0xcd, 0xe4, -0xd4],
                's': [0x2, 0x27, 0x26],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                't': 0x5
            }, {
                'p': [0xb7, 0xe4, -0xe9],
                's': [0x26, 0x27, 0x2],
                'l': 0x1,
                'r': [0.52, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0xb7, 0xe4, -0xbe],
                's': [0x26, 0x27, 0x2],
                'l': 0x1,
                'r': [-0.52, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0xb7, 0x106, -0xd4],
                's': [0x3, 0x2, 0x29],
                't': 0x5
            }, {
                'p': [0xb7, 0x106, -0xd4],
                's': [0x28, 0x2, 0x3],
                't': 0x5
            }, {
                'p': [0xb7, 0xa2, -0xd4],
                's': [0x2a, 0x7, 0x2a],
                'c': 0x7d7068,
                'bo': 0x1
            }, {
                'p': [0xb7, 0xa9, -0xd4],
                's': [0x2a, 0x2, 0x2a],
                't': 0x5
            }, {
                'p': [0xb7, 0x41, -0xd4],
                's': [0x28, 0x45, 0x28],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x41, -0x15b],
                's': [0x9, 0x44, 0xa],
                'c': 0x5c514a,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x41, -0xed],
                's': [0x9, 0x43, 0xa],
                'c': 0x615751,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x78, -0x149],
                's': [0x9, 0x5, 0x1a],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xc7, 0x73, -0xec],
                's': [0x27, 0x9, 0xc],
                'c': 0x645750,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xef, 0x78, -0x15b],
                's': [0x77, 0x9, 0xa],
                'c': 0x736760,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x42, -0x130],
                's': [0x6, 0x2c, 0x50],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x42, -0xf5],
                's': [0x6, 0x28, 0x6],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x11f, 0x41, -0x124],
                's': [0x1d, 0xa, 0x31],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x10f, 0x41, -0x124],
                's': [0x3, 0x8, 0x18],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x109, 0x41, -0x124],
                's': [0x3, 0x4, 0x18],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x10c, 0x41, -0x124],
                's': [0x3, 0x6, 0x18],
                'c': 0x898989,
                't': 0x2
            }, {
                'p': [0x111, 0x41, -0x13c],
                's': [0x3, 0xb, 0x3],
                'l': 0x1,
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0x111, 0x41, -0x10c],
                's': [0x3, 0xb, 0x3],
                'l': 0x1,
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0xea, 0x46, -0x104],
                's': [0x7, 0x1, 0x19],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xea, 0x43, -0x111],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xea, 0x43, -0xf7],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xef, 0x46, -0x144],
                's': [0x7, 0x1, 0x19],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xcf, 0x47, -0x144],
                's': [0x1, 0x5, 0x19],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xe7, 0x47, -0x104],
                's': [0x1, 0x5, 0x19],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xef, 0x43, -0x137],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xef, 0x43, -0x151],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xd2, 0x46, -0x144],
                's': [0x7, 0x1, 0x19],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xd2, 0x43, -0x137],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xd2, 0x43, -0x151],
                's': [0x7, 0x6, 0x1],
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xec, 0x47, -0x144],
                's': [0x1, 0x5, 0x19],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xc3, 0x42, -0xec],
                's': [0x22, 0x34, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x41, -0x15b],
                's': [0x9, 0x45, 0xa],
                'c': 0x5a524e,
                't': 0xb
            }, {
                'p': [0x12f, 0x41, -0xec],
                's': [0x9, 0x3f, 0xc],
                'c': 0x5f5149,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x130, 0x42, -0x100],
                's': [0x5, 0x1, 0x13],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0xdc, 0x42, -0xeb],
                's': [0x13, 0x1, 0xa],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0xaf, 0x41, -0x131],
                's': [0x7, 0x22, 0x5],
                'c': 0x756961,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x41, -0x117],
                's': [0x7, 0x22, 0x5],
                'c': 0x6e625b,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x63, -0x12e],
                's': [0x7, 0x5, 0xb],
                'c': 0x6e6159,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x42, -0x124],
                's': [0x7, 0x1, 0x15],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x142, 0x33, -0x12e],
                's': [0x1e, 0x47, 0x3a],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x16c, 0x42, -0x112],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x42, -0x112],
                's': [0x4, 0x41, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x134, 0x42, -0x112],
                's': [0x4, 0x38, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x5c, -0x112],
                's': [0x34, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x158, 0x40, -0x128],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x82, -0x12e],
                's': [0x6, 0x6, 0x44],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x7f, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x595959,
                't': 0x2
            }, {
                'p': [0x150, 0x76, -0x112],
                's': [0x34, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x164, 0x40, -0x128],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x15e, 0x54, -0x128],
                's': [0xa, 0x2, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x150, 0x7a, -0x12e],
                's': [0x3a, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x150, 0x7d, -0x12e],
                's': [0x2d, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x150, 0x80, -0x12e],
                's': [0x1c, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x150, 0x83, -0x12e],
                's': [0xf, 0x3, 0x3a],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x13f, 0x81, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x162, 0x81, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x161, 0x7f, -0x12e],
                's': [0x20, 0x2, 0x41],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x595959,
                't': 0x2
            }, {
                'p': [0x150, 0x88, -0x12e],
                's': [0x6, 0x2, 0x44],
                't': 0x5
            }, {
                'p': [0xb9, 0x54, -0x41],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xad, 0x54, -0x41],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xb3, 0x66, -0x41],
                's': [0xa, 0x2, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x115, 0x33, -0xbe],
                's': [0x58, 0x3f, 0x56],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x140, 0x33, -0xe8],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x33, -0x6e],
                's': [0x6a, 0x48, 0x50],
                'c': 0x877960,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14d, 0x42, -0x95],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x33, -0x98],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x33, -0xc0],
                's': [0x5, 0x4d, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x33, -0xc0],
                's': [0x5, 0x4d, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x33, -0x98],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x33, -0xe8],
                's': [0x4, 0x3f, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe5, 0x42, -0x95],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x118, 0x42, 0x26],
                's': [0x4, 0x41, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe5, 0x42, -0x47],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14d, 0x42, -0x6e],
                's': [0x5, 0x48, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x140, 0x58, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x140, 0x6e, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x58, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xea, 0x6e, -0xc0],
                's': [0x4, 0x4, 0x4c],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x12d, 0x6e, -0xe8],
                's': [0x22, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x12d, 0x58, -0xe8],
                's': [0x22, 0x4, 0x4],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x115, 0x7f, -0xc0],
                's': [0x66, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x115, 0x77, -0xa6],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0x115, 0x79, -0xd6],
                's': [0x61, 0x2, 0x2f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0x115, 0x72, -0xbe],
                's': [0x58, 0x3, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x75, -0xbe],
                's': [0x58, 0x3, 0x44],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x78, -0xbe],
                's': [0x58, 0x3, 0x32],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x7b, -0xbe],
                's': [0x58, 0x3, 0x1e],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x7e, -0xbe],
                's': [0x58, 0x2, 0x10],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x115, 0x79, -0xa5],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x115, 0x7b, -0xd7],
                's': [0x61, 0x2, 0x2f],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x115, 0x84, -0xc0],
                's': [0x66, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x14d, 0x5d, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x14d, 0x78, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb, 0x89, -0x1bc],
                's': [0x64, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xb, 0x8e, -0x1bc],
                's': [0x64, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0xa, 0x80, -0x1a0],
                's': [0x61, 0x2, 0x3d],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xa, 0x82, -0x1a0],
                's': [0x61, 0x2, 0x3e],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x2b, 0x45, -0x190],
                's': [0xd, 0x46, 0x7],
                'c': 0x616161,
                't': 0xb
            }, {
                'p': [0xe5, 0x42, -0x6e],
                's': [0x5, 0x48, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe5, 0x5d, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xe5, 0x78, -0x6e],
                's': [0x4, 0x4, 0x4a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x78, -0x95],
                's': [0x64, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x78, -0x47],
                's': [0x64, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x5d, -0x95],
                's': [0x64, 0x4, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x119, 0x89, -0x6e],
                's': [0x78, 0x5, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x119, 0x83, -0x84],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x646464,
                't': 0x2
            }, {
                'p': [0x119, 0x85, -0x85],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x119, 0x83, -0x59],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x646464,
                't': 0x2
            }, {
                'p': [0x119, 0x85, -0x58],
                's': [0x71, 0x2, 0x32],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x119, 0x8e, -0x6e],
                's': [0x78, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x119, 0x7c, -0x6e],
                's': [0x6a, 0x4, 0x50],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x119, 0x80, -0x6e],
                's': [0x6a, 0x3, 0x3c],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x119, 0x83, -0x6e],
                's': [0x6a, 0x4, 0x2b],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x119, 0x87, -0x6e],
                's': [0x6a, 0x3, 0x15],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x107, 0x33, -0x2b],
                's': [0x3c, 0x3e, 0x48],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x107, 0x7d, -0x28],
                's': [0x47, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0x106, 0x7f, -0x28],
                's': [0x47, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x119, 0x5d, -0x47],
                's': [0x64, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x124, 0x42, -0x44],
                's': [0x4, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x124, 0x42, -0x8],
                's': [0x4, 0x47, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x42, -0x8],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x42, -0x44],
                's': [0x4, 0x2f, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x107, 0x6d, -0x8],
                's': [0x36, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xea, 0x6d, -0x26],
                's': [0x4, 0x4, 0x38],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x124, 0x6d, -0x26],
                's': [0x4, 0x4, 0x38],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x106, 0x71, -0x2b],
                's': [0x3b, 0x4, 0x48],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x10b, 0x75, -0x2b],
                's': [0x32, 0x4, 0x48],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x110, 0x79, -0x2b],
                's': [0x26, 0x4, 0x48],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x115, 0x7d, -0x26],
                's': [0x1c, 0x4, 0x3e],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x11b, 0x81, -0x26],
                's': [0x11, 0x4, 0x3e],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x120, 0x85, -0x26],
                's': [0x6, 0x3, 0x3e],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x124, 0x71, -0x25],
                's': [0x2, 0x17, 0x3d],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xe9, 0x54, -0x20],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe9, 0x54, -0x2c],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xe9, 0x66, -0x26],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x141, 0x42, -0xa6],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x141, 0x42, -0xb2],
                's': [0x2, 0x14, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x141, 0x54, -0xac],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19b, 0x42, -0xd4],
                's': [0x5a, 0x26, 0x8a],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x19d, 0x42, -0x6],
                's': [0x5a, 0x32, 0x58],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x42, 0x5a],
                's': [0x8c, 0x50, 0x58],
                'c': 0x7d5d5d,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14, 0x42, 0x60],
                's': [0x74, 0x35, 0x50],
                'c': 0x8e8d7a,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x1a9, 0x33, -0x60],
                's': [0x5a, 0x47, 0x5c],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14e, 0x33, 0x50],
                's': [0x6e, 0x4f, 0x56],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [-0x25, 0x33, 0x39],
                's': [0x4, 0x45, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x33, 0x39],
                's': [0x4, 0x59, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x5b, 0x39],
                's': [0x6e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x14, 0x8b, 0x60],
                's': [0x5, 0x5, 0x5c],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb, 0x82, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [0x33, 0x82, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x484848,
                't': 0x2
            }, {
                'p': [0x14, 0x90, 0x60],
                's': [0x5, 0x2, 0x5c],
                't': 0x5
            }, {
                'p': [-0xc, 0x84, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x34, 0x84, 0x60],
                's': [0x41, 0x2, 0x58],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x14, 0x74, 0x39],
                's': [0x6e, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x25, 0x5b, 0x60],
                's': [0x4, 0x4, 0x4a],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x25, 0x74, 0x60],
                's': [0x4, 0x4, 0x4a],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14, 0x77, 0x60],
                's': [0x71, 0x6, 0x50],
                'c': 0x8e8d7a,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x14, 0x7d, 0x60],
                's': [0x5b, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x14, 0x81, 0x60],
                's': [0x45, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x14, 0x85, 0x60],
                's': [0x2e, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x14, 0x89, 0x60],
                's': [0x19, 0x4, 0x50],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [-0xf, 0x42, 0x39],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x3, 0x42, 0x39],
                's': [0x2, 0x15, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x9, 0x55, 0x39],
                's': [0xa, 0x2, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16f, 0x42, -0x90],
                's': [0x4, 0x26, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16f, 0x42, -0xd4],
                's': [0x5, 0x3e, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16f, 0x64, -0xd4],
                's': [0x4, 0x4, 0x84],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x179, 0x64, -0x90],
                's': [0x10, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19c, 0x7f, -0xd4],
                's': [0x6a, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19c, 0x74, -0xf8],
                's': [0x62, 0x2, 0x4b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x19c, 0x76, -0xf9],
                's': [0x62, 0x2, 0x4b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19c, 0x76, -0xae],
                's': [0x62, 0x2, 0x4d],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19c, 0x74, -0xaf],
                's': [0x62, 0x2, 0x4d],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x19c, 0x84, -0xd4],
                's': [0x6a, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x19b, 0x68, -0xd4],
                's': [0x5a, 0x4, 0x8a],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x6c, -0xd4],
                's': [0x5a, 0x4, 0x75],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x70, -0xd4],
                's': [0x5a, 0x4, 0x5e],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x74, -0xd4],
                's': [0x5a, 0x4, 0x49],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x7c, -0xd4],
                's': [0x5a, 0x4, 0x1d],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x78, -0xd4],
                's': [0x5a, 0x4, 0x33],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19b, 0x80, -0xd4],
                's': [0x5a, 0x1, 0xb],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x16e, 0x42, -0xed],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x16e, 0x42, -0xf9],
                's': [0x2, 0x14, 0x2],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x16e, 0x54, -0xf3],
                's': [0x2, 0x2, 0xa],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x17d, 0x42, -0x8d],
                's': [0x4, 0x39, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x42, -0x33],
                's': [0x4, 0x39, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x42, -0x60],
                's': [0x5, 0x49, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x77, -0x60],
                's': [0x4, 0x4, 0x56],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1ab, 0x77, -0x60],
                's': [0x58, 0x4, 0x5e],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x1ab, 0x8a, -0x60],
                's': [0x6c, 0x6, 0x6],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1ab, 0x83, -0x79],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x5c5c5c,
                't': 0x2
            }, {
                'p': [0x1ab, 0x83, -0x46],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x5c5c5c,
                't': 0x2
            }, {
                'p': [0x1ab, 0x85, -0x45],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x1ab, 0x85, -0x7a],
                's': [0x66, 0x2, 0x34],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x1ab, 0x90, -0x60],
                's': [0x6c, 0x2, 0x6],
                't': 0x5
            }, {
                'p': [0x1a9, 0x7b, -0x60],
                's': [0x5a, 0x5, 0x5b],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x1a9, 0x80, -0x60],
                's': [0x5a, 0x4, 0x45],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x1a9, 0x84, -0x60],
                's': [0x5a, 0x4, 0x2f],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x1a9, 0x88, -0x60],
                's': [0x5a, 0x4, 0x19],
                'c': 0x6a686e,
                't': 0xa
            }, {
                'p': [0x171, 0x42, -0x31],
                's': [0x4, 0x33, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x171, 0x42, 0x23],
                's': [0x4, 0x33, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x171, 0x42, -0x7],
                's': [0x5, 0x41, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x171, 0x71, -0x7],
                's': [0x4, 0x4, 0x50],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x178, 0x71, -0x31],
                's': [0xa, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14d, 0x42, -0x47],
                's': [0x4, 0x3a, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x184, 0x42, 0x26],
                's': [0x4, 0x41, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x14e, 0x42, 0x26],
                's': [0x4, 0x53, 0x5],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x14e, 0x5f, 0x26],
                's': [0x68, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x14e, 0x7f, 0x26],
                's': [0x68, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x118, 0x7f, 0x31],
                's': [0x4, 0x4, 0x12],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x118, 0x5f, 0x31],
                's': [0x4, 0x4, 0x12],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x115, 0x42, 0x2f],
                's': [0x4, 0x51, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x8b, 0x42, 0x2f],
                's': [0x4, 0x51, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x42, -0xc],
                's': [0x5c, 0x13, 0x91],
                'c': 0x5f5f5f,
                't': 0xb
            }, {
                'p': [0x40, 0x55, 0x1c],
                's': [0x2, 0x26, 0x3b],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x40, 0x55, -0x2b],
                's': [0x2, 0x26, 0x35],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x96, 0x55, -0x1b],
                's': [0x2, 0x26, 0x4d],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x96, 0x55, 0x22],
                's': [0x2, 0x26, 0x13],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x42, 0x2f],
                's': [0x4, 0x68, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x70, 0x2f],
                's': [0x86, 0x4, 0x4],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0xd0, 0x8f, 0x2f],
                's': [0x86, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xfc, 0x42, 0x51],
                's': [0x55, 0x11, 0x49],
                'c': 0x5f5f5f
            }, {
                'p': [0x115, 0x8f, 0x57],
                's': [0x4, 0x4, 0x4c],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x19d, 0x82, -0x7],
                's': [0x6b, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19d, 0x7c, -0x1d],
                's': [0x63, 0x2, 0x33],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x19d, 0x7c, 0x10],
                's': [0x63, 0x2, 0x36],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x4d4d4d,
                't': 0x2
            }, {
                'p': [0x19d, 0x7e, 0x11],
                's': [0x63, 0x2, 0x36],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19d, 0x7e, -0x1e],
                's': [0x63, 0x2, 0x33],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x19d, 0x87, -0x7],
                's': [0x6b, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0x19d, 0x75, -0x6],
                's': [0x5a, 0x3, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x78, -0x6],
                's': [0x5a, 0x3, 0x47],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x7b, -0x6],
                's': [0x5a, 0x3, 0x3a],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x7e, -0x6],
                's': [0x5a, 0x3, 0x25],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x19d, 0x81, -0x6],
                's': [0x5a, 0x3, 0x16],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0x14e, 0x95, 0x50],
                's': [0x5, 0x5, 0x6a],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x16c, 0x8c, 0x50],
                's': [0x3d, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0x12f, 0x8c, 0x50],
                's': [0x3d, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x6b6b6b,
                't': 0x2
            }, {
                'p': [0x14e, 0x9a, 0x50],
                's': [0x5, 0x2, 0x6a],
                't': 0x5
            }, {
                'p': [0x130, 0x8f, 0x50],
                's': [0x3f, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x16c, 0x8e, 0x50],
                's': [0x3f, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x14e, 0x82, 0x50],
                's': [0x6e, 0x5, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x87, 0x50],
                's': [0x59, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x8b, 0x50],
                's': [0x43, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x8f, 0x50],
                's': [0x2d, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x14e, 0x93, 0x50],
                's': [0x17, 0x4, 0x56],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xd0, 0xa9, 0x5a],
                's': [0x6, 0x6, 0x68],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xf6, 0x9e, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0xaa, 0x9f, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0xa9, 0xa1, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0xf7, 0xa0, 0x5a],
                's': [0x51, 0x2, 0x61],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0xd0, 0xaf, 0x5a],
                's': [0x6, 0x2, 0x68],
                't': 0x5
            }, {
                'p': [0xd0, 0x93, 0x5a],
                's': [0x8c, 0x3, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0x96, 0x5a],
                's': [0x7c, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0x9a, 0x5a],
                's': [0x66, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0x9e, 0x5a],
                's': [0x51, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0xa2, 0x5a],
                's': [0x3a, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0xa6, 0x5a],
                's': [0x24, 0x4, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [0xd0, 0xaa, 0x5a],
                's': [0xf, 0x3, 0x58],
                'c': 0x7d5d5d,
                't': 0xa
            }, {
                'p': [-0x48, 0x57, -0x2d],
                's': [0x4, 0x4, 0x30],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x65, 0x6e, 0x5],
                's': [0x3e, 0x4, 0x2c],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x170, 0x54, -0x16],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x170, 0x54, -0x22],
                's': [0x2, 0x16, 0x2],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x170, 0x68, -0x1c],
                's': [0x2, 0x2, 0xa],
                'c': 0xafafaf,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xb3, 0x54, 0x2f],
                's': [0x2, 0x15, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xa7, 0x54, 0x2f],
                's': [0x2, 0x15, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xad, 0x67, 0x2f],
                's': [0xa, 0x2, 0x4],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x6b, 0x92, -0x9],
                's': [0x65, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x86, 0x1a],
                's': [0x5d, 0x2, 0x4a],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0x96, 0x42, -0x40],
                's': [0x4, 0x3a, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x97, 0x42, -0x9],
                's': [0x3, 0x51, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x96, 0x42, 0x2c],
                's': [0x4, 0x3a, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x55, 0x32],
                's': [0x54, 0x26, 0x13],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x55, -0x2c],
                's': [0x54, 0x26, 0x33],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x40, 0x42, -0x2],
                's': [0x5, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x42, -0x10],
                's': [0x5, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x69, -0x9],
                's': [0x5, 0x2, 0xc],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x96, 0x42, 0xb],
                's': [0x4, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x96, 0x42, 0x19],
                's': [0x4, 0x36, 0x2],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x96, 0x69, 0x12],
                's': [0x4, 0x2, 0xc],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x96, 0x6a, 0x12],
                's': [0x2, 0xf, 0xd],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x40, 0x6b, -0x9],
                's': [0x2, 0x10, 0xf],
                'pe': 0x1,
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x3f, 0x7b, -0x9],
                's': [0x2, 0x18, 0x4],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x40, 0x55, -0x44],
                's': [0x5, 0x27, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x55, 0x36],
                's': [0x5, 0x27, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x78, -0x9],
                's': [0x5, 0x4, 0x72],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x40, 0x78, 0x32],
                's': [0x5, 0x4, 0x4],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x87, -0x29],
                's': [0x5d, 0x2, 0x46],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x4a4a4a,
                't': 0x2
            }, {
                'p': [0x96, 0x78, -0xa],
                's': [0x4, 0x4, 0x68],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x73, 0xa],
                's': [0x55, 0x1, 0x47],
                'c': 0x5f5f5f,
                't': 0x2
            }, {
                'p': [0x6b, 0x7c, -0x9],
                's': [0x58, 0x4, 0x7a],
                'c': 0x5f6e68,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x6b, 0x88, 0x1b],
                's': [0x5d, 0x2, 0x4a],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x6b, 0x97, -0x9],
                's': [0x65, 0x2, 0x5],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x6b, 0x89, -0x2a],
                's': [0x5d, 0x2, 0x46],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0x6b, 0x80, -0x9],
                's': [0x58, 0x4, 0x68],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x84, -0x9],
                's': [0x58, 0x4, 0x52],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x88, -0x9],
                's': [0x58, 0x4, 0x3c],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x8c, -0x9],
                's': [0x58, 0x4, 0x26],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x6b, 0x90, -0x9],
                's': [0x58, 0x3, 0x10],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x32, 0x53, -0x9],
                's': [0x16, 0x2, 0x58],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x29, 0x42, -0x33],
                's': [0x2, 0x14, 0x2],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x29, 0x42, 0x21],
                's': [0x2, 0x14, 0x2],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x5c, 0x42, 0x28],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x50, 0x42, 0x28],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x79, 0x42, -0x12],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x85, 0x42, -0x12],
                's': [0x2, 0x27, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x7f, 0x69, -0x12],
                's': [0xe, 0x2, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x56, 0x69, 0x28],
                's': [0xe, 0x2, 0x2],
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xa, 0x80, -0x1d7],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [0xa, 0x82, -0x1d8],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [-0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [0xa, 0x33, -0x1bc],
                's': [0x5c, 0x43, 0x6b],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x76, -0x1bc],
                's': [0x5c, 0x2, 0x6b],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x7b, -0x1bc],
                's': [0x5c, 0x5, 0x4b],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x80, -0x1bc],
                's': [0x5c, 0x5, 0x31],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0xa, 0x85, -0x1bc],
                's': [0x5c, 0x5, 0x16],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x37, 0x72, -0x1bc],
                's': [0x4, 0x4, 0x6b],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x33, -0x189],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xcf, 0x33, -0x189],
                's': [0x4, 0x40, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x74, 0x33, -0x189],
                's': [0x4, 0x4d, 0x5],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x33, -0x1bd],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x33, -0x1ef],
                's': [0x4, 0x3e, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x8b, 0x6f, -0x189],
                's': [0x84, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x47, 0x6e, -0x1bc],
                's': [0x4, 0x4, 0x62],
                'l': 0x1,
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x8b, 0x86, -0x1bb],
                's': [0x7, 0x7, 0x79],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x65, 0x79, -0x1bb],
                's': [0x4f, 0x3, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x64, 0x7c, -0x1bb],
                's': [0x4f, 0x2, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x8b, 0x8d, -0x1bb],
                's': [0x7, 0x2, 0x79],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xb2, 0x7c, -0x1bb],
                's': [0x4e, 0x3, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x8b, 0x42, -0x1bc],
                's': [0x88, 0x31, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x73, -0x1bc],
                's': [0x6b, 0x5, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x78, -0x1bc],
                's': [0x53, 0x5, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x7d, -0x1bc],
                's': [0x37, 0x5, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0x8b, 0x82, -0x1bc],
                's': [0x1c, 0x4, 0x68],
                'c': 0x8e8d7a,
                't': 0xa
            }, {
                'p': [0xa1, 0x33, -0x189],
                's': [0x4, 0x4d, 0x5],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xd6, 0x71, -0x181],
                's': [0x30, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                'c': 0x696969,
                't': 0x2
            }, {
                'p': [0xd5, 0x73, -0x181],
                's': [0x30, 0x2, 0x46],
                'l': 0x1,
                'r': [0x0, 0x0, 0.52],
                't': 0x5
            }, {
                'p': [0xe9, 0x7d, -0x182],
                's': [0x5, 0x5, 0x47],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xe9, 0x82, -0x182],
                's': [0x5, 0x2, 0x47],
                't': 0x5
            }, {
                'p': [0x37, 0x41, 0xd],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x37, 0x41, -0x40],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x41, 0x41, -0x40],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x41, 0x41, -0x34],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x48, 0x6e, -0x2d],
                's': [0x4, 0x4, 0x30],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x82, 0x57, -0x2c],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [-0x82, 0x6e, -0x2c],
                's': [0x4, 0x4, 0x2e],
                'c': 0x727272,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1c, 0x41, -0x5f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x58, 0x41, 0x24],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1c, 0x41, 0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1c, 0x4d, 0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x92, 0x55, 0x23],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x3c, 0x55, -0x24],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x3c, 0x55, -0x1c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x11, 0x41, -0xb2],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x38, 0x41, -0x80],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa4, 0x34, -0x9e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x98, 0x34, -0x9e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, -0x56],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, -0x4a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, 0x12],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x34, 0x6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13b, 0x40, 0x12],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xe7, 0x34, -0x5d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x119, 0x34, -0x31],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x10d, 0x34, -0x31],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x80, 0x34, -0x10a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x74, 0x34, -0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x74, 0x40, -0x130],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa2, 0x41, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x13, 0x41, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd8, 0x53, 0x28],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9d, 0x53, -0x38],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x12c, 0x53, -0x32],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x12c, 0x53, -0x3e],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x169, 0x53, 0x1f],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x168, 0x41, -0xc6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x2d, 0x41, -0x42],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x37, 0x41, -0x42],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x44, 0x41, 0x16],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x44, 0x41, 0xe],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xa3, 0x41, 0x36],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xa5, 0x41, -0x26],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x10d, 0x34, -0x3b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x13d, 0x34, -0x40],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x13d, 0x34, -0x38],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x13d, 0x34, -0xad],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x131, 0x34, 0x14],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb8, 0x34, -0xcc],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xb8, 0x34, -0xc4],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x4b, 0x47, -0x137],
                's': [0x1f, 0x3, 0x7],
                'c': 0x7d7068
            }, {
                'p': [0x5e, 0x42, -0x124],
                's': [0x6, 0x7, 0x2c],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x38, 0x42, -0x124],
                's': [0x6, 0x7, 0x2c],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x42, -0x111],
                's': [0x20, 0x7, 0x6],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x42, -0x137],
                's': [0x20, 0x7, 0x6],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x47, -0x111],
                's': [0x1f, 0x3, 0x7],
                'c': 0x7d7068
            }, {
                'p': [0x38, 0x47, -0x124],
                's': [0x7, 0x3, 0x2d],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x5e, 0x47, -0x124],
                's': [0x7, 0x3, 0x2d],
                'c': 0x7d7068
            }, {
                'p': [0x4b, 0x42, -0x124],
                's': [0x20, 0x1, 0x21],
                'c': 0xa7988e
            }, {
                'p': [0x4b, 0x42, -0x124],
                's': [0x9, 0x17, 0x9],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x4d, -0x124],
                's': [0x14, 0x3, 0x14],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x4b, 0x56, -0x124],
                's': [0xe, 0x3, 0xe],
                'c': 0x7d7068,
                't': 0xb
            }, {
                'p': [0x4b, 0x4a, -0x137],
                's': [0x1f, 0x1, 0x7],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x4a, -0x111],
                's': [0x1f, 0x1, 0x7],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x5e, 0x4a, -0x124],
                's': [0x7, 0x1, 0x2d],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x38, 0x4a, -0x124],
                's': [0x7, 0x1, 0x2d],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x50, -0x124],
                's': [0x14, 0x1, 0x14],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x59, -0x124],
                's': [0xe, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x43, -0x124],
                's': [0x20, 0x2, 0x21],
                'c': 0x8bd9d4,
                'o': 0.7000000000000001,
                't': 0x5
            }, {
                'p': [0x3f, 0x3e, -0x235],
                's': [0xad, 0x3f, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x15f, 0x53, 0x22],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x128, 0x53, -0x19],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x128, 0x53, -0x11],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x177, 0x41, -0x8b],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x145, 0x41, -0xca],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x145, 0x41, -0xd2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xce, 0x41, -0xe3],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xce, 0x41, -0xdc],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0xde, 0x34, -0x127],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x11, 0x41, -0xbe],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9d, 0x41, -0xc9],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x9d, 0x41, -0xd5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xb, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x17, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1, 0x4d, -0x16b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x4d, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x59, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x87, 0x41, -0x16a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x87, 0x4d, -0x16b],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x68, 0x41, -0x12d],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x41, 0x41, -0xda],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb, 0x42, -0x16d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x91, 0x41, -0x16d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x98, 0x41, -0x16d],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x66, 0x41, -0x123],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x93, 0x41, -0xc6],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x37, 0x41, -0xd7],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x43, 0x41, -0x9],
                's': [0x1, 0x12, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x1f, 0x41, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x1f, 0x41, -0x10],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x27, 0x42, -0x23],
                's': [0x1, 0x13, 0x5],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x27, 0x42, -0x23],
                's': [0x1, 0x13, 0x3],
                'i': 0x3,
                't': 0x2,
                'd': 0x2
            }, {
                'p': [-0xa1, 0x57, -0x135],
                's': [0x4, 0x8, 0xa],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x17d, 0x5b, -0x60],
                's': [0x4, 0x4, 0x56],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xca, 0x52, -0xb],
                's': [0x6e, 0x2, 0xa5],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xb1, 0x79, -0x1bb],
                's': [0x4f, 0x3, 0x71],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x464646,
                't': 0x2
            }, {
                'p': [0x17f, 0x41, 0x1a],
                's': [0xc, 0x46, 0x6],
                'c': 0xac5353
            }, {
                'p': [0x3f, 0x79, -0x1f6],
                's': [0xae, 0x4, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [-0x16, 0x60, -0x1f6],
                's': [0x4, 0x22, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0x9c, -0x238],
                's': [0x6, 0x6, 0x91],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x12, 0x8c, -0x238],
                's': [0x61, 0x3, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x6c, 0x8c, -0x238],
                's': [0x66, 0x3, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0xa2, -0x238],
                's': [0x6, 0x2, 0x91],
                't': 0x5
            }, {
                'p': [0x6d, 0x8f, -0x238],
                's': [0x66, 0x2, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                't': 0x5
            }, {
                'p': [0x11, 0x8f, -0x238],
                's': [0x61, 0x2, 0x8a],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                't': 0x5
            }, {
                'p': [0x5d, 0x60, -0x1f6],
                's': [0x4, 0x32, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0x7d, -0x235],
                's': [0xad, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x85, -0x235],
                's': [0x83, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x81, -0x235],
                's': [0x99, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x89, -0x235],
                's': [0x6d, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x8d, -0x235],
                's': [0x56, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x91, -0x235],
                's': [0x41, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x95, -0x235],
                's': [0x2b, 0x4, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [0x3f, 0x99, -0x235],
                's': [0x16, 0x3, 0x80],
                'c': 0x7d6565,
                't': 0xa
            }, {
                'p': [-0x6c, 0x6b, -0x1bf],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                'c': 0x525252,
                't': 0x2
            }, {
                'p': [-0x6c, 0x6c, -0x1be],
                's': [0x61, 0x2, 0x3b],
                'l': 0x1,
                'r': [0.35, 0x0, 0x0],
                't': 0x5
            }, {
                'p': [-0x6c, 0x74, -0x1db],
                's': [0x64, 0x5, 0x5],
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x6c, 0x79, -0x1db],
                's': [0x64, 0x2, 0x5],
                't': 0x5
            }, {
                'p': [0xa, 0x72, -0x188],
                's': [0x5e, 0x4, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x37, 0x33, -0x188],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [-0x23, 0x33, -0x188],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0xb, 0x33, -0x188],
                's': [0x4, 0x3f, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x1e, 0x60, -0x1f6],
                's': [0x4, 0x34, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0x3f, 0x6d, -0x1f6],
                's': [0xae, 0x4, 0x4],
                'c': 0x616161,
                't': 0x2
            }, {
                'p': [0xa, 0x78, -0x1bc],
                's': [0x5c, 0x3, 0x66],
                'c': 0x5f6e68,
                't': 0xa
            }, {
                'p': [0x37, 0x33, -0x1bc],
                's': [0x4, 0x56, 0x4],
                'c': 0xafafaf,
                't': 0x2
            }, {
                'p': [0x128, 0x42, -0x124],
                's': [0x9, 0x13, 0x22],
                'c': 0x786b62,
                't': 0xb
            }, {
                'p': [0x12a, 0x65, -0x124],
                's': [0x3, 0x9, 0xc],
                'c': 0x5c5551,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12a, 0x55, -0x12d],
                's': [0x4, 0x16, 0x6],
                'c': 0x5c5551,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12a, 0x55, -0x11b],
                's': [0x4, 0x17, 0x6],
                'c': 0x5c5551,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12c, 0x55, -0x124],
                's': [0x1, 0x16, 0x17],
                'c': 0x554f4c,
                't': 0xb
            }, {
                'p': [0x125, 0x55, -0x129],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x126, 0x55, -0x12d],
                's': [0x1, 0x2, 0x1],
                'l': 0x1,
                'r': [0x0, -0.35, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x125, 0x55, -0x132],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x126, 0x55, -0x120],
                's': [0x1, 0x2, 0x1],
                'l': 0x1,
                'r': [0x0, -0.17, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x125, 0x55, -0x11b],
                's': [0x1, 0x2, 0x1],
                'l': 0x1,
                'r': [0x0, 1.05, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x126, 0x55, -0x116],
                's': [0x1, 0x3, 0x1],
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': 0x988e62,
                't': 0x5
            }, {
                'p': [0x128, 0x55, -0x124],
                's': [0x1, 0x1, 0x3],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0xc0b896,
                't': 0x5
            }, {
                'p': [0x129, 0x55, -0x124],
                's': [0x3, 0x4, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0xc0b896,
                't': 0x5
            }, {
                'p': [0x129, 0x56, -0x125],
                's': [0x3, 0x1, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x0,
                't': 0x5
            }, {
                'p': [0x129, 0x56, -0x123],
                's': [0x3, 0x1, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': 0x0,
                't': 0x5
            }, {
                'p': [-0xe0, 0x35, -0x4a],
                's': [0xd8, 0x0, 0xe5],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x115, 0x33, -0x4d],
                's': [0x68, 0x2, 0xca],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x8b, 0x33, -0x6f],
                's': [0xac, 0x2, 0x82],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xd3, 0x33, -0xb7],
                's': [0xc, 0x2, 0xe],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xc9, 0x33, -0xb3],
                's': [0x8, 0x2, 0x6],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xb7, 0x33, -0xb6],
                's': [0x8, 0x2, 0xc],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x16, 0x42, -0x30],
                's': [0xd2, 0x0, 0x102],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x1, 0x40, 0x0],
                's': [0x8c, 0x2, 0x8e],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x64, 0x40, 0x32],
                's': [0x3a, 0x2, 0x2a],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x95, 0x35, 0x8],
                's': [0x28, 0xd, 0x7e],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x36, 0x33, -0x8f],
                's': [0x3a, 0xf, 0x2a],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x5, 0x40, -0x7b],
                's': [0x3c, 0x2, 0x68],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x7c, 0x33, -0x11d],
                's': [0xcb, 0x2, 0x32],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x157, 0x40, -0x106],
                's': [0x4d, 0x2, 0x48],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x157, 0x40, -0x7a],
                's': [0x52, 0x2, 0xd9],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x147, 0x40, -0xb],
                's': [0x8c, 0x14, 0x81],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xca, 0x52, -0xb],
                's': [0x6e, 0x2, 0xa5],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xd5, 0x40, -0x70],
                's': [0x27, 0x14, 0x25],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0xd5, 0x40, -0xcf],
                's': [0x28, 0x2, 0x3f],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0x83, 0x42, 0x32],
                's': [0x77, 0x0, 0xd2],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0x4a, 0x42, -0x10f],
                's': [0xd6, 0x0, 0xdf],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0x50, 0x33, -0x110],
                's': [0xe2, 0xf, 0xc2],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x50, 0x33, -0x110],
                's': [0xe2, 0xf, 0xc2],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xb9, 0x33, -0xfe],
                's': [0x8, 0x2, 0xc],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xc3, 0x33, -0x101],
                's': [0xc, 0x2, 0x6],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xd8, 0x33, -0xfe],
                's': [0x13, 0x2, 0xc],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [-0xc3, 0x35, -0x130],
                's': [0xc9, 0x0, 0x61],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x41, 0x35, -0x121],
                's': [0x40, 0xd, 0xc3],
                'i': 0x9,
                't': 0x5
            }, {
                'p': [-0x95, 0x35, -0x4e],
                's': [0x91, 0xd, 0x2e],
                'i': 0x9,
                't': 0x5,
                'd': 0x1
            }, {
                'p': [-0x65, 0x35, -0x8c],
                's': [0x24, 0xd, 0xb6],
                'i': 0x9,
                't': 0x5
            }, {
                'p': [0xd8, 0x42, -0x9d],
                's': [0xc5, 0x12, 0x35],
                'i': 0x9,
                't': 0x5,
                'd': 0x1
            }, {
                'p': [0x165, 0x42, -0x67],
                's': [0xf4, 0x12, 0x37],
                'i': 0x9,
                't': 0x5,
                'd': 0x1
            }, {
                'p': [0x158, 0x42, -0xf6],
                's': [0x52, 0x0, 0xea],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0xdc, 0x42, -0xd0],
                's': [0x58, 0x0, 0x34],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0x156, 0x54, 0x24],
                's': [0xaa, 0x0, 0xdf],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [0xd0, 0x54, -0xa],
                's': [0x83, 0x0, 0xf0],
                'i': 0x4,
                'l': 0x1,
                'en': 1.8,
                't': 0x5
            }, {
                'p': [-0x48, 0x34, -0xd4],
                's': [0x62, 0x32, 0x6c],
                'c': 0x827256,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x41, 0x4d, -0xda],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x9d, 0x4d, -0xcf],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x53, 0x4d, -0x16b],
                's': [0x18, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x11, 0x4d, -0x16b],
                's': [0x18, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1, 0x59, -0x16b],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x87, 0x59, -0x16b],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x68, 0x4d, -0x12d],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x11, 0x4d, -0xb8],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x1c, 0x4d, -0x5f],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x37, 0x4d, -0x40],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1f, 0x4d, -0x16],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13, 0x4d, -0x1c],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x41, 0x4d, -0x3a],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x1c, 0x59, 0x32],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x58, 0x4d, 0x24],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xa2, 0x4d, -0x1c],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x9e, 0x40, -0x9e],
                's': [0x18, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x113, 0x40, -0x31],
                's': [0x18, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13b, 0x40, 0x6],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13b, 0x40, -0x50],
                's': [0xc, 0x1, 0x18],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13b, 0x4c, 0x12],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xe7, 0x40, -0x5d],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x80, 0x40, -0x10a],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x74, 0x4c, -0x130],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xd8, 0x5f, 0x28],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x9d, 0x5f, -0x38],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x169, 0x5f, 0x1f],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x5f, -0x32],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x168, 0x4d, -0xc6],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x38, 0x4d, -0x80],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x11a, 0x69, 0x19],
                's': [0x58, 0x4, 0x4],
                'c': 0x7d7d7d,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x11a, 0x35, 0x19],
                's': [0x5, 0x39, 0x5],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xec, 0x35, 0x19],
                's': [0x4, 0x38, 0x4],
                'c': 0x828282,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x148, 0x35, 0x19],
                's': [0x4, 0x38, 0x4],
                'c': 0x898989,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xea, 0x5b, 0xe],
                's': [0x2, 0x4, 0x40],
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [0x4c, 0x72, -0xbc],
                's': [0x54, 0x6, 0x2b],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x72, -0x5e],
                's': [0x54, 0x6, 0x2b],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x78, -0x65],
                's': [0x54, 0x5, 0x1d],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x7d, -0x6c],
                's': [0x54, 0x3, 0x10],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x80, -0x70],
                's': [0x54, 0x3, 0x7],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x78, -0xb5],
                's': [0x54, 0x5, 0x1d],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x7d, -0xaf],
                's': [0x54, 0x3, 0x10],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [0x4c, 0x80, -0xaa],
                's': [0x54, 0x3, 0x7],
                'c': 0x877960,
                't': 0xa
            }, {
                'p': [-0x10e, 0x33, -0xb1],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x102, 0x33, 0x18],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xe1, 0x33, -0x2a],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xa0, 0x40, -0x3],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [-0x85, 0x41, 0x47],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x22, 0x3f, -0x8d],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x19, 0x40, -0x60],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [-0x9, 0x41, 0x38],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x38, 0x55, -0x2],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x9d, 0x55, 0xb],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0xad, 0x53, 0x2e],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x56, 0x55, 0x28],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xb3, 0x52, -0x41],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xe9, 0x52, -0x26],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x170, 0x54, -0x1c],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x60, 0x40, -0xd4],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x69, 0x34, -0x10a],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x8e, 0x33, -0x136],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xb4, 0x33, -0x12d],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xe1, 0x33, -0x115],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x16e, 0x40, -0xf3],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1
            }, {
                'p': [0x15e, 0x40, -0x128],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x141, 0x40, -0xac],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [-0x48, 0x68, -0xd4],
                's': [0x63, 0x8, 0x6c],
                'c': 0x827256,
                't': 0xa
            }, {
                'p': [-0x48, 0x70, -0xd4],
                's': [0x41, 0x6, 0x6c],
                'c': 0x827256,
                't': 0xa
            }, {
                'p': [-0x48, 0x76, -0xd4],
                's': [0x23, 0x6, 0x6c],
                'c': 0x827256,
                't': 0xa
            }, {
                'p': [0x7f, 0x55, -0x12],
                's': [0x3, 0x14, 0xa],
                'i': 0x15,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x103, 0x55, 0x17],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x131, 0x55, 0x17],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xeb, 0x46, 0x4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xe2, 0x54, -0x2c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0xe2, 0x54, -0x51],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x10f, 0x53, -0xb0],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x134, 0x53, -0xb0],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xe4, 0x60, -0xa4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x91, 0x60, -0xa4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0xc5, 0x54, -0x67],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x66, 0x61, -0x7b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x82, 0x61, -0x60],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x84, 0x5c, 0x4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x9f, 0x63, 0xe],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xa8, 0x55, -0x2c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0x32, 0x54, -0x9d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x16, 0x53, -0xb9],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0x18, 0x62, -0x61],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xe0, 0x54, -0x116],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [-0xbb, 0x60, -0x104],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0xcc, 0x40, -0x12c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x8d, 0x57, -0x135],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x4c, 0x57, -0x135],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [-0x31, 0x53, -0x10b],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x8c, 0x58, -0xc2],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x38, 0x5c, -0xd5],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x21, 0x5c, -0xbc],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0x21, 0x5c, -0x5d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [-0x49, 0x4c, 0x46],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x46, 0x5c, 0x5],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x2a, 0x61, 0x37],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xf2, 0x79, 0x2d],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xe3, 0x64, -0x5a],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xe8, 0x5c, -0xd3],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [-3.14, 0x0, -3.14]
            }, {
                'p': [0xc8, 0x58, -0xa1],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x134, 0x69, 0x24],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x142, 0x62, -0x110],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0]
            }, {
                'p': [0x16f, 0x5c, 0xd],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [0x126, 0x74, -0x19],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x14f, 0x64, -0x5c],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x142, 0x5c, -0xd4],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1
            }, {
                'p': [0x17b, 0x63, -0x76],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [0x16d, 0x4e, -0xb3],
                's': [0x1, 0x11, 0x11],
                'i': 0x16,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14]
            }, {
                'p': [0xaf, 0x63, -0x119],
                's': [0x7, 0x5, 0x9],
                'c': 0x5f544e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x67, -0x138],
                's': [0x6, 0xa, 0x11],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xa6, 0x41, -0x151],
                's': [0x7, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xa5, 0x41, -0x15c],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xaf, 0x6b, -0xf6],
                's': [0x6, 0x5, 0xc],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xaf, 0x6b, -0x109],
                's': [0x6, 0x3, 0xe],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xaf, 0x78, -0xf4],
                's': [0x9, 0x5, 0x4],
                'c': 0x5f5651,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xa5, 0x41, -0xed],
                's': [0x7, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xb7, 0x41, -0x12c],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xa7, 0x41, -0x118],
                's': [0x5, 0x2, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x30, 0x40, -0x10f],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x66, 0x40, -0x115],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xe5, 0x40, -0xe0],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x10b, 0x81, -0x15b],
                's': [0x16, 0x3, 0xa],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xd6, 0x69, -0xec],
                's': [0x4, 0x5, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x11f, 0x73, -0xec],
                's': [0x17, 0x5, 0xc],
                'c': 0x5a4f48,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xed, 0x73, -0xec],
                's': [0x1e, 0x4, 0x9],
                'c': 0x736860,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x40, 0x40, -0x16c],
                's': [0x6, 0x3, 0x3],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [-0x14, 0x40, -0x148],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0xaf, 0x78, -0x163],
                's': [0x9, 0x5, 0x6],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xb0, 0x4d, -0x16b],
                's': [0x5, 0x1f, 0x16],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x82, 0x4d, -0x173],
                's': [0x5a, 0x1f, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x44, 0x4d, -0x173],
                's': [0x22, 0x18, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xc, 0x4d, -0x173],
                's': [0x4e, 0x1b, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1c, 0x4d, -0x159],
                's': [0x5, 0x1d, 0x3a],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x2c, 0x4d, -0x13b],
                's': [0x1b, 0x1d, 0x4],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1c, 0x6a, -0x147],
                's': [0x5, 0x3, 0xe],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [-0x1c, 0x6a, -0x16b],
                's': [0x5, 0x2, 0x16],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [-0x24, 0x6a, -0x13b],
                's': [0xf, 0x3, 0x4],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x45, 0x65, -0x173],
                's': [0x10, 0x3, 0x4],
                'l': 0x1,
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0xb1, 0x41, -0x167],
                's': [0x9, 0xc, 0x18],
                'c': 0x645750,
                't': 0xb
            }, {
                'p': [0x40, 0x41, -0x174],
                's': [0xdc, 0xc, 0x8],
                'c': 0x615852,
                't': 0xb
            }, {
                'p': [-0x2b, 0x33, -0x155],
                's': [0x25, 0x1a, 0x3a],
                'c': 0x645851,
                't': 0xb
            }, {
                'p': [-0x1d, 0x4d, -0x13d],
                's': [0x9, 0x25, 0xa],
                'c': 0x5f554f,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x6e, -0x14f],
                's': [0x6, 0x4, 0x17],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x123, 0x4a, -0x139],
                's': [0x7, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x126, 0x41, -0xf6],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x12f, 0x6e, -0x10e],
                's': [0x6, 0x4, 0x18],
                'c': 0x665c56,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xb6, 0x41, -0x107],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x126, 0x41, -0x14f],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x10e, 0x41, -0x153],
                's': [0x8, 0x3, 0x4],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [0x12f, 0x7b, -0x154],
                's': [0x9, 0x6, 0x4],
                'c': 0x7d7068,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xe3, 0x5f, -0xec],
                's': [0x2, 0x5, 0x9],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x5f, -0xf9],
                's': [0x6, 0x5, 0x2],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x12f, 0x65, -0x107],
                's': [0x6, 0x4, 0x2],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x61, 0x68, -0xd9],
                's': [0x2, 0x2, 0xd],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x61, 0x61, -0xda],
                's': [0x1, 0x6, 0x9],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [0x61, 0x67, -0xdd],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x61, 0x67, -0xd7],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x70, 0x40, -0xda],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x413b38,
                't': 0x5
            }, {
                'p': [-0x60, 0x62, -0x10f],
                's': [0x2, 0x2, 0xd],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x60, 0x5b, -0x110],
                's': [0x1, 0x6, 0x9],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x60, 0x61, -0x113],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x60, 0x61, -0x10d],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x8, 0x6b, 0x34],
                's': [0x2, 0x2, 0x11],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x8, 0x64, 0x31],
                's': [0x1, 0x6, 0x9],
                'l': 0x1,
                'c': 0x787878,
                't': 0x2
            }, {
                'p': [-0x8, 0x6a, 0x2e],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x8, 0x6a, 0x34],
                's': [0x1, 0x1, 0x1],
                'l': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0xd5, 0x32, -0xc5],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5
            }, {
                'p': [-0xb9, 0x32, -0xed],
                's': [0x4, 0x3, 0x7],
                'l': 0x1,
                'c': 0x2f2f2f,
                't': 0x5
            }, {
                'p': [-0xc7, 0x51, -0x104],
                's': [0x21, 0x3, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xb5, 0x35, -0x104],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0xd9, 0x35, -0x104],
                's': [0x3, 0x1f, 0x3],
                'c': 0x848484,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x82, 0x6c, -0x173],
                's': [0x5a, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xc, 0x68, -0x173],
                's': [0x4e, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x45, 0x68, -0x173],
                's': [0x10, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x7d, -0x163],
                's': [0x9, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1c, 0x6a, -0x157],
                's': [0x5, 0x1, 0x12],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1c, 0x6c, -0x16b],
                's': [0x5, 0x1, 0x16],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x1c, 0x6d, -0x147],
                's': [0x5, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x26, 0x6d, -0x13b],
                's': [0xb, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x32, 0x6a, -0x13b],
                's': [0xd, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xb0, 0x6c, -0x169],
                's': [0x5, 0x1, 0x19],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x7d, -0x149],
                's': [0x9, 0x1, 0x1a],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x85, -0x15b],
                's': [0x9, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x71, -0x138],
                's': [0x6, 0x1, 0x11],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x6e, -0x109],
                's': [0x6, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x70, -0xf5],
                's': [0x6, 0x1, 0xe],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x72, -0x10b],
                's': [0x6, 0x1, 0x12],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x80, -0xec],
                's': [0x9, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xc7, 0x7c, -0xec],
                's': [0x27, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xaf, 0x84, -0xec],
                's': [0x9, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x86, -0x15b],
                's': [0x9, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x124, 0x81, -0x15b],
                's': [0xd, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xd3, 0x81, -0x15b],
                's': [0x3f, 0x1, 0xa],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x6e, -0x124],
                's': [0x7, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x6b, -0x12d],
                's': [0x8, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x9d, 0x55, 0xb],
                's': [0xa, 0x14, 0x1],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x38, 0x55, -0x2],
                's': [0xa, 0x14, 0x1],
                'pe': 0x1,
                'v': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x12f, 0x72, -0x14d],
                's': [0x6, 0x1, 0x13],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12f, 0x81, -0x154],
                's': [0x9, 0x1, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x12c, 0x5f, -0x3e],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x128, 0x5a, -0x19],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x128, 0x5a, -0x11],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x15f, 0x5a, 0x22],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x177, 0x48, -0x8b],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x145, 0x48, -0xd2],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x145, 0x48, -0xca],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x66, 0x48, -0x123],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x93, 0x48, -0xc6],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x98, 0x48, -0x16d],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x91, 0x48, -0x16d],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x2d, 0x48, -0x42],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x37, 0x48, -0x42],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x44, 0x48, 0xe],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x44, 0x48, 0x16],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xa3, 0x48, 0x36],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xa5, 0x48, -0x26],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13d, 0x3b, -0xad],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13d, 0x3b, -0x38],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x13d, 0x3b, -0x40],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x131, 0x3b, 0x14],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x10d, 0x3b, -0x3b],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xde, 0x3b, -0x127],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xce, 0x48, -0xe3],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0xce, 0x48, -0xdc],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xcd, 0x33, -0x102],
                's': [0x3, 0x2, 0x4],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xbd, 0x33, -0xb4],
                's': [0x4, 0x2, 0x8],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0xbd, 0x33, -0xb4],
                's': [0x4, 0x2, 0x8],
                'v': 0x1,
                't': 0x5
            }, {
                'p': [0x3d, 0x59, -0x2],
                's': [0x1, 0x2, 0x1],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [0x3d, 0x63, -0x2],
                's': [0x1, 0x2, 0x1],
                'pe': 0x1,
                'c': 0x787878,
                't': 0x5
            }, {
                'p': [-0x8, 0x6d, 0x34],
                's': [0x2, 0x1, 0x11],
                'l': 0x1,
                'c': '#ffffff',
                't': 0x5
            }, {
                'p': [-0x60, 0x64, -0x10f],
                's': [0x2, 0x1, 0xd],
                'l': 0x1,
                'c': '#ffffff',
                't': 0x5
            }, {
                'p': [0x61, 0x6a, -0xd9],
                's': [0x2, 0x1, 0xd],
                'l': 0x1,
                'c': '#ffffff',
                't': 0x5
            }, {
                'p': [-0xea, 0x5f, 0xe],
                's': [0x3, 0x19, 0x40],
                'v': 0x1,
                'c': 0x727272,
                't': 0x2
            }, {
                'p': [0x37, 0x48, -0xd7],
                's': [0x6, 0x1, 0x6],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x5a, -0x124],
                's': [0x3, 0x10, 0x3],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x63, -0x124],
                's': [0x2, 0x3, 0xc],
                'c': 0xa7988e,
                't': 0xb
            }, {
                'p': [0x4b, 0x66, -0x124],
                's': [0x2, 0x1, 0xc],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [0x4b, 0x6a, -0x124],
                's': [0x3, 0x1, 0x3],
                'l': 0x1,
                't': 0x5
            }, {
                'p': [-0x114, 0x35, -0x10],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [0xf5, 0x43, -0x125],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [0x61, 0x61, -0xd9],
                's': [0x2, 0x10, 0xd],
                'v': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x60, 0x5b, -0x10f],
                's': [0x2, 0x10, 0xd],
                'v': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x8, 0x64, 0x32],
                's': [0x2, 0x10, 0xd],
                'v': 0x1,
                'c': 0x787878,
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0xee, 0x42, -0x124],
                's': [0x72, 0x32, 0x5f],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0x111, 0x35, -0x16],
                's': [0x5b, 0x32, 0x56],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x4a, 0x42, -0x124],
                's': [0x5b, 0x32, 0x56],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0xc0, 0x54, -0x9],
                's': [0x49, 0x32, 0x67],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [-0xc7, 0x53, -0xd4],
                's': [0x24, 0x8, 0x60],
                'c': 0x7f7f7f,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x149, 0x57, 0x41],
                's': [0x3e, 0x1, 0xd],
                'i': 0x1e,
                'r': [1.57, 0x0, 1.57],
                'st': 'Map\x20By\x20\x20CrispyCrust',
                'sc': '#ffffff',
                'bv': 0x1,
                'sf': 0x46
            }, {
                'p': [0xaf, 0x56, -0x103],
                's': [0x6, 0x15, 0x23],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x47, -0x111],
                's': [0x6, 0xf, 0x7],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xaf, 0x47, -0xf7],
                's': [0x6, 0xf, 0xa],
                'c': 0xa7988e,
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x15f, 0x5d, -0x12e],
                's': [0x1c, 0x1c, 0x3a],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x16d, 0x33, -0x12e],
                's': [0x4, 0x2d, 0x3a],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0x15e, 0x33, -0x129],
                's': [0x1e, 0x30, 0x2],
                'c': 0x6a686e,
                't': 0xa,
                'bo': 0x1
            }, {
                'p': [0xac, 0x46, -0xfd],
                's': [0x1, 0x11, 0x4],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xac, 0x46, -0x101],
                's': [0x1, 0x13, 0x4],
                'pe': 0x1,
                'c': '#483b2d',
                't': 0x5
            }, {
                'p': [0xac, 0x45, -0x105],
                's': [0x1, 0x12, 0x4],
                'pe': 0x1,
                'c': '#574837',
                't': 0x5
            }, {
                'p': [0xac, 0x45, -0x109],
                's': [0x1, 0x13, 0x4],
                'pe': 0x1,
                'c': '#483b2d',
                't': 0x5
            }, {
                'p': [0xac, 0x46, -0x10d],
                's': [0x1, 0x11, 0x4],
                'pe': 0x1,
                'c': 0x372f26,
                't': 0x5
            }, {
                'p': [0xa3, 0x41, -0xf8],
                's': [0x4, 0x2, 0xe],
                'l': 0x1,
                'r': [0x0, -0.61, 0x0],
                'c': '#5a4938',
                't': 0x5
            }, {
                'p': [0xa5, 0x41, -0x147],
                's': [0x4, 0x2, 0xe],
                'l': 0x1,
                'r': [3.14, -0.52, 3.14],
                'c': '#5a4938',
                't': 0x5
            }]
        }, {
            'name': 'Undergrowth',
            'ambInd': '3',
            'modURL': '',
            'terrainSeed': '',
            'terrainWidth': 0xbb8,
            'terrainHeight': 0xbb8,
            'terrainMntMlt': 0x1,
            'terrainMntCol': '#707070',
            'terrainGrsCol': '#5e692f',
            'terrainDrtCol': '#7f6238',
            'skyDome': !0x0,
            'skyDomeCol0': '#3983a2',
            'skyDomeCol1': '#87ceeb',
            'skyDomeCol2': '#dce8ed',
            'zone': !0x1,
            'zoneSize': 0x1f4,
            'zoneSpeed': 0x1,
            'zoneCol0': '#c542d9',
            'zoneCol1': '#c542d9',
            'zoneCol2': '#c542d9',
            'sizeMlt': 0x2,
            'shadowR': 1297.054320662896,
            'ambient': '#97a0a8',
            'light': '#f2f8fc',
            'sky': '#dce8ed',
            'fog': 0x8d9aa0,
            'fogD': 0x7d0,
            'dthY': -0x64,
            'camPos': [0x0, 0x26, -0x183],
            'spawns': [[0x159, 0x2, -0xa9, 0x0, 0x1, 0x0], [0x64, 0x2, -0xe5, 0x0, 0x2, 0x0], [0x38, 0xd, -0x1c1, 0x0, 0x1, 0x0], [0x14c, 0x2, -0x21f, 0x0, 0x0, 0x0], [0x14c, 0x2, -0xbd, 0x0, 0x0, 0x0], [0x118, 0xd, -0xb1, 0x0, 0x2, 0x0], [-0x12, 0x2, -0x68, 0x0, 0x1, 0x0], [0xb6, 0x2, 0x1a, 0x0, 0x3, 0x0]],
            'objects': [{
                'p': [0x3, 0x0, -0xd3],
                's': [0xe0, 0x2, 0xbe],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0xbe, 0x0, -0x3a],
                's': [0x86, 0x2, 0xc8],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0xd2, -0x10, -0xe2],
                's': [0xa2, 0x1d, 0x78],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0xe9, 0x2, -0x8d],
                's': [0x2c, 0xb, 0x32],
                'i': 0x9,
                'c': '#9d9d9d',
                't': 0x1,
                'd': 0x3
            }, {
                'p': [0xda, -0xb, -0x141],
                's': [0x3e, 0x18, 0x46],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x6b, 0xb, -0x14e],
                's': [0x2c, 0x2, 0x39],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0x5, 0xb, -0x181],
                's': [0xb4, 0x2, 0x9e],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x127, 0x0, -0x20],
                's': [0x4c, 0x2, 0x32],
                'c': '#434343',
                'e': '#18180a'
            }, {
                'p': [0x197, 0x0, -0x5a],
                's': [0x94, 0x2, 0xb0],
                'c': '#434343',
                'e': '#18180a'
            }, {
                'p': [-0x5, 0x13, -0x1b8],
                's': [0x4a, 0x2, 0x4d],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x100, 0x0, -0x190],
                's': [0x7e, 0x2, 0x80],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0xde, 0x2, -0x17a],
                's': [0x2e, 0xb, 0x2c],
                'i': 0x9,
                'c': '#9d9d9d',
                't': 0x1,
                'd': 0x1
            }, {
                'p': [0x17b, 0x0, -0x1e1],
                's': [0x78, 0x2, 0xe6],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x3d, 0x0, -0x57],
                's': [0x7c, 0x2, 0x3a],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x17, 0x0, -0x2a],
                's': [0x30, 0x2, 0x20],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x190, 0x0, -0x15e],
                's': [0x2e, 0x2, 0x20],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x14f, 0x0, -0x10c],
                's': [0x91, 0x2, 0x2c],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x17a, 0x0, -0x138],
                's': [0x5a, 0x2, 0x2c],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0x31, -0x4, -0x120],
                's': [0x30, 0x11, 0x24],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x136, 0x2, -0x107],
                's': [0x26, 0xb, 0x2e],
                'i': 0x9,
                'c': '#9d9d9d',
                't': 0x1,
                'd': 0x2
            }, {
                'p': [0x126, 0x0, 0x11],
                's': [0x4e, 0x26, 0x32],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x72, 0x0, -0x28],
                's': [0x22, 0x2e, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x198, 0x8, -0x4],
                's': [0x93, 0x32, 0x3],
                'c': '#ffffff',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1d7, 0x0, -0x143],
                's': [0x60, 0x36, 0x9a],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x196, 0x0, -0x10c],
                's': [0x23, 0x36, 0x2c],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x129, 0x0, -0x216],
                's': [0x2c, 0x29, 0xa2],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x173, 0x0, -0x25d],
                's': [0x68, 0x29, 0x20],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x26, 0x26, -0x31],
                's': [0x4c, 0x4, 0x1c],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x17, 0x0, -0x18],
                's': [0x30, 0x17, 0x4]
            }, {
                'p': [0x79, 0x0, -0xc9],
                's': [0x11, 0x22, 0x58],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0xaa, 0x0, -0x90],
                's': [0x52, 0x22, 0x2c],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x6f, 0x0, -0x1c0],
                's': [0x3e, 0x43, 0x9c],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x2e, 0x0, -0x1f6],
                's': [0x50, 0x31, 0x30],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x28, 0x0, -0x1ee],
                's': [0x5c, 0x43, 0x40],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x20, 0xd, -0x1b0],
                's': [0x4, 0xa, 0x44],
                'e': '#18180a'
            }, {
                'p': [-0x5, 0xd, -0x190],
                's': [0x46, 0xa, 0x4],
                'e': '#18180a'
            }, {
                'p': [-0x2a, 0xd, -0x19a],
                's': [0x4, 0xa, 0x18],
                'e': '#18180a'
            }, {
                'p': [-0x3d, 0x13, -0x1c3],
                's': [0x26, 0x2, 0x3a],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [-0x3e, 0xd, -0x19a],
                's': [0x24, 0x8, 0x18],
                'i': 0x9,
                'c': '#9d9d9d',
                't': 0x1,
                'd': 0x3
            }, {
                'p': [0xbb, 0xd, -0x11f],
                's': [0x4, 0x13, 0xc],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0x13f],
                's': [0x4, 0xf, 0x4],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0x15e],
                's': [0x4, 0x13, 0xc],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0x157],
                's': [0x4, 0x7, 0x2],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0x117],
                's': [0x4, 0x7, 0x4],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0xe9],
                's': [0x4, 0x13, 0x17],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0xfb],
                's': [0x4, 0xb, 0xd],
                'e': '#18180a'
            }, {
                'p': [0x163, 0x0, -0x15e],
                's': [0x2c, 0x36, 0x20],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x121, 0x0, -0x157],
                's': [0x58, 0x36, 0x72],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x182, 0x6, -0x43],
                's': [0xa, 0x32, 0xa],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x182, 0x6, -0x76],
                's': [0xa, 0x15, 0xa],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xd0, 0x0, 0x25],
                's': [0x6, 0x27, 0x7],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xe6, 0x0, 0x25],
                's': [0x6, 0x27, 0x7],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xf8, 0x0, 0x28],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xbe, 0x0, 0x28],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xbf, 0x27, 0x28],
                's': [0x70, 0x4, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xbf, 0x1e, 0x28],
                's': [0x70, 0x4, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xbf, 0x22, 0x28],
                's': [0x72, 0x5, 0x4],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x95, 0x0, 0x25],
                's': [0x6, 0x27, 0x7],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xab, 0x0, 0x25],
                's': [0x6, 0x27, 0x7],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x85, 0x0, 0x28],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xbf, 0x0, 0x28],
                's': [0x70, 0x20, 0x4],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x85, 0x2, 0xc],
                's': [0x15, 0x1, 0x47],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x86, 0x2, -0x27],
                's': [0xf, 0x1, 0x1f],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xbc, 0x2, -0x32],
                's': [0x31, 0x1, 0x29],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xd3, 0x2, 0x1c],
                's': [0x1d, 0x1, 0x14],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf1, 0x2, 0x1c],
                's': [0x1f, 0x1, 0x28],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x96, 0x2, -0x3],
                's': [0xd, 0x1, 0xc],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x5c, 0x2, -0x3d],
                's': [0x5a, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x8f, 0x3, 0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x82, 0x3, 0x1c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xa5, 0x3, 0x23],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x88, 0x3, -0x2f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x6e, 0x0, -0x6],
                's': [0x1c, 0x27, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x6e, 0x0, 0x1b],
                's': [0x26, 0x31, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x72, 0x0, -0x17],
                's': [0x26, 0x1f, 0x19],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x6e, 0x27, -0x6],
                's': [0x1c, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x72, 0x1f, -0x17],
                's': [0x26, 0x2, 0x19],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x72, 0x2e, -0x28],
                's': [0x22, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x6e, 0x31, 0x1b],
                's': [0x26, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x58, 0x0, -0x2d],
                's': [0x1c, 0x26, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x42, 0x0, -0x28],
                's': [0x26, 0x2a, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x2e, 0x0, -0xe],
                's': [0x26, 0x24, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x8, 0x0, -0x9],
                's': [0x26, 0x1f, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [-0x4, 0x0, -0x13],
                's': [0x1e, 0x36, 0x20],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x58, 0x26, -0x2d],
                's': [0x1c, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x42, 0x2a, -0x28],
                's': [0x26, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x2e, 0x24, -0xe],
                's': [0x26, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x8, 0x1f, -0x9],
                's': [0x26, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [-0x4, 0x36, -0x13],
                's': [0x1e, 0x2, 0x20],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x4e, 0x2, -0x46],
                's': [0x2d, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x27, 0x2, -0x2c],
                's': [0x10, 0x1, 0x28],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf, 0x2, -0x26],
                's': [0x20, 0x1, 0x1a],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc1, 0x0, -0x30],
                's': [0x1a, 0x35, 0x1a],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0xc1, 0x2, -0x30],
                's': [0x1c, 0x7, 0x1c],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xcd, 0x0, -0x24],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xcd, 0x0, -0x3c],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xb5, 0x0, -0x3c],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xb5, 0x0, -0x24],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xc1, 0x35, -0x30],
                's': [0x20, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xc1, 0x3d, -0x30],
                's': [0x20, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xc1, 0x39, -0x30],
                's': [0x1e, 0x4, 0x1e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xaa, 0x2, 0x15],
                's': [0x35, 0x1, 0x24],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc2, 0x2, -0x18],
                's': [0x1f, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xd8, 0x2, -0x33],
                's': [0x7, 0x1, 0x19],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xbe, 0x2, -0x4a],
                's': [0x25, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc8, 0x2, -0x45],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0xbc, 0x2, -0x45],
                's': [0xc, 0xc, 0xc],
                'i': 0x8,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0xc2, 0x8, -0x45],
                's': [0x18, 0x7, 0xc],
                'l': 0x1,
                'c': '#3964a2',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x10d, 0x0, 0x2b],
                's': [0x23, 0x35, 0x29],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x101, 0x0, 0x1a],
                's': [0x15, 0x1d, 0x15],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xf7, 0x2, 0x3],
                's': [0x12, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x101, 0x1d, 0x1a],
                's': [0x15, 0x2, 0x15],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x10d, 0x35, 0x2b],
                's': [0x23, 0x2, 0x29],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0xf2, 0x3, 0x22],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.22, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xfb, 0x3, 0xb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.04, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xc7, 0x3, -0x1e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.39, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xd1, 0x3, -0x42],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.36, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xab, 0x3, -0x3e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.88, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x46, 0x3, -0x3d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x2b, 0x3, -0x24],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.39, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xe, 0x3, -0x1e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.88, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x94, 0x0, 0x4b],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'c': '#4c663e'
            }, {
                'p': [0xd4, -0x9, 0x4b],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.57, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x102, -0x1e, 0x65],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x9c, -0x24, 0x74],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x101, 0x0, -0xe],
                's': [0x5, 0x1e, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x101, 0x0, -0x32],
                's': [0x5, 0x1e, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x101, 0x1e, -0x20],
                's': [0x5, 0x5, 0x2b],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x101, 0x0, -0x38],
                's': [0x8, 0x38, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x101, 0x0, -0x8],
                's': [0x8, 0x38, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x102, 0x0, -0xa3],
                's': [0x8, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x102, 0x0, -0x6d],
                's': [0x8, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x110, 0x26, -0x70],
                's': [0x24, 0x4, 0x6e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x123, 0x2e, -0x6e],
                's': [0x4a, 0x4, 0x72],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x125, 0x2a, -0x6f],
                's': [0x4a, 0x4, 0x6c],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xff, 0x2, -0x67],
                's': [0x15, 0x1, 0x5c],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf2, 0x2, -0x53],
                's': [0x5, 0x1, 0x1d],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x105, 0x2, -0x32],
                's': [0x19, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x116, 0x2, -0x35],
                's': [0x9, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x102, 0x2, -0xb],
                's': [0xf, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x111, 0x2, -0xb],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xb9, 0x2, -0x73],
                's': [0x41, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x86, 0x2, -0x73],
                's': [0x25, 0x1, 0xc],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc4, 0x2, -0x65],
                's': [0x1d, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x59, 0x2, -0x82],
                's': [0x35, 0x1, 0x2f],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x60, 0x2, -0x67],
                's': [0x14, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x126, 0x26, 0x11],
                's': [0x50, 0x4, 0x38],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x126, 0x2e, 0x11],
                's': [0x50, 0x4, 0x38],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x126, 0x2a, 0x11],
                's': [0x4c, 0x4, 0x32],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x159, 0x3d, -0x20],
                's': [0xb4, 0x5, 0x32],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x101, 0x23, -0x20],
                's': [0x3, 0x15, 0x2b],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x123, 0x38, -0x20],
                's': [0x4c, 0x5, 0x38],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x123, 0x42, -0x20],
                's': [0x4c, 0x5, 0x38],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x125, 0x32, -0x8],
                's': [0x4d, 0x7, 0x6],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x125, 0x32, -0x38],
                's': [0x4d, 0x7, 0x6],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x108, 0x3, -0x33],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.4, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xfb, 0x3, -0x40],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.18, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xd0, 0x3, -0x70],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x107, 0x28, -0x20],
                's': [0x9, 0x5, 0x32],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x127, 0x28, -0x33],
                's': [0x37, 0x5, 0xc],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x147, 0x28, -0x20],
                's': [0x9, 0x5, 0x32],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14d, 0x2, -0x32],
                's': [0x5, 0x1c, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14d, 0x1e, -0x20],
                's': [0x5, 0x5, 0x29],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14d, 0x2, -0xe],
                's': [0x5, 0x1c, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14d, 0x23, -0x20],
                's': [0x3, 0x19, 0x37],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x127, 0x28, -0xd],
                's': [0x37, 0x5, 0xc],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14d, 0x8, -0x38],
                's': [0x7, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14d, 0x0, -0x8],
                's': [0x7, 0x2d, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xfb, 0x2, -0x58],
                's': [0x1, 0x13, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': '#bbbbbb',
                't': 0x2
            }, {
                'p': [0xfb, 0x2, -0x60],
                's': [0x1, 0x13, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': '#bbbbbb',
                't': 0x2
            }, {
                'p': [0x125, 0x1e, -0x9],
                's': [0x4d, 0x5, 0x2],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x125, 0x1e, -0x37],
                's': [0x4d, 0x5, 0x2],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x102, 0x0, -0x6d],
                's': [0x7, 0xc, 0x65],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x102, 0x0, 0xa],
                's': [0x7, 0xc, 0x1c],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x173, 0x0, -0xd4],
                's': [0xa1, 0x2, 0x44],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x14d, 0x8, -0x4b],
                's': [0x5, 0x30, 0x1f],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1ad, 0x2a, -0x5b],
                's': [0x10, 0x6, 0xad],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1a6, 0x38, -0x5e],
                's': [0x1e, 0x5, 0xb2],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x17f, 0x3d, -0x69],
                's': [0x68, 0x5, 0x60],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x156, 0x2a, -0x4d],
                's': [0x12, 0x6, 0x90],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x182, 0x2a, -0xc],
                's': [0x46, 0x6, 0x10],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x193, 0x2a, -0xa9],
                's': [0x24, 0x6, 0xf],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x182, 0x0, -0x43],
                's': [0xc, 0x6, 0xc],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x182, 0x38, -0x76],
                's': [0xc, 0x5, 0xc],
                'c': '#e1e1e1',
                'e': '#18180a'
            }, {
                'p': [0x182, 0x2, -0x76],
                's': [0xc, 0x4, 0xc],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14d, 0x8, -0xac],
                's': [0x7, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14d, 0x0, -0xb4],
                's': [0x8, 0x35, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x17f, 0x42, -0x51],
                's': [0x6c, 0x5, 0x98],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1b9, 0x1e, -0xd6],
                's': [0x7, 0x4, 0x31],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1b9, 0x22, -0xd5],
                's': [0x4, 0x5, 0x33],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1b9, 0x2, -0xd7],
                's': [0x4, 0x1d, 0x30],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1b9, 0x0, -0xbb],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x1b9, 0x0, -0xf2],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x1b5, -0x5, -0xcc],
                's': [0x7, 0x27, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1b5, -0x5, -0xe1],
                's': [0x7, 0x27, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x154, 0x8, -0xb1],
                's': [0x8, 0x22, 0x3],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x164, 0x12, -0xbd],
                's': [0x30, 0x1, 0xc],
                'pe': 0x1,
                'c': '#878787',
                't': 0x2
            }, {
                'p': [0x15a, 0x22, -0xbd],
                's': [0x1c, 0x1, 0xc],
                'pe': 0x1,
                'c': '#878787',
                't': 0x2
            }, {
                'p': [0x167, 0x1, -0xc2],
                's': [0x1, 0x23, 0x1],
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x14d, 0x1, -0xc2],
                's': [0x1, 0x23, 0x1],
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x14d, 0x1, -0xb8],
                's': [0x1, 0x23, 0x1],
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x167, 0x1, -0xb8],
                's': [0x1, 0x23, 0x1],
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x17b, 0x1, -0xc2],
                's': [0x1, 0x13, 0x1],
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x17b, 0x1, -0xb8],
                's': [0x1, 0x13, 0x1],
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x167, 0x9, -0xc2],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x14d, 0x9, -0xc2],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x14d, 0x1a, -0xc2],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x167, 0x1a, -0xc2],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x17b, 0x9, -0xc2],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x17b, 0x9, -0xb8],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x167, 0x9, -0xb8],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x14d, 0x9, -0xb8],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x14d, 0x1a, -0xb8],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x167, 0x1a, -0xb8],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#757575',
                't': 0x5
            }, {
                'p': [0x17f, 0x2, -0xbd],
                's': [0xf, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x160, 0x2, -0xc0],
                's': [0x2f, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x150, 0x2, -0xd7],
                's': [0xf, 0x1, 0x19],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x161, 0x2, -0xce],
                's': [0x13, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x149, 0x2, -0xec],
                's': [0x14, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x185, 0x3, -0xbc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.22, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x14d, 0x3, -0xbb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x142, 0x0, -0xcd],
                's': [0x12, 0x1d, 0x15],
                'c': '#595959',
                'e': '#11110c'
            }, {
                'p': [0x136, 0x0, -0xe0],
                's': [0x26, 0x39, 0x20],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x131, 0x0, -0xcc],
                's': [0x26, 0x32, 0x20],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x135, 0x42, -0xb7],
                's': [0x28, 0x2, 0x24],
                'c': '#8e8e8e',
                'e': '#11110c',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x131, 0x32, -0xcc],
                's': [0x26, 0x2, 0x20],
                'c': '#8e8e8e',
                'e': '#11110c',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x136, 0x39, -0xe0],
                's': [0x26, 0x2, 0x20],
                'c': '#8e8e8e',
                'e': '#11110c',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x142, 0x1d, -0xcd],
                's': [0x12, 0x2, 0x15],
                'c': '#8e8e8e',
                'e': '#11110c',
                't': 0x8
            }, {
                'p': [0x14c, 0x3, -0xdb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.4, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x154, 0x8, -0x3],
                's': [0x8, 0x22, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1b0, 0x8, -0x3],
                's': [0x8, 0x22, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x182, 0x8, -0x5],
                's': [0x8, 0x22, 0x3],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x182, 0x8, -0xb1],
                's': [0x8, 0x22, 0x3],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14b, 0x2d, -0xa],
                's': [0x4, 0xb, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14b, 0x2d, -0x36],
                's': [0x4, 0xb, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14f, 0x31, -0x20],
                's': [0x1, 0x7, 0x37],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x14d, 0x8, -0x85],
                's': [0x7, 0x23, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14d, 0x8, -0x5e],
                's': [0x7, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1a3, 0x29, -0x5b],
                's': [0x4, 0x8, 0x8e],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x182, 0x29, -0x16],
                's': [0x3e, 0x8, 0x4],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x161, 0x29, -0x4f],
                's': [0x4, 0x8, 0x76],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x190, 0x29, -0xa0],
                's': [0x22, 0x8, 0x4],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x15b, 0x38, -0x4c],
                's': [0x24, 0x5, 0x8e],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x182, 0x38, -0x98],
                's': [0x2a, 0x5, 0x12],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x182, 0x38, -0x17],
                's': [0x2a, 0x5, 0x24],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x182, 0x39, -0x43],
                's': [0xc, 0x4, 0xc],
                'c': '#e1e1e1',
                'e': '#18180a'
            }, {
                'p': [0xbc, 0xb, -0xdd],
                's': [0x1a, 0x35, 0x1a],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0xbc, 0xd, -0xdd],
                's': [0x1c, 0x7, 0x1c],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xc8, 0xb, -0xd1],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xc8, 0xb, -0xe9],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xb0, 0xb, -0xe9],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xb0, 0xb, -0xd1],
                's': [0x6, 0x35, 0x6],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0xbc, 0x40, -0xdd],
                's': [0x20, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xbc, 0x48, -0xdd],
                's': [0x20, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xbc, 0x44, -0xdd],
                's': [0x1e, 0x4, 0x1e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xab, 0xe, -0xd7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.88, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x11b, 0xd, -0xc1],
                's': [0x10, 0x1, 0x1c],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x115, 0xd, -0xac],
                's': [0x19, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x104, 0xd, -0xa9],
                's': [0x9, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x10e, 0xd, -0xd5],
                's': [0x25, 0x1, 0xc],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf1, 0xd, -0xdc],
                's': [0x15, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xcc, 0xd, -0xd3],
                's': [0x17, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x110, 0xd, -0xca],
                's': [0x6, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xb4, 0xd, -0xd3],
                's': [0x19, 0x1, 0x18],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc1, 0xd, -0xe7],
                's': [0x2d, 0x1, 0x10],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xa6, 0xd, -0xd1],
                's': [0x3, 0x1, 0x10],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xb7, 0xd, -0xc5],
                's': [0xd, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xb9, 0xd, -0xf9],
                's': [0xf, 0x1, 0x14],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc7, 0xd, -0xf2],
                's': [0xd, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xba, 0xd, -0x105],
                's': [0x9, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x100, 0xe, -0xd6],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.18, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x11a, 0xe, -0xd4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x11e, 0xe, -0xaa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.71, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x108, 0xe, -0xa9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.38, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xba, -0x2f, 0x4b],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0xd5, -0x28, 0x7e],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x63, -0x14, 0x41],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x13e, -0xd, 0x4b],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.35, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x10a, 0xd, -0xd5],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'c': '#4c663e'
            }, {
                'p': [0x49, -0x2, -0x1ca],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, 0.53, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x16, -0x17, -0x1f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 1.4, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x2c, -0x1f, 0x55],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': '#4c663e'
            }, {
                'p': [-0x2, -0x2a, 0x55],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'c': '#4c663e'
            }, {
                'p': [0x16, 0x0, -0x20],
                's': [0x6, 0x31, 0x6],
                'v': 0x1,
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5
            }, {
                'p': [0x16, 0x0, -0x20],
                's': [0x7, 0x31, 0x7],
                'v': 0x1,
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0xd0, 0x0, -0x77],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x4c, 0x0, -0x77],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x4c, 0x0, -0xd5],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x7e, 0x0, -0xab],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x86, 0x0, -0xa3],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xd0, 0x0, -0xa3],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x8f, 0x0, -0x77],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x8e, 0x0, -0x77],
                's': [0x7f, 0xc, 0x6],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x8e, 0x19, -0x77],
                's': [0x7f, 0x9, 0x6],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x8e, 0xc, -0x77],
                's': [0x7f, 0x2, 0x7],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x8e, 0x17, -0x77],
                's': [0x7f, 0x2, 0x7],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x8e, 0x9, -0x7a],
                's': [0x7f, 0xf, 0x1],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x6e, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0x87, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0x54, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0x60, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0x7b, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0x97, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0xc8, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0xb0, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0xa3, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0xbc, 0xe, -0x77],
                's': [0x3, 0x9, 0x3],
                'c': '#c5c5c5',
                'e': '#18180a'
            }, {
                'p': [0x8e, 0x22, -0x8d],
                's': [0x8c, 0x4, 0x34],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x8e, 0x26, -0x8d],
                's': [0x88, 0x4, 0x30],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x8e, 0x2a, -0x8d],
                's': [0x8c, 0x4, 0x34],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x7, 0x2, -0xd6],
                's': [0x18, 0x1, 0x1c],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x11, 0x2, -0xed],
                's': [0x22, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x6, 0x2, -0x3c],
                's': [0xd, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x10, 0x2, -0x38],
                's': [0x7, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x3, 0x2, -0x6f],
                's': [0xa, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x5, 0x2, -0x76],
                's': [0x1a, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x19, 0x2, -0x74],
                's': [0xe, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0xd, 0x2, -0x7b],
                's': [0xa, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x45, 0x2, -0x80],
                's': [0x15, 0x1, 0x19],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x48, 0x2, -0x9f],
                's': [0x11, 0x1, 0x25],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x3e, 0x2, -0x96],
                's': [0x3, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x11, 0x2, -0xd4],
                's': [0x18, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4c, 0x2, -0xd4],
                's': [0x16, 0x1, 0x27],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4a, 0x2, -0xb9],
                's': [0xa, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x3d, 0x2, -0x7c],
                's': [0x3, 0x1, 0x16],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x10, 0x2, -0xaf],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x1c, 0x2, -0xaf],
                's': [0xc, 0xc, 0xc],
                'i': 0x8,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x16, 0x8, -0xaf],
                's': [0x18, 0x7, 0xc],
                'l': 0x1,
                'c': '#3964a2',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x45, 0x3, -0x99],
                's': [0x1, 0x12, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x45, 0x3, -0x91],
                's': [0x1, 0x12, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, -0.17],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x31, 0x36, -0x102],
                's': [0x30, 0x7, 0x60],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x4, 0x0, -0x71],
                's': [0x8, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2, 0x0, -0x5d],
                's': [0x2, 0x26, 0x4],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x26, 0x2e, -0x4a],
                's': [0x4c, 0x4, 0x56],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x27, 0x2a, -0x4b],
                's': [0x4a, 0x4, 0x50],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x26, 0x32, -0x4c],
                's': [0x2a, 0xd, 0x32],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x26, 0x3f, -0x4c],
                's': [0x2c, 0x4, 0x34],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x26, 0x43, -0x4c],
                's': [0x29, 0x4, 0x30],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x26, 0x47, -0x4c],
                's': [0x2c, 0x4, 0x34],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x10, 0x0, -0x74],
                's': [0x14, 0xc, 0x1],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x13, 0x32, -0x63],
                's': [0x6, 0xd, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x39, 0x32, -0x63],
                's': [0x6, 0xd, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x13, 0x32, -0x35],
                's': [0x6, 0xd, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x39, 0x32, -0x35],
                's': [0x6, 0xd, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x1e, -0x22, 0x6],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#4c663e'
            }, {
                'p': [-0x2, -0x18, 0x29],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.22, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x44, 0x0, -0x112],
                's': [0x7a, 0x3d, 0x40],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x56, 0x0, -0x9a],
                's': [0x1c, 0x25, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [-0x59, 0x0, -0x82],
                's': [0x1c, 0x35, 0x26],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [-0x5d, 0x0, -0xb2],
                's': [0x1c, 0x2e, 0x26],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [-0x5b, 0x0, -0xcb],
                's': [0x1c, 0x29, 0x1b],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [-0x56, 0x25, -0x9a],
                's': [0x1c, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [-0x5d, 0x2e, -0xb2],
                's': [0x1c, 0x2, 0x26],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [-0x5b, 0x29, -0xcb],
                's': [0x1c, 0x2, 0x1b],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [-0x59, 0x35, -0x82],
                's': [0x1c, 0x2, 0x26],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x4, 0x3, -0x70],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.88, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x4, 0x3, -0x3f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.39, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x46, 0x3, -0x79],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.71, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x47, 0x3, -0x85],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.51, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x4c, 0x3, -0xb0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.21, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x48, 0x3, -0xcd],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.88, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x45, 0x3, -0x7e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.04, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x94, -0x17, -0x8f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -1.23, -3.14],
                'c': '#4c663e'
            }, {
                'p': [-0x94, -0x23, -0xd1],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14],
                'c': '#4c663e'
            }, {
                'p': [-0x94, -0x19, -0x53],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0],
                'c': '#4c663e'
            }, {
                'p': [-0x57, -0x19, -0x9],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.56, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x67, -0x24, 0x80],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x13, 0x34, -0x1c2],
                's': [0x1, 0x1c, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [-0x32, 0x32, -0x74],
                's': [0x2, 0x2, 0x14],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x32, 0x29, -0x73],
                's': [0x1, 0xd, 0x2],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x6, 0x2, -0x35],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6, 0x2, -0x29],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x46, 0x2e, -0x8a],
                's': [0x15, 0x2, 0x2],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x4a, 0x25, -0x8a],
                's': [0x2, 0xd, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x3d, 0x17, -0x8a],
                's': [0x1, 0x17, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [-0x7c, -0xc, -0x2a],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, -0.71, -3.14],
                'c': '#4c663e'
            }, {
                'p': [-0x9, 0x0, -0x102],
                's': [0x20, 0x3d, 0x60],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x44, 0x0, -0xf2],
                's': [0x7a, 0x22, 0x4],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x16, 0x0, -0xd5],
                's': [0x8, 0x2e, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x4c, 0x0, -0xd5],
                's': [0x8, 0x2e, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x31, 0x2e, -0xd5],
                's': [0x3e, 0x8, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x31, 0x2e, -0x12f],
                's': [0x3e, 0x8, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x4c, 0x0, -0x12f],
                's': [0x8, 0x2e, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x16, 0x0, -0x12f],
                's': [0x8, 0x2e, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x4, 0x0, -0xd5],
                's': [0x8, 0x3d, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x7e, 0x0, -0xd0],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x65, 0x2a, -0xbc],
                's': [0x3a, 0x4, 0x2a],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x7e, 0x0, -0xf5],
                's': [0x8, 0x3d, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x7e, 0xd, -0x12f],
                's': [0x8, 0x30, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x66, 0xd, -0x12f],
                's': [0x8, 0x30, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x66, 0x0, -0xd5],
                's': [0x8, 0x3d, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x45, 0x22, -0xe1],
                's': [0x7a, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x45, 0x2a, -0xe1],
                's': [0x7a, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x44, 0x26, -0xe3],
                's': [0x78, 0x4, 0x20],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x31, 0x3d, -0x102],
                's': [0x72, 0x4, 0x62],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x30, 0x41, -0x102],
                's': [0x70, 0x4, 0x5e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x31, 0x45, -0x102],
                's': [0x72, 0x4, 0x62],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x45, 0x3d, -0x112],
                's': [0x7a, 0x4, 0x42],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x45, 0x45, -0x112],
                's': [0x7a, 0x4, 0x42],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x44, 0x41, -0x112],
                's': [0x78, 0x4, 0x3e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x9, 0x0, -0x102],
                's': [0x21, 0xc, 0x61],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0xab, 0x0, -0xa3],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x65, 0x26, -0xbc],
                's': [0x36, 0x4, 0x2e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x65, 0x22, -0xbc],
                's': [0x3a, 0x4, 0x2a],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x4c, 0x0, -0xa3],
                's': [0x8, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x31, 0x2f, -0x127],
                's': [0x30, 0x7, 0x8],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x45, 0x2f, -0x102],
                's': [0x8, 0x8, 0x42],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x31, 0x2f, -0xdd],
                's': [0x30, 0x7, 0x8],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x1d, 0x2f, -0x102],
                's': [0x8, 0x8, 0x42],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x31, 0x34, -0x102],
                's': [0x21, 0x7, 0x43],
                'c': '#8c8c8c',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x31, 0x2, -0xf1],
                's': [0x30, 0xb, 0x3a],
                'i': 0x9,
                'c': '#9d9d9d',
                't': 0x1,
                'd': 0x3
            }, {
                'p': [-0x4d, 0x24, -0xf8],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4d, 0x24, -0xe4],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4d, 0x24, -0x120],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4d, 0x24, -0x10c],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, -0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x15, 0x24, -0xe4],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x15, 0x24, -0x120],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x15, 0x24, -0x10c],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x15, 0x24, -0xf8],
                's': [0x8, 0xe, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.35],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4c, 0x0, -0xe4],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4c, 0x0, -0xf8],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4c, 0x0, -0x10c],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x4c, 0x0, -0x120],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x16, 0x0, -0xe4],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x16, 0x0, -0xf8],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x16, 0x0, -0x10c],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x16, 0x0, -0x120],
                's': [0x8, 0x26, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x16, 0x24, -0xe4],
                's': [0x9, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x16, 0x24, -0xf8],
                's': [0x9, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x16, 0x24, -0x10c],
                's': [0x9, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x16, 0x24, -0x120],
                's': [0x9, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x49, 0x24, -0x120],
                's': [0x3, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x49, 0x24, -0x10c],
                's': [0x3, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x49, 0x24, -0xf8],
                's': [0x3, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x49, 0x24, -0xe4],
                's': [0x3, 0x2, 0x6],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x31, 0x33, -0x120],
                's': [0x20, 0x1, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x31, 0x33, -0xe4],
                's': [0x20, 0x1, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x24, 0x33, -0x102],
                's': [0x6, 0x1, 0x36],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x3e, 0x33, -0x102],
                's': [0x6, 0x1, 0x36],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xaa, 0xd, -0xa3],
                's': [0x21, 0x1, 0x18],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc2, 0xd, -0xa9],
                's': [0xf, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x95, 0xd, -0xa3],
                's': [0x9, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x86, 0xd, -0xa3],
                's': [0x15, 0x1, 0x29],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x82, 0xd, -0xc8],
                's': [0x15, 0x1, 0x21],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x7e, 0xd, -0xe0],
                's': [0x15, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x81, 0xd, -0xf5],
                's': [0x15, 0x1, 0x1b],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xa5, 0xd, -0xb0],
                's': [0xe, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xcd, 0xd, -0xa7],
                's': [0x7, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x81, 0xd, -0x10d],
                's': [0x12, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x81, 0xd, -0x122],
                's': [0x15, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x81, 0xd, -0x134],
                's': [0x1d, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x8d, 0xd, -0xf7],
                's': [0x3, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x87, 0xd, -0x13d],
                's': [0xd, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x68, 0xd, -0x139],
                's': [0x15, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x56, 0xd, -0x137],
                's': [0xf, 0x1, 0x1a],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x45, 0xd, -0x139],
                's': [0x13, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x24, 0xd, -0x134],
                's': [0x15, 0x1, 0x1b],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x35, 0xd, -0x136],
                's': [0xd, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf, 0xd, -0x13e],
                's': [0x15, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0xa, 0xd, -0x136],
                's': [0xb, 0x1, 0x16],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x18, 0xd, -0x12f],
                's': [0x11, 0x1, 0x10],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x15, 0xd, -0x139],
                's': [0xb, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x1b, 0xd, -0x121],
                's': [0x4, 0x1, 0xc],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x51, 0xd, -0x137],
                's': [0x1b, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4a, 0xd, -0x12b],
                's': [0x13, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4a, 0xd, -0x122],
                's': [0xc, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xd, 0x3, -0xea],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.71, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x55, 0xe, -0x137],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.41, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0xf, 0xe, -0x137],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.89, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x83, 0xe, -0x136],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.2, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x86, 0xe, -0xaa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.68, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x85, 0xe, -0xb5],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.07, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xb3, 0xe, -0xaa],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.19, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x85, 0xe, -0xfc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.2, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xf6, 0x20, -0xdd],
                's': [0x5a, 0x2, 0x5],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xbb, 0x20, -0xee],
                's': [0x5, 0x2, 0xa],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xbb, 0x20, -0x12b],
                's': [0x5, 0x2, 0x20],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xbb, 0x20, -0x15f],
                's': [0x5, 0x2, 0xa],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xbc, 0xd, -0x117],
                's': [0xb, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xbb, 0xd, -0x12b],
                's': [0x11, 0x1, 0x1e],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xbb, 0xd, -0x13f],
                's': [0xd, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xb1, 0xd, -0x127],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xbc, 0xd, -0x146],
                's': [0x7, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xbb, 0xd, -0x15b],
                's': [0xc, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xad, 0xd, -0x15f],
                's': [0x10, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc3, 0xd, -0x15f],
                's': [0x4, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x3d, 0x2a, -0xf2],
                's': [0x79, 0x4, 0x2],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x34, 0xd, -0x12f],
                's': [0x8, 0x30, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xf, 0xc, -0x13c],
                's': [0x35, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0xf, 0x14, -0x13c],
                's': [0x36, 0x2, 0x4],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0xa, 0xc, -0x136],
                's': [0x3, 0x8, 0x9],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x28, 0xc, -0x136],
                's': [0x3, 0x8, 0x9],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0xa, 0x14, -0x136],
                's': [0x4, 0x2, 0x8],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x28, 0x14, -0x136],
                's': [0x4, 0x2, 0x8],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x0, 0xd, -0x138],
                's': [0x9, 0x1, 0x16],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf, 0xc, -0x136],
                's': [0x33, 0x4, 0x9],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x3b, 0xe, -0x136],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -1.03, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x59, 0xc, -0x13c],
                's': [0x35, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x59, 0x14, -0x13c],
                's': [0x36, 0x2, 0x4],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x40, 0xc, -0x136],
                's': [0x3, 0x8, 0x9],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x72, 0xc, -0x136],
                's': [0x3, 0x8, 0x9],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x40, 0x14, -0x136],
                's': [0x4, 0x2, 0x8],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x72, 0x14, -0x136],
                's': [0x4, 0x2, 0x8],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x59, 0xc, -0x136],
                's': [0x33, 0x4, 0x9],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x75, 0xd, -0x13e],
                's': [0x5, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x2d, 0xe, -0x136],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.06, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x0, 0xd, -0x12f],
                's': [0x4, 0x21, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1e, 0xd, -0x12f],
                's': [0x4, 0x21, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xf, 0x2e, -0x12f],
                's': [0x25, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x4a, 0xd, -0x12f],
                's': [0x4, 0x21, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x68, 0xd, -0x12f],
                's': [0x4, 0x21, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x59, 0x2e, -0x12f],
                's': [0x25, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x84, 0x49, -0x121],
                's': [0x11, 0x2, 0x2],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x80, 0x41, -0x121],
                's': [0x2, 0xc, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -0.7],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x8b, 0x2a, -0x121],
                's': [0x1, 0x1f, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [0x85, 0xc, -0x10d],
                's': [0x1, 0x12, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.18],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x85, 0xc, -0x105],
                's': [0x1, 0x12, 0x4],
                'l': 0x1,
                'r': [0x0, 0x0, 0.18],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x5e, 0xd, -0x16e],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x5e, 0x34, -0x152],
                's': [0x7, 0x4, 0x30],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x5e, 0x2b, -0x153],
                's': [0x7, 0x4, 0x32],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x5e, 0x2f, -0x152],
                's': [0x4, 0x5, 0x32],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x5b, 0xd, -0x146],
                's': [0x7, 0x27, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x5b, 0xd, -0x15c],
                's': [0x7, 0x27, 0x6],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x5e, 0xd, -0x136],
                's': [0x8, 0x2d, 0x8],
                'c': '#6e6e6e',
                'e': '#18180a',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [-0x5e, 0xd, -0x153],
                's': [0x4, 0x20, 0x34],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x57, 0xd, -0x146],
                's': [0xb, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x56, 0xd, -0x158],
                's': [0xd, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x57, 0xd, -0x166],
                's': [0xb, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x54, 0xd, -0x175],
                's': [0x10, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x54, 0xd, -0x18a],
                's': [0x14, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4f, 0xd, -0x140],
                's': [0x5, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x58, 0xe, -0x164],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.68, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x85, -0x8, -0x146],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0],
                'c': '#4c663e'
            }, {
                'p': [-0xb7, -0x14, -0x165],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -0.88, 3.14],
                'c': '#4c663e'
            }, {
                'p': [-0xae, -0x9, -0xf5],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, 0.17, 3.14],
                'c': '#4c663e'
            }, {
                'p': [-0xae, -0x1e, -0x127],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, 0.87, 3.14],
                'c': '#4c663e'
            }, {
                'p': [-0x5, 0x17, -0x190],
                's': [0x45, 0x2, 0x5],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x2a, 0x17, -0x19a],
                's': [0x5, 0x2, 0x19],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x20, 0x17, -0x1b0],
                's': [0x5, 0x2, 0x45],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x5, 0xd, -0x1af],
                's': [0x4f, 0x7, 0x43],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xe6, 0xd, -0xd8],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x53, 0xd, -0x175],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x56, 0xe, -0x16d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.38, 3.13],
                'c': '#85aa6c'
            }, {
                'p': [-0x8b, 0xd, -0x175],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x53, 0xd, -0x1e1],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x53, 0xd, -0x20b],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x53, 0xd, -0x1a9],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x3, 0xd, -0x1d1],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x53, 0xd, -0x1d1],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x53, 0xd, -0x20b],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x3, 0xd, -0x20b],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x6f, 0x43, -0x1c0],
                's': [0x40, 0x4, 0x9e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x6f, 0x0, -0x1c0],
                's': [0x3f, 0x14, 0x9d],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x3b, 0x0, -0x1ec],
                's': [0x31, 0x14, 0x3d],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x6f, 0x47, -0x1c0],
                's': [0x3c, 0x4, 0x9a],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x6f, 0x4b, -0x1c0],
                's': [0x40, 0x4, 0x9e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2d, 0x31, -0x1f0],
                's': [0x50, 0x4, 0x3e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2d, 0x35, -0x1f0],
                's': [0x50, 0x4, 0x3a],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [-0x2d, 0x39, -0x1f0],
                's': [0x50, 0x4, 0x3e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x28, 0x43, -0x1ee],
                's': [0x5e, 0x4, 0x42],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x28, 0x4b, -0x1ee],
                's': [0x5e, 0x4, 0x42],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x28, 0x47, -0x1ee],
                's': [0x5a, 0x4, 0x3e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x28, 0xd, -0x1d1],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x11, 0x15, -0x1d8],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x11, 0x2d, -0x1d8],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x46, 0x15, -0x1d8],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x46, 0x2d, -0x1d8],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2b, 0x15, -0x1d8],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [-0x2b, 0x2d, -0x1d8],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x44, -0x8, -0x222],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.71, 0x0],
                'c': '#4c663e'
            }, {
                'p': [-0x13, -0x12, -0x223],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -1.23, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x13, 0x4f, -0x1cb],
                's': [0x2, 0x2, 0x15],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x13, 0x47, -0x1cf],
                's': [0x1, 0xe, 0x2],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x32, 0x1d, -0x7c],
                's': [0x1, 0x15, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [-0x4b, 0x2e, -0x18f],
                's': [0x9, 0x1, 0x1a],
                'pe': 0x1,
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x4b, 0x2f, -0x183],
                's': [0x1, 0x28, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [-0x4b, 0x2f, -0x19b],
                's': [0x1, 0x27, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [-0x49, 0x2f, -0x189],
                's': [0x5, 0x1, 0x5],
                'l': 0x1,
                'c': '#5f3232',
                't': 0x5
            }, {
                'p': [-0x46, 0x2b, -0x189],
                's': [0x1, 0x5, 0x5],
                'l': 0x1,
                'c': '#5f3232',
                't': 0x5
            }, {
                'p': [-0x54, 0x56, -0x19b],
                's': [0x16, 0x2, 0x2],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x5e, 0x4f, -0x19b],
                's': [0x2, 0x7, 0x2],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x5e, 0x4f, -0x183],
                's': [0x2, 0x7, 0x2],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x54, 0x56, -0x183],
                's': [0x16, 0x2, 0x2],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [-0x5e, 0x4f, -0x183],
                's': [0x2, 0x10, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [-0x5e, 0x4f, -0x19b],
                's': [0x2, 0x10, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, -1.05],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x7, 0x15, -0x1c6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x7, 0x21, -0x1c6],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x20, 0x15, -0x19a],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [-0x14, 0x15, -0x19a],
                's': [0xc, 0xc, 0xc],
                'i': 0x8,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [-0x1a, 0x1b, -0x19a],
                's': [0x18, 0x7, 0xc],
                'l': 0x1,
                'c': '#3964a2',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0xf2, 0xd, -0x128],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x4b, 0xd, -0x1bc],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x41, 0x15, -0x1da],
                's': [0x2c, 0x1, 0x1f],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x22, 0x15, -0x1da],
                's': [0x12, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x8, 0x15, -0x1da],
                's': [0x2e, 0x1, 0x27],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x14, 0x15, -0x1da],
                's': [0xa, 0x1, 0x1e],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x18, 0x15, -0x1bd],
                's': [0xc, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a, 0x15, -0x1ae],
                's': [0x9, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a, 0x15, -0x1a2],
                's': [0xb, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x11, 0x15, -0x196],
                's': [0x1b, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x2, 0x15, -0x196],
                's': [0xb, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x18, 0x15, -0x19b],
                's': [0x21, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x13, 0x15, -0x1a6],
                's': [0xe, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf, 0x15, -0x19f],
                's': [0xb, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x6, 0x15, -0x1c2],
                's': [0x18, 0x1, 0x9],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4b, 0x15, -0x1c0],
                's': [0xc, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x40, 0x15, -0x1c7],
                's': [0xa, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4d, 0x15, -0x1b0],
                's': [0x6, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x23, 0xd, -0x194],
                's': [0x1e, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x7, 0xd, -0x194],
                's': [0x1a, 0x1, 0x1d],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x17, 0xd, -0x196],
                's': [0x22, 0x1, 0x1d],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x27, 0xd, -0x1af],
                's': [0xc, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x2a, 0xd, -0x1c4],
                's': [0x10, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1e, 0xd, -0x186],
                's': [0xe, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x38, 0xd, -0x1cc],
                's': [0xc, 0x1, 0xc],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x47, 0xd, -0x1c4],
                's': [0x12, 0x1, 0x21],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4f, 0xd, -0x1a3],
                's': [0x15, 0x1, 0x21],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x50, 0xd, -0x188],
                's': [0xb, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4a, 0xd, -0x174],
                's': [0x13, 0x1, 0x14],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x5c, 0xd, -0x1be],
                's': [0x1c, 0x27, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x60, 0xd, -0x1a0],
                's': [0x1c, 0x22, 0x1d],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x61, 0xd, -0x17b],
                's': [0x24, 0x2c, 0x2e],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x7c, 0xd, -0x177],
                's': [0x23, 0x24, 0x1f],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x9e, 0xd, -0x175],
                's': [0x28, 0x29, 0x1f],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x8f, 0xd, -0x172],
                's': [0x17, 0x1d, 0x21],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xba, -0x9, -0x175],
                's': [0x1a, 0x3a, 0x22],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xbc, -0x9, -0x191],
                's': [0x1a, 0x32, 0x1b],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xb2, -0x9, -0x1af],
                's': [0x22, 0x38, 0x28],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xc7, -0x9, -0x1d4],
                's': [0x31, 0x32, 0x28],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xef, -0x9, -0x1d6],
                's': [0x1f, 0x2a, 0x28],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xe2, -0x9, -0x1d0],
                's': [0x19, 0x23, 0x28],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x9e, 0xb, -0x143],
                's': [0x3a, 0x2, 0x4a],
                'c': '#9d9d9d',
                't': 0x1
            }, {
                'p': [0x61, 0x39, -0x17b],
                's': [0x24, 0x2, 0x2e],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x60, 0x2f, -0x1a0],
                's': [0x1c, 0x2, 0x1d],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x5c, 0x34, -0x1be],
                's': [0x1c, 0x2, 0x24],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x7c, 0x31, -0x177],
                's': [0x23, 0x2, 0x1f],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x9e, 0x36, -0x175],
                's': [0x28, 0x2, 0x1f],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1,
                'ab': 0x1
            }, {
                'p': [0x91, 0xd, -0x164],
                's': [0x28, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x63, 0xd, -0x162],
                's': [0x34, 0x1, 0x10],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x6c, 0xd, -0x159],
                's': [0x19, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x8f, 0x2a, -0x172],
                's': [0x17, 0x2, 0x21],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0xba, 0x31, -0x175],
                's': [0x1a, 0x2, 0x22],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [-0x3d, 0x16, -0x1da],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.85, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x4b, 0x16, -0x1cf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.16, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x23, 0x16, -0x1d9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.15, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x1a, 0x16, -0x1da],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.37, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x9, 0x16, -0x1d9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.55, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x11, 0x16, -0x1cb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 1.07, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x18, 0x16, -0x198],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 1.02, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x8, 0x16, -0x198],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.42, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x28, 0xe, -0x1c8],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.37, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x4a, 0xe, -0x1b4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.33, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x4d, 0xe, -0x196],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.37, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x7f, 0xe, -0x164],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.33, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xb4, 0xe, -0x160],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.37, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x10a, 0xd, -0xd5],
                's': [0x7, 0x39, 0x7],
                'v': 0x1,
                'e': '#18180a'
            }, {
                'p': [0x10a, 0xd, -0xd5],
                's': [0x8, 0x39, 0x8],
                'v': 0x1,
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x48, 0xd, -0x1ca],
                's': [0x6, 0x29, 0x6],
                'v': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x48, 0xd, -0x1ca],
                's': [0x7, 0x29, 0x7],
                'v': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x108, 0xd, -0xe4],
                's': [0x19, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x11d, 0xd, -0xe6],
                's': [0x11, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x10a, -0x9, -0x1e0],
                's': [0x23, 0x3b, 0x2e],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0xbc, 0x29, -0x191],
                's': [0x1a, 0x2, 0x1b],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0xb2, 0x2f, -0x1af],
                's': [0x22, 0x2, 0x28],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0xc7, 0x29, -0x1d4],
                's': [0x31, 0x2, 0x28],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x80, -0x16, -0x1bf],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, 0x0, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x82, -0x1b, -0x1e7],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.13, 1.4, 3.13],
                'c': '#4c663e'
            }, {
                'p': [0xb5, -0x4, -0x1f2],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.34, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0xdf, -0x27, -0x201],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.41, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x106, -0x1c, -0x23e],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.36, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0xa9, -0x24, -0x223],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x87, -0x25, -0x20a],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, 1.41, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0xe2, 0x1a, -0x1d0],
                's': [0x19, 0x2, 0x28],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0xef, 0x21, -0x1d6],
                's': [0x1f, 0x2, 0x28],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x10a, 0x32, -0x1e0],
                's': [0x23, 0x2, 0x2e],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x182, 0x0, -0xb4],
                's': [0x8, 0x38, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2b, 0x0, -0x1d8],
                's': [0x8, 0x2d, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x11, 0x0, -0x1d8],
                's': [0x8, 0x2d, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x46, 0x0, -0x1d8],
                's': [0x8, 0x2d, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x26, 0x3b, -0x32],
                's': [0x12, 0x1, 0x6],
                'i': 0x1e,
                'r': [1.57, 0x0, 0x0],
                'st': 'Map\x20By\x20CrispyCrust',
                'sb': '#ffffff',
                'bv': 0x1,
                'sf': 0x4a,
                'sa': 0x1
            }, {
                'p': [0x67, 0xd, -0x162],
                's': [0x4, 0x25, 0x4],
                'c': '#939393',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x59, 0xd, -0x162],
                's': [0x4, 0x25, 0x4],
                'c': '#939393',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x59, 0x32, -0x14b],
                's': [0x4, 0x2, 0x32],
                'c': '#939393',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x67, 0x32, -0x14b],
                's': [0x4, 0x2, 0x32],
                'c': '#939393',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x60, 0x34, -0x13f],
                's': [0x11, 0x1, 0xf],
                'pe': 0x1,
                'c': '#414f91',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x57, 0x2b, -0x13f],
                's': [0x1, 0xa, 0xf],
                'pe': 0x1,
                'c': '#414f91',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x69, 0x2d, -0x13f],
                's': [0x1, 0x8, 0xf],
                'pe': 0x1,
                'c': '#414f91',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x59, 0x29, -0x161],
                's': [0x2, 0x10, 0x2],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x67, 0x29, -0x161],
                's': [0x2, 0x10, 0x2],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0xf0, 0x1c, -0xdd],
                's': [0xe, 0x4, 0x4],
                'e': '#18180a'
            }, {
                'p': [0xd9, 0xd, -0xdd],
                's': [0x20, 0x13, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x10e, 0xd, -0xdd],
                's': [0x2e, 0x13, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x14d, 0x2f, -0x74],
                's': [0x5, 0x9, 0x33],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x125, 0x0, -0x6f],
                's': [0x4c, 0x26, 0x6e],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x135, 0x0, -0xb7],
                's': [0x28, 0x42, 0x24],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x127, 0x26, -0x37],
                's': [0x46, 0x4, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14e, 0x8, -0x85],
                's': [0x3, 0x22, 0x46],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x154, 0x2, -0x6f],
                's': [0x1, 0x17, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#a7a7a7',
                't': 0x2
            }, {
                'p': [0x16b, 0x0, -0xb1],
                's': [0x37, 0x8, 0x4],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x19b, 0x0, -0x5],
                's': [0x94, 0x8, 0x4],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x14d, 0x0, -0x9],
                's': [0x8, 0x8, 0x7],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x166, 0x0, -0xb5],
                's': [0x31, 0xc, 0x2],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x19e, 0x23, -0xb3],
                's': [0x20, 0x15, 0x5],
                'c': '#ffffff',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x87, -0xf, -0x19b],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.18, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0xa7, -0xe, -0x1d8],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x7d, 0x22, -0x187],
                's': [0x2, 0x8, 0x3],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x7d, 0x22, -0x1ad],
                's': [0x2, 0x8, 0x2],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x9a, -0x26, -0x197],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 1.39, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x60, 0x33, -0x162],
                's': [0xa, 0x1, 0x2],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x60, 0x33, -0x134],
                's': [0xa, 0x1, 0x2],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x60, 0x33, -0x14a],
                's': [0xa, 0x1, 0x2],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x60, 0x33, -0x13e],
                's': [0xa, 0x1, 0x2],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0x60, 0x33, -0x156],
                's': [0xa, 0x1, 0x2],
                'c': '#939393',
                't': 0x2
            }, {
                'p': [0xf, 0x1f, -0x12f],
                's': [0x5, 0x1, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0xf, 0x22, -0x12f],
                's': [0x5, 0x1, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xc, 0x1f, -0x12f],
                's': [0x1, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x12, 0x1f, -0x12f],
                's': [0x1, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xf, 0x12, -0x134],
                's': [0x5, 0xf, 0x1],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': 0x5,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0xf, 0x10, -0x136],
                's': [0x2f, 0x2, 0xa],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': -0.1,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0x59, 0x10, -0x136],
                's': [0x2f, 0x2, 0xa],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': -0.1,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0xf, 0x20, -0x12f],
                's': [0x5, 0x2, 0x8],
                'c': '#000000',
                'e': '#18180a'
            }, {
                'p': [0x59, 0x1f, -0x12f],
                's': [0x5, 0x1, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x59, 0x22, -0x12f],
                's': [0x5, 0x1, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x56, 0x1f, -0x12f],
                's': [0x1, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x5c, 0x1f, -0x12f],
                's': [0x1, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x59, 0x12, -0x134],
                's': [0x5, 0xf, 0x1],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': 0x5,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0x59, 0x20, -0x12f],
                's': [0x5, 0x2, 0x8],
                'c': '#000000',
                'e': '#18180a'
            }, {
                'p': [0x182, 0x1b, -0x74],
                's': [0xa, 0x4, 0x6],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x185, 0x1b, -0x79],
                's': [0x4, 0x2, 0x4],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x182, 0x37, -0x76],
                's': [0xa, 0x4, 0xa],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x182, 0x35, -0x73],
                's': [0xa, 0x2, 0x4],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x57, 0x2a, -0x153],
                's': [0x1, 0xb, 0x16],
                'pe': 0x1,
                'c': '#612424',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x69, 0x2b, -0x153],
                's': [0x1, 0xa, 0x16],
                'pe': 0x1,
                'c': '#612424',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x60, 0x34, -0x153],
                's': [0x11, 0x1, 0x16],
                'pe': 0x1,
                'c': '#612424',
                't': 0x5,
                'bo': 0x1
            }, {
                'p': [0x19b, 0x42, -0xaa],
                's': [0x34, 0x5, 0x1a],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x175, 0x42, -0xa2],
                's': [0x18, 0x5, 0xa],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x19c, 0x3d, -0xa7],
                's': [0x2e, 0x5, 0x1c],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x178, 0x3d, -0x9f],
                's': [0x1a, 0x5, 0xc],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x190, 0x38, -0xa9],
                's': [0xe, 0x5, 0x10],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x173, 0x8, -0xb3],
                's': [0x1a, 0x2d, 0x5],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x15b, 0x8, -0xb3],
                's': [0x16, 0x2a, 0x5],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x14c, 0x2f, -0xa0],
                's': [0x7, 0x5, 0x25],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x152, 0x2a, -0xa3],
                's': [0x8, 0x6, 0x1c],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x175, 0x2a, -0xae],
                's': [0x18, 0x6, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x15d, 0x2, -0x9f],
                's': [0x4, 0x2, 0x6],
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': '#8c8c8c',
                'e': '#18180a'
            }, {
                'p': [0x176, 0x2, -0x9f],
                's': [0x7, 0x3, 0x5],
                'l': 0x1,
                'r': [0x0, 0.87, 0x0],
                'c': '#8c8c8c',
                'e': '#18180a'
            }, {
                'p': [0x18e, 0x2, -0x4a],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'r': [-3.14, 0.17, -3.14],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x161, 0x2, -0x85],
                's': [0x5, 0x3, 0x6],
                'l': 0x1,
                'r': [0x0, 0.52, 0x0],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x168, 0x38, -0x95],
                's': [0xa, 0x5, 0x4],
                'c': '#8c8c8c',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a3, 0x2, -0x202],
                's': [0xf, 0xe, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x174, 0x0, -0x24d],
                's': [0x6e, 0xa, 0x35],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x138, 0x10, -0x202],
                's': [0x46, 0x2, 0x5],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x19e, 0x10, -0x202],
                's': [0x26, 0x2, 0x5],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0xf8, 0x0, -0x18d],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xf8, 0x0, -0x121],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14a, 0x0, -0x121],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14a, 0x0, -0x149],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x152, 0x0, -0x151],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x176, 0x0, -0x151],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14a, 0x0, -0x173],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x152, 0x0, -0x16b],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14a, 0x0, -0x18d],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x176, 0x0, -0x16b],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x0, -0x173],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a3, 0x0, -0x15e],
                's': [0x8, 0x36, 0x20],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1a2, 0x0, -0x151],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a2, 0x0, -0x16b],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x0, -0x149],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x18c, 0x29, -0x15e],
                's': [0x26, 0xd, 0x20],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1aa, 0x0, -0x127],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a2, 0x0, -0x11f],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x188, 0x0, -0x11f],
                's': [0x9, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x188, 0x0, -0xf9],
                's': [0x9, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x204, 0x0, -0xf9],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1b1, 0x0, -0xf9],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1de, 0x0, -0xf9],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xf8, 0x0, -0x156],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x0, -0x18d],
                's': [0x8, 0x36, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1c4, -0x9, -0x19a],
                's': [0x1a, 0x33, 0x22],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x1c2, -0x9, -0x1b6],
                's': [0x1c, 0x2e, 0x20],
                'c': '#595959',
                'e': '#11110c',
                'bo': 0x1
            }, {
                'p': [0x1c2, 0x25, -0x1b6],
                's': [0x1c, 0x2, 0x20],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x1c4, 0x2a, -0x19a],
                's': [0x1a, 0x2, 0x22],
                'c': '#8e8e8e',
                't': 0x8,
                'bo': 0x1
            }, {
                'p': [0x121, 0x36, -0x157],
                's': [0x5a, 0x4, 0x74],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x121, 0x3a, -0x157],
                's': [0x56, 0x4, 0x70],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x121, 0x3e, -0x157],
                's': [0x5a, 0x4, 0x74],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x17a, 0x36, -0x15e],
                's': [0x58, 0x4, 0x22],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1d7, 0x36, -0x143],
                's': [0x62, 0x4, 0x9c],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x195, 0x36, -0x10c],
                's': [0x23, 0x4, 0x2e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x197, 0x3a, -0x10c],
                's': [0x23, 0x4, 0x2a],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1d7, 0x3a, -0x143],
                's': [0x5e, 0x4, 0x98],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x17a, 0x3a, -0x15e],
                's': [0x5c, 0x4, 0x1e],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x17a, 0x3e, -0x15e],
                's': [0x58, 0x4, 0x22],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1d7, 0x3e, -0x143],
                's': [0x62, 0x4, 0x9c],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x195, 0x3e, -0x10c],
                's': [0x23, 0x4, 0x2e],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x121, 0x0, -0x157],
                's': [0x59, 0xc, 0x73],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x163, 0x0, -0x15e],
                's': [0x2d, 0xc, 0x21],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x18c, 0x25, -0x151],
                's': [0x24, 0x4, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x179, 0x25, -0x15e],
                's': [0x2, 0x4, 0x12],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x19f, 0x25, -0x15e],
                's': [0x2, 0x4, 0x12],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x196, 0x0, -0x10c],
                's': [0x21, 0xc, 0x2d],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x1d7, 0x0, -0x143],
                's': [0x61, 0xc, 0x9b],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x185, 0x0, -0x10c],
                's': [0x2, 0xc, 0x22],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x1a3, 0x0, -0x15e],
                's': [0x9, 0xc, 0x20],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x18c, 0x2, -0xf6],
                's': [0x1a, 0x1, 0x1d],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x185, 0x2, -0x117],
                's': [0x13, 0x1, 0x25],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a3, 0x2, -0x12a],
                's': [0x13, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x194, 0x2, -0x125],
                's': [0xb, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a8, 0x2, -0x13c],
                's': [0x13, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a8, 0x2, -0x15d],
                's': [0x1e, 0x1, 0x35],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x197, 0x2, -0x166],
                's': [0x4, 0x1, 0x18],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x17a, 0x2, -0x11c],
                's': [0x3, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x189, 0x2, -0xe6],
                's': [0xd, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1ac, 0x2, -0x189],
                's': [0x17, 0x1, 0x23],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a4, 0x2, -0x201],
                's': [0x1e, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x19f, 0x2, -0x17f],
                's': [0x3, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b1, 0x2, -0x1ac],
                's': [0xf, 0x1, 0x23],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x18d, 0x2, -0x202],
                's': [0x10, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x14a, 0x2, -0x20d],
                's': [0x18, 0x1, 0x9],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a7, 0x2, -0x1b6],
                's': [0x5, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x174, 0x0, -0x231],
                's': [0x1a, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x174, 0x0, -0x22e],
                's': [0x1a, 0x6, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x174, 0x0, -0x22b],
                's': [0x1a, 0x4, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x194, 0x9, -0x233],
                's': [0x26, 0x2, 0x2],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x182, 0x2, -0x233],
                's': [0x2, 0x7, 0x2],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1a6, 0x2, -0x233],
                's': [0x2, 0x7, 0x2],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x166, 0x2, -0x233],
                's': [0x2, 0x7, 0x2],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x140, 0x2, -0x233],
                's': [0x2, 0x7, 0x2],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x153, 0x9, -0x233],
                's': [0x28, 0x2, 0x2],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1aa, 0x0, -0x1c8],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x0, -0x248],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a2, 0x0, -0x250],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x144, 0x0, -0x250],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x0, -0x248],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x0, -0x1c8],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x129, 0x29, -0x20f],
                's': [0x2e, 0x4, 0x96],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x173, 0x29, -0x24e],
                's': [0x66, 0x4, 0x3a],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x129, 0x2d, -0x20f],
                's': [0x2a, 0x4, 0x92],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x173, 0x2d, -0x24e],
                's': [0x6a, 0x4, 0x36],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x129, 0x31, -0x217],
                's': [0x2e, 0x4, 0xa6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x173, 0x31, -0x24e],
                's': [0x66, 0x4, 0x3a],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a4, 0x2, -0x210],
                's': [0xd, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a4, 0x2, -0x230],
                's': [0x26, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a4, 0x2, -0x220],
                's': [0x9, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x18b, 0x2, -0x230],
                's': [0xc, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x174, 0x2, -0x22c],
                's': [0x22, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x16f, 0x2, -0x223],
                's': [0x10, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x140, 0x2, -0x231],
                's': [0x16, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x15c, 0x2, -0x230],
                's': [0xe, 0x1, 0x9],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x150, 0x2, -0x230],
                's': [0xa, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x140, 0x2, -0x21d],
                's': [0xc, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x141, 0x2, -0x201],
                's': [0x19, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x156, 0x2, -0x203],
                's': [0x11, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x160, 0x2, -0x202],
                's': [0x3, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x199, 0x2, -0x20c],
                's': [0x9, 0x1, 0x9],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x19d, 0x2, -0x225],
                's': [0x5, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x112, 0x2, -0x205],
                's': [0x23, 0x1, 0x20],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x12c, 0x2, -0x205],
                's': [0x11, 0x1, 0x14],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x11d, 0xd, -0xe5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x112, 0xe, -0xe3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 1.4, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xce, 0xe, -0xe3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.69, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xc1, 0xe, -0xf0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.18, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xc1, 0xe, -0x125],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.87, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xc1, 0xe, -0x160],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xe2, 0x2, -0x1c8],
                's': [0x23, 0x1, 0x24],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xfa, 0x2, -0x1c4],
                's': [0xd, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc8, 0x2, -0x1b6],
                's': [0x11, 0x1, 0x16],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc8, 0x2, -0x196],
                's': [0xb, 0x1, 0x1a],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xc6, 0x2, -0x1a7],
                's': [0xb, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xd9, 0x2, -0x1b4],
                's': [0x11, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x107, 0x2, -0x1c8],
                's': [0xd, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf9, 0xd, -0x12b],
                's': [0x15, 0x1, 0x27],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf5, 0xd, -0x143],
                's': [0xb, 0x1, 0x9],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf5, 0xd, -0x152],
                's': [0x8, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xed, 0xd, -0x128],
                's': [0x3, 0x1, 0x1a],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x111, 0xd, -0x11c],
                's': [0x1b, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4b, 0xd, -0x1c2],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xf2, 0xd, -0x12e],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xf2, 0xe, -0x135],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xfd, 0x2, -0x18e],
                's': [0x1d, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x11e, 0x2, -0x192],
                's': [0x25, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x148, 0x2, -0x180],
                's': [0x15, 0x1, 0x2f],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x137, 0x2, -0x192],
                's': [0xd, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x15b, 0x2, -0x174],
                's': [0x11, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x172, 0x2, -0x16a],
                's': [0x1d, 0x1, 0x1c],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x156, 0x2, -0x185],
                's': [0x7, 0x1, 0x11],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x121, 0x2, -0x19c],
                's': [0x18, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xf9, 0x2, -0x197],
                's': [0xd, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x170, 0x2, -0x153],
                's': [0x1d, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x153, 0x2, -0x14c],
                's': [0x1d, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x14e, 0x2, -0x13c],
                's': [0x17, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x14a, 0x2, -0x127],
                's': [0x13, 0x1, 0x1c],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x16b, 0x2, -0x149],
                's': [0x13, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x182, 0x2, -0x16d],
                's': [0x3, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x15d, 0x2, -0x17e],
                's': [0x7, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x16b, 0x2, -0x179],
                's': [0xf, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a1, 0x3, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x1a1, 0x3, -0x127],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.52, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x1a1, 0x3, -0x148],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.35, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x15c, 0x3, -0x149],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.17, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x153, 0x3, -0x148],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.53, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x1ae, 0x3, -0x195],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.13, -1.4, 3.13],
                'c': '#85aa6c'
            }, {
                'p': [0x1ab, 0x3, -0x1be],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.04, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x120, 0x3, -0x1fc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.71, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xf3, 0x3, -0x1be],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.54, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xc8, 0x3, -0x1bb],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.19, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xd2, 0x3, -0x1bc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.86, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xc6, 0x3, -0x1a3],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.06, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x129, 0x3, -0x195],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.71, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x11f, 0x2, -0x197],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x11f, 0xe, -0x197],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x152, 0x3, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.21, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x170, 0x3, -0x173],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.41, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x163, 0x3, -0x22e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.54, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x186, 0x3, -0x22e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.06, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x1a2, 0x3, -0x22e],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.38, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x1a2, 0x3, -0x208],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.86, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x142, 0x3, -0x209],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.34, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x143, 0x3, -0x22f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.69, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x14e, 0xa, -0x23a],
                's': [0x9, 0x4, 0x9],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x14e, 0x25, -0x23a],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14e, -0xb, -0x23a],
                's': [0x8, 0x30, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x188, 0xa, -0x23a],
                's': [0x9, 0x4, 0x9],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x188, 0x25, -0x23a],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x188, -0xb, -0x23a],
                's': [0x8, 0x30, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x160, 0xa, -0x23a],
                's': [0x9, 0x4, 0x9],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x160, 0x25, -0x23a],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x160, -0xb, -0x23a],
                's': [0x8, 0x30, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x19a, 0xa, -0x23a],
                's': [0x9, 0x4, 0x9],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x19a, 0x25, -0x23a],
                's': [0x9, 0x4, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x19a, -0xb, -0x23a],
                's': [0x8, 0x30, 0x8],
                'c': '#707070',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x169, 0xa, -0x24e],
                's': [0x4, 0x16, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x17f, 0xa, -0x24e],
                's': [0x4, 0x16, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x174, 0x20, -0x24e],
                's': [0x1b, 0x4, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x173, 0x2, -0x24e],
                's': [0x17, 0x1e, 0x3],
                'c': '#b9b9b9',
                't': 0x2
            }, {
                'p': [0x145, -0x7, -0x283],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.36, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x1af, -0xe, -0x283],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -1.04, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x1e3, -0xe, -0x1f2],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -1.04, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x1f5, -0x19, -0x1e9],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, 1.05, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0x211, -0x1e, -0x19e],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, 1.05, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0x1e2, -0x1f, -0x257],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, 0.36, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0x17a, -0x14, -0x293],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -0.86, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x10e, -0x15, -0x283],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.41, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x164, -0x17, -0x180],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.06, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x14d, 0x2, -0x20a],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x165, 0x0, -0x17f],
                's': [0x5, 0x23, 0x5],
                'v': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x165, 0x0, -0x17f],
                's': [0x6, 0x23, 0x6],
                'v': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x19d, 0x21, -0xea],
                's': [0x1, 0x21, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [0x19d, 0x42, -0xf3],
                's': [0x2, 0x2, 0x15],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x19d, 0x3a, -0xf7],
                's': [0x1, 0xe, 0x2],
                'l': 0x1,
                'r': [0.87, 0x0, 0x0],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x110, 0x42, -0x191],
                's': [0x2, 0x2, 0x14],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x110, 0x39, -0x18e],
                's': [0x1, 0xd, 0x2],
                'l': 0x1,
                'r': [-0.7, 0x0, 0x0],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x110, 0x27, -0x19a],
                's': [0x1, 0x1b, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [0x18c, 0x25, -0x16b],
                's': [0x24, 0x4, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x19b, 0x25, -0x15e],
                's': [0x6, 0x4, 0x14],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x17d, 0x25, -0x15e],
                's': [0x6, 0x4, 0x14],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x18b, 0x28, -0x15e],
                's': [0x1a, 0x1, 0x14],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x111, 0xd, -0x11b],
                's': [0x3, 0xf, 0x1],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': '#a7a7a7',
                't': 0x2
            }, {
                'p': [0x10a, 0xd, -0x11b],
                's': [0x3, 0xf, 0x1],
                'l': 0x1,
                'r': [-0.17, 0x0, 0x0],
                'c': '#a7a7a7',
                't': 0x2
            }, {
                'p': [-0x2a, 0x2, -0x4b],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': 0x0
            }, {
                'p': [0x174, 0x2, -0x211],
                's': [0x18, 0x24, 0x18],
                'i': 0x17,
                'l': 0x1,
                'tm': '1'
            }, {
                'p': [-0x5, 0x15, -0x1b0],
                's': [0x44, 0x32, 0x39],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x1c9, 0x2, -0x43],
                's': [0x2f, 0x23, 0x77],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x173, 0x2, -0x21b],
                's': [0x64, 0x23, 0x2c],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x3c, 0x2, -0xcb],
                's': [0x67, 0x23, 0x47],
                'i': 0xe,
                'l': 0x1
            }, {
                'p': [0x60, 0x0, -0x90],
                's': [0x2f, 0x22, 0x2c],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x33, 0x2, -0xf0],
                's': [0x22, 0x1, 0x12],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4f, 0x2, -0xf0],
                's': [0x16, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4d, 0x2, -0xd1],
                's': [0x14, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4c, 0x2, -0xd8],
                's': [0xf, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x4b, 0x2, -0xcd],
                's': [0xb, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x66, 0x2, -0xf0],
                's': [0x18, 0x1, 0x2d],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x6a, 0x2, -0xd4],
                's': [0xf, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x6c, 0x2, -0xc4],
                's': [0x9, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x68, 0x2, -0xaf],
                's': [0x13, 0x1, 0x15],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x51, 0x2, -0xa3],
                's': [0x1b, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x58, 0x2, -0xaf],
                's': [0xd, 0x1, 0x5],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x5, 0x2, -0xc7],
                's': [0xc, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x16, 0x2, -0xdd],
                's': [0x6, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x3c, 0x0, -0xf0],
                's': [0x69, 0xc, 0x1],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x71, 0x0, -0xca],
                's': [0x2, 0xc, 0x4b],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x60, 0x0, -0xa6],
                's': [0x20, 0xc, 0x1],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [0x69, 0x2, -0xae],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x6c, 0x2, -0xb7],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x6c, 0x2, -0xbd],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x6b, 0x3, -0xea],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.86, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x6c, 0x3, -0xdf],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.36, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x6c, 0x3, -0xc4],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.51, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x5e, 0x3, -0xab],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.21, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [-0x37, -0x23, -0x23a],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.52, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x1ef, -0x29, -0x1b7],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -0.34, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0x42, 0x2, -0xd3],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x36, 0x2, -0xd3],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x18e, 0x2, -0x202],
                's': [0x5, 0xe, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x196, 0x2, -0x202],
                's': [0xb, 0x3, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x196, 0xe, -0x202],
                's': [0xb, 0x2, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x196, 0x5, -0x200],
                's': [0x5, 0xb, 0x1],
                'pe': 0x1,
                'c': '#acaaaa',
                't': 0x2
            }, {
                'p': [0x192, 0x4, -0x200],
                's': [0x3, 0xb, 0x1],
                'pe': 0x1,
                'c': '#acaaaa',
                't': 0x2
            }, {
                'p': [0x19a, 0x4, -0x200],
                's': [0x3, 0xb, 0x1],
                'pe': 0x1,
                'c': '#acaaaa',
                't': 0x2
            }, {
                'p': [0x19a, 0x2, -0x209],
                's': [0x5, 0x3, 0x4],
                'l': 0x1,
                'r': [0x0, 0.7, 0x0],
                'e': '#18180a'
            }, {
                'p': [0x8e, 0x0, -0x77],
                's': [0x7f, 0x2, 0x8],
                'v': 0x1,
                'c': '#ffffff',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x7, 0x22, -0xe4],
                's': [0x2, 0xc, 0x1a],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x199, 0x1e, -0xb3],
                's': [0x28, 0x5, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x188, 0x0, -0xb3],
                's': [0x5, 0x1e, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1ab, 0x0, -0xb3],
                's': [0x5, 0x1e, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1b1, 0x0, -0xb4],
                's': [0x8, 0x38, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1b5, 0x8, -0x98],
                's': [0x1, 0x32, 0x22],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1b7, 0x0, -0x34],
                's': [0x8, 0x8, 0x9],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1b4, 0x0, -0xac],
                's': [0x1, 0x38, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x187, 0x23, -0xb3],
                's': [0xe, 0x12, 0x5],
                'c': '#ffffff',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x158, 0x2a, -0xac],
                's': [0x4, 0x6, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1b0, 0x0, -0xb1],
                's': [0x7, 0x8, 0x4],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1b1, 0x0, -0xb0],
                's': [0x8, 0x38, 0x1],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0xd6, -0x37, -0x141],
                's': [0x26b, 0x23, 0x3a1],
                'c': '#f70000',
                't': 0x5
            }, {
                'p': [0x1b7, 0x8, -0x34],
                's': [0x7, 0x25, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1b7, 0x8, -0x5c],
                's': [0x7, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1b7, 0x8, -0x84],
                's': [0x7, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1b5, 0x2f, -0x44],
                's': [0x1, 0xb, 0x86],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1b9, 0x27, -0xd6],
                's': [0x7, 0x4, 0x31],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1cf, 0x2a, -0x47],
                's': [0x34, 0x4, 0x82],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1de, 0x8, -0x3],
                's': [0x7, 0x22, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1e5, 0x8, -0xa],
                's': [0x7, 0x22, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1de, 0x8, -0x83],
                's': [0x7, 0x22, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1e5, 0x8, -0x7c],
                's': [0x7, 0x22, 0x7],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1b7, 0x0, -0x5c],
                's': [0x8, 0x8, 0x9],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1cc, 0x0, -0x98],
                's': [0x32, 0x8, 0x31],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1cb, 0x8, -0x84],
                's': [0x21, 0x23, 0x7],
                'c': '#ffffff',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1e5, 0x0, -0x43],
                's': [0x8, 0x8, 0x7d],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1e5, 0x8, -0x43],
                's': [0x6, 0x22, 0x7d],
                'c': '#ffffff',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1d1, -0x11, -0xbc],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, 0.87, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x1f8, -0x1d, -0xd8],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -1.05, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x220, -0xd, -0xfd],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [3.14, -0.7, 3.14],
                'c': '#4c663e'
            }, {
                'p': [0x210, -0x24, -0xa7],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, 0.53, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0x1d7, -0x25, -0x9f],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [0x0, -0.18, 0x0],
                'c': '#4c663e'
            }, {
                'p': [0x210, -0x42, -0xcb],
                's': [0x41, 0x6d, 0x36],
                'i': 0xf,
                'l': 0x1,
                'r': [-3.14, 0.53, -3.14],
                'c': '#4c663e'
            }, {
                'p': [0x116, 0x0, -0x1c8],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1bd, 0x0, -0x216],
                's': [0x2c, 0x29, 0xa2],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1bd, 0x29, -0x20f],
                's': [0x2e, 0x4, 0x96],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1bd, 0x2d, -0x20f],
                's': [0x2a, 0x4, 0x92],
                'c': '#e8e8e8',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1bd, 0x31, -0x218],
                's': [0x2e, 0x4, 0xa8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x0, -0x202],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x0, -0x202],
                's': [0x8, 0x29, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13d, 0x2, -0x1c4],
                's': [0x1d, 0x1, 0xf],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x11e, 0x2, -0x1c8],
                's': [0x21, 0x1, 0x10],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x121, 0x2, -0x1bf],
                's': [0xe, 0x1, 0x2],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x141, 0x2, -0x1bb],
                's': [0x11, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b1, 0x2, -0x1c9],
                's': [0x25, 0x1, 0x17],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x19a, 0x2, -0x1d5],
                's': [0x9, 0x1, 0x19],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x196, 0x2, -0x1ed],
                's': [0x4, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x19a, 0x2, -0x1ee],
                's': [0x4, 0x1, 0x19],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x18a, 0x2, -0xb5],
                's': [0x7, 0x1, 0x14],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x181, 0x2, -0xaf],
                's': [0xb, 0x1, 0x6],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x18f, 0x2, -0xb3],
                's': [0x3, 0x1, 0xc],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a1, 0x2, -0xf6],
                's': [0x10, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b1, 0x2, -0xea],
                's': [0x10, 0x1, 0x22],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b2, 0x2, -0xd4],
                's': [0xa, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b2, 0x2, -0xb6],
                's': [0x1a, 0x1, 0x16],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b2, 0x2, -0xc8],
                's': [0x10, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1a4, 0x2, -0xb3],
                's': [0x2, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x1b2, 0x2, -0xa9],
                's': [0xc, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xdd, 0xd, -0xe5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xdd, 0xd, -0xd5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xd1, 0xd, -0xd5],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1a5, 0x35, -0x1e3],
                's': [0x15, 0x2, 0x2],
                'c': '#c8c8c8',
                't': 0x2,
                'bo': 0x1
            }, {
                'p': [0x1a9, 0x2c, -0x1e3],
                's': [0x2, 0xd, 0x1],
                'l': 0x1,
                'r': [0x0, 0x0, 0.7],
                'c': '#c8c8c8',
                't': 0x2
            }, {
                'p': [0x19c, 0x1e, -0x1e3],
                's': [0x1, 0x17, 0x1],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x2
            }, {
                'p': [0x1a2, 0x2, -0x203],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.89, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x19d, 0x0, -0x1e5],
                's': [0x3, 0x8, 0x2d],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x19d, 0x8, -0x1e5],
                's': [0x4, 0x2, 0x2e],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1a3, 0x0, -0x1fa],
                's': [0x9, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1a3, 0x0, -0x1d0],
                's': [0x9, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1a3, 0x8, -0x1fa],
                's': [0x8, 0x2, 0x4],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1a3, 0x8, -0x1d0],
                's': [0x8, 0x2, 0x4],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x1a3, 0x0, -0x1e5],
                's': [0x9, 0x4, 0x28],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x1a3, 0x2, -0x1c7],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.06, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x1aa, 0x1, -0x1f4],
                's': [0x8, 0x21, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x1, -0x1d6],
                's': [0x8, 0x21, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x22, -0x1e5],
                's': [0x9, 0x4, 0x25],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x13, -0x1e5],
                's': [0x9, 0x1, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x1aa, 0x16, -0x1e5],
                's': [0x9, 0x1, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x13, -0x1e8],
                's': [0x9, 0x4, 0x1],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1aa, 0x13, -0x1e2],
                's': [0x9, 0x4, 0x1],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x1a5, 0x6, -0x1e5],
                's': [0x1, 0xf, 0x5],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': 0x5,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0x1a3, 0x4, -0x1e5],
                's': [0xa, 0x2, 0x27],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': -0.1,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0x1aa, 0x14, -0x1e5],
                's': [0x8, 0x2, 0x5],
                'c': '#000000',
                'e': '#18180a'
            }, {
                'p': [0x149, 0x0, -0x1e5],
                's': [0x3, 0x8, 0x2d],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x149, 0x8, -0x1e5],
                's': [0x4, 0x2, 0x2e],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x143, 0x0, -0x1d0],
                's': [0x9, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x143, 0x0, -0x1fa],
                's': [0x9, 0x8, 0x3],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x143, 0x8, -0x1d0],
                's': [0x8, 0x2, 0x4],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x143, 0x8, -0x1fa],
                's': [0x8, 0x2, 0x4],
                'c': '#939393',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x143, 0x0, -0x1e5],
                's': [0x9, 0x4, 0x28],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x13c, 0x1, -0x1d6],
                's': [0x8, 0x21, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x1, -0x1f4],
                's': [0x8, 0x21, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x22, -0x1e5],
                's': [0x9, 0x4, 0x25],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x13, -0x1e5],
                's': [0x9, 0x1, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x13c, 0x16, -0x1e5],
                's': [0x9, 0x1, 0x5],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x13, -0x1e2],
                's': [0x9, 0x4, 0x1],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x13c, 0x13, -0x1e8],
                's': [0x9, 0x4, 0x1],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x141, 0x6, -0x1e5],
                's': [0x1, 0xf, 0x5],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': 0x5,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0x143, 0x4, -0x1e5],
                's': [0xa, 0x2, 0x27],
                'l': 0x1,
                'c': '#2787ca',
                'o': 0.7000000000000001,
                't': 0x8,
                'ts': -0.1,
                'td': '1',
                'ab': 0x1
            }, {
                'p': [0x13c, 0x14, -0x1e5],
                's': [0x8, 0x2, 0x5],
                'c': '#000000',
                'e': '#18180a'
            }, {
                'p': [0x140, 0x2, -0x1d9],
                's': [0x21, 0x1, 0x1b],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x140, 0x2, -0x1f0],
                's': [0x1e, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x152, 0x2, -0x1dc],
                's': [0x3, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x144, 0x3, -0x1ca],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.13, -1.41, 3.13],
                'c': '#85aa6c'
            }, {
                'p': [0x1b1, 0x3, -0xbc],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.7, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x1b0, 0x3, -0xf0],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, 0.17, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x1a6, 0x3, -0xf1],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [-3.14, -0.53, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xf0, 0xd, -0xdd],
                's': [0xe, 0x3, 0x4],
                'e': '#18180a'
            }, {
                'p': [0xf1, 0x10, -0xdb],
                's': [0x4, 0xd, 0x1],
                'pe': 0x1,
                'c': '#b1b1b1',
                't': 0x2
            }, {
                'p': [0xf5, 0x10, -0xdb],
                's': [0x4, 0xc, 0x1],
                'pe': 0x1,
                'c': '#b1b1b1',
                't': 0x2
            }, {
                'p': [0xec, 0xf, -0xdb],
                's': [0x6, 0xd, 0x1],
                'pe': 0x1,
                'c': '#b1b1b1',
                't': 0x2
            }, {
                'p': [0x154, 0x2, -0x4a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x1dd, 0x2, -0x25],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x14d, 0x0, -0x72],
                's': [0x8, 0x8, 0x7d],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb
            }, {
                'p': [0x154, 0x2, -0x79],
                's': [0x1, 0x17, 0x5],
                'l': 0x1,
                'r': [0x0, 0x0, 0.17],
                'c': '#a7a7a7',
                't': 0x2
            }, {
                'p': [0x1da, 0x2, -0x78],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1da, 0x2, -0x6c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1da, 0x2, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x1da, 0xe, -0x1c],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x154, 0x2, -0x50],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x11, 0x0, -0x73],
                's': [0x12, 0x26, 0x2],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x44, 0x0, -0x74],
                's': [0x14, 0xc, 0x1],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1c, 0x0, -0x73],
                's': [0x4, 0x1a, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2a, 0x1a, -0x73],
                's': [0x20, 0x4, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x38, 0x0, -0x73],
                's': [0x4, 0x1a, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x1, 0x0, -0x6b],
                's': [0x1, 0xc, 0x4],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x2, 0x0, -0x59],
                's': [0x4, 0x1a, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2, 0x0, -0x3d],
                's': [0x4, 0x1a, 0x4],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x2, 0x1a, -0x4b],
                's': [0x4, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x1, 0x0, -0x2e],
                's': [0x1, 0xc, 0x1e],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x2, 0x0, -0x2f],
                's': [0x2, 0x26, 0x18],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x2, 0x1e, -0x4b],
                's': [0x2, 0x8, 0x20],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x43, 0x0, -0x73],
                's': [0x12, 0x26, 0x2],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x2a, 0x1e, -0x73],
                's': [0x20, 0x8, 0x2],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x2, 0x2, -0x58],
                's': [0x9, 0x1, 0xa],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x25, 0x0, -0x50],
                's': [0x48, 0x2, 0x48],
                'c': '#434343',
                'e': '#18180a'
            }, {
                'p': [-0x37, 0x2, -0x73],
                's': [0x7, 0x1, 0xb],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x40, 0x2, -0x71],
                's': [0xb, 0x1, 0x3],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x2, 0x2, -0x64],
                's': [0x5, 0x1, 0xe],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0xf, 0x2, -0x71],
                's': [0x6, 0x1, 0x4],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x3, 0x2, -0x61],
                's': [0x4, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4, 0x2, -0x3d],
                's': [0x7, 0x1, 0xd],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x26, 0x0, -0x2b],
                's': [0x46, 0x26, 0x2],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x4a, 0x0, -0x4f],
                's': [0x2, 0x26, 0x46],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x48, 0x0, -0x71],
                's': [0x8, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x5, 0x0, -0x2d],
                's': [0x6, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x48, 0x0, -0x2d],
                's': [0x8, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x21, 0x2, -0x74],
                's': [0x2, 0x1, 0x8],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x26, 0x22, -0x70],
                's': [0x3c, 0x4, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x26, 0x22, -0x2e],
                's': [0x3c, 0x4, 0x6],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x47, 0x22, -0x4f],
                's': [0x6, 0x4, 0x3c],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x5, 0x22, -0x4f],
                's': [0x6, 0x4, 0x3c],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x26, 0x26, -0x6a],
                's': [0x4c, 0x4, 0x16],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x4, 0x0, -0x27],
                's': [0x8, 0x26, 0x8],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0xb, 0x26, -0x4f],
                's': [0x16, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x41, 0x26, -0x4f],
                's': [0x16, 0x4, 0x20],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [-0x11, 0x2, -0x2f],
                's': [0x3, 0xe, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': '#989898',
                't': 0x2
            }, {
                'p': [-0x18, 0x2, -0x2f],
                's': [0x3, 0xe, 0x1],
                'l': 0x1,
                'r': [0.17, 0x0, 0x0],
                'c': '#989898',
                't': 0x2
            }, {
                'p': [-0x46, 0x2, -0x34],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x46, 0x2, -0x3a],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x171, 0x2, -0x1ca],
                's': [0xc, 0xc, 0xc],
                'i': 0x8
            }, {
                'p': [0x17d, 0x2, -0x1ca],
                's': [0xc, 0xc, 0xc],
                'i': 0x8,
                'r': [0x0, 1.57, 0x0]
            }, {
                'p': [0x177, 0x8, -0x1ca],
                's': [0x18, 0x7, 0xc],
                'l': 0x1,
                'c': '#3964a2',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x1d, 0x33, -0x1d],
                's': [0xc, 0x8, 0x1],
                'l': 0x1,
                'c': '#2f241a',
                'e': '#18180a',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x1d, 0x3b, -0x1d],
                's': [0xe, 0x6, 0x1],
                'l': 0x1,
                'c': '#2f241a',
                'e': '#18180a',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x1d, 0x34, -0x1d],
                's': [0xa, 0x8, 0x2],
                'l': 0x1,
                'c': '#7d634b',
                'e': '#18180a',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x1d, 0x3c, -0x1d],
                's': [0xc, 0x4, 0x2],
                'l': 0x1,
                'c': '#7d634b',
                'e': '#18180a',
                't': 0x5,
                'ab': 0x1
            }, {
                'p': [0x14d, 0x2, -0x202],
                's': [0x1b, 0xe, 0x4],
                'e': '#18180a'
            }, {
                'p': [0x148, 0x2, -0x215],
                's': [0x4, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0xdf, 0xd, -0xdd],
                's': [0xf, 0x1, 0x22],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x59, 0x0, -0x102],
                's': [0x21, 0xc, 0x61],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1, 0x0, -0x5d],
                's': [0x1, 0xc, 0x4],
                'c': '#696969',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x1, 0x0, -0x64],
                's': [0x1, 0x5, 0xa],
                'c': '#464646',
                'e': '#18180a',
                't': 0xb,
                'bo': 0x1
            }, {
                'p': [-0x2, 0x0, -0x6b],
                's': [0x2, 0x26, 0x4],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x2, 0xf, -0x64],
                's': [0x2, 0x17, 0xa],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x2, 0x0, -0x64],
                's': [0x2, 0x5, 0xa],
                'c': '#bebebe',
                'e': '#18180a'
            }, {
                'p': [-0x1, 0x5, -0x63],
                's': [0x1, 0xa, 0x4],
                'pe': 0x1,
                'c': '#afafaf',
                't': 0x2
            }, {
                'p': [-0x1, 0x5, -0x67],
                's': [0x1, 0xb, 0x4],
                'pe': 0x1,
                'c': '#afafaf',
                't': 0x2
            }, {
                'p': [-0x1, 0x5, -0x60],
                's': [0x1, 0xb, 0x2],
                'pe': 0x1,
                'c': '#afafaf',
                't': 0x2
            }, {
                'p': [0xbb, 0xd, -0x12c],
                's': [0x4, 0x4, 0xe],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0xd, -0x138],
                's': [0x4, 0x13, 0xa],
                'e': '#18180a'
            }, {
                'p': [0xbb, 0x1c, -0x12c],
                's': [0x4, 0x4, 0xe],
                'e': '#18180a'
            }, {
                'p': [0xb9, 0x10, -0x12d],
                's': [0x1, 0xc, 0x4],
                'pe': 0x1,
                'c': '#b1b1b1',
                't': 0x2
            }, {
                'p': [0xb9, 0x11, -0x131],
                's': [0x1, 0xc, 0x4],
                'pe': 0x1,
                'c': '#b1b1b1',
                't': 0x2
            }, {
                'p': [-0x59, 0x0, -0x102],
                's': [0x20, 0x3d, 0x60],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x17f, 0x2, -0xba],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0x16b, 0x13, -0xba],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [0xb9, 0x11, -0x128],
                's': [0x1, 0xc, 0x6],
                'pe': 0x1,
                'c': '#b1b1b1',
                't': 0x2
            }, {
                'p': [0x187, 0x30, -0xab],
                's': [0x8, 0x5, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x17e, 0x30, -0xad],
                's': [0x4, 0x1, 0x3],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x155, 0x30, -0x8f],
                's': [0x8, 0x5, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x153, 0x30, -0x96],
                's': [0x4, 0x1, 0x3],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x15c, 0x30, -0x92],
                's': [0x4, 0x2, 0x3],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x144, 0x32, -0x9e],
                's': [0xa, 0xa, 0xe],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x145, 0x32, -0x93],
                's': [0xc, 0xd, 0x9],
                'c': '#a7a7a7',
                'e': '#18180a',
                'bo': 0x1
            }, {
                'p': [0x14c, 0x34, -0xad],
                's': [0x5, 0x1, 0x5],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x8b, 0x26, -0x1b9],
                's': [0x23, 0x48, 0x74],
                'v': 0x1,
                'c': '#8e8e8e',
                't': 0x8
            }, {
                'p': [0x14c, 0x34, -0x9d],
                's': [0x2, 0x1, 0x2],
                'l': 0x1,
                'c': '#a7a7a7',
                'e': '#18180a'
            }, {
                'p': [0x16f, 0x2, -0x90],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'r': [-3.14, 0.17, -3.14],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [0x120, 0x2, -0x33],
                's': [0x4, 0x2, 0x5],
                'l': 0x1,
                'r': [-3.14, 0.17, -3.14],
                'c': '#ffffff',
                'e': '#18180a'
            }, {
                'p': [-0x43, 0xd, -0x116],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x49, 0xd, -0x173],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x17e, 0x2, -0x109],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x10, 0xd, -0x165],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0x4, 0xd, -0x165],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xa, 0x19, -0x165],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [-0xb, 0xd, -0x15c],
                's': [0x6, 0x8, 0x6],
                'i': 0x2
            }, {
                'p': [-0x10, 0xd, -0x163],
                's': [0x16, 0x1, 0x18],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x0, 0xd, -0x164],
                's': [0xa, 0x1, 0x13],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [-0x4, 0xe, -0x15b],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.06, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x11, 0xe, -0x15c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.06, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [-0x17, 0xe, -0x16c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.41, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x52, 0xe, -0x15f],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -0.33, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xb, 0xe, -0x141],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.97, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xbb, 0x18, -0xff],
                's': [0x4, 0x1, 0x3],
                'l': 0x1,
                'e': '#18180a'
            }, {
                'p': [-0x45, 0xe, -0x12c],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, -1.03, 3.14],
                'c': '#85aa6c'
            }, {
                'p': [0xf7, 0x3, -0x195],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [3.14, 0.86, -3.14],
                'c': '#85aa6c'
            }, {
                'p': [0x189, 0x3, -0x1ff],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.38, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x7c, 0x2, -0x40],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0xa8, 0x3, -0x24],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.53, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xbd, 0x3, 0x9],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, 0.35, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0x7c, 0xe, -0x40],
                's': [0xc, 0xc, 0xc],
                'i': 0x1
            }, {
                'p': [0x7c, 0x2, -0x47],
                's': [0x12, 0x1, 0x7],
                'l': 0x1,
                'c': '#8e8e8e',
                't': 0x8,
                'ab': 0x1
            }, {
                'p': [0x59, 0x3, -0x68],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -1.23, 0x0],
                'c': '#85aa6c'
            }, {
                'p': [0xa1, 0x3, -0x6d],
                's': [0x7, 0x6, 0x8],
                'i': 0x12,
                'l': 0x1,
                'r': [0x0, -0.7, 0x0],
                'c': '#85aa6c'
            }]
        }], bIr = 0x0; bIr < bIq['length']; ++bIr)
            for (var bIs = 0x0; bIs < bIq[bIr]['objects']['length']; ++bIs)
                bIq[bIr]['objects'][bIs]['i'] = bHk['prefabIDS'][bIq[bIr]['objects'][bIs]['i'] || bIq[bIr]['objects'][bIs]['id'] || 0x0],
                bIq[bIr]['objects'][bIs]['t'] = bHk['textureIDS'][bIq[bIr]['objects'][bIs]['t'] || ('LADDER' == bIq[bIr]['objects'][bIs]['i'] ? 0x2 : 0x0)];
        bHh['exports']['maps'] = bIq,
        bHh['exports']['manager'] = function(bHh, bHi, bHk, bIr) {
            var bIs, bIy;
            this['manager'] = new (bHj(0x45))['manager'](bHh,bHk,bIr),
            this['maps'] = bIq,
            this['modes'] = bHp,
            this['rotationModes'] = bHq,
            this['spawns'] = [],
            this['lastGen'] = null,
            this['terrain'] = null,
            this['zone'] = null,
            this['deathY'] = bIr['deathY'],
            this['setMaps'] = function(bHh) {
                this['maps'] = bHh || bIq;
            }
            ,
            this['getRandomMap'] = function() {
                return bHk['randInt'](0x0, this['maps']['length'] - 0x1);
            }
            ;
            var bIA = '';
            this['generate'] = function(bHj, bHp, bHq) {
                var bIq = this['maps'][bHj];
                if (bIq['dthY'] && bHk['isNumber'](bIq['dthY']) && (this['deathY'] = bIq['dthY']),
                bHh)
                    try {
                        mapInfo['innerHTML'] = bHp['alias'] + '_' + bIq['name'],
                        gameMessage['innerHTML'] = specGameMessage['innerHTML'] = '',
                        curGameInfo['innerHTML'] = bHp['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.6)\x27>on\x20' + bIq['name'] + '</div>' + (bIq['creator'] ? '<div\x20style=\x27color:#fff\x27><span\x20style=\x27color:rgba(255,255,255,0.6)\x27>by</span>\x20' + bIq['creator'] + '</div>' : ''),
                        specGameInfo['innerHTML'] = bHp['name'];
                    } catch (bIF) {}
                bHh && bIA != bIq['modURL'] && ((bIA = bIq['modURL']) && '' != bIA && loadModPack(bIA, !0x0));
                var bIG = bHj + (bHp['genID'] ? '_' + bHp['genID'] : '');
                if (bHq || this['lastGen'] !== bIG) {
                    this['lastGen'] = bIG,
                    this['manager']['removeAll'](),
                    bHh && bHh['init'](bIq),
                    bHi && (bHi['reset'](),
                    bHh['scene']['add'](bHi['ExplosionManager'])),
                    bIq['terrainSeed'] && bIq['terrainWidth'] && bIq['terrainHeight'] ? (this['terrain'] = bHl['fromConfig'](bIq),
                    this['terrain']['rotation']['x'] = -Math['PI'] / 0x2,
                    bHh && bHh['scene']['add'](this['terrain'])) : this['terrain'] = null,
                    bIq['zone'] && bIq['zoneSize'] && bIq['zoneSpeed'] ? (this['zone'] = bHm['fromConfig'](bIq, bHh),
                    bHh && bHh['scene']['add'](this['zone'])) : this['zone'] = null;
                    for (var bIH = 0x0, bII = 0x0, bIJ = 0x0, bIK = 0x0, bIL = 0x0; bIL < bIq['objects']['length']; ++bIL) {
                        var bIM = (bIs = bIq['objects'][bIL])['p'][0x0]
                          , bIN = bIs['p'][0x1]
                          , bIO = bIs['p'][0x2]
                          , bIP = bIs['t']['toLowerCase']() + '_' + ('GRASS' == bIs['t'] ? 0x1 : 0x0);
                        if (bIs['l'] || bIs['col'] || 'CUBE' != bIs['i'] || (bIM - bIs['s'][0x0] < bIH && (bIH = bIM - bIs['s'][0x0]),
                        bIM + bIs['s'][0x0] > bII && (bII = bIM + bIs['s'][0x0]),
                        bIO - bIs['s'][0x2] < bIJ && (bIJ = bIO - bIs['s'][0x2]),
                        bIO + bIs['s'][0x2] > bIK && (bIK = bIO + bIs['s'][0x2])),
                        'CUBE' == bIs['i']) {
                            for (var bIQ = 0x1, bIR = 0x0; bIR < bIq['objects']['length']; ++bIR)
                                if ('CUBE' == (bIy = bIq['objects'][bIR])['i'] && bIs != bIy && bIN <= bIy['p'][0x1] + bIy['s'][0x1] && bIN >= bIy['p'][0x1] && bIM + bIs['s'][0x0] / 0x2 < bIy['p'][0x0] + bIy['s'][0x0] / 0x2 && bIM - bIs['s'][0x0] / 0x2 > bIy['p'][0x0] - bIy['s'][0x0] / 0x2 && bIO + bIs['s'][0x2] / 0x2 < bIy['p'][0x2] + bIy['s'][0x2] / 0x2 && bIO - bIs['s'][0x2] / 0x2 > bIy['p'][0x2] - bIy['s'][0x2] / 0x2) {
                                    bIQ = 0x0;
                                    break;
                                }
                            this['manager']['addBlock'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1], [0x1, 0x1, 0x1, bIQ, 0x1, 0x1], {
                                'src': bIP,
                                'colr': bIs['c'],
                                'emissive': bIs['e'] || 0x0,
                                'opacity': 0x1 != bIs['o'] && null != bIs['o'] ? bIs['o'] : 0x1,
                                'transparent': 0x1 != bIs['o'] && null != bIs['o'],
                                'penetrable': bIs['pe'],
                                'health': bIs['h'] || bIs['hp'],
                                'respawnT': 0x3e8 * parseInt(bIs['rt']),
                                'respawnR': null != bIs['rr'],
                                'amb': bIq['nAmb'] || null != bIs['ab'] ? null : bIr['ambientVal'],
                                'yR': bIs['r'] ? bIs['r'][0x0] : 0x0,
                                'xR': bIs['r'] ? bIs['r'][0x1] : 0x0,
                                'zR': bIs['r'] ? bIs['r'][0x2] : 0x0,
                                'noCol': bIs['l'] || bIs['col'],
                                'isBorder': bIs['bo'],
                                'noVis': bIs['v'],
                                'movT': null != bIs['ts'] && bIs['ts'] / 0x2710,
                                'movD': bIs['td'],
                                'noAmb': null != bIs['ab']
                            });
                        } else if ('POINT_GATE' == bIs['i'])
                            this['manager']['addGate'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1], {
                                'src': bIP,
                                'colr': bIs['c'],
                                'emissive': bIs['e'] || 0x0,
                                'opacity': 0x1 != bIs['o'] && null != bIs['o'] ? bIs['o'] : 0x1,
                                'transparent': 0x1 != bIs['o'] && null != bIs['o'],
                                'penetrable': bIs['pe'],
                                'amb': bIq['nAmb'] || null != bIs['ab'] ? null : bIr['ambientVal'],
                                'yR': bIs['r'] ? bIs['r'][0x0] : 0x0,
                                'xR': bIs['r'] ? bIs['r'][0x1] : 0x0,
                                'zR': bIs['r'] ? bIs['r'][0x2] : 0x0,
                                'isBorder': bIs['bo'],
                                'noVis': bIs['v'],
                                'movT': null != bIs['ts'] && bIs['ts'] / 0x2710,
                                'movD': bIs['td'],
                                'noAmb': null != bIs['ab'],
                                'scoreP': parseInt(bIs['sp']) || 0x0,
                                'noMsg': null != bIs['nm'],
                                'method': parseInt(bIs['md']) || 0x0,
                                'closeable': null != bIs['cl']
                            });
                        else if ('TRIGGER' == bIs['i'])
                            this['manager']['addTrigger'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1], {
                                'src': bIP,
                                'colr': bIs['c'],
                                'emissive': bIs['e'] || 0x0,
                                'opacity': 0x1 != bIs['o'] && null != bIs['o'] ? bIs['o'] : 0x1,
                                'transparent': 0x1 != bIs['o'] && null != bIs['o'],
                                'health': bIs['h'] || bIs['hp'],
                                'respawnT': 0x3e8 * parseInt(bIs['rt']),
                                'respawnR': null != bIs['rr'],
                                'amb': bIq['nAmb'] || null != bIs['ab'] ? null : bIr['ambientVal'],
                                'yR': bIs['r'] ? bIs['r'][0x0] : 0x0,
                                'xR': bIs['r'] ? bIs['r'][0x1] : 0x0,
                                'zR': bIs['r'] ? bIs['r'][0x2] : 0x0,
                                'noVis': bIs['v'],
                                'movT': null != bIs['ts'] && bIs['ts'] / 0x2710,
                                'movD': bIs['td'],
                                'noAmb': null != bIs['ab'],
                                'constant': parseInt(bIs['tc']) || 0x0,
                                'event': parseInt(bIs['te']) || 0x0,
                                'eventN': bHo['events'][parseInt(bIs['te']) || 0x0],
                                'action': parseInt(bIs['ta']) || 0x0
                            });
                        else if ('OBJECTIVE' == bIs['i'])
                            this['manager']['addObjective'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1]);
                        else if ('FLAG' == bIs['i'])
                            this['manager']['addFlag'](bIM, bIN, bIO, parseInt(bIs['tm'] || 0x0) + 0x1);
                        else if ('WEAPON_PICKUP' == bIs['i'])
                            this['manager']['addWeapon'](bIM, bIN, bIO, {
                                'scoreP': parseInt(bIs['sp']) || 0x0,
                                'noMsg': null != bIs['nm'],
                                'method': parseInt(bIs['md']) || 0x0,
                                'noRep': bIs['wr'],
                                'weapon': bHn[parseInt(bIs['w'] || bIs['wid'] || 0x0)],
                                'weaponId': parseInt(bIs['w'] || bIs['wid'] || 0x0)
                            }, bIs['r'] ? bIs['r'][0x2] : 0x0, bIs['r'] ? bIs['r'][0x0] : 0x0, bIs['r'] ? bIs['r'][0x1] : 0x0);
                        else if ('PARTICLES' != bIs['i'])
                            'PLANE' == bIs['i'] || 'BILLBOARD' == bIs['i'] ? this['manager']['addPlane'](bIM, bIN, bIO, bIs['s'][0x2] / 0x2, bIs['s'][0x0] / 0x2, {
                                'src': 'BILLBOARD' == bIs['i'] ? 'pubs/b_' + (bIs['bb'] || bHk['randInt'](0x1, bIr['billboardCnt'])) : bIP,
                                'emissive': bIs['e'] || 0x0,
                                'noise': bIs['en'] || 0x0,
                                'opacity': 0x1 != bIs['o'] && null != bIs['o'] ? bIs['o'] : 0x1,
                                'penetrable': bIs['pe'],
                                'health': bIs['h'] || bIs['hp'],
                                'respawnT': 0x3e8 * parseInt(bIs['rt']),
                                'respawnR': null != bIs['rr'],
                                'colr': bIs['c'],
                                'noCol': bIs['l'] || bIs['col'],
                                'noVis': bIs['v'],
                                'side': 'BILLBOARD' == bIs['i'] ? 0x2 : 0x0,
                                'movT': null != bIs['ts'] && bIs['ts'] / 0x2710,
                                'movD': bIs['td'],
                                'noAmb': null != bIs['ab']
                            }, bIs['r'] ? bIs['r'][0x2] : 0x0, (bIs['r'] ? bIs['r'][0x0] : 0x0) - Math['PI'] / 0x2, bIs['r'] ? bIs['r'][0x1] : 0x0) : 'SIGN' == bIs['i'] ? this['manager']['addCanvas'](bIM, bIN, bIO, bIs['s'][0x2] / 0x2, bIs['s'][0x0] / 0x2, {
                                'noCol': bIs['l'] || bIs['col'],
                                'fontSize': parseInt(bIs['sf']) || 0xa,
                                'text': bIs['st'],
                                'tAlign': parseInt(bIs['sa']) || 0x0,
                                'fcolr': bIs['sc'],
                                'bcolr': bIs['sb'],
                                'noBVis': bIs['bv'],
                                'movT': null != bIs['ts'] && bIs['ts'] / 0x2710,
                                'movD': bIs['td']
                            }, bIs['r'] ? -bIs['r'][0x2] : 0x0, (bIs['r'] ? bIs['r'][0x0] : 0x0) - Math['PI'] / 0x2, bIs['r'] ? bIs['r'][0x1] : 0x0) : 'RAMP' == bIs['i'] ? this['manager']['addRamp'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x1], bIs['s'][0x2], (bIs['d'] || 0x0) * Math['PI'] / 0x2, bIs['b'], bIs['t'] ? bIP : 'grey_0', bIs['v'], bIs['c'], bIr['ambScale'], null != bIs['ts'] && bIs['ts'] / 0x2710, bIs['td'], null != bIs['ab']) : 'SCORE_ZONE' == bIs['i'] ? this['manager']['addScoreZone'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1], parseInt(bIs['sp']) || 0x1) : 'DEATH_ZONE' == bIs['i'] ? this['manager']['addDeathZone'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1]) : 'CHECK_POINT' == bIs['i'] ? this['manager']['addCheckPoint'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1], bIs['su'] || !0x1, bIs['d'] || 0x0) : 'TELEPORTER' == bIs['i'] ? this['manager']['addTeleporter'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x2], bIs['s'][0x1], parseInt(bIs['ch'] || 0x0), parseInt(bIs['n'] || 0x0), null != bIs['m']) : 'LADDER' == bIs['i'] ? this['manager']['addLadder'](bIM, bIN, bIO, bIs['s'][0x1], (bIs['d'] || 0x0) * Math['PI'] / 0x2, bIs['v'], bIs['t'] ? bIP : 'floor_0', bIs['c']) : this['manager']['addMesh'](bIM, bIN, bIO, bIs['r'], bIs['s'][0x0] / 0x2, bIs['s'][0x1] / 0x2, bIs['s'][0x2] / 0x2, {
                                'src': bIs['i']['toLowerCase'](),
                                'health': bIs['h'] || bIs['hp'],
                                'respawnT': 0x3e8 * parseInt(bIs['rt']),
                                'respawnR': null != bIs['rr'],
                                'colr': bIs['c'],
                                'noCol': bIs['l'] || bIs['col'],
                                'noVis': bIs['v'],
                                'noAmb': null != bIs['ab']
                            });
                        else if (bHi) {
                            var bIS = bHi['prefabs'][parseInt(bIs['pr'] || 0x0)];
                            bIS['count'] = Math['round']((bIs['s'][0x0] + bIs['s'][0x2] + bIs['s'][0x1]) / bIS['cnt']),
                            bHi['area'](bIM, bIN, bIO, bIs['s'][0x0], bIs['s'][0x1], bIs['s'][0x2], bIS);
                        }
                    }
                    if (this['manager']['addNoisePlanes'](),
                    bIq['shadLength'] = Math['round'](Math['abs'](bII - bIH) / 2.5),
                    bIq['shadWidth'] = Math['round'](Math['abs'](bIK - bIJ) / 2.5),
                    bHh && bHh['updateLightMap'](bIq),
                    this['manager']['aoOpac'] = 0x1,
                    bHh) {
                        var bIT, bIU = bIr['ambScale'];
                        for (bIL = 0x0; bIL < this['manager']['objects']['length']; ++bIL)
                            if (!((bIs = this['manager']['objects'][bIL])['noVis'] || 'prop' == bHp['id'] && bIs['propID'] || bIs['complexMesh'] || bIs['health'] || bIs['noAmb'] || bIs['gate']))
                                for (bIR = bIL + 0x1; bIR < this['manager']['objects']['length']; ++bIR)
                                    if (!(bIy = this['manager']['objects'][bIR])['noVis'] && ('prop' != bHp['id'] || !bIy['propID']) && !bIy['health'] && !bIy['noAmb'] && !bIy['gate'] && !bIy['complexMesh'] && this['manager']['collision'](bIs, bIy, 0x0)) {
                                        if (bIT = bHk['boxIntersection'](bIs, bIy, 'x', 'z', [Math['PI'], 0x0, Math['PI'] / 0x2, -Math['PI'] / 0x2]))
                                            for (var bIV = 0x0; bIV < bIT['length']; ++bIV)
                                                if (!bIT[bIV]['dontUse']) {
                                                    for (var bIW = bHk['getIntersection'](bIs, bIy, 'y'), bIX = bIU * (bIs['aoMlt'] || 0x1) * (bIy['aoMlt'] || 0x1), bIY = 0x0; 0x2 > bIY; bIY++)
                                                        bJ0 = (bIT[bIV]['d'] + Math['PI'] / 0x2 * bIY) % (0x2 * Math['PI']),
                                                        bIX = Math['min'](bIX, this['manager']['limitAmb'](bIU, bIT[bIV], bJ0, 'x', 'z', bIs, bIy));
                                                    for (bIY = 0x0; 0x2 > bIY; bIY++)
                                                        if (bJ0 = (bIT[bIV]['d'] + Math['PI'] / 0x2 * bIY) % (0x2 * Math['PI']),
                                                        this['manager']['addAmbient'](bIT[bIV]['x'] + bIX * Math['cos'](bJ0), bIW['y'], bIT[bIV]['z'] + bIX * Math['sin'](bJ0), -bJ0 + Math['PI'], 0x0, 0x0, bIW['height'], bIX + bIr['ambOff'], 0x1),
                                                        bJ0 == Math['PI'] / 0x2 || bJ0 == -Math['PI'] / 0x2 || bJ0 == 1.5 * Math['PI']) {
                                                            var bIZ = bHk['limitRect'](bIT[bIV]['z'] + bIX * Math['sin'](bJ0), bIW['y'] + bIX + bIW['height'] + bIr['ambOff'], bIX, bIX, 0x0, [bIs, bIy], 'z', 'y');
                                                            this['manager']['addAmbient'](bIT[bIV]['x'] + bIX * Math['cos'](bJ0), bIZ['y'], bIZ['z'], -bJ0 + Math['PI'], Math['PI'], 0x0, bIZ['length'], bIZ['height'], 0x0, [bIs, bIy], 'g1-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIW['y'] + bIW['height'], bIT[bIV]['z']]),
                                                            bIZ = bHk['limitRect'](bIT[bIV]['z'] + bIX * Math['sin'](bJ0), bIW['y'] - bIX - bIW['height'] - bIr['ambOff'], bIX, bIX, 0x0, [bIs, bIy], 'z', 'y'),
                                                            this['manager']['addAmbient'](bIT[bIV]['x'] + bIX * Math['cos'](bJ0), bIZ['y'], bIZ['z'], -bJ0 + Math['PI'], 0x0, 0x0, bIZ['length'], bIZ['height'], 0x0, [bIs, bIy], 'g2-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIW['y'] - bIW['height'], bIT[bIV]['z']]);
                                                        } else {
                                                            bIZ = bHk['limitRect'](bIT[bIV]['x'] + bIX * Math['cos'](bJ0), bIW['y'] + bIX + bIW['height'] + bIr['ambOff'], bIX, bIX, 0x0, [bIs, bIy], 'x', 'y');
                                                            this['manager']['addAmbient'](bIZ['x'], bIZ['y'], bIT[bIV]['z'] + bIX * Math['sin'](bJ0), -bJ0 + Math['PI'], Math['PI'], 0x0, bIZ['width'], bIZ['height'], 0x0, [bIs, bIy], 'g1-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIW['y'] + bIW['height'], bIT[bIV]['z']]),
                                                            bIZ = bHk['limitRect'](bIT[bIV]['x'] + bIX * Math['cos'](bJ0), bIW['y'] - bIX - bIW['height'] - bIr['ambOff'], bIX, bIX, 0x0, [bIs, bIy], 'x', 'y'),
                                                            this['manager']['addAmbient'](bIZ['x'], bIZ['y'], bIT[bIV]['z'] + bIX * Math['sin'](bJ0), -bJ0 + Math['PI'], 0x0, 0x0, bIZ['width'], bIZ['height'], 0x0, [bIs, bIy], 'g2-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIW['y'] - bIW['height'], bIT[bIV]['z']]);
                                                        }
                                                }
                                        if (bIT = bHk['boxIntersection'](bIs, bIy, 'z', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                                            for (bIV = 0x0; bIV < bIT['length']; ++bIV)
                                                if (!bIT[bIV]['dontUse']) {
                                                    for (bIW = bHk['getIntersection'](bIs, bIy, 'x'),
                                                    bIX = bIU * (bIs['aoMlt'] || 0x1) * (bIy['aoMlt'] || 0x1),
                                                    bIY = 0x0; 0x2 > bIY; bIY++)
                                                        bJ0 = bIT[bIV]['d'] + Math['PI'] / 0x2 * (bIY ? 0x0 : 0x1),
                                                        bIX = Math['min'](bIX, this['manager']['limitAmb'](bIU, bIT[bIV], -bJ0 + Math['PI'] / 0x2, 'z', 'y', bIs, bIy));
                                                    for (bIY = 0x0; 0x2 > bIY; bIY++) {
                                                        bJ0 = bIT[bIV]['d'] + Math['PI'] / 0x2 * (bIY ? 0x0 : 0x1),
                                                        this['manager']['addAmbient'](bIW['x'], bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIT[bIV]['z'] + bIX * Math['sin'](bJ0), 0x0, bJ0, -Math['PI'] / 0x2, bIW['width'], bIX + bIr['ambOff'], 0x1);
                                                        bIZ = bHk['limitRect'](bIW['x'] + bIW['width'] + bIX + bIr['ambOff'], bIT[bIV]['z'] + bIX * Math['sin'](bJ0), bIX, bIX, 0x0, [bIs, bIy], 'x', 'z');
                                                        this['manager']['addAmbient'](bIZ['x'], bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIT[bIV]['z'] + bIX * Math['sin'](bJ0), Math['PI'], bJ0 == Math['PI'] ? bJ0 : -bJ0 % Math['PI'], bJ0 == 1.5 * Math['PI'] ? 0x0 : -Math['PI'] / 0x2, bJ0 == 1.5 * Math['PI'] ? bIX : bIZ['length'], bJ0 == 1.5 * Math['PI'] ? bIZ['length'] : bIX, 0x0, [bIs, bIy], 'g3-' + bIY + '-' + bIV, [bIW['x'] + bIW['width'], bIT[bIV]['y'], bIT[bIV]['z']]),
                                                        bIZ = bHk['limitRect'](bIW['x'] - bIW['width'] - bIX - bIr['ambOff'], bIT[bIV]['z'] + bIX * Math['sin'](bJ0), bIX, bIX, Math['PI'] / 0x2, [bIs, bIy], 'x', 'z'),
                                                        this['manager']['addAmbient'](bIZ['x'], bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIT[bIV]['z'] + bIX * Math['sin'](bJ0), Math['PI'], -bJ0 % Math['PI'], bJ0 == Math['PI'] || bJ0 == 1.5 * Math['PI'] ? Math['PI'] / 0x2 : Math['PI'], bJ0 == Math['PI'] || bJ0 == 1.5 * Math['PI'] ? bIZ['width'] : bIX, bJ0 == Math['PI'] || bJ0 == 1.5 * Math['PI'] ? bIX : bIZ['width'], 0x0, [bIs, bIy], 'g4-' + bIY + '-' + bIV, [bIW['x'] - bIW['width'], bIT[bIV]['y'], bIT[bIV]['z']]);
                                                    }
                                                }
                                        if (bIT = bHk['boxIntersection'](bIs, bIy, 'x', 'y', [Math['PI'], 0x0, -Math['PI'] / 0x2, Math['PI'] / 0x2]))
                                            for (bIV = 0x0; bIV < bIT['length']; ++bIV)
                                                if (!bIT[bIV]['dontUse']) {
                                                    for (bIW = bHk['getIntersection'](bIs, bIy, 'z'),
                                                    bIX = bIU * (bIs['aoMlt'] || 0x1) * (bIy['aoMlt'] || 0x1),
                                                    bIY = 0x0; 0x2 > bIY; bIY++)
                                                        bJ0 = bIT[bIV]['d'] + Math['PI'] / 0x2 * (bIY ? 0x0 : 0x1),
                                                        bIX = Math['min'](bIX, this['manager']['limitAmb'](bIU, bIT[bIV], -bJ0 + Math['PI'] / 0x2, 'x', 'y', bIs, bIy));
                                                    var bJ0;
                                                    for (bIY = 0x0; 0x2 > bIY; bIY++)
                                                        if (bJ0 = bIT[bIV]['d'] + Math['PI'] / 0x2 * (bIY ? 0x0 : 0x1),
                                                        this['manager']['addAmbient'](bIT[bIV]['x'] + bIX * Math['sin'](bJ0), bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIW['z'], Math['PI'] / 0x2, bJ0, -Math['PI'] / 0x2, bIW['length'], bIX + bIr['ambOff'], 0x1),
                                                        bJ0 == Math['PI'] || 0x0 == bJ0) {
                                                            bIZ = bHk['limitRect'](bIT[bIV]['z'] + bIX * Math['sin'](bJ0), bIW['z'] + bIW['length'] + bIX + bIr['ambOff'], bIX, bIX, Math['PI'] / 0x2, [bIs, bIy], 'x', 'z');
                                                            this['manager']['addAmbient'](bIT[bIV]['x'] + bIX * Math['sin'](bJ0), bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIZ['z'], Math['PI'] / 0x2, bJ0, -Math['PI'] / 0x2, bIZ['length'], bIZ['width'], 0x0, [bIs, bIy], 'g5-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIT[bIV]['y'], bIW['z'] + bIW['length']]),
                                                            bIZ = bHk['limitRect'](bIT[bIV]['z'] + bIX * Math['sin'](bJ0), bIW['z'] - bIW['length'] - bIX - bIr['ambOff'], bIX, bIX, Math['PI'] / 0x2, [bIs, bIy], 'x', 'z'),
                                                            this['manager']['addAmbient'](bIT[bIV]['x'] + bIX * Math['sin'](bJ0), bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIZ['z'], Math['PI'] / 0x2, bJ0, Math['PI'], bIZ['width'], bIZ['length'], 0x0, [bIs, bIy], 'g6-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIT[bIV]['y'], bIW['z'] - bIW['length']]);
                                                        } else {
                                                            bIZ = bHk['limitRect'](bIT[bIV]['x'] + bIX * Math['sin'](bJ0), bIW['z'] + bIW['length'] + bIX + bIr['ambOff'], bIX, bIX, Math['PI'] / 0x2, [bIs, bIy], 'x', 'z');
                                                            this['manager']['addAmbient'](bIZ['x'], bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIZ['z'], Math['PI'] / 0x2, bJ0, -Math['PI'] / 0x2, bIZ['length'], bIZ['width'], 0x0, [bIs, bIy], 'g5-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIT[bIV]['y'], bIW['z'] + bIW['length']]),
                                                            bIZ = bHk['limitRect'](bIT[bIV]['x'] + bIX * Math['sin'](bJ0), bIW['z'] - bIW['length'] - bIX - bIr['ambOff'], bIX, bIX, Math['PI'] / 0x2, [bIs, bIy], 'x', 'z'),
                                                            this['manager']['addAmbient'](bIZ['x'], bIT[bIV]['y'] + bIX * Math['cos'](bJ0), bIZ['z'], Math['PI'] / 0x2, bJ0, Math['PI'], bIZ['width'], bIZ['length'], 0x0, [bIs, bIy], 'g6-' + bIY + '-' + bIV, [bIT[bIV]['x'], bIT[bIV]['y'], bIW['z'] - bIW['length']]);
                                                        }
                                                }
                                    }
                        this['manager']['addPendingAOs']();
                    }
                    this['spawns']['length'] = 0x0;
                    for (bIL = 0x0; bIL < bIq['spawns']['length']; ++bIL)
                        this['spawns']['push']({
                            'x': bIq['spawns'][bIL][0x0],
                            'y': bIq['spawns'][bIL][0x1],
                            'z': bIq['spawns'][bIL][0x2],
                            'team': bIq['spawns'][bIL][0x3],
                            'dir': parseInt(bIq['spawns'][bIL][0x4]) || 0x0,
                            'comp': !!bIq['spawns'][bIL][0x5]
                        });
                    bHh && bHh['addMeshGroups']();
                }
                this['manager']['resetAll']();
            }
            ;
        }
        ;
    }
    , function(bJ1, bJ2) {
        bJ1['exports']['events'] = ['onShoot', 'onMelee', 'onDamage', 'onEnter', 'onDestroy', 'onRespawn'],
        bJ1['exports']['actions'] = ['Give\x20Score', 'Kill', 'Respawn', 'Change\x20Health'];
    }
    , function(bJ3, bJ4) {
        bJ3['exports'] = [{
            'name': 'Triggerman',
            'loadout': [0x1],
            'secondary': !0x0,
            'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x6c5042, 0xbfbfbf],
            'health': 0x64,
            'segs': 0x6,
            'speed': 1.05
        }, {
            'name': 'Hunter',
            'loadout': [0x0],
            'secondary': !0x0,
            'colors': [0xa77860, 0x7b573d, 0x634732, 0x282828, 0x634732, 0x3d2b1d],
            'health': 0x3c,
            'segs': 0x5,
            'speed': 1.05
        }, {
            'name': 'Run\x20N\x20Gun',
            'loadout': [0x3],
            'colors': [0xa77860, 0x3e6382, 0x2f4b63, 0x282828, 0x634732, 0x1a2b3a],
            'health': 0x64,
            'segs': 0x6,
            'speed': 1.18
        }, {
            'name': 'Spray\x20N\x20Pray',
            'loadout': [0x6],
            'txts': ['Calling\x20in\x20the\x20Big\x20Guns?', 'Remember\x20-\x20No\x20Russian.', 'Pesky\x20Snipers...'],
            'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x303827],
            'health': 0xaa,
            'segs': 0x7,
            'regen': 0.05,
            'speed': 0x1
        }, {
            'name': 'Vince',
            'loadout': [0x5],
            'secondary': !0x0,
            'colors': [0x805c4a, 0x545267, 0x3f3d4d, 0x282828, 0x282828, 0x292833],
            'health': 0x64,
            'segs': 0x6,
            'speed': 0x1
        }, {
            'name': 'Detective',
            'loadout': [0x4],
            'colors': [0xa77860, 0x704e36, 0x434c5e, 0x282828, 0x634732, 0x3f2c1e],
            'health': 0x64,
            'segs': 0x6,
            'speed': 0x1
        }, {
            'name': 'Marksman',
            'loadout': [0x7],
            'secondary': !0x0,
            'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x282828, 0x293022],
            'health': 0x5a,
            'segs': 0x6,
            'speed': 0x1
        }, {
            'name': 'Rocketeer',
            'loadout': [0x8],
            'secondary': !0x0,
            'txts': ['...'],
            'colors': [0xa77860, 0x586849, 0x49563c, 0x282828, 0x6c5042, 0x2b3324],
            'health': 0x82,
            'segs': 0x7,
            'speed': 0.86
        }, {
            'name': 'Agent',
            'loadout': [0x9],
            'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0xbfbfbf],
            'health': 0x64,
            'segs': 0x6,
            'speed': 1.2
        }, {
            'name': 'Runner',
            'txts': ['You\x20sure\x20about\x20this?', '...', 'Oh\x20boy', 'I\x20don\x27t\x20know\x20about\x20this...', 'Not\x20me\x20again...'],
            'loadout': [0xc],
            'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
            'health': 0x64,
            'segs': 0x6,
            'regen': 0.2,
            'speed': 0x1
        }, {
            'name': 'Deagler',
            'hide': !0x0,
            'loadout': [0xa],
            'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x282828, 0x232323],
            'health': 0x3c,
            'segs': 0x5,
            'speed': 0x1
        }, {
            'name': 'Bowman',
            'loadout': [0xd],
            'secondary': !0x0,
            'colors': [0xa77860, 0x916c52, 0x60432e, 0x282828, 0x282828, 0x473527],
            'health': 0x64,
            'segs': 0x6,
            'speed': 0x1
        }, {
            'name': 'Commando',
            'loadout': [0xe],
            'secondary': !0x0,
            'colors': [0xa77860, 0x3d3d3d, 0x232323, 0x282828, 0x995c2c, 0x171717],
            'health': 0x64,
            'segs': 0x6,
            'speed': 0x1
        }];
    }
    , function(bJ5, bJ6, bJ7) {
        bJ6['encode'] = bJ7(0x19)['encode'],
        bJ6['decode'] = bJ7(0x1e)['decode'],
        bJ6['Encoder'] = bJ7(0x36)['Encoder'],
        bJ6['Decoder'] = bJ7(0x37)['Decoder'],
        bJ6['createCodec'] = bJ7(0x38)['createCodec'],
        bJ6['codec'] = bJ7(0x39)['codec'];
    }
    , function(bJ8, bJ9, bJa) {
        (function(bJ9) {
            function bJa(bJ8) {
                return bJ8 && bJ8['isBuffer'] && bJ8;
            }
            bJ8['exports'] = bJa(void 0x0 !== bJ9 && bJ9) || bJa(this['Buffer']) || bJa('undefined' != typeof window && window['Buffer']) || this['Buffer'];
        }
        ['call'](this, bJa(0x1b)['Buffer']));
    }
    , function(bJe, bJf, bJg) {
        'use strict';
        bJf['byteLength'] = function(bJe) {
            var bJf = bJL(bJe)
              , bJg = bJf[0x0]
              , bJk = bJf[0x1];
            return 0x3 * (bJg + bJk) / 0x4 - bJk;
        }
        ,
        bJf['toByteArray'] = function(bJe) {
            for (var bJf, bJg = bJL(bJe), bJo = bJg[0x0], bJp = bJg[0x1], bJq = new bJH(function(bJe, bJf, bJg) {
                return 0x3 * (bJf + bJg) / 0x4 - bJg;
            }(0x0, bJo, bJp)), bJr = 0x0, bJs = 0x0 < bJp ? bJo - 0x4 : bJo, bJt = 0x0; bJt < bJs; bJt += 0x4)
                bJf = bJG[bJe['charCodeAt'](bJt)] << 0x12 | bJG[bJe['charCodeAt'](bJt + 0x1)] << 0xc | bJG[bJe['charCodeAt'](bJt + 0x2)] << 0x6 | bJG[bJe['charCodeAt'](bJt + 0x3)],
                bJq[bJr++] = 0xff & bJf >> 0x10,
                bJq[bJr++] = 0xff & bJf >> 0x8,
                bJq[bJr++] = 0xff & bJf;
            return 0x2 === bJp && (bJf = bJG[bJe['charCodeAt'](bJt)] << 0x2 | bJG[bJe['charCodeAt'](bJt + 0x1)] >> 0x4,
            bJq[bJr++] = 0xff & bJf),
            0x1 === bJp && (bJf = bJG[bJe['charCodeAt'](bJt)] << 0xa | bJG[bJe['charCodeAt'](bJt + 0x1)] << 0x4 | bJG[bJe['charCodeAt'](bJt + 0x2)] >> 0x2,
            bJq[bJr++] = 0xff & bJf >> 0x8,
            bJq[bJr++] = 0xff & bJf),
            bJq;
        }
        ,
        bJf['fromByteArray'] = function(bJe) {
            for (var bJf, bJg = bJe['length'], bJA = bJg % 0x3, bJB = [], bJC = 0x3fff, bJD = 0x0, bJE = bJg - bJA; bJD < bJE; bJD += bJC)
                bJB['push'](bJR(bJe, bJD, bJD + bJC > bJE ? bJE : bJD + bJC));
            return 0x1 === bJA ? (bJf = bJe[bJg - 0x1],
            bJB['push'](bJF[bJf >> 0x2] + bJF[0x3f & bJf << 0x4] + '==')) : 0x2 === bJA && (bJf = (bJe[bJg - 0x2] << 0x8) + bJe[bJg - 0x1],
            bJB['push'](bJF[bJf >> 0xa] + bJF[0x3f & bJf >> 0x4] + bJF[0x3f & bJf << 0x2] + '=')),
            bJB['join']('');
        }
        ;
        for (var bJF = [], bJG = [], bJH = 'undefined' == typeof Uint8Array ? Array : Uint8Array, bJI = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', bJJ = 0x0, bJK = bJI['length']; bJJ < bJK; ++bJJ)
            bJF[bJJ] = bJI[bJJ],
            bJG[bJI['charCodeAt'](bJJ)] = bJJ;
        function bJL(bJe) {
            var bJf = bJe['length'];
            if (0x0 < bJf % 0x4)
                throw new Error('Invalid\x20string.\x20Length\x20must\x20be\x20a\x20multiple\x20of\x204');
            var bJg = bJe['indexOf']('=');
            return -0x1 === bJg && (bJg = bJf),
            [bJg, bJg === bJf ? 0x0 : 0x4 - bJg % 0x4];
        }
        function bJP(bJe) {
            return bJF[0x3f & bJe >> 0x12] + bJF[0x3f & bJe >> 0xc] + bJF[0x3f & bJe >> 0x6] + bJF[0x3f & bJe];
        }
        function bJR(bJe, bJf, bJg) {
            for (var bJF, bJG = [], bJH = bJf; bJH < bJg; bJH += 0x3)
                bJF = (0xff0000 & bJe[bJH] << 0x10) + (0xff00 & bJe[bJH + 0x1] << 0x8) + (0xff & bJe[bJH + 0x2]),
                bJG['push'](bJP(bJF));
            return bJG['join']('');
        }
        bJG[0x2d] = 0x3e,
        bJG[0x5f] = 0x3f;
    }
    , function(bJY, bJZ, bK0) {
        var bK1 = bK0(0x3);
        function bK2(bJY) {
            return Array(bJY);
        }
        (bJZ = bJY['exports'] = bK2(0x0))['alloc'] = bK2,
        bJZ['concat'] = bK1['concat'],
        bJZ['from'] = function(bJY) {
            if (!bK1['isBuffer'](bJY) && bK1['isView'](bJY))
                bJY = bK1['Uint8Array']['from'](bJY);
            else if (bK1['isArrayBuffer'](bJY))
                bJY = new Uint8Array(bJY);
            else {
                if ('string' == typeof bJY)
                    return bK1['from']['call'](bJZ, bJY);
                if ('number' == typeof bJY)
                    throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
            }
            return Array['prototype']['slice']['call'](bJY);
        }
        ;
    }
    , function(bK5, bK6, bK7) {
        var bK8 = bK7(0x3)
          , bK9 = bK8['global'];
        function bKa(bK5) {
            return new bK9(bK5);
        }
        (bK6 = bK5['exports'] = bK8['hasBuffer'] ? bKa(0x0) : [])['alloc'] = bK8['hasBuffer'] && bK9['alloc'] || bKa,
        bK6['concat'] = bK8['concat'],
        bK6['from'] = function(bK5) {
            if (!bK8['isBuffer'](bK5) && bK8['isView'](bK5))
                bK5 = bK8['Uint8Array']['from'](bK5);
            else if (bK8['isArrayBuffer'](bK5))
                bK5 = new Uint8Array(bK5);
            else {
                if ('string' == typeof bK5)
                    return bK8['from']['call'](bK6, bK5);
                if ('number' == typeof bK5)
                    throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
            }
            return bK9['from'] && 0x1 !== bK9['from']['length'] ? bK9['from'](bK5) : new bK9(bK5);
        }
        ;
    }
    , function(bKd, bKe, bKf) {
        var bKg = bKf(0x3);
        function bKh(bKd) {
            return new Uint8Array(bKd);
        }
        (bKe = bKd['exports'] = bKg['hasArrayBuffer'] ? bKh(0x0) : [])['alloc'] = bKh,
        bKe['concat'] = bKg['concat'],
        bKe['from'] = function(bKd) {
            if (bKg['isView'](bKd)) {
                var bKf = bKd['byteOffset']
                  , bKh = bKd['byteLength'];
                (bKd = bKd['buffer'])['byteLength'] !== bKh && (bKd['slice'] ? bKd = bKd['slice'](bKf, bKf + bKh) : (bKd = new Uint8Array(bKd))['byteLength'] !== bKh && (bKd = Array['prototype']['slice']['call'](bKd, bKf, bKf + bKh)));
            } else {
                if ('string' == typeof bKd)
                    return bKg['from']['call'](bKe, bKd);
                if ('number' == typeof bKd)
                    throw new TypeError('\x22value\x22\x20argument\x20must\x20not\x20be\x20a\x20number');
            }
            return new Uint8Array(bKd);
        }
        ;
    }
    , function(bKm, bKn) {
        bKn['copy'] = function(bKm, bKn, bKq, bKr) {
            var bKs;
            bKq || (bKq = 0x0),
            bKr || 0x0 === bKr || (bKr = this['length']),
            bKn || (bKn = 0x0);
            var bKt = bKr - bKq;
            if (bKm === this && bKq < bKn && bKn < bKr)
                for (bKs = bKt - 0x1; 0x0 <= bKs; bKs--)
                    bKm[bKs + bKn] = this[bKs + bKq];
            else
                for (bKs = 0x0; bKs < bKt; bKs++)
                    bKm[bKs + bKn] = this[bKs + bKq];
            return bKt;
        }
        ,
        bKn['toString'] = function(bKm, bKn, bKw) {
            var bKx = this
              , bKy = 0x0 | bKn;
            bKw || (bKw = bKx['length']);
            for (var bKz = '', bKA = 0x0; bKy < bKw; )
                0x80 > (bKA = bKx[bKy++]) ? bKz += String['fromCharCode'](bKA) : (0xc0 == (0xe0 & bKA) ? bKA = (0x1f & bKA) << 0x6 | 0x3f & bKx[bKy++] : 0xe0 == (0xf0 & bKA) ? bKA = (0xf & bKA) << 0xc | (0x3f & bKx[bKy++]) << 0x6 | 0x3f & bKx[bKy++] : 0xf0 == (0xf8 & bKA) && (bKA = (0x7 & bKA) << 0x12 | (0x3f & bKx[bKy++]) << 0xc | (0x3f & bKx[bKy++]) << 0x6 | 0x3f & bKx[bKy++]),
                0x10000 <= bKA ? (bKA -= 0x10000,
                bKz += String['fromCharCode'](0xd800 + (bKA >>> 0xa), 0xdc00 + (0x3ff & bKA))) : bKz += String['fromCharCode'](bKA));
            return bKz;
        }
        ,
        bKn['write'] = function(bKm, bKn) {
            for (var bKD = this, bKE = bKn || (bKn |= 0x0), bKF = bKm['length'], bKG = 0x0, bKH = 0x0; bKH < bKF; )
                0x80 > (bKG = bKm['charCodeAt'](bKH++)) ? bKD[bKE++] = bKG : 0x800 > bKG ? (bKD[bKE++] = 0xc0 | bKG >>> 0x6,
                bKD[bKE++] = 0x80 | 0x3f & bKG) : 0xd800 > bKG || 0xdfff < bKG ? (bKD[bKE++] = 0xe0 | bKG >>> 0xc,
                bKD[bKE++] = 0x80 | 0x3f & bKG >>> 0x6,
                bKD[bKE++] = 0x80 | 0x3f & bKG) : (bKG = 0x10000 + (bKG - 0xd800 << 0xa | bKm['charCodeAt'](bKH++) - 0xdc00),
                bKD[bKE++] = 0xf0 | bKG >>> 0x12,
                bKD[bKE++] = 0x80 | 0x3f & bKG >>> 0xc,
                bKD[bKE++] = 0x80 | 0x3f & bKG >>> 0x6,
                bKD[bKE++] = 0x80 | 0x3f & bKG);
            return bKE - bKn;
        }
        ;
    }
    , function(bKI, bKJ, bKK) {
        bKJ['setExtPackers'] = function(bKI) {
            bKI['addExtPacker'](0xe, Error, [bKY, bKR]),
            bKI['addExtPacker'](0x1, EvalError, [bKY, bKR]),
            bKI['addExtPacker'](0x2, RangeError, [bKY, bKR]),
            bKI['addExtPacker'](0x3, ReferenceError, [bKY, bKR]),
            bKI['addExtPacker'](0x4, SyntaxError, [bKY, bKR]),
            bKI['addExtPacker'](0x5, TypeError, [bKY, bKR]),
            bKI['addExtPacker'](0x6, URIError, [bKY, bKR]),
            bKI['addExtPacker'](0xa, RegExp, [bKV, bKR]),
            bKI['addExtPacker'](0xb, Boolean, [bKT, bKR]),
            bKI['addExtPacker'](0xc, String, [bKT, bKR]),
            bKI['addExtPacker'](0xd, Date, [Number, bKR]),
            bKI['addExtPacker'](0xf, Number, [bKT, bKR]),
            'undefined' != typeof Uint8Array && (bKI['addExtPacker'](0x11, Int8Array, bKP),
            bKI['addExtPacker'](0x12, Uint8Array, bKP),
            bKI['addExtPacker'](0x13, Int16Array, bKP),
            bKI['addExtPacker'](0x14, Uint16Array, bKP),
            bKI['addExtPacker'](0x15, Int32Array, bKP),
            bKI['addExtPacker'](0x16, Uint32Array, bKP),
            bKI['addExtPacker'](0x17, Float32Array, bKP),
            'undefined' != typeof Float64Array && bKI['addExtPacker'](0x18, Float64Array, bKP),
            'undefined' != typeof Uint8ClampedArray && bKI['addExtPacker'](0x19, Uint8ClampedArray, bKP),
            bKI['addExtPacker'](0x1a, ArrayBuffer, bKP),
            bKI['addExtPacker'](0x1d, DataView, bKP)),
            bKN['hasBuffer'] && bKI['addExtPacker'](0x1b, bKO, bKN['from']);
        }
        ;
        var bKM, bKN = bKK(0x3), bKO = bKN['global'], bKP = bKN['Uint8Array']['from'], bKQ = {
            'name': 0x1,
            'message': 0x1,
            'stack': 0x1,
            'columnNumber': 0x1,
            'fileName': 0x1,
            'lineNumber': 0x1
        };
        function bKR(bKI) {
            return bKM || (bKM = bKK(0x19)['encode']),
            bKM(bKI);
        }
        function bKT(bKI) {
            return bKI['valueOf']();
        }
        function bKV(bKI) {
            (bKI = RegExp['prototype']['toString']['call'](bKI)['split']('/'))['shift']();
            var bKJ = [bKI['pop']()];
            return bKJ['unshift'](bKI['join']('/')),
            bKJ;
        }
        function bKY(bKI) {
            var bKJ = {};
            for (var bKK in bKQ)
                bKJ[bKK] = bKI[bKK];
            return bKJ;
        }
    }
    , function(bL2, bL3, bL4) {
        var bL5 = bL4(0xb)
          , bL6 = bL4(0x13)
          , bL7 = bL6['Uint64BE']
          , bL8 = bL6['Int64BE']
          , bL9 = bL4(0x3)
          , bLa = bL4(0x12)
          , bLb = bL4(0x33)
          , bLc = bL4(0x1c)['uint8']
          , bLd = bL4(0x10)['ExtBuffer']
          , bLe = 'undefined' != typeof Uint8Array
          , bLf = 'undefined' != typeof Map
          , bLg = [];
        bLg[0x1] = 0xd4,
        bLg[0x2] = 0xd5,
        bLg[0x4] = 0xd6,
        bLg[0x8] = 0xd7,
        bLg[0x10] = 0xd8,
        bL3['getWriteType'] = function(bL2) {
            function bL3(bL2, bL3) {
                if (null === bL3)
                    return bL4(bL2, bL3);
                if (bLT(bL3))
                    return bLU(bL2, bL3);
                if (bL5(bL3))
                    return function(bL2, bL3) {
                        var bL4 = bL3['length'];
                        bLQ[0x10 > bL4 ? 0x90 + bL4 : 0xffff >= bL4 ? 0xdc : 0xdd](bL2, bL4);
                        for (var bL5 = bL2['codec']['encode'], bL6 = 0x0; bL6 < bL4; bL6++)
                            bL5(bL2, bL3[bL6]);
                    }(bL2, bL3);
                if (bL7['isUint64BE'](bL3))
                    return function(bL2, bL3) {
                        bLQ[0xcf](bL2, bL3['toArray']());
                    }(bL2, bL3);
                if (bL8['isInt64BE'](bL3))
                    return function(bL2, bL3) {
                        bLQ[0xd3](bL2, bL3['toArray']());
                    }(bL2, bL3);
                var bL6 = bL2['codec']['getExtPacker'](bL3);
                return bL6 && (bL3 = bL6(bL3)),
                bL3 instanceof bLd ? function(bL2, bL3) {
                    var bL4 = bL3['buffer']
                      , bL5 = bL4['length']
                      , bL6 = bLg[bL5] || (0xff > bL5 ? 0xc7 : 0xffff >= bL5 ? 0xc8 : 0xc9);
                    bLQ[bL6](bL2, bL5),
                    bLc[bL3['type']](bL2),
                    bL2['send'](bL4);
                }(bL2, bL3) : void bLV(bL2, bL3);
            }
            function bL4(bL2, bL3) {
                bLQ[0xc0](bL2, bL3);
            }
            function bL6(bL2, bL3) {
                var bL4 = bL3['length']
                  , bL5 = 0xff > bL4 ? 0xc4 : 0xffff >= bL4 ? 0xc5 : 0xc6;
                bLQ[bL5](bL2, bL4),
                bL2['send'](bL3);
            }
            function bLI(bL2, bL3) {
                var bL4 = Object['keys'](bL3)
                  , bL5 = bL4['length']
                  , bL6 = 0x10 > bL5 ? 0x80 + bL5 : 0xffff >= bL5 ? 0xde : 0xdf;
                bLQ[bL6](bL2, bL5);
                var bL7 = bL2['codec']['encode'];
                bL4['forEach'](function(bL4) {
                    bL7(bL2, bL4),
                    bL7(bL2, bL3[bL4]);
                });
            }
            var bLQ = bLb['getWriteToken'](bL2)
              , bLR = bL2 && bL2['useraw']
              , bLS = bLe && bL2 && bL2['binarraybuffer']
              , bLT = bLS ? bL9['isArrayBuffer'] : bL9['isBuffer']
              , bLU = bLS ? function(bL2, bL3) {
                bL6(bL2, new Uint8Array(bL3));
            }
            : bL6
              , bLV = bLf && bL2 && bL2['usemap'] ? function(bL2, bL3) {
                if (!(bL3 instanceof Map))
                    return bLI(bL2, bL3);
                var bL4 = bL3['size']
                  , bL5 = 0x10 > bL4 ? 0x80 + bL4 : 0xffff >= bL4 ? 0xde : 0xdf;
                bLQ[bL5](bL2, bL4);
                var bL6 = bL2['codec']['encode'];
                bL3['forEach'](function(bL3, bL4) {
                    bL6(bL2, bL4),
                    bL6(bL2, bL3);
                });
            }
            : bLI;
            return {
                'boolean': function(bL2, bL3) {
                    var bL4 = bL3 ? 0xc3 : 0xc2;
                    bLQ[bL4](bL2, bL3);
                },
                'function': bL4,
                'number': function(bL2, bL3) {
                    var bL4 = 0x0 | bL3;
                    bL3 === bL4 ? bLQ[-0x20 <= bL4 && 0x7f >= bL4 ? 0xff & bL4 : 0x0 <= bL4 ? 0xff >= bL4 ? 0xcc : 0xffff >= bL4 ? 0xcd : 0xce : -0x80 <= bL4 ? 0xd0 : -0x8000 <= bL4 ? 0xd1 : 0xd2](bL2, bL4) : bLQ[0xcb](bL2, bL3);
                },
                'object': bLR ? function(bL2, bL4) {
                    return bLT(bL4) ? function(bL2, bL3) {
                        var bL4 = bL3['length'];
                        bLQ[0x20 > bL4 ? 0xa0 + bL4 : 0xffff >= bL4 ? 0xda : 0xdb](bL2, bL4),
                        bL2['send'](bL3);
                    }(bL2, bL4) : void bL3(bL2, bL4);
                }
                : bL3,
                'string': function(bL2) {
                    return function(bL3, bL4) {
                        var bL5 = bL4['length']
                          , bL6 = 0x5 + 0x3 * bL5;
                        bL3['offset'] = bL3['reserve'](bL6);
                        var bL7 = bL3['buffer']
                          , bL8 = bL2(bL5)
                          , bL9 = bL3['offset'] + bL8;
                        bL5 = bLa['write']['call'](bL7, bL4, bL9);
                        var bLb = bL2(bL5);
                        if (bL8 !== bLb) {
                            var bLc = bL9 + bL5;
                            bLa['copy']['call'](bL7, bL7, bL9 + bLb - bL8, bL9, bLc);
                        }
                        var bLd = 0x1 === bLb ? 0xa0 + bL5 : 0x3 >= bLb ? 0xd7 + bLb : 0xdb;
                        bLQ[bLd](bL3, bL5),
                        bL3['offset'] += bL5;
                    }
                    ;
                }(bLR ? function(bL2) {
                    return 0x20 > bL2 ? 0x1 : 0xffff >= bL2 ? 0x3 : 0x5;
                }
                : function(bL2) {
                    return 0x20 > bL2 ? 0x1 : 0xff >= bL2 ? 0x2 : 0xffff >= bL2 ? 0x3 : 0x5;
                }
                ),
                'symbol': bL4,
                'undefined': bL4
            };
        }
        ;
    }
    , function(bMt, bMu, bMv) {
        var bMw = bMv(0x11)
          , bMx = bMv(0x13)
          , bMy = bMx['Uint64BE']
          , bMz = bMx['Int64BE']
          , bMA = bMv(0x1c)['uint8']
          , bMB = bMv(0x3)
          , bMC = bMB['global']
          , bMD = bMB['hasBuffer'] && 'TYPED_ARRAY_SUPPORT'in bMC && !bMC['TYPED_ARRAY_SUPPORT']
          , bME = bMB['hasBuffer'] && bMC['prototype'] || {};
        function bMF() {
            var bMt = bMA['slice']();
            return bMt[0xc4] = bMH(0xc4),
            bMt[0xc5] = bMN(0xc5),
            bMt[0xc6] = bMT(0xc6),
            bMt[0xc7] = bMH(0xc7),
            bMt[0xc8] = bMN(0xc8),
            bMt[0xc9] = bMT(0xc9),
            bMt[0xca] = bMZ(0xca, 0x4, bME['writeFloatBE'] || bNd, !0x0),
            bMt[0xcb] = bMZ(0xcb, 0x8, bME['writeDoubleBE'] || bNg, !0x0),
            bMt[0xcc] = bMH(0xcc),
            bMt[0xcd] = bMN(0xcd),
            bMt[0xce] = bMT(0xce),
            bMt[0xcf] = bMZ(0xcf, 0x8, bN7),
            bMt[0xd0] = bMH(0xd0),
            bMt[0xd1] = bMN(0xd1),
            bMt[0xd2] = bMT(0xd2),
            bMt[0xd3] = bMZ(0xd3, 0x8, bNa),
            bMt[0xd9] = bMH(0xd9),
            bMt[0xda] = bMN(0xda),
            bMt[0xdb] = bMT(0xdb),
            bMt[0xdc] = bMN(0xdc),
            bMt[0xdd] = bMT(0xdd),
            bMt[0xde] = bMN(0xde),
            bMt[0xdf] = bMT(0xdf),
            bMt;
        }
        function bMH(bMt) {
            return function(bMu, bMv) {
                var bMw = bMu['reserve'](0x2)
                  , bMx = bMu['buffer'];
                bMx[bMw++] = bMt,
                bMx[bMw] = bMv;
            }
            ;
        }
        function bMN(bMt) {
            return function(bMu, bMv) {
                var bMw = bMu['reserve'](0x3)
                  , bMx = bMu['buffer'];
                bMx[bMw++] = bMt,
                bMx[bMw++] = bMv >>> 0x8,
                bMx[bMw] = bMv;
            }
            ;
        }
        function bMT(bMt) {
            return function(bMu, bMv) {
                var bMw = bMu['reserve'](0x5)
                  , bMx = bMu['buffer'];
                bMx[bMw++] = bMt,
                bMx[bMw++] = bMv >>> 0x18,
                bMx[bMw++] = bMv >>> 0x10,
                bMx[bMw++] = bMv >>> 0x8,
                bMx[bMw] = bMv;
            }
            ;
        }
        function bMZ(bMt, bMu, bMv, bMw) {
            return function(bMx, bMy) {
                var bMz = bMx['reserve'](bMu + 0x1);
                bMx['buffer'][bMz++] = bMt,
                bMv['call'](bMx['buffer'], bMy, bMz, bMw);
            }
            ;
        }
        function bN7(bMt, bMu) {
            new bMy(this,bMu,bMt);
        }
        function bNa(bMt, bMu) {
            new bMz(this,bMu,bMt);
        }
        function bNd(bMt, bMu) {
            bMw['write'](this, bMt, bMu, !0x1, 0x17, 0x4);
        }
        function bNg(bMt, bMu) {
            bMw['write'](this, bMt, bMu, !0x1, 0x34, 0x8);
        }
        bMu['getWriteToken'] = function(bMt) {
            return bMt && bMt['uint8array'] ? function() {
                var bMt = bMF();
                return bMt[0xca] = bMZ(0xca, 0x4, bNd),
                bMt[0xcb] = bMZ(0xcb, 0x8, bNg),
                bMt;
            }() : bMD || bMB['hasBuffer'] && bMt && bMt['safe'] ? function() {
                var bMt = bMA['slice']();
                return bMt[0xc4] = bMZ(0xc4, 0x1, bMC['prototype']['writeUInt8']),
                bMt[0xc5] = bMZ(0xc5, 0x2, bMC['prototype']['writeUInt16BE']),
                bMt[0xc6] = bMZ(0xc6, 0x4, bMC['prototype']['writeUInt32BE']),
                bMt[0xc7] = bMZ(0xc7, 0x1, bMC['prototype']['writeUInt8']),
                bMt[0xc8] = bMZ(0xc8, 0x2, bMC['prototype']['writeUInt16BE']),
                bMt[0xc9] = bMZ(0xc9, 0x4, bMC['prototype']['writeUInt32BE']),
                bMt[0xca] = bMZ(0xca, 0x4, bMC['prototype']['writeFloatBE']),
                bMt[0xcb] = bMZ(0xcb, 0x8, bMC['prototype']['writeDoubleBE']),
                bMt[0xcc] = bMZ(0xcc, 0x1, bMC['prototype']['writeUInt8']),
                bMt[0xcd] = bMZ(0xcd, 0x2, bMC['prototype']['writeUInt16BE']),
                bMt[0xce] = bMZ(0xce, 0x4, bMC['prototype']['writeUInt32BE']),
                bMt[0xcf] = bMZ(0xcf, 0x8, bN7),
                bMt[0xd0] = bMZ(0xd0, 0x1, bMC['prototype']['writeInt8']),
                bMt[0xd1] = bMZ(0xd1, 0x2, bMC['prototype']['writeInt16BE']),
                bMt[0xd2] = bMZ(0xd2, 0x4, bMC['prototype']['writeInt32BE']),
                bMt[0xd3] = bMZ(0xd3, 0x8, bNa),
                bMt[0xd9] = bMZ(0xd9, 0x1, bMC['prototype']['writeUInt8']),
                bMt[0xda] = bMZ(0xda, 0x2, bMC['prototype']['writeUInt16BE']),
                bMt[0xdb] = bMZ(0xdb, 0x4, bMC['prototype']['writeUInt32BE']),
                bMt[0xdc] = bMZ(0xdc, 0x2, bMC['prototype']['writeUInt16BE']),
                bMt[0xdd] = bMZ(0xdd, 0x4, bMC['prototype']['writeUInt32BE']),
                bMt[0xde] = bMZ(0xde, 0x2, bMC['prototype']['writeUInt16BE']),
                bMt[0xdf] = bMZ(0xdf, 0x4, bMC['prototype']['writeUInt32BE']),
                bMt;
            }() : bMF();
        }
        ;
    }
    , function(bNm, bNn, bNo) {
        bNn['setExtUnpackers'] = function(bNm) {
            bNm['addExtUnpacker'](0xe, [bNu, bNy(Error)]),
            bNm['addExtUnpacker'](0x1, [bNu, bNy(EvalError)]),
            bNm['addExtUnpacker'](0x2, [bNu, bNy(RangeError)]),
            bNm['addExtUnpacker'](0x3, [bNu, bNy(ReferenceError)]),
            bNm['addExtUnpacker'](0x4, [bNu, bNy(SyntaxError)]),
            bNm['addExtUnpacker'](0x5, [bNu, bNy(TypeError)]),
            bNm['addExtUnpacker'](0x6, [bNu, bNy(URIError)]),
            bNm['addExtUnpacker'](0xa, [bNu, bNw]),
            bNm['addExtUnpacker'](0xb, [bNu, bND(Boolean)]),
            bNm['addExtUnpacker'](0xc, [bNu, bND(String)]),
            bNm['addExtUnpacker'](0xd, [bNu, bND(Date)]),
            bNm['addExtUnpacker'](0xf, [bNu, bND(Number)]),
            'undefined' != typeof Uint8Array && (bNm['addExtUnpacker'](0x11, bND(Int8Array)),
            bNm['addExtUnpacker'](0x12, bND(Uint8Array)),
            bNm['addExtUnpacker'](0x13, [bNG, bND(Int16Array)]),
            bNm['addExtUnpacker'](0x14, [bNG, bND(Uint16Array)]),
            bNm['addExtUnpacker'](0x15, [bNG, bND(Int32Array)]),
            bNm['addExtUnpacker'](0x16, [bNG, bND(Uint32Array)]),
            bNm['addExtUnpacker'](0x17, [bNG, bND(Float32Array)]),
            'undefined' != typeof Float64Array && bNm['addExtUnpacker'](0x18, [bNG, bND(Float64Array)]),
            'undefined' != typeof Uint8ClampedArray && bNm['addExtUnpacker'](0x19, bND(Uint8ClampedArray)),
            bNm['addExtUnpacker'](0x1a, bNG),
            bNm['addExtUnpacker'](0x1d, [bNG, bND(DataView)])),
            bNr['hasBuffer'] && bNm['addExtUnpacker'](0x1b, bND(bNs));
        }
        ;
        var bNq, bNr = bNo(0x3), bNs = bNr['global'], bNt = {
            'name': 0x1,
            'message': 0x1,
            'stack': 0x1,
            'columnNumber': 0x1,
            'fileName': 0x1,
            'lineNumber': 0x1
        };
        function bNu(bNm) {
            return bNq || (bNq = bNo(0x1e)['decode']),
            bNq(bNm);
        }
        function bNw(bNm) {
            return RegExp['apply'](null, bNm);
        }
        function bNy(bNm) {
            return function(bNn) {
                var bNo = new bNm();
                for (var bNq in bNt)
                    bNo[bNq] = bNn[bNq];
                return bNo;
            }
            ;
        }
        function bND(bNm) {
            return function(bNn) {
                return new bNm(bNn);
            }
            ;
        }
        function bNG(bNm) {
            return new Uint8Array(bNm)['buffer'];
        }
    }
    , function(bNI, bNJ, bNK) {
        var bNL = bNK(0x20);
        function bNM(bNI) {
            var bNJ, bNK = Array(0x100);
            for (bNJ = 0x0; 0x7f >= bNJ; bNJ++)
                bNK[bNJ] = bNQ(bNJ);
            for (bNJ = 0x80; 0x8f >= bNJ; bNJ++)
                bNK[bNJ] = bNX(bNJ - 0x80, bNI['map']);
            for (bNJ = 0x90; 0x9f >= bNJ; bNJ++)
                bNK[bNJ] = bNX(bNJ - 0x90, bNI['array']);
            for (bNJ = 0xa0; 0xbf >= bNJ; bNJ++)
                bNK[bNJ] = bNX(bNJ - 0xa0, bNI['str']);
            for (bNK[0xc0] = bNQ(null),
            bNK[0xc1] = null,
            bNK[0xc2] = bNQ(!0x1),
            bNK[0xc3] = bNQ(!0x0),
            bNK[0xc4] = bNS(bNI['uint8'], bNI['bin']),
            bNK[0xc5] = bNS(bNI['uint16'], bNI['bin']),
            bNK[0xc6] = bNS(bNI['uint32'], bNI['bin']),
            bNK[0xc7] = bNS(bNI['uint8'], bNI['ext']),
            bNK[0xc8] = bNS(bNI['uint16'], bNI['ext']),
            bNK[0xc9] = bNS(bNI['uint32'], bNI['ext']),
            bNK[0xca] = bNI['float32'],
            bNK[0xcb] = bNI['float64'],
            bNK[0xcc] = bNI['uint8'],
            bNK[0xcd] = bNI['uint16'],
            bNK[0xce] = bNI['uint32'],
            bNK[0xcf] = bNI['uint64'],
            bNK[0xd0] = bNI['int8'],
            bNK[0xd1] = bNI['int16'],
            bNK[0xd2] = bNI['int32'],
            bNK[0xd3] = bNI['int64'],
            bNK[0xd4] = bNX(0x1, bNI['ext']),
            bNK[0xd5] = bNX(0x2, bNI['ext']),
            bNK[0xd6] = bNX(0x4, bNI['ext']),
            bNK[0xd7] = bNX(0x8, bNI['ext']),
            bNK[0xd8] = bNX(0x10, bNI['ext']),
            bNK[0xd9] = bNS(bNI['uint8'], bNI['str']),
            bNK[0xda] = bNS(bNI['uint16'], bNI['str']),
            bNK[0xdb] = bNS(bNI['uint32'], bNI['str']),
            bNK[0xdc] = bNS(bNI['uint16'], bNI['array']),
            bNK[0xdd] = bNS(bNI['uint32'], bNI['array']),
            bNK[0xde] = bNS(bNI['uint16'], bNI['map']),
            bNK[0xdf] = bNS(bNI['uint32'], bNI['map']),
            bNJ = 0xe0; 0xff >= bNJ; bNJ++)
                bNK[bNJ] = bNQ(bNJ - 0x100);
            return bNK;
        }
        function bNQ(bNI) {
            return function() {
                return bNI;
            }
            ;
        }
        function bNS(bNI, bNJ) {
            return function(bNK) {
                var bNL = bNI(bNK);
                return bNJ(bNK, bNL);
            }
            ;
        }
        function bNX(bNI, bNJ) {
            return function(bNK) {
                return bNJ(bNK, bNI);
            }
            ;
        }
        bNJ['getReadToken'] = function(bNI) {
            var bNJ = bNL['getReadFormat'](bNI);
            return bNI && bNI['useraw'] ? function(bNI) {
                var bNJ, bNK = bNM(bNI)['slice']();
                for (bNK[0xd9] = bNK[0xc4],
                bNK[0xda] = bNK[0xc5],
                bNK[0xdb] = bNK[0xc6],
                bNJ = 0xa0; 0xbf >= bNJ; bNJ++)
                    bNK[bNJ] = bNX(bNJ - 0xa0, bNI['bin']);
                return bNK;
            }(bNJ) : bNM(bNJ);
        }
        ;
    }
    , function(bO6, bO7, bO8) {
        bO7['Encoder'] = bOb;
        var bO9 = bO8(0x21)
          , bOa = bO8(0x1a)['EncodeBuffer'];
        function bOb(bO6) {
            return this instanceof bOb ? void bOa['call'](this, bO6) : new bOb(bO6);
        }
        bOb['prototype'] = new bOa(),
        bO9['mixin'](bOb['prototype']),
        bOb['prototype']['encode'] = function(bO6) {
            this['write'](bO6),
            this['emit']('data', this['read']());
        }
        ,
        bOb['prototype']['end'] = function(bO6) {
            arguments['length'] && this['encode'](bO6),
            this['flush'](),
            this['emit']('end');
        }
        ;
    }
    , function(bOf, bOg, bOh) {
        bOg['Decoder'] = bOk;
        var bOi = bOh(0x21)
          , bOj = bOh(0x1f)['DecodeBuffer'];
        function bOk(bOf) {
            return this instanceof bOk ? void bOj['call'](this, bOf) : new bOk(bOf);
        }
        bOk['prototype'] = new bOj(),
        bOi['mixin'](bOk['prototype']),
        bOk['prototype']['decode'] = function(bOf) {
            arguments['length'] && this['write'](bOf),
            this['flush']();
        }
        ,
        bOk['prototype']['push'] = function(bOf) {
            this['emit']('data', bOf);
        }
        ,
        bOk['prototype']['end'] = function(bOf) {
            this['decode'](bOf),
            this['emit']('end');
        }
        ;
    }
    , function(bOp, bOq, bOr) {
        bOr(0x14),
        bOr(0xf),
        bOq['createCodec'] = bOr(0xc)['createCodec'];
    }
    , function(bOs, bOt, bOu) {
        bOu(0x14),
        bOu(0xf),
        bOt['codec'] = {
            'preset': bOu(0xc)['preset']
        };
    }
    , function(bOv, bOw, bOx) {
        var bOy, bOz = bOx(0x7), bOA = bOx(0x4), bOB = bOx(0x3b);
        bOv['exports'] = function(bOw, bOz, bOA, bOF) {
            bOw['ImageUtils']['crossOrigin'] = '';
            var bOG = bOx(0x17)
              , bOH = new bOw['LoadingManager']()
              , bOI = new bOw['OBJLoader'](bOH);
            this['cubeGeo'] = new bOw['BoxGeometry'](0x1,0x1,0x1),
            this['getCubeMesh'] = function() {
                return new bOw['Mesh'](this['cubeGeo']);
            }
            ;
            var bOJ = new bOw['PlaneGeometry'](0x1,0x1);
            new bOw['CylinderGeometry'](0.1,0x1,0x1,0x4,0x1,!0x1,Math['PI'] / 0x4)['computeFlatVertexNormals']();
            var bOK = new bOw['TextureLoader']()
              , bOL = new bOw['MeshBasicMaterial']({
                'color': 0xffffff
            })
              , bOM = new bOw['MeshBasicMaterial']({
                'color': 0xff00
            })
              , bON = {}
              , bOO = {}
              , bOP = {};
            this['movTextures'] = [],
            this['pulsMats'] = [],
            this['pulsVal'] = 0x0;
            var bOQ, bOR = this, bOS = {};
            this['frustum'] = new bOw['Frustum']();
            var bOT = new bOw['Matrix4']();
            this['camera'] = new bOw['PerspectiveCamera'](0x0,window['innerWidth'] / window['innerHeight'],0.1,0x1770),
            this['fpsCamera'] = new bOw['PerspectiveCamera'](bOA['fov'],window['innerWidth'] / window['innerHeight'],0.1,0x12c),
            this['fpsCamera']['layers']['set'](0x1),
            this['camera']['add'](this['fpsCamera']),
            this['weaponLean'] = 0x1,
            this['weaponOffX'] = 0x1,
            this['weaponOffY'] = 0x1,
            this['weaponOffZ'] = 0x1,
            this['weaponBob'] = 0x1,
            this['hideADS'] = 0x0,
            this['lowSpec'] = !0x1,
            this['init'] = function(bOx) {
                this['clearPendingMeshes'](),
                this['scene'] = new bOw['Scene'](),
                this['backgroundScene'] = new bOw['Scene'](),
                bOx['skyDome'] && (this['skyDome'] = bOB['fromConfig'](bOx),
                this['backgroundScene']['add'](this['skyDome'])),
                bOv['exports']['initScene']['call'](this, bOx);
            }
            ;
            var bOV = 0x0;
            this['flash'] = function(bOv, bOw) {
                bOF['showFlash'] = !0x0,
                bOF['flashX'] = bOv,
                bOF['flashY'] = 0x1 - bOw,
                bOV = 0x1;
            }
            ,
            this['updateLightMap'] = function(bOv) {
                this['skyLight'] && (this['skyLight']['shadow']['camera']['right'] = bOv['shadWidth'],
                this['skyLight']['shadow']['camera']['left'] = -bOv['shadWidth'],
                this['skyLight']['shadow']['camera']['top'] = bOv['shadLength'],
                this['skyLight']['shadow']['camera']['bottom'] = -bOv['shadLength']);
            }
            ,
            this['useDepthMap'] = 0x0,
            this['toggleDepthMap'] = function(bOx) {
                if (this['useDepthMap'] = bOx,
                this['scene']) {
                    var bOz = bOx && '0' != bOx;
                    this['scene']['overrideMaterial'] = bOz ? bOL : null,
                    bOz ? (this['scene']['fog'] = new bOw['Fog'](0x0,0x0,bOx),
                    this['renderer']['setClearColor'](0x0)) : bOv['exports']['initScene']['call'](this, bOy);
                }
            }
            ,
            this['greenScreen'] = !0x1,
            this['updateGreenScreen'] = function(bOv) {
                bOR['greenScreen'] && !bOv['noGreen'] ? (bOv['realMat'] = bOv['material'],
                bOv['material'] = bOM) : bOv['material'] = bOv['realMat'] || bOv['material'];
            }
            ,
            this['toggleGreenscreen'] = function(bOv) {
                this['greenScreen'] = bOv,
                this['scene'] && (bOv ? (this['renderer']['setClearColor'](0xff00),
                this['scene']['fog']['near'] = 0.1,
                this['scene']['fog']['far'] = 0x0) : (this['scene']['fog']['near'] = 0x1,
                this['scene']['fog']['far'] = bOy['fogD'],
                this['renderer']['setClearColor'](bOy['sky'])),
                this['scene']['traverse'](function(bOv) {
                    bOR['updateGreenScreen'](bOv);
                }));
            }
            ,
            this['renderer'] = new bOw['WebGLRenderer']({
                'precision': 'mediump',
                'powerPreference': 'high-performance',
                'antialias': !0x1
            }),
            this['renderer']['shadowMap']['enabled'] = !0x0,
            this['renderer']['shadowMap']['autoUpdate'] = !0x1,
            this['renderer']['shadowMap']['type'] = bOw['BasicShadowMap'],
            this['renderer']['setPixelRatio'](window['devicePixelRatio']),
            this['renderer']['setSize'](window['innerWidth'], window['innerHeight']),
            this['renderer']['autoClear'] = !0x1,
            document['body']['appendChild'](this['renderer']['domElement']),
            this['shadows'] = !0x0,
            this['updateShadowMap'] = function() {
                this['shadows'] && (this['renderer']['shadowMap']['needsUpdate'] = !0x0);
            }
            ,
            this['toggleShadowMap'] = function(bOv) {
                bOv ? (this['shadows'] = !0x0,
                this['updateShadowMap']()) : (this['shadows'] = !0x1,
                this['skyLight'] && (this['renderer']['setRenderTarget'](this['skyLight']['shadow']['map']),
                this['renderer']['clear'](),
                this['renderer']['setRenderTarget'](null)));
            }
            ,
            this['zoomVal'] = 0x1,
            this['zoom'] = function(bOv) {
                this['zoomVal'] = bOv,
                this['updateCamFOV'](),
                this['fpsCamera']['fov'] = this['fpsFov'] / bOv,
                this['fpsCamera']['updateProjectionMatrix']();
            }
            ,
            this['setFPSFov'] = function(bOv) {
                this['fpsFov'] = bOv,
                this['fpsCamera']['fov'] = bOv,
                this['fpsCamera']['updateProjectionMatrix']();
            }
            ,
            this['setFPSFov'](bOA['fov']),
            this['fovMult'] = function(bOv) {
                this['fovMlt'] != bOv && (this['fovMlt'] = bOv,
                this['updateCamFOV']());
            }
            ,
            this['fovMlt'] = 0x1,
            this['updateCamFOV'] = function() {
                this['camera']['fov'] = this['fov'] / this['zoomVal'] * this['fovMlt'],
                this['camera']['updateProjectionMatrix']();
            }
            ,
            this['setFov'] = function(bOv) {
                this['fov'] = bOv,
                this['updateCamFOV']();
            }
            ,
            this['setFov'](bOA['fov']),
            this['resize'] = function() {
                this['camera']['aspect'] = window['innerWidth'] / window['innerHeight'],
                this['camera']['updateProjectionMatrix'](),
                this['fpsCamera']['aspect'] = window['innerWidth'] / window['innerHeight'],
                this['fpsCamera']['updateProjectionMatrix'](),
                this['renderer']['setSize'](window['innerWidth'], window['innerHeight']);
            }
            ,
            this['resMltV'] = 0x1,
            this['setResMlt'] = function(bOv) {
                this['resMltV'] = bOv,
                this['renderer']['setPixelRatio'](window['devicePixelRatio'] * this['resMltV']),
                this['renderer']['setSize'](window['innerWidth'], window['innerHeight']);
            }
            ,
            this['updateFrustum'] = function() {
                this['frustum']['setFromMatrix'](bOT['multiplyMatrices'](this['camera']['projectionMatrix'], this['camera']['matrixWorldInverse']));
            }
            ;
            var bPa = 0x0
              , bPb = 0x0;
            this['shakeX'] = 0x0,
            this['shakeY'] = 0x0,
            this['updateShake'] = function(bOv) {
                bPa && (bPa *= Math['pow'](0.99, bOv),
                bPb += bOz['randFloat'](-Math['PI'], Math['PI']),
                this['shakeX'] = Math['cos'](bPb) * bPa,
                this['shakeY'] = Math['sin'](bPb) * bPa,
                0.01 >= bPa && (bPa = 0x0,
                this['shakeX'] = this['shakeY'] = 0x0));
            }
            ,
            this['shake'] = function(bOv) {
                bPa = bOv;
            }
            ,
            this['render'] = function(bOv) {
                if (this['scene']) {
                    for (var bOw = 0x0; bOw < this['movTextures']['length']; ++bOw)
                        (bOQ = this['movTextures'][bOw])['tex']['offset'] && (bOQ['tex']['offset'][0x0 == bOQ['movD'] ? 'x' : 'y'] += bOQ['mov'] * bOv);
                    this['pulsVal'] += 0.003 * bOv;
                    var bOx;
                    for (bOw = 0x0; bOw < this['pulsMats']['length']; ++bOw)
                        bOx = 1.2 * (Math['sin'](this['pulsVal']) / 0x2 + 0.5),
                        this['pulsMats'][bOw]['mat']['emissiveIntensity'] = bOx;
                    this['renderer']['clear'](),
                    this['camera']['layers']['set'](0x0),
                    this['skyDome'] && (this['camera']['getWorldPosition'](this['skyDome']['position']),
                    this['renderer']['render'](this['backgroundScene'], this['camera']),
                    this['renderer']['clearDepth']()),
                    this['renderer']['render'](this['scene'], this['camera']),
                    this['camera']['layers']['set'](0x2),
                    this['renderer']['clearDepth'](),
                    this['renderer']['render'](this['scene'], this['camera']),
                    this['renderer']['clearDepth'](),
                    this['renderer']['render'](this['scene'], this['fpsCamera']),
                    bOF['showFlash'] && (0x0 >= bOV && (bOV = 0x0,
                    bOF['showFlash'] = !0x1),
                    bOV -= bOv),
                    this['updateShake'](bOv);
                }
            }
            ,
            this['updateTexture'] = function(bOv, bOx, bOy) {
                bOy = bOy || {};
                var bOz = 0x0;
                for (var bOA in bOP)
                    bOA['substring'](0x0, bOv['length'] + 0x2) == bOv + 'mt' && (bOz++,
                    bOP[bOA]['image'] = bOx,
                    bOP[bOA]['needsUpdate'] = !0x0);
                if (!bOz) {
                    var bOB = bOv + (null == bOy['movT'] ? 'mt' : 'mt' + bOy['movT']) + (null == bOy['movD'] ? 'md' : bOy['movD']) + (bOy['fontSize'] || 'fs') + (bOy['fcolr'] || 'fc') + (bOy['bcolr'] || 'bc') + (bOy['noBVis'] || 'bv') + (bOy['text'] || 'txt') + (bOy['tAlign'] || 'ta')
                      , bOF = bOP[bOB];
                    bOF = new bOw['Texture'](bOx),
                    bOP[bOB] = bOF,
                    bOP[bOB]['needsUpdate'] = !0x0;
                }
            }
            ,
            this['loadTexture'] = function(bOv, bOx, bOy, bOA) {
                var bOB = bOx + (null == (bOy = bOy || {})['movT'] ? 'mt' : 'mt' + bOy['movT']) + (null == bOy['movD'] ? 'md' : bOy['movD']) + (bOy['fontSize'] || 'fs') + (bOy['fcolr'] || 'fc') + (bOy['bcolr'] || 'bc') + (bOy['noBVis'] || 'bv') + (bOy['text'] || 'txt') + (bOy['tAlign'] || 'ta');
                if (bOP[bOB])
                    bOP[bOB]['mats'] ? bOP[bOB]['mats']['push']({
                        't': bOA,
                        'm': bOv
                    }) : (bOv[bOA || 'map'] = bOP[bOB],
                    bOv['needsUpdate'] = !0x0);
                else if (bOP[bOB] = {
                    'mats': [{
                        't': bOA,
                        'm': bOv
                    }]
                },
                bOy['canvas']) {
                    var bOF = new bOw['Texture'](bOy['canvas']);
                    bOF['wrapS'] = bOw['RepeatWrapping'],
                    bOF['wrapT'] = bOw['RepeatWrapping'],
                    bOF['repeat']['set'](bOy['repeatX'] || 0x1, bOy['repeatY'] || 0x1),
                    bOF['minFilter'] = bOy['tFilter'] || bOw['NearestFilter'],
                    bOF['magFilter'] = bOy['tFilter'] || bOw['NearestFilter'],
                    bOF['needsUpdate'] = !0x0;
                    for (var bOG = 0x0; bOG < bOP[bOB]['mats']['length']; ++bOG)
                        bOP[bOB]['mats'][bOG]['m'][bOP[bOB]['mats'][bOG]['t'] || 'map'] = bOF,
                        bOP[bOB]['mats'][bOG]['m']['needsUpdate'] = !0x0;
                    bOP[bOB] = bOF,
                    bOy['movT'] && this['movTextures']['push']({
                        'tex': bOF,
                        'mov': bOy['movT'],
                        'movD': bOy['movD'] || 0x0
                    });
                } else
                    bOx['includes']('default') || bOK['load'](bOz['versionifyUrl']('/textures/' + bOx + '.png'), bOv=>{
                        bOv['wrapS'] = bOw['RepeatWrapping'],
                        bOv['wrapT'] = bOw['RepeatWrapping'],
                        bOv['repeat']['set'](bOy['repeatX'] || 0x1, bOy['repeatY'] || 0x1),
                        bOv['minFilter'] = bOy['tFilter'] || bOw['NearestFilter'],
                        bOv['magFilter'] = bOy['tFilter'] || bOw['NearestFilter'],
                        bOv['needsUpdate'] = !0x0;
                        for (var bOx = 0x0; bOx < bOP[bOB]['mats']['length']; ++bOx)
                            bOP[bOB]['mats'][bOx]['m'][bOP[bOB]['mats'][bOx]['t'] || 'map'] = bOv,
                            bOP[bOB]['mats'][bOx]['m']['needsUpdate'] = !0x0;
                        bOP[bOB] = bOv,
                        bOy['movT'] && this['movTextures']['push']({
                            'tex': bOv,
                            'mov': bOy['movT'],
                            'movD': bOy['movD'] || 0x0
                        });
                    }
                    );
                return bOv;
            }
            ,
            this['getMat'] = function(bOv, bOx) {
                var bOy = (bOx && bOx['texSrc'] || bOv) + (bOx ? (bOx['rotation'] || 'x') + (bOx['noFog'] || 'y') + (bOx['opacity'] || 'z') + (bOx['color'] || 'b') + (bOx['mat'] ? 'ma' : 'nm') + (bOx['ao'] || 'a') + (bOx['emissive'] || 'e') + (bOx['glowText'] || 'g') + (null == bOx['movT'] ? 'mt' : bOx['movT']) + (null == bOx['movD'] ? 'md' : bOx['movD']) + (null == bOx['canvas'] ? '' : 'canvas') + (null == bOx['pulsT'] ? 'npt' : 'pt' + bOx['pulsT']) + (null == bOx['depthWrite'] ? 'd' : bOx['depthWrite']) + (bOx['fontSize'] || 'fs') + (bOx['fcolr'] || 'fc') + (bOx['bcolr'] || 'bc') + (bOx['noBVis'] || 'bv') + (bOx['text'] || 'txt') + (bOx['tAlign'] || 'ta') : '')
                  , bOz = bOO[bOy];
                return bOz || (bOz = new ((bOx = bOx || {})['mat'] ? bOx['mat'] : bOw['StrippedLambertMaterial'])(bOx),
                bOx['canvas'] && this['loadTexture'](bOz, bOy, bOx),
                bOv && 'default' != bOv && this['loadTexture'](bOz, bOx['texSrc'] || bOv, bOx),
                bOx && bOx['emissive'] && this['loadTexture'](bOz, (bOx['glowText'] && bOx['texSrc'] || bOv) + (bOx['sameGlow'] ? '' : '_e'), bOx, 'emissiveMap'),
                bOx && bOx['ao'] && (this['loadTexture'](bOz, bOv + '_ao', bOx, 'aoMap'),
                bOz['aoMapIntensity'] = 1.3),
                bOx && bOx['normal'] && this['loadTexture'](bOz, bOv + '_n', bOx, 'normalMap'),
                'default' == bOv && (bOz['vertexColors'] = bOw['VertexColors']),
                bOx && bOx['noFog'] && (bOz['fog'] = !0x1),
                bOz['shading'] = bOw['SmoothShading'],
                bOO[bOy] = bOz,
                bOx['pulsT'] && this['pulsMats']['push']({
                    'mat': bOz,
                    'pul': bOx['pulsT']
                })),
                bOz;
            }
            ,
            this['genColorCube'] = function(bOv, bOx, bOy, bOz, bOA, bOB) {
                for (var bOF = (bOB = bOB || {})['us'] ? 'us' : 'ns', bOH = 0x0; bOH < bOz['length']; ++bOH) {
                    for (var bOI = 0x0; bOI < bOz[bOH]['length']; ++bOI)
                        bOF += bOz[bOH][bOI] + '_';
                    bOF += '|';
                }
                var bOJ = bON[bOF];
                if (!bOJ) {
                    bOJ = new bOw['Geometry']();
                    var bOK = 0.5 + (bOA || 0x0);
                    for (bOH = 0x0; bOH < bOz['length']; ++bOH) {
                        var bOL = bOz[bOH][0x1]
                          , bOM = bOz[bOH][0x2] || 0x1;
                        if (bOB['us']) {
                            bOO = bOG['generateCube']([0x1, 0x1, 0x1, 0x1, 0x1, 0x1], 0x1, 0x1, 0x1, {
                                'colr': bOz[bOH][0x0],
                                'fAmb': bOz[bOH][0x4],
                                'amb': bOz[bOH][0x3]
                            });
                            (bOP = new bOw['Mesh'](bOO))['scale']['set'](bOM, bOL, bOM),
                            this['moveMesh'](bOP, 0x0, bOK - bOL, 0x0);
                        } else {
                            var bOO = new bOw['BoxGeometry'](bOM,bOL,bOM);
                            bOG['colorize'](bOO, bOz[bOH][0x0]),
                            bOP = new bOw['Mesh'](bOO),
                            this['moveMesh'](bOP, 0x0, bOK - bOL / 0x2, 0x0);
                        }
                        this['merge'](bOJ, bOP),
                        bOK -= bOL;
                    }
                    bON[bOF] = bOJ;
                }
                var bOP = new bOw['Mesh'](bOJ,this['getMat']('default'));
                return this['scaleMesh'](bOP, bOv, bOx, bOy),
                bOP;
            }
            ;
            var bPQ = {};
            this['genBody'] = function(bOv, bOx, bOy, bOz, bOB) {
                var bOF = bOv + '-' + bOx + '-' + bOy + '-' + bOz
                  , bOG = bPQ[bOF];
                if (!bOG) {
                    bOG = new bOw['Geometry']();
                    var bOH = bOA['playerHeight'] - bOA['headScale'] - bOA['legHeight']
                      , bOI = this['genColorCube'](bOA['chestWidth'], bOH, bOA['chestScale'], [[bOv, 0.8, 0x1, 0.8], [bOx, 0.2, 1.05]], 0x0, {
                        'us': bOB
                    });
                    this['moveMesh'](bOI, 0x0, bOH / 0x2, 0x0),
                    this['merge'](bOG, bOI);
                    var bOJ = this['genColorCube'](bOA['headScale'], bOA['headScale'], bOA['headScale'], [[bOy, 0.2, 0x1, 0.6], [bOz, 0.8]], 0x0, {
                        'us': bOB
                    });
                    this['moveMesh'](bOJ, 0x0, bOA['playerHeight'] - bOA['headScale'] / 0x2 - bOA['legHeight'], 0x0),
                    this['merge'](bOG, bOJ),
                    bOG = new bOw['BufferGeometry']()['fromGeometry'](bOG),
                    bPQ[bOF] = bOG;
                }
                var bOK = new bOw['Mesh'](bOG,this['getMat']('default'));
                return bOK['receiveShadow'] = !0x0,
                bOK['noGreen'] = !0x0,
                bOK;
            }
            ;
            var bQ2 = {};
            this['genLeg'] = function(bOv, bOx, bOy, bOz, bOB) {
                var bOF = bOA['legScale']
                  , bOG = null;
                if (bOz) {
                    var bOH = bOx + '-' + (bOz || '');
                    if (!(bOG = bQ2[bOH])) {
                        var bOI = bOA['legHeight'] / 0x2
                          , bOJ = bOF / 0x2
                          , bOK = [0.5, 0x2]
                          , bOL = this['genColorCube'](bOF, bOI, bOF, [[bOx, 0x1]], 0x0, {
                            'us': bOB
                        });
                        this['moveMesh'](bOL, 0x0, -bOI / 0x2 * Math['cos'](bOK[0x1]), -bOI / 0x2 * Math['sin'](bOK[0x1])),
                        this['rotateMesh'](bOL, 0x0, bOK[0x1], 0x0);
                        var bOM = Math['sqrt'](bOJ * bOJ + bOJ * bOJ - 0x2 * bOJ * bOJ * Math['cos'](bOK[0x0] - bOK[0x1]))
                          , bON = 0x2 * Math['sqrt'](bOJ * bOJ - bOM / 0x2 * (bOM / 0x2))
                          , bOO = this['genColorCube'](bOF, bOM, bON, [[bOx, 0x1]], 0x0, {
                            'us': bOB
                        });
                        this['moveMesh'](bOO, 0x0, -bOI * Math['cos'](bOK[0x1]), -bOI * Math['sin'](bOK[0x1])),
                        this['rotateMesh'](bOO, 0x0, (bOK[0x1] + bOK[0x0]) / 0x2, 0x0);
                        var bOP = this['genColorCube'](bOF, bOI, bOF, [[bOx, 0.5, 0x1, 0.8], [bOy, 0.5]], 0x0, {
                            'us': bOB
                        });
                        this['moveMesh'](bOP, 0x0, -bOI * Math['cos'](bOK[0x1]) - bOI / 0x2 * Math['cos'](bOK[0x0]), -bOI * Math['sin'](bOK[0x1]) - bOI / 0x2 * Math['sin'](bOK[0x0])),
                        this['rotateMesh'](bOP, 0x0, bOK[0x0], 0x0);
                        bOG = new bOw['Geometry']();
                        this['merge'](bOG, bOL),
                        this['merge'](bOG, bOO),
                        this['merge'](bOG, bOP),
                        bQ2[bOH] = bOG;
                    }
                    bOG = new bOw['BufferGeometry']()['fromGeometry'](bOG),
                    bOG = new bOw['Mesh'](bOG,this['getMat']('default')),
                    this['moveMesh'](bOG, bOA['legScale'] / 0x2 * (bOv ? -0x1 : 0x1), bOA['legHeight'] - bOA['crouchDst'] + 0.5, 0x0);
                } else
                    bOG = this['genColorCube'](bOF, bOA['legHeight'], bOF, [[bOx, 0.75, 0x1], [bOy, 0.25]], -0.5, {
                        'us': bOB
                    }),
                    this['moveMesh'](bOG, bOA['legScale'] / 0x2 * (bOv ? -0x1 : 0x1), bOA['legHeight'], 0x0);
                return bOG['receiveShadow'] = !0x0,
                bOG['noGreen'] = !0x0,
                bOG;
            }
            ;
            var bQj = {};
            this['genArms'] = function(bOv, bOx, bOy, bOz, bOB, bOF) {
                var bOG = bQj[bOv['name'] + '-' + bOy + '-' + bOz + '-' + bOF + '-' + (bOB || 0x0)];
                if (!bOG) {
                    bOG = new bOw['Geometry']();
                    var bOH = (-bOA['chestWidth'] + bOA['armScale'] / 0x2 - bOA['armInset']) * (bOF ? bOv['holdW'] || 0.4 : 0x1);
                    bOB && 0x1 != bOB || this['merge'](bOG, this['genArm'](bOH, bOA['armOff'], bOv, !0x0, bOx, bOy, bOz, bOF)),
                    bOB && 0x2 != bOB || this['merge'](bOG, this['genArm'](-bOH, bOA['armOff'], bOv, !0x1, bOx, bOy, bOz, bOF)),
                    bOG = new bOw['BufferGeometry']()['fromGeometry'](bOG),
                    bQj[bOv['name'] + '-' + bOy + '-' + bOF + '-' + (bOB || 0x0)] = bOG;
                }
                return (bOG = new bOw['Mesh'](bOG,this['getMat']('default')))['position']['z'] += bOF && bOv['hDstOff'] || 0x0,
                bOG['noGreen'] = !0x0,
                bOG['receiveShadow'] = !0x0,
                bOG;
            }
            ,
            this['genArm'] = function(bOv, bOx, bOy, bOB, bOF, bOG, bOH, bOI) {
                var bOJ = bOB ? bOy['leftHoldY'] : bOy['rightHoldY']
                  , bOK = bOB ? bOy['leftHoldZ'] : bOy['rightHoldZ'];
                bOK += bOI && bOy['hDstOff'] || 0x0;
                var bOL = bOB ? bOy['leftHoldX'] || 0x0 : bOy['rightHoldX'] || 0x0
                  , bOM = bOA['armScale'] * (bOI ? 0.7 : 0x1)
                  , bON = Math['min'](bOA['uArmLength'] + bOA['lArmLength'] - 0.01, bOz['getDistance3D'](bOv, bOx, 0x0, (bOy['xOff'] - bOL) * (bOB && bOy['akimbo'] ? -0x1 : 0x1), bOy['yOff'] + bOJ, bOy['zOff'] - bOK))
                  , bOO = bOz['getAnglesSSS'](bON, bOA['uArmLength'], bOA['lArmLength'])
                  , bOP = Math['PI'] / 0x2;
                if (!bOI) {
                    var bOQ = this['genColorCube'](bOM, bOA['uArmLength'], bOM, [[bOF, 0x1]], 0x0, {
                        'us': bOI
                    });
                    this['moveMesh'](bOQ, 0x0, -bOA['uArmLength'] / 0x2 * Math['cos'](bOP), -bOA['uArmLength'] / 0x2 * Math['sin'](bOP)),
                    this['rotateMesh'](bOQ, 0x0, bOP, 0x0);
                    var bOR = bOM / 0x2
                      , bOS = Math['sqrt'](bOR * bOR + bOR * bOR - 0x2 * bOR * bOR * Math['cos'](Math['PI'] + bOO[0x0] + Math['PI'] / 0x2))
                      , bOT = 0x2 * Math['sqrt'](bOR * bOR - bOS / 0x2 * (bOS / 0x2))
                      , bOV = this['genColorCube'](bOM, bOS, bOT, [[bOF, 0x1]], 0x0, {
                        'us': bOI
                    });
                    this['moveMesh'](bOV, 0x0, -bOA['uArmLength'] * Math['cos'](bOP), -bOA['uArmLength'] * Math['sin'](bOP)),
                    this['rotateMesh'](bOV, 0x0, (bOP + bOO[0x0]) / 0x2, 0x0);
                }
                var bPa = this['genColorCube'](bOM, bOA['lArmLength'], bOM, [[bOF, 0.65, 0x1, 0.6], [bOG, 0.15, 1.1], [bOH, 0.2, 0x1, 0.5, !0x0]], 0x0, {
                    'us': bOI
                })
                  , bPb = bOA['lArmLength'] / 0x2;
                this['moveMesh'](bPa, 0x0, -bOA['uArmLength'] * Math['cos'](bOP) - bPb * Math['cos'](bOO[0x0]), -bOA['uArmLength'] * Math['sin'](bOP) - bPb * Math['sin'](bOO[0x0])),
                this['rotateMesh'](bPa, 0x0, bOO[0x0], 0x0);
                var bPQ = new bOw['Geometry']();
                if (bOI) {
                    var bQ2 = this['genColorCube'](bOM, 0x14, bOM, [[bOF, 0x1]], 0x0, {
                        'us': bOI
                    });
                    this['moveMesh'](bQ2, 0x0, -bOA['uArmLength'] * Math['cos'](bOP) - -0xa * Math['cos'](bOO[0x0]), -bOA['uArmLength'] * Math['sin'](bOP) - -0xa * Math['sin'](bOO[0x0])),
                    this['rotateMesh'](bQ2, 0x0, bOO[0x0], 0x0),
                    this['merge'](bPQ, bQ2);
                } else
                    this['merge'](bPQ, bOQ),
                    this['merge'](bPQ, bOV);
                return this['merge'](bPQ, bPa),
                bPQ = new bOw['Mesh'](bPQ),
                this['moveMesh'](bPQ, bOv - bOy['xOff'], bOx - bOy['yOff'], -bOy['zOff']),
                bPQ['rotation']['order'] = 'YXZ',
                bPQ['rotation']['x'] = -bOO[0x1] - bOz['getDirection'](0x0, bOx, bOy['zOff'] - bOK, bOy['yOff'] + bOJ),
                bPQ['rotation']['y'] = bOz['getDirection'](-bOv, 0x0, (bOB && bOy['akimbo'] ? 0x1 : -0x1) * (bOy['xOff'] - bOL), bOy['zOff'] - bOK) - Math['PI'] / 0x2,
                bPQ;
            }
            ,
            this['addCube'] = function(bOv, bOx, bOy, bOz, bOA, bOB, bOF, bOH) {
                bOH = bOH || {};
                var bOI = new bOw['Mesh'](bOG['generateCube'](bOF, bOz, bOA, bOB, bOH));
                return this['moveMesh'](bOI, bOv, bOx, bOy),
                bOI['rotation']['set'](bOH['yR'] || 0x0, bOH['xR'] || 0x0, bOH['zR'] || 0x0),
                bOI['scale']['set'](bOz, bOA, bOB),
                bOH['src'] && !bOH['noGroup'] ? this['meshGroup'](bOI, bOH) : this['add'](bOI, bOH),
                bOI;
            }
            ;
            var bQZ = [];
            this['addSpray'] = function(bOv, bOx, bOy, bOB, bOF, bOG, bOH, bOI) {
                bOQ = null;
                for (var bOK = 0x0; bOK < bQZ['length']; ++bOK)
                    if (bQZ[bOK]['sid'] == bOv) {
                        bOQ = bQZ[bOK];
                        break;
                    }
                bOQ || ((bOQ = new bOw['Mesh'](bOJ))['sid'] = bOv,
                bOQ['scale']['set'](bOA['sprayScale'], bOA['sprayScale'], 0x1),
                bOQ['receiveShadow'] = !0x0,
                bQZ['push'](bOQ),
                this['add'](bOQ)),
                this['moveMesh'](bOQ, bOy, bOB, bOF),
                bOQ['rotation']['y'] = bOz['toRad'](bOG),
                bOQ['rotation']['x'] = bOz['toRad'](bOH),
                bOQ['material'] = this['getMat']('sprays/' + bOx, {
                    'depthWrite': !0x1,
                    'opacity': bOI,
                    'transparent': !0x0
                });
            }
            ,
            this['clearSprays'] = function() {
                for (var bOv = 0x0; bOv < bQZ['length']; ++bOv)
                    bQZ[bOv] && bQZ[bOv]['material']['map'] && bQZ[bOv]['material']['map']['dispose'](),
                    this['scene']['remove'](bQZ[bOv]);
                bQZ['length'] = 0x0;
            }
            ,
            this['addPlane'] = function(bOv, bOx, bOy, bOz, bOA, bOB, bOF, bOH, bOI) {
                (bOB = bOB || {})['premultipliedAlpha'] = !0x0;
                var bOJ = new bOw['Mesh'](bOG['generatePlane'](bOA, bOz, bOB, bOv, bOx, bOy));
                return bOB['euler'] && (bOJ['rotation']['order'] = bOB['euler']),
                this['moveMesh'](bOJ, bOv, bOx, bOy),
                bOJ['rotateY'](bOF || 0x0),
                bOJ['rotateX']((bOH || 0x0) - Math['PI'] / 0x2),
                bOJ['rotateZ'](bOI || 0x0),
                bOJ['scale']['set'](0x2 * bOz, 0x2 * bOA, 0x1),
                bOB['dontAdd'] ? bOB['src'] && (bOJ['material'] = this['getMat'](bOB['src'], bOB)) : bOB['src'] && !bOB['noGroup'] ? this['meshGroup'](bOJ, bOB, 0x1) : this['add'](bOJ, bOB),
                bOJ;
            }
            ,
            this['addRamp'] = function(bOv, bOx, bOy, bOz, bOA, bOB, bOF, bOH, bOI) {
                bOH = bOH || {};
                var bOJ = new bOw['Mesh'](bOG['generatePlane'](0x2 * bOB, bOz, bOH));
                this['moveMesh'](bOJ, bOv, bOx + bOA / 0x2, bOy),
                bOB *= 0x2;
                var bOK = Math['sqrt'](bOA * bOA + bOB * bOB);
                return bOJ['scale']['set'](bOz, bOK, 0x2),
                bOJ['rotateY'](-Math['PI'] / 0x2 - bOF),
                bOJ['rotateX'](Math['asin'](bOA / bOK) - Math['PI'] / 0x2),
                bOJ['rotateZ'](bOI || 0x0),
                bOH['src'] ? this['meshGroup'](bOJ, bOH, 0x1) : this['add'](bOJ, bOH),
                bOJ;
            }
            ,
            this['addGrass'] = function(bOv, bOx, bOy, bOz, bOA, bOB, bOF) {
                bOF = bOF || {};
                let bOH = new bOw['Geometry']()
                  , bOI = 0x2 * Math['PI'] * Math['random']()
                  , bOJ = new bOw['Mesh'](bOG['generatePlane'](bOz, bOA, bOF));
                bOJ['rotateY'](bOI * (Math['PI'] / 0x2)),
                this['merge'](bOH, bOJ);
                let bOK = new bOw['Mesh'](bOG['generatePlane'](bOz, bOA, bOF));
                bOK['rotateY']((bOI + 0x1) * (Math['PI'] / 0x2)),
                this['merge'](bOH, bOK);
                let bOL = new bOw['Mesh'](bOH);
                return this['moveMesh'](bOL, bOv, bOx + bOA / 0x2, bOy),
                bOL['rotation']['set'](bOF['yR'] || 0x0, bOF['xR'] || 0x0, bOF['zR'] || 0x0),
                bOL['scale']['set'](bOz, bOA, bOB),
                bOF['src'] && !bOF['noGroup'] ? this['meshGroup'](bOL, bOF) : this['add'](bOL, bOF),
                bOL;
            }
            ;
            var bRH = []
              , bRI = [];
            this['loadMesh'] = function(bOv, bOx, bOy, bOA, bOB, bOF, bOG, bOH) {
                var bOJ = this['getMat'](bOv['src'], bOv)
                  , bOK = bRH[bOv['src']];
                if (bOK) {
                    if (bOv['centerZ']) {
                        bOK['computeBoundingBox']();
                        var bOL = bOK['boundingBox']['getCenter']();
                        bOG['translateZ'](bOL['x'] * bOF);
                    }
                } else
                    bOK = bOH ? new bOw['Geometry']() : new bOw['BufferGeometry'](),
                    bRH[bOv['src']] = bOK,
                    bOI['load'](bOz['versionifyUrl']('/models/' + bOv['src'] + '.obj'), function(bOx) {
                        if (bOK['copy'](bOH ? new bOw['Geometry']()['fromBufferGeometry'](bOx['children'][0x0]['geometry']) : bOx['children'][0x0]['geometry']),
                        bOv['uv2'] && bOK['addAttribute']('uv2', new bOw['BufferAttribute'](bOK['attributes']['uv']['array'],0x2)),
                        bOH) {
                            for (var bOy = new bOw['Geometry'](), bOz = 0x0; bOz < bRI[bOv['src']]['length']; ++bOz)
                                bOR['merge'](bOy, bRI[bOv['src']][bOz]);
                            bOR['add'](new bOw['Mesh'](new bOw['BufferGeometry']()['fromGeometry'](bOy),bOJ), bOv),
                            bRI[bOv['src']]['length'] = 0x0,
                            bRI[bOv['src']]['loaded'] = !0x0;
                        }
                        if (bOv['centerZ']) {
                            bOK['computeBoundingBox']();
                            var bOA = bOK['boundingBox']['getCenter']();
                            bOG['translateZ'](bOA['x'] * bOF);
                        }
                    });
                var bOM = new bOw['Mesh'](bOK,bOJ);
                return bOM['receiveShadow'] = !bOv['noShadow'],
                bOM['noGreen'] = bOv['noGreen'],
                bOM['castShadow'] = bOv['shadows'],
                'object' == typeof bOB ? (bOM['rotation']['x'] = bOM['xR'] = bOB[0x0] || 0x0,
                bOM['rotation']['y'] = bOM['yR'] = bOB[0x1] || 0x0,
                bOM['rotation']['z'] = bOM['zR'] = bOB[0x2] || 0x0) : bOM['rotation']['y'] = bOB || 0x0,
                bOM['xP'] = bOx,
                bOM['yP'] = bOy,
                bOM['zP'] = bOA,
                bOR['moveMesh'](bOM, bOx, bOy, bOA),
                bOR['scaleMesh'](bOM, bOF || 0x1, bOF || 0x1, bOF || 0x1),
                bOH ? bRI[bOv['src']] ? bRI[bOv['src']]['loaded'] ? this['meshGroup'](bOM, bOv) : bRI[bOv['src']]['push'](bOM) : bRI[bOv['src']] = [bOM] : bOG['add'](bOM),
                bOM;
            }
            ,
            this['clearPendingMeshes'] = function() {
                for (var bOv in bRI)
                    bRI['hasOwnProperty'](bOv) && bRI[bOv] && (bRI[bOv]['length'] = 0x0);
            }
            ,
            this['updateMesh'] = function(bOv, bOx) {
                var bOy = bOI['parse'](bOx)
                  , bOz = new bOw['BufferGeometry']();
                bRH[bOv] = bOz,
                bOz['copy'](bOy['children'][0x0]['geometry']),
                bOz['needsUpdate'] = !0x0;
            }
            ,
            this['genObj3D'] = function(bOv, bOx, bOy) {
                var bOz = new bOw['Object3D']();
                return this['moveMesh'](bOz, bOv || 0x0, bOx || 0x0, bOy || 0x0),
                bOz;
            }
            ,
            this['merge'] = function(bOv, bOw, bOx) {
                bOw['updateMatrix'](),
                bOv['merge'](bOw['geometry'], bOw['matrix'], bOx);
            }
            ,
            this['meshGroup'] = function(bOv, bOx) {
                var bOy = bOx['src'] + '-' + (bOx['shadowsR'] || 'a') + (bOx['emissive'] || 'e') + (bOx['opacity'] || 'o') + (null == bOx['movT'] ? 'mt' : bOx['movT']) + (null == bOx['movD'] ? 'md' : bOx['movD']);
                bOS[bOy] || (bOS[bOy] = new bOw['Geometry'](),
                bOS[bOy]['data'] = bOx),
                bOv['updateMatrix'](),
                bOS[bOy]['merge'](bOv['geometry'], bOv['matrix']);
            }
            ,
            this['addMeshGroups'] = function() {
                for (var bOv in bOS)
                    if (bOS['hasOwnProperty'](bOv)) {
                        var bOx = new bOw['Mesh'](new bOw['BufferGeometry']()['fromGeometry'](bOS[bOv]));
                        bOx['groupSrc'] = bOS[bOv]['data']['src'],
                        bOx['visible'] = !bSg[bOx['groupSrc']],
                        bOx['matrixAutoUpdate'] = !0x1,
                        this['add'](bOx, bOS[bOv]['data']);
                    }
                bOS = {};
            }
            ;
            var bSg = {};
            this['toggleMeshGroup'] = function(bOv, bOx) {
                bSg[bOv] = !bOx,
                this['scene'] && this['scene']['traverse'](function(bOy) {
                    bOy instanceof bOw['Mesh'] && bOy['groupSrc'] == bOv && (bOy['visible'] = bOx);
                });
            }
            ,
            this['add'] = function(bOv, bOw) {
                bOw && (bOv['castShadow'] = bOw['shadows'],
                bOv['receiveShadow'] = bOw['shadows'] || bOw['shadowsR'],
                bOv['material'] = this['getMat'](bOw['src'], bOw)),
                this['updateGreenScreen'](bOv),
                this['scene']['add'](bOv),
                this['updateShadowMap']();
            }
            ,
            this['remove'] = function(bOv) {
                this['scene']['remove'](bOv);
            }
            ,
            this['moveMesh'] = function(bOv, bOw, bOx, bOy) {
                bOv && (null != bOw && (bOv['position']['x'] = bOw),
                null != bOx && (bOv['position']['y'] = bOx),
                null != bOy && (bOv['position']['z'] = bOy));
            }
            ,
            this['scaleMesh'] = function(bOv, bOw, bOx, bOy) {
                bOv['scale']['set'](bOw, bOx, bOy);
            }
            ,
            this['rotateMesh'] = function(bOv, bOw, bOx, bOy) {
                bOv && ((bOw || 0x0 == bOw) && (bOv['rotation']['y'] = bOw),
                (bOx || 0x0 == bOx) && (bOv['rotation']['x'] = bOx),
                (bOy || 0x0 == bOy) && (bOv['rotation']['z'] = bOy));
            }
            ,
            this['reset'] = function() {
                bRH = [],
                bRI = [],
                bOS = {},
                bOO = {},
                bOP = {},
                this['movTextures'] = [],
                this['pulsMats'] = [],
                this['pulsVal'] = 0x0;
            }
            ;
        }
        ,
        bOv['exports']['initScene'] = function(bOv) {
            if (bOy = bOv,
            bOv['ambient'] && (this['ambientLight'] = new bOA['AmbientLight'](bOv['ambient']),
            this['ambientLight']['layers']['enable'](0x1),
            this['ambientLight']['layers']['enable'](0x2),
            this['ambientLight']['name'] = 'ambLight',
            !this['scene']['getObjectByName']('ambLight') && this['scene']['add'](this['ambientLight'])),
            bOv['light']) {
                this['skyLight'] = new bOA['DirectionalLight'](bOv['light'],1.3),
                this['skyLight']['name'] = 'skyLight',
                this['skyLight']['layers']['enable'](0x1),
                this['skyLight']['layers']['enable'](0x2),
                this['scene']['getObjectByName']('skyLight') || this['scene']['add'](this['skyLight']);
                var bOw = -0.3 * Math['PI']
                  , bOx = 0x2 * Math['PI'] * -0.25;
                this['skyLight']['position']['x'] = bOz['lightDistance'] * Math['cos'](bOx),
                this['skyLight']['position']['y'] = bOz['lightDistance'] * Math['sin'](bOx) * Math['sin'](bOw),
                this['skyLight']['position']['z'] = bOz['lightDistance'] * Math['sin'](bOx) * Math['cos'](bOw),
                this['skyLight']['castShadow'] = !0x0,
                this['skyLight']['shadow']['mapSize']['width'] = bOv['shadowR'] || bOz['shadowRes'],
                this['skyLight']['shadow']['mapSize']['height'] = bOv['shadowR'] || bOz['shadowRes'],
                this['skyLight']['shadow']['camera']['far'] = bOz['shadowDst'];
            }
            this['scene']['fog'] = new bOA['Fog'](bOv['fog'],0x1,bOv['fogD']),
            this['renderer']['setClearColor'](bOv['sky']),
            this['useDepthMap'] && '0' != this['useDepthMap'] && this['toggleDepthMap'](this['useDepthMap']),
            this['greenScreen'] && this['toggleGreenscreen'](this['greenScreen']);
        }
        ;
    }
    , function(bSC, bSD, bSE) {
        const bSF = bSE(0x4)
          , bSG = new bSF['MeshBasicMaterial']({
            'color': 0xffffff,
            'flatShading': !0x1,
            'vertexColors': bSF['VertexColors'],
            'side': bSF['BackSide']
        })
          , bSH = 0x20
          , bSI = !0x0
          , bSJ = 'y'
          , bSK = [{
            'stp': 0x0,
            'col': null
        }, {
            'stp': 0.5,
            'col': null
        }, {
            'stp': 0x1,
            'col': null
        }];
        class bSL extends bSF['Object3D'] {
            static['fromConfig'](bSC) {
                return new bSL(bSC['skyDomeCol0'],bSC['skyDomeCol1'],bSC['skyDomeCol2']);
            }
            constructor(bSC, bSD, bSE) {
                super(),
                bSK[0x0]['col'] = new bSF['Color'](bSC || '#3FB1B7'),
                bSK[0x1]['col'] = new bSF['Color'](bSD || '#6FE1CD'),
                bSK[0x2]['col'] = new bSF['Color'](bSE || '#FFFFFF');
                let bSL = new bSF['SphereGeometry'](0x32,bSH,bSH);
                bSL['computeBoundingBox']();
                let bSR = bSL['boundingBox']
                  , bSS = new bSF['Vector3']()['subVectors'](bSR['max'], bSR['min'])
                  , bST = ['a', 'b', 'c']
                  , bSU = new bSF['Vector3']()
                  , bSV = 0x0;
                for (let bSC, bSD = 0x0; bSD < bSK['length'] - 0x1; bSD++) {
                    bSC = bSK[bSD + 0x1]['stp'] - bSK[bSD]['stp'];
                    for (let bSE, bSF = 0x0; bSF < bSL['faces']['length']; bSF++) {
                        bSE = bSL['faces'][bSF];
                        for (var bT0 = 0x0; 0x3 > bT0; bT0++)
                            bSV = bSU['subVectors'](bSL['vertices'][bSE[bST[bT0]]], bSR['min'])['divide'](bSS)[bSJ],
                            bSI && (bSV = 0x1 - bSV),
                            bSV >= bSK[bSD]['stp'] && bSV <= bSK[bSD + 0x1]['stp'] && (bSE['vertexColors'][bT0] = bSK[bSD]['col']['clone']()['lerp'](bSK[bSD + 0x1]['col'], (bSV - bSK[bSD]['stp']) / bSC));
                    }
                }
                bSL['computeVertexNormals'](!0x0),
                bSL['computeFaceNormals'](),
                this['baseMesh'] = new bSF['Mesh'](bSL,bSG),
                this['baseMesh']['doubleSided'] = !0x1,
                this['add'](this['baseMesh']);
            }
        }
        bSC['exports'] = bSL;
    }
    , function(bT1, bT2, bT3) {
        const bT4 = bT3(0x4)
          , bT5 = (bT3(0x8),
        bT3(0x43))
          , bT6 = bT3(0x44)['easing'];
        let bT7, bT8 = 'undefined' != typeof location;
        bT8 && (bT7 = new bT4['StrippedLambertMaterial']({
            'color': 0x8c8c8c,
            'flatShading': !0x1,
            'vertexColors': bT4['VertexColors']
        }));
        const bT9 = {
            'GRASS': 0x0,
            'MOUNTAIN': 0x1
        }
          , bTa = Object['keys'](bT9)['length']
          , bTb = {
            [bT9['GRASS']]: [0x38, 0xe2, 0x66],
            [bT9['MOUNTAIN']]: [0xa0, 0xa0, 0xa0]
        }
          , bTc = {
            'DIRT': [0x8c, 0x68, 0x35],
            'GRASS': [0x9b, 0xba, 0x2e],
            'MOUNTAIN': [0xa0, 0xa0, 0xa0]
        }
          , bTd = bT1=>bT1['replace'](/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (bT1,bT2,bT3,bT4)=>'#' + bT2 + bT2 + bT3 + bT3 + bT4 + bT4)['substring'](0x1)['match'](/.{2}/g)['map'](bT1=>parseInt(bT1, 0x10))
          , bTe = 0x3c
          , bTf = 0x3;
        class bTm extends bT4['Object3D'] {
            static['fromConfig'](bT1) {
                return new bTm(bT1['terrainSeed'],bT1['terrainWidth'],bT1['terrainHeight'],bT1['sizeMlt'],bT1['terrainMntMlt'],bT1['terrainDrtCol'],bT1['terrainGrsCol'],bT1['terrainMntCol']);
            }
            constructor(bT1, bT2, bT3, bT6, bT9, bTb, bTm, bTv) {
                super(),
                bT6 = bTf,
                this['sizeMlt'] = bT6,
                this['sizeX'] = bT2,
                this['sizeY'] = bT3,
                this['edgeSize'] = 0x1f4,
                this['mntMlt'] = bT9,
                bTc['DIRT'] = bTd(bTb),
                bTc['MOUNTAIN'] = bTd(bTv),
                bTc['GRASS'] = bTd(bTm),
                this['simplex'] = new bT5(bT1);
                let bTw = Math['floor'](bT2 / bTe)
                  , bTx = Math['floor'](bT3 / bTe);
                this['xSegmentCount'] = bTw,
                this['ySegmentCount'] = bTx;
                let bTy = bT2 / bTw
                  , bTz = bT3 / bTx;
                this['xSegmentSize'] = bTy,
                this['ySegmentSize'] = bTz;
                let bTA = new bT4['BufferGeometry']()
                  , bTB = bTw * bTx * 0x6
                  , bTC = new bT4['BufferAttribute'](new Float32Array(0x3 * bTB),0x3);
                bTA['addAttribute']('position', bTC);
                let bTD = new bT4['BufferAttribute'](new Uint8Array(0x3 * bTB),0x3,!0x0);
                bTA['addAttribute']('color', bTD),
                this['vertPositions'] = bTC,
                this['terrainPoints'] = (bTw + 0x1) * (bTx + 0x1),
                this['terrainHeights'] = new Float32Array(this['terrainPoints']),
                this['terrainBiomes'] = new Float32Array(this['terrainPoints'] * bTa);
                for (let bT1 = 0x0; bT1 < bTw + 0x1; bT1++)
                    for (let bT4 = 0x0; bT4 < bTx + 0x1; bT4++) {
                        let bT5 = bT1 + bT4 * (bTw + 0x1)
                          , bT6 = this['_vertPos'](bT1, bTy, bT2)
                          , bT7 = this['_vertPos'](bT4, bTz, bT3)
                          , [bT8,bT9] = this['evaluate'](bT6, bT7);
                        this['terrainHeights'][bT5] = bT8,
                        this['terrainBiomes']['set'](bT9, bT5 * bTa);
                    }
                for (let bT1 = 0x0; bT1 < bTw; bT1++)
                    for (let bT4 = 0x0; bT4 < bTx; bT4++) {
                        let bT5 = 0x6 * (bT1 + bT4 * bTw)
                          , bT6 = this['_vertPos'](bT1, bTy, bT2)
                          , bT7 = this['_vertPos'](bT4, bTz, bT3)
                          , bT8 = [bT6, bT7, this['terrainHeight'](bT1, bT4)]
                          , bT9 = [bT6 + bTy, bT7, this['terrainHeight'](bT1 + 0x1, bT4)]
                          , bTa = [bT6 + bTy, bT7 + bTz, this['terrainHeight'](bT1 + 0x1, bT4 + 0x1)]
                          , bTb = [bT6, bT7 + bTz, this['terrainHeight'](bT1, bT4 + 0x1)]
                          , bTc = this['calcAOWeight'](bT1, bT4)
                          , bTd = this['calcAOWeight'](bT1 + 0x1, bT4)
                          , bTe = this['calcAOWeight'](bT1 + 0x1, bT4 + 0x1)
                          , bTf = this['calcAOWeight'](bT1, bT4 + 0x1);
                        bTC['setXYZ'](bT5, ...bT8),
                        bTC['setXYZ'](bT5 + 0x1, ...bT9),
                        bTC['setXYZ'](bT5 + 0x2, ...bTa),
                        bTC['setXYZ'](bT5 + 0x3, ...bTa),
                        bTC['setXYZ'](bT5 + 0x4, ...bTb),
                        bTC['setXYZ'](bT5 + 0x5, ...bT8);
                        let bTm = this['_centroid3D'](bT8, bT9, bTa)
                          , bTv = this['_centroid3D'](bTa, bTb, bT8)
                          , bTx = this['_normal3D'](bT8, bT9, bTa)
                          , bTA = this['_normal3D'](bTa, bTb, bT8)
                          , bTB = this['terrainBiomeAt'](bTm)
                          , bU3 = this['terrainBiomeAt'](bTv)
                          , bU4 = this['evaluateColor'](bTm, bTx, bTB)
                          , bU5 = this['evaluateColor'](bTv, bTA, bU3);
                        bTD['setXYZ'](bT5, ...this['_weightColor'](bU4, bTc)),
                        bTD['setXYZ'](bT5 + 0x1, ...this['_weightColor'](bU4, bTd)),
                        bTD['setXYZ'](bT5 + 0x2, ...this['_weightColor'](bU4, bTe)),
                        bTD['setXYZ'](bT5 + 0x3, ...this['_weightColor'](bU5, bTe)),
                        bTD['setXYZ'](bT5 + 0x4, ...this['_weightColor'](bU5, bTf)),
                        bTD['setXYZ'](bT5 + 0x5, ...this['_weightColor'](bU5, bTc));
                    }
                bT8 && (bTA['computeVertexNormals'](!0x0),
                bTA['computeFaceNormals'](),
                this['baseMesh'] = new bT4['Mesh'](bTA,bT7),
                this['baseMesh']['receiveShadow'] = !0x0,
                this['baseMesh']['scale']['set'](bT6, bT6, 0x1),
                this['add'](this['baseMesh'])),
                this['_raycastRay'] = new bT4['Ray'](),
                this['_raycastTriA'] = new bT4['Vector3'](),
                this['_raycastTriB'] = new bT4['Vector3'](),
                this['_raycastTriC'] = new bT4['Vector3'](),
                this['_raycastTriangle'] = new bT4['Triangle'](),
                this['_raycastNormal'] = new bT4['Vector3'](),
                this['_raycastTarget'] = new bT4['Vector3'](),
                this['_raycastClosestTarget'] = new bT4['Vector3']();
            }
            ['terrainIndex'](bT1, bT2) {
                let bT3 = bT1 + bT2 * (this['xSegmentCount'] + 0x1);
                return 0x0 > bT3 || bT3 >= this['terrainHeights']['length'] ? 0x0 : bT3;
            }
            ['terrainHeight'](bT1, bT2) {
                return this['terrainHeights'][this['terrainIndex'](bT1, bT2)];
            }
            ['terrainBiome'](bT1, bT2) {
                let bT3 = this['terrainIndex'](bT1, bT2) * bTa;
                return this['terrainBiomes']['slice'](bT3, bT3 + bTa);
            }
            ['terrainBiomeAt'](bT1, bT2) {
                let bT3 = Math['floor'](bT1 / this['xSegmentSize'])
                  , bT4 = Math['ceil'](bT1 / this['xSegmentSize'])
                  , bT5 = Math['floor'](bT2 / this['ySegmentSize'])
                  , bT6 = Math['ceil'](bT2 / this['ySegmentSize']);
                return (this['terrainBiome'](bT3, bT5) + this['terrainBiome'](bT4, bT5) + this['terrainBiome'](bT3, bT6) + this['terrainBiome'](bT4, bT6)) / 0x4;
            }
            ['calcAOWeight'](bT1, bT2) {
                let bT3 = this['_vertPos'](bT1, this['xSegmentSize'], this['sizeX'])
                  , bT4 = this['_vertPos'](bT2, this['ySegmentSize'], this['sizeY'])
                  , bT5 = this['_topAngleOnTerrain'](bT3 - this['xSegmentSize'], this['terrainHeight'](bT1 - 0x1, bT2), bT3, this['terrainHeight'](bT1, bT2), bT3 + this['xSegmentSize'], this['terrainHeight'](bT1 + 0x1, bT2))
                  , bT6 = this['_topAngleOnTerrain'](bT4 - this['xSegmentSize'], this['terrainHeight'](bT1, bT2 - 0x1), bT4, this['terrainHeight'](bT1, bT2), bT4 + this['ySegmentSize'], this['terrainHeight'](bT1, bT2 + 0x1))
                  , bT7 = Math['PI']
                  , bT8 = 0x1 - (0x1 - Math['max'](bT7 - bT5, 0x0) / bT7) * (0x1 - Math['max'](bT7 - bT6, 0x0) / bT7);
                return 0.5 <= bT8 ? bT8 = 0.65 : 0.2 <= bT8 ? bT8 = 0.3 : 0.1 <= bT8 && (bT8 = 0.25),
                bT8;
            }
            ['_worldToLocal'](bT1, bT2, bT3) {
                return (bT1 + bT2 / 0x2) / bT3;
            }
            ['raycast'](bT1, bT2, bT3, bT4, bT5, bT6, bT7=!0x1) {
                bT1 /= this['sizeMlt'],
                bT2 /= this['sizeMlt'],
                bT4 /= this['sizeMlt'],
                bT5 /= this['sizeMlt'];
                let bT8 = Math['sqrt'](bT4 * bT4 + bT5 * bT5 + bT6 * bT6);
                this['_raycastRay']['origin']['set'](bT1, bT2, bT3),
                this['_raycastRay']['direction']['set'](bT4, bT5, bT6);
                let bT9, bTa, bTb, bTc = this['_worldToLocal'](bT1, this['sizeX'], this['xSegmentSize']), bTd = this['_worldToLocal'](bT2, this['sizeY'], this['ySegmentSize']), bTe = bTc + bT4 / this['xSegmentSize'], bTf = bTd + bT5 / this['ySegmentSize'], bTm = Math['abs'](bTe - bTc), bUL = Math['abs'](bTf - bTd), bUM = Math['floor'](bTc), bUN = Math['floor'](bTd), bUO = 0x1;
                for (0x0 == bTm ? (bT9 = 0x0,
                bTb = Number['POSITIVE_INFINITY']) : bTe > bTc ? (bT9 = 0x1,
                bUO += Math['floor'](bTe) - bUM,
                bTb = (Math['floor'](bTc) + 0x1 - bTc) * bUL) : (bT9 = -0x1,
                bUO += bUM - Math['floor'](bTe),
                bTb = (bTc - Math['floor'](bTc)) * bUL),
                0x0 == bUL ? (bTa = 0x0,
                bTb -= Number['POSITIVE_INFINITY']) : bTf > bTd ? (bTa = 0x1,
                bUO += Math['floor'](bTf) - bUN,
                bTb -= (Math['floor'](bTd) + 0x1 - bTd) * bTm) : (bTa = -0x1,
                bUO += bUN - Math['floor'](bTf),
                bTb -= (bTd - Math['floor'](bTd)) * bTm); 0x0 < bUO; bUO--) {
                    if (this['_raycastVisit'](bUM, bUN, bT1, bT2, bT3, bT4, bT5, bT6, bT8, bT7)) {
                        let bT1 = this['_raycastClosestTarget'];
                        return bT1['x'] *= this['sizeMlt'],
                        bT1['y'] *= this['sizeMlt'],
                        bT1;
                    }
                    0x0 < bTb ? (bUN += bTa,
                    bTb -= bTm) : (bUM += bT9,
                    bTb += bUL);
                }
            }
            ['_raycastVisit'](bT1, bT2, bT3, bT4, bT5, bT6, bT7, bT8, bT9, bTa) {
                let bTb = bT1 + bT2 * this['xSegmentCount']
                  , bTc = Number['POSITIVE_INFINITY']
                  , bTd = !0x1;
                for (let bT1, bT2 = 0x0; 0x2 > bT2; bT2++) {
                    bT1 = 0x6 * bTb + 0x3 * bT2,
                    this['_raycastTriA']['set'](this['vertPositions']['getX'](bT1), this['vertPositions']['getY'](bT1), this['vertPositions']['getZ'](bT1)),
                    this['_raycastTriB']['set'](this['vertPositions']['getX'](bT1 + 0x1), this['vertPositions']['getY'](bT1 + 0x1), this['vertPositions']['getZ'](bT1 + 0x1)),
                    this['_raycastTriC']['set'](this['vertPositions']['getX'](bT1 + 0x2), this['vertPositions']['getY'](bT1 + 0x2), this['vertPositions']['getZ'](bT1 + 0x2));
                    let bT3 = this['_raycastRay']['intersectTriangle'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC'], !0x0, this['_raycastTarget']);
                    if (bT3) {
                        let bT1 = bT3['distanceTo'](this['_raycastRay']['origin']);
                        bT1 < bTc && bT1 < bT9 && (bTc = bT1,
                        bTd = !0x0,
                        this['_raycastClosestTarget']['copy'](bT3),
                        this['_raycastTriangle']['set'](this['_raycastTriA'], this['_raycastTriB'], this['_raycastTriC']));
                    }
                }
                return bTa && bTd && this['_raycastTriangle']['getNormal'](this['_raycastNormal']),
                bTd;
            }
            ['evaluate'](bT1, bT2) {
                let bT3 = 0x0;
                this['sampleIndex'] = 0x0;
                let bT4 = [];
                for (let bT3 = 0x0; bT3 < bTa; bT3++)
                    bT4['push'](this['_sample'](bT1, bT2, 0x514));
                let bT5 = bT4['reduce']((bT1,bT2)=>bT1 + bT2, 0x0);
                bT4 = (bT4 = bT4['map']((bT1,bT2)=>[bT2, bT1 / bT5]))['sort']((bT1,bT2)=>bT2[0x1] - bT1[0x1]);
                let bT6 = {}
                  , [bT7,bT8] = bT4[0x0];
                bT6[bT7] = this['_easeTerrain'](bT8 / (bT8 + bT4[0x1][0x1]));
                for (let bT1 = 0x1; bT1 < bT4['length']; bT1++) {
                    let[bT2,bT3] = bT4[bT1];
                    bT6[bT2] = this['_easeTerrain'](bT3 / (bT8 + bT3));
                }
                let bTb = this['_sample'](bT1, bT2, 0x12c);
                bT3 += 0x19 * (bTb = Math['floor'](0x3 * bTb) / 0x3) * bT6[bT9['GRASS']] * this['sizeMlt'];
                let bTc = 0.4 + 0.3 * this['_sample'](bT1, bT2, 0xc8);
                bT3 += (0x1 - 0x2 * Math['abs'](bTc - this['_sample'](bT1, bT2, 0x1f4))) * (0.4 + 1.4 * this['_sample'](bT1, bT2, 0x190)) * (0xdc * this['mntMlt']) * bT6[bT9['MOUNTAIN']] * this['sizeMlt'];
                let bTd = this['_calcEdgeFade'](bT1, this['sizeX']) * this['_calcEdgeFade'](bT2, this['sizeY']);
                return bT3 *= bTd,
                bT3 += 0x7d0 * (bTd - 0x1),
                (Math['abs'](bT1) >= this['sizeX'] / 0x2 || Math['abs'](bT2) >= this['sizeY'] / 0x2) && (bT3 = -0x3e8),
                [bT3, bT6];
            }
            ['evaluateColor'](bT1, bT2, bT3) {
                let bT4, bT5 = bT1[0x2], bT6 = Math['atan2'](Math['abs'](bT2[0x0]), Math['abs'](bT2[0x2])), bT7 = Math['atan2'](Math['abs'](bT2[0x1]), Math['abs'](bT2[0x2]));
                return bT4 = 0.85 >= (0x1 - bT6 / (0x2 * Math['PI'])) * (0x1 - bT7 / (0x2 * Math['PI'])) ? bTc['MOUNTAIN'] : 0x64 < bT5 ? bTc['MOUNTAIN'] : 0x5 < bT5 ? bTc['GRASS'] : bTc['DIRT'];
            }
            ['_sample'](bT1, bT2, bT3) {
                return this['sampleIndex']++,
                this['simplex']['noise3D'](bT1 / bT3, bT2 / bT3, 0x2710 * this['sampleIndex']) / 0x2 + 0.5;
            }
            ['_easeTerrain'](bT1) {
                return bT6['easeInOutQuint'](bT6['easeInOutQuint'](bT1));
            }
            ['_calcEdgeFade'](bT1, bT2) {
                if (Math['abs'](bT1) >= bT2 / 0x2)
                    return 0x0;
                let bT3 = (Math['abs'](bT1) - bT2 / 0x2 + this['edgeSize']) / this['edgeSize'];
                return bT3 = 0x1 - Math['max'](bT3, 0x0),
                bT6['easeOutQuint'](bT3);
            }
            ['_blendColors'](bT1) {
                let bT2 = Object['values'](bT1)['reduce']((bT1,bT2)=>bT1 + bT2, 0x0)
                  , bT3 = [0x0, 0x0, 0x0];
                for (let bT4 in bT1) {
                    let bT5 = bTb[bT4]
                      , bT6 = bT1[bT4] / bT2;
                    for (let bT1 = 0x0; 0x3 > bT1; bT1++)
                        bT3[bT1] += bT5[bT1] * bT6;
                }
                return bT3;
            }
            ['_vertPos'](bT1, bT2, bT3) {
                return bT1 * bT2 - bT3 / 0x2;
            }
            ['_avgPos'](bT1, bT2) {
                return [(bT1[0x0] + bT2[0x0]) / 0x2, (bT1[0x1] + bT2[0x1]) / 0x2, (bT1[0x2] + bT2[0x2]) / 0x2];
            }
            ['_centroid3D'](bT1, bT2, bT3) {
                return [(bT1[0x0] + bT2[0x0] + bT3[0x0]) / 0x3, (bT1[0x1] + bT2[0x1] + bT3[0x1]) / 0x3, (bT1[0x2] + bT2[0x2] + bT3[0x2]) / 0x3];
            }
            ['_normal3D'](bT1, bT2, bT3) {
                let bT4 = bT3[0x0] - bT2[0x0]
                  , bT5 = bT3[0x1] - bT2[0x1]
                  , bT6 = bT3[0x2] - bT2[0x2]
                  , bT7 = bT1[0x0] - bT2[0x0]
                  , bT8 = bT1[0x1] - bT2[0x1]
                  , bT9 = bT1[0x2] - bT2[0x2]
                  , bTa = bT5 * bT9 - bT6 * bT8
                  , bTb = bT6 * bT7 - bT4 * bT9
                  , bTc = bT4 * bT8 - bT5 * bT7
                  , bTd = Math['sqrt'](bTa * bTa + bTb * bTb + bTc + bTc);
                return [bTa / bTd, bTb / bTd, bTc / bTd];
            }
            ['_topAngleOnTerrain'](bT1, bT2, bT3, bT4, bT5, bT6) {
                let bT7 = Math['atan2'](bT2 - bT4, bT1 - bT3)
                  , bT8 = Math['atan2'](bT6 - bT4, bT5 - bT3);
                return 0x0 > bT7 && (bT7 += 0x2 * Math['PI']),
                bT7 - bT8;
            }
            ['_weightColor'](bT1, bT2) {
                return bT1['map'](bT1=>bT1 * (0x1 - bT2));
            }
        }
        bT1['exports'] = bTm;
    }
    , function(bWl, bWm, bWn) {
        const bWo = bWn(0x4)
          , bWp = bWn(0x8)
          , bWq = 0x20;
        var bWr, bWs;
        const bWt = !0x0
          , bWu = 'y'
          , bWv = [{
            'stp': 0x0,
            'col': null
        }, {
            'stp': 0.5,
            'col': null
        }, {
            'stp': 0x1,
            'col': null
        }]
          , bWw = 2.5
          , bWx = 0x3e8;
        class bWy extends bWo['Object3D'] {
            static['fromConfig'](bWl, bWm) {
                return new bWy(bWl['zoneSize'],bWl['zoneSpeed'],bWl['zoneCol0'],bWl['zoneCol1'],bWl['zoneCol2'],bWm);
            }
            constructor(bWl, bWm, bWn, bWx, bWy, bWG) {
                if (super(),
                this['_size'] = bWl || 0x32,
                this['_shrink'] = bWw * (bWm || 0x1),
                bWG) {
                    bWr || (bWr = new bWo['TextureLoader']()['load'](bWp['versionifyUrl']('/textures/zone_0.png'), bWl=>{
                        bWl['wrapS'] = bWo['RepeatWrapping'],
                        bWl['wrapT'] = bWo['RepeatWrapping'],
                        bWl['minFilter'] = bWo['NearestFilter'],
                        bWl['magFilter'] = bWo['NearestFilter'],
                        bWl['repeat']['set'](0x14, 0x14),
                        bWl['needsUpdate'] = !0x0;
                    }
                    )),
                    bWs || (bWs = new bWo['MeshBasicMaterial']({
                        'color': 0xffffff,
                        'depthWrite': !0x1,
                        'flatShading': !0x1,
                        'map': bWr,
                        'vertexColors': bWo['VertexColors'],
                        'side': bWo['DoubleSide'],
                        'transparent': !0x0,
                        'opacity': 0.5
                    })),
                    bWv[0x0]['col'] = new bWo['Color'](bWn || '#3FB1B7'),
                    bWv[0x1]['col'] = new bWo['Color'](bWx || '#6FE1CD'),
                    bWv[0x2]['col'] = new bWo['Color'](bWy || '#FFFFFF');
                    let bWl = new bWo['SphereGeometry'](0x1,bWq,bWq);
                    bWl['computeBoundingBox']();
                    let bWm = bWl['boundingBox']
                      , bWw = new bWo['Vector3']()['subVectors'](bWm['max'], bWm['min'])
                      , bWG = ['a', 'b', 'c']
                      , bWM = new bWo['Vector3']()
                      , bWN = 0x0;
                    for (let bWn, bWo = 0x0; bWo < bWv['length'] - 0x1; bWo++) {
                        bWn = bWv[bWo + 0x1]['stp'] - bWv[bWo]['stp'];
                        for (let bWp, bWq = 0x0; bWq < bWl['faces']['length']; bWq++) {
                            bWp = bWl['faces'][bWq];
                            for (var bWS = 0x0; 0x3 > bWS; bWS++)
                                bWN = bWM['subVectors'](bWl['vertices'][bWp[bWG[bWS]]], bWm['min'])['divide'](bWw)[bWu],
                                bWt && (bWN = 0x1 - bWN),
                                bWN >= bWv[bWo]['stp'] && bWN <= bWv[bWo + 0x1]['stp'] && (bWp['vertexColors'][bWS] = bWv[bWo]['col']['clone']()['lerp'](bWv[bWo + 0x1]['col'], (bWN - bWv[bWo]['stp']) / bWn));
                        }
                    }
                    bWl['computeVertexNormals'](!0x0),
                    bWl['computeFaceNormals'](),
                    this['baseMesh'] = new bWo['Mesh'](bWl,bWs);
                }
                this['reset'](),
                bWG && this['add'](this['baseMesh']);
            }
            ['shrink']() {
                0x0 >= this['scale']['x'] ? this['visible'] = !0x1 : (this['scale']['x'] -= this['_shrink'],
                this['scale']['z'] -= this['_shrink']);
            }
            ['animate'](bWl) {
                this['baseMesh'] && this['baseMesh']['material']['map'] && (this['baseMesh']['material']['map']['offset']['y'] += 0.00003 * bWl);
            }
            ['update'](bWl) {
                this['scale']['set'](bWl['x'], bWx, bWl['z']),
                0x0 >= this['scale']['x'] && (this['visible'] = !0x1);
            }
            ['reset']() {
                this['scale']['set'](this['_size'], bWx, this['_size']),
                this['visible'] = !0x0;
            }
            ['isOutside'](bWl) {
                return bWp['getDistance'](bWl['x'], bWl['z'], this['position']['x'], this['position']['z']) > this['scale']['x'];
            }
        }
        bWl['exports'] = bWy;
    }
    , , function(bWW, bWX, bWY) {
        bWY(0x48);
    }
    , function(bWZ, bX0) {
        bWZ['exports'] = function(bWZ) {
            if (!bWZ['webpackPolyfill']) {
                var bX0 = Object['create'](bWZ);
                bX0['children'] || (bX0['children'] = []),
                Object['defineProperty'](bX0, 'loaded', {
                    'enumerable': !0x0,
                    'get': function() {
                        return bX0['l'];
                    }
                }),
                Object['defineProperty'](bX0, 'id', {
                    'enumerable': !0x0,
                    'get': function() {
                        return bX0['i'];
                    }
                }),
                Object['defineProperty'](bX0, 'exports', {
                    'enumerable': !0x0
                }),
                bX0['webpackPolyfill'] = 0x1;
            }
            return bX0;
        }
        ;
    }
    , function(bX3, bX4) {
        bX3['exports'] = function(bX3) {
            return function() {
                function bX4() {
                    var bX3 = {
                        'objects': [],
                        'object': {},
                        'vertices': [],
                        'normals': [],
                        'colors': [],
                        'uvs': [],
                        'materialLibraries': [],
                        'startObject': function(bX3, bX4) {
                            if (this['object'] && !0x1 === this['object']['fromDeclaration'])
                                return this['object']['name'] = bX3,
                                void (this['object']['fromDeclaration'] = !0x1 !== bX4);
                            var bXa = this['object'] && 'function' == typeof this['object']['currentMaterial'] ? this['object']['currentMaterial']() : void 0x0;
                            if (this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0),
                            this['object'] = {
                                'name': bX3 || '',
                                'fromDeclaration': !0x1 !== bX4,
                                'geometry': {
                                    'vertices': [],
                                    'normals': [],
                                    'colors': [],
                                    'uvs': []
                                },
                                'materials': [],
                                'smooth': !0x0,
                                'startMaterial': function(bX3, bX4) {
                                    var bXa = this['_finalize'](!0x1);
                                    bXa && (bXa['inherited'] || 0x0 >= bXa['groupCount']) && this['materials']['splice'](bXa['index'], 0x1);
                                    var bXe = {
                                        'index': this['materials']['length'],
                                        'name': bX3 || '',
                                        'mtllib': Array['isArray'](bX4) && 0x0 < bX4['length'] ? bX4[bX4['length'] - 0x1] : '',
                                        'smooth': void 0x0 === bXa ? this['smooth'] : bXa['smooth'],
                                        'groupStart': void 0x0 === bXa ? 0x0 : bXa['groupEnd'],
                                        'groupEnd': -0x1,
                                        'groupCount': -0x1,
                                        'inherited': !0x1,
                                        'clone': function(bX3) {
                                            var bX4 = {
                                                'index': 'number' == typeof bX3 ? bX3 : this['index'],
                                                'name': this['name'],
                                                'mtllib': this['mtllib'],
                                                'smooth': this['smooth'],
                                                'groupStart': 0x0,
                                                'groupEnd': -0x1,
                                                'groupCount': -0x1,
                                                'inherited': !0x1
                                            };
                                            return bX4['clone'] = this['clone']['bind'](bX4),
                                            bX4;
                                        }
                                    };
                                    return this['materials']['push'](bXe),
                                    bXe;
                                },
                                'currentMaterial': function() {
                                    return 0x0 < this['materials']['length'] ? this['materials'][this['materials']['length'] - 0x1] : void 0x0;
                                },
                                '_finalize': function(bX3) {
                                    var bX4 = this['currentMaterial']();
                                    if (bX4 && -0x1 === bX4['groupEnd'] && (bX4['groupEnd'] = this['geometry']['vertices']['length'] / 0x3,
                                    bX4['groupCount'] = bX4['groupEnd'] - bX4['groupStart'],
                                    bX4['inherited'] = !0x1),
                                    bX3 && 0x1 < this['materials']['length'])
                                        for (var bXa = this['materials']['length'] - 0x1; 0x0 <= bXa; bXa--)
                                            0x0 >= this['materials'][bXa]['groupCount'] && this['materials']['splice'](bXa, 0x1);
                                    return bX3 && 0x0 === this['materials']['length'] && this['materials']['push']({
                                        'name': '',
                                        'smooth': this['smooth']
                                    }),
                                    bX4;
                                }
                            },
                            bXa && bXa['name'] && 'function' == typeof bXa['clone']) {
                                var bXk = bXa['clone'](0x0);
                                bXk['inherited'] = !0x0,
                                this['object']['materials']['push'](bXk);
                            }
                            this['objects']['push'](this['object']);
                        },
                        'finalize': function() {
                            this['object'] && 'function' == typeof this['object']['_finalize'] && this['object']['_finalize'](!0x0);
                        },
                        'parseVertexIndex': function(bX3, bX4) {
                            var bXn = parseInt(bX3, 0xa);
                            return 0x3 * (0x0 <= bXn ? bXn - 0x1 : bXn + bX4 / 0x3);
                        },
                        'parseNormalIndex': function(bX3, bX4) {
                            var bXq = parseInt(bX3, 0xa);
                            return 0x3 * (0x0 <= bXq ? bXq - 0x1 : bXq + bX4 / 0x3);
                        },
                        'parseUVIndex': function(bX3, bX4) {
                            var bXt = parseInt(bX3, 0xa);
                            return 0x2 * (0x0 <= bXt ? bXt - 0x1 : bXt + bX4 / 0x2);
                        },
                        'addVertex': function(bX3, bX4, bXw) {
                            var bXx = this['vertices']
                              , bXy = this['object']['geometry']['vertices'];
                            bXy['push'](bXx[bX3 + 0x0], bXx[bX3 + 0x1], bXx[bX3 + 0x2]),
                            bXy['push'](bXx[bX4 + 0x0], bXx[bX4 + 0x1], bXx[bX4 + 0x2]),
                            bXy['push'](bXx[bXw + 0x0], bXx[bXw + 0x1], bXx[bXw + 0x2]);
                        },
                        'addVertexPoint': function(bX3) {
                            var bX4 = this['vertices'];
                            this['object']['geometry']['vertices']['push'](bX4[bX3 + 0x0], bX4[bX3 + 0x1], bX4[bX3 + 0x2]);
                        },
                        'addVertexLine': function(bX3) {
                            var bX4 = this['vertices'];
                            this['object']['geometry']['vertices']['push'](bX4[bX3 + 0x0], bX4[bX3 + 0x1], bX4[bX3 + 0x2]);
                        },
                        'addNormal': function(bX3, bX4, bXF) {
                            var bXG = this['normals']
                              , bXH = this['object']['geometry']['normals'];
                            bXH['push'](bXG[bX3 + 0x0], bXG[bX3 + 0x1], bXG[bX3 + 0x2]),
                            bXH['push'](bXG[bX4 + 0x0], bXG[bX4 + 0x1], bXG[bX4 + 0x2]),
                            bXH['push'](bXG[bXF + 0x0], bXG[bXF + 0x1], bXG[bXF + 0x2]);
                        },
                        'addColor': function(bX3, bX4, bXK) {
                            var bXL = this['colors']
                              , bXM = this['object']['geometry']['colors'];
                            bXM['push'](bXL[bX3 + 0x0], bXL[bX3 + 0x1], bXL[bX3 + 0x2]),
                            bXM['push'](bXL[bX4 + 0x0], bXL[bX4 + 0x1], bXL[bX4 + 0x2]),
                            bXM['push'](bXL[bXK + 0x0], bXL[bXK + 0x1], bXL[bXK + 0x2]);
                        },
                        'addUV': function(bX3, bX4, bXP) {
                            var bXQ = this['uvs']
                              , bXR = this['object']['geometry']['uvs'];
                            bXR['push'](bXQ[bX3 + 0x0], bXQ[bX3 + 0x1]),
                            bXR['push'](bXQ[bX4 + 0x0], bXQ[bX4 + 0x1]),
                            bXR['push'](bXQ[bXP + 0x0], bXQ[bXP + 0x1]);
                        },
                        'addUVLine': function(bX3) {
                            var bX4 = this['uvs'];
                            this['object']['geometry']['uvs']['push'](bX4[bX3 + 0x0], bX4[bX3 + 0x1]);
                        },
                        'addFace': function(bX3, bX4, bXW, bXX, bXY, bXZ, bY0, bY1, bY2) {
                            var bY3 = this['vertices']['length']
                              , bY4 = this['parseVertexIndex'](bX3, bY3)
                              , bY5 = this['parseVertexIndex'](bX4, bY3)
                              , bY6 = this['parseVertexIndex'](bXW, bY3);
                            if (this['addVertex'](bY4, bY5, bY6),
                            void 0x0 !== bXX && '' !== bXX) {
                                var bY7 = this['uvs']['length'];
                                bY4 = this['parseUVIndex'](bXX, bY7),
                                bY5 = this['parseUVIndex'](bXY, bY7),
                                bY6 = this['parseUVIndex'](bXZ, bY7),
                                this['addUV'](bY4, bY5, bY6);
                            }
                            if (void 0x0 !== bY0 && '' !== bY0) {
                                var bY8 = this['normals']['length'];
                                bY4 = this['parseNormalIndex'](bY0, bY8),
                                bY5 = bY0 === bY1 ? bY4 : this['parseNormalIndex'](bY1, bY8),
                                bY6 = bY0 === bY2 ? bY4 : this['parseNormalIndex'](bY2, bY8),
                                this['addNormal'](bY4, bY5, bY6);
                            }
                            0x0 < this['colors']['length'] && this['addColor'](bY4, bY5, bY6);
                        },
                        'addPointGeometry': function(bX3) {
                            this['object']['geometry']['type'] = 'Points';
                            for (var bX4 = this['vertices']['length'], bYb = 0x0, bYc = bX3['length']; bYb < bYc; bYb++)
                                this['addVertexPoint'](this['parseVertexIndex'](bX3[bYb], bX4));
                        },
                        'addLineGeometry': function(bX3, bX4) {
                            this['object']['geometry']['type'] = 'Line';
                            for (var bYf = this['vertices']['length'], bYg = this['uvs']['length'], bYh = 0x0, bYi = bX3['length']; bYh < bYi; bYh++)
                                this['addVertexLine'](this['parseVertexIndex'](bX3[bYh], bYf));
                            var bYj = 0x0;
                            for (bYi = bX4['length']; bYj < bYi; bYj++)
                                this['addUVLine'](this['parseUVIndex'](bX4[bYj], bYg));
                        }
                    };
                    return bX3['startObject']('', !0x1),
                    bX3;
                }
                function bYk(bX4) {
                    this['manager'] = void 0x0 === bX4 ? bX3['DefaultLoadingManager'] : bX4,
                    this['materials'] = null;
                }
                var bYm = /^[og]\s*(.+)?/
                  , bYn = /^mtllib /
                  , bYo = /^usemtl /;
                return bYk['prototype'] = {
                    'constructor': bYk,
                    'load': function(bX4, bYk, bYm, bYn) {
                        var bYo = this
                          , bYu = new bX3['FileLoader'](bYo['manager']);
                        bYu['setPath'](this['path']),
                        bYu['load'](bX4, function(bX3) {
                            bYk(bYo['parse'](bX3));
                        }, bYm, bYn);
                    },
                    'setPath': function(bX3) {
                        return this['path'] = bX3,
                        this;
                    },
                    'setMaterials': function(bX3) {
                        return this['materials'] = bX3,
                        this;
                    },
                    'parse': function(bYk) {
                        console['time']('OBJLoader');
                        var bYz = new bX4();
                        -0x1 !== bYk['indexOf']('\x0d\x0a') && (bYk = bYk['replace'](/\r\n/g, '\x0a')),
                        -0x1 !== bYk['indexOf']('\x5c\x0a') && (bYk = bYk['replace'](/\\\n/g, ''));
                        for (var bYA = bYk['split']('\x0a'), bYB = '', bYC = '', bYD = [], bYE = 'function' == typeof ''['trimLeft'], bYF = 0x0, bYG = bYA['length']; bYF < bYG; bYF++)
                            if (bYB = bYA[bYF],
                            0x0 !== (bYB = bYE ? bYB['trimLeft']() : bYB['trim']())['length'] && '#' !== (bYC = bYB['charAt'](0x0)))
                                if ('v' === bYC) {
                                    var bYH = bYB['split'](/\s+/);
                                    switch (bYH[0x0]) {
                                    case 'v':
                                        bYz['vertices']['push'](parseFloat(bYH[0x1]), parseFloat(bYH[0x2]), parseFloat(bYH[0x3])),
                                        0x7 <= bYH['length'] && bYz['colors']['push'](parseFloat(bYH[0x4]), parseFloat(bYH[0x5]), parseFloat(bYH[0x6]));
                                        break;
                                    case 'vn':
                                        bYz['normals']['push'](parseFloat(bYH[0x1]), parseFloat(bYH[0x2]), parseFloat(bYH[0x3]));
                                        break;
                                    case 'vt':
                                        bYz['uvs']['push'](parseFloat(bYH[0x1]), parseFloat(bYH[0x2]));
                                    }
                                } else if ('f' === bYC) {
                                    for (var bYI, bYJ = bYB['substr'](0x1)['trim']()['split'](/\s+/), bYK = [], bYL = 0x0, bYM = bYJ['length']; bYL < bYM; bYL++)
                                        if (0x0 < (bYI = bYJ[bYL])['length']) {
                                            var bYN = bYI['split']('/');
                                            bYK['push'](bYN);
                                        }
                                    var bYO = bYK[0x0];
                                    for (bYL = 0x1,
                                    bYM = bYK['length'] - 0x1; bYL < bYM; bYL++) {
                                        var bYP = bYK[bYL]
                                          , bYQ = bYK[bYL + 0x1];
                                        bYz['addFace'](bYO[0x0], bYP[0x0], bYQ[0x0], bYO[0x1], bYP[0x1], bYQ[0x1], bYO[0x2], bYP[0x2], bYQ[0x2]);
                                    }
                                } else if ('l' === bYC) {
                                    var bYR = bYB['substring'](0x1)['trim']()['split']('\x20')
                                      , bYS = []
                                      , bYT = [];
                                    if (-0x1 === bYB['indexOf']('/'))
                                        bYS = bYR;
                                    else
                                        for (var bYU, bYV = 0x0, bYW = bYR['length']; bYV < bYW; bYV++)
                                            '' !== (bYU = bYR[bYV]['split']('/'))[0x0] && bYS['push'](bYU[0x0]),
                                            '' !== bYU[0x1] && bYT['push'](bYU[0x1]);
                                    bYz['addLineGeometry'](bYS, bYT);
                                } else if ('p' === bYC) {
                                    var bYX = bYB['substr'](0x1)['trim']()['split']('\x20');
                                    bYz['addPointGeometry'](bYX);
                                } else if (null !== (bYD = bYm['exec'](bYB))) {
                                    var bYY = ('\x20' + bYD[0x0]['substr'](0x1)['trim']())['substr'](0x1);
                                    bYz['startObject'](bYY);
                                } else if (bYo['test'](bYB))
                                    bYz['object']['startMaterial'](bYB['substring'](0x7)['trim'](), bYz['materialLibraries']);
                                else if (bYn['test'](bYB))
                                    bYz['materialLibraries']['push'](bYB['substring'](0x7)['trim']());
                                else {
                                    if ('s' !== bYC) {
                                        if ('' === bYB)
                                            continue;
                                        throw new Error('THREE.OBJLoader:\x20Unexpected\x20line:\x20\x22' + bYB + '\x22');
                                    }
                                    if (0x1 < (bYD = bYB['split']('\x20'))['length']) {
                                        var bYZ = bYD[0x1]['trim']()['toLowerCase']();
                                        bYz['object']['smooth'] = '0' !== bYZ && 'off' !== bYZ;
                                    } else
                                        bYz['object']['smooth'] = !0x0;
                                    (bZd = bYz['object']['currentMaterial']()) && (bZd['smooth'] = bYz['object']['smooth']);
                                }
                        bYz['finalize']();
                        var bZ0 = new bX3['Group']();
                        bZ0['materialLibraries'] = []['concat'](bYz['materialLibraries']);
                        for (bYF = 0x0,
                        bYG = bYz['objects']['length']; bYF < bYG; bYF++) {
                            var bZ1 = bYz['objects'][bYF]
                              , bZ2 = bZ1['geometry']
                              , bZ3 = bZ1['materials']
                              , bZ4 = 'Line' === bZ2['type']
                              , bZ5 = 'Points' === bZ2['type']
                              , bZ6 = !0x1;
                            if (0x0 !== bZ2['vertices']['length']) {
                                var bZ7, bZ8 = new bX3['BufferGeometry']();
                                bZ8['addAttribute']('position', new bX3['Float32BufferAttribute'](bZ2['vertices'],0x3)),
                                0x0 < bZ2['normals']['length'] ? bZ8['addAttribute']('normal', new bX3['Float32BufferAttribute'](bZ2['normals'],0x3)) : bZ8['computeVertexNormals'](),
                                0x0 < bZ2['colors']['length'] && (bZ6 = !0x0,
                                bZ8['addAttribute']('color', new bX3['Float32BufferAttribute'](bZ2['colors'],0x3))),
                                0x0 < bZ2['uvs']['length'] && bZ8['addAttribute']('uv', new bX3['Float32BufferAttribute'](bZ2['uvs'],0x2));
                                for (var bZ9 = [], bZa = 0x0, bZb = bZ3['length']; bZa < bZb; bZa++) {
                                    var bZc = bZ3[bZa]
                                      , bZd = void 0x0;
                                    if (null !== this['materials'])
                                        if (bZd = this['materials']['create'](bZc['name']),
                                        !bZ4 || !bZd || bZd instanceof bX3['LineBasicMaterial']) {
                                            if (bZ5 && bZd && !(bZd instanceof bX3['PointsMaterial'])) {
                                                var bZe = new bX3['PointsMaterial']({
                                                    'size': 0xa,
                                                    'sizeAttenuation': !0x1
                                                });
                                                bZf['copy'](bZd),
                                                bZd = bZe;
                                            }
                                        } else {
                                            var bZf = new bX3['LineBasicMaterial']();
                                            bZf['copy'](bZd),
                                            bZf['lights'] = !0x1,
                                            bZd = bZf;
                                        }
                                    bZd || ((bZd = bZ4 ? new bX3['LineBasicMaterial']() : bZ5 ? new bX3['PointsMaterial']({
                                        'size': 0x1,
                                        'sizeAttenuation': !0x1
                                    }) : new bX3['MeshPhongMaterial']())['name'] = bZc['name']),
                                    bZd['flatShading'] = !bZc['smooth'],
                                    bZd['vertexColors'] = bZ6 ? bX3['VertexColors'] : bX3['NoColors'],
                                    bZ9['push'](bZd);
                                }
                                if (0x1 < bZ9['length']) {
                                    for (bZa = 0x0,
                                    bZb = bZ3['length']; bZa < bZb; bZa++)
                                        bZc = bZ3[bZa],
                                        bZ8['addGroup'](bZc['groupStart'], bZc['groupCount'], bZa);
                                    bZ7 = bZ4 ? new bX3['LineSegments'](bZ8,bZ9) : bZ5 ? new bX3['Points'](bZ8,bZ9) : new bX3['Mesh'](bZ8,bZ9);
                                } else
                                    bZ7 = bZ4 ? new bX3['LineSegments'](bZ8,bZ9[0x0]) : bZ5 ? new bX3['Points'](bZ8,bZ9[0x0]) : new bX3['Mesh'](bZ8,bZ9[0x0]);
                                bZ7['name'] = bZ1['name'],
                                bZ0['add'](bZ7);
                            }
                        }
                        return console['timeEnd']('OBJLoader'),
                        bZ0;
                    }
                },
                bYk;
            }();
        }
        ;
    }
    , function(bZg, bZh) {
        bZg['exports'] = function(bZg) {
            bZg['StrippedLambertMaterial'] = function(bZh) {
                let bZk = new bZg['ShaderMaterial']({
                    'name': 'lambert-stripped',
                    'uniforms': bZg['UniformsUtils']['merge']([bZg['ShaderLib']['lambert']['uniforms']]),
                    'lights': !0x0,
                    'fog': !0x0,
                    'vertexShader': '\x0a#define\x20LAMBERT\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a#include\x20<common>\x0a#include\x20<uv_pars_vertex>\x0a#include\x20<uv2_pars_vertex>\x0a//\x20#include\x20<envmap_pars_vertex>\x0a#include\x20<bsdfs>\x0a#include\x20<lights_pars_begin>\x0a#include\x20<color_pars_vertex>\x0a#include\x20<fog_pars_vertex>\x0a//\x20#include\x20<morphtarget_pars_vertex>\x0a//\x20#include\x20<skinning_pars_vertex>\x0a#include\x20<shadowmap_pars_vertex>\x0a//\x20#include\x20<logdepthbuf_pars_vertex>\x0a//\x20#include\x20<clipping_planes_pars_vertex>\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20#include\x20<uv_vertex>\x0a\x20\x20\x20\x20#include\x20<uv2_vertex>\x0a\x20\x20\x20\x20#include\x20<color_vertex>\x0a\x20\x20\x20\x20#include\x20<beginnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphnormal_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinbase_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<defaultnormal_vertex>\x0a\x20\x20\x20\x20#include\x20<begin_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<morphtarget_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<skinning_vertex>\x0a\x20\x20\x20\x20#include\x20<project_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_vertex>\x0a\x20\x20\x20\x20#include\x20<worldpos_vertex>\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_vertex>\x0a\x20\x20\x20\x20#include\x20<lights_lambert_vertex>\x0a\x20\x20\x20\x20#include\x20<shadowmap_vertex>\x0a\x20\x20\x20\x20#include\x20<fog_vertex>\x0a}\x0a',
                    'fragmentShader': '\x0auniform\x20vec3\x20diffuse;\x0auniform\x20vec3\x20emissive;\x0auniform\x20float\x20opacity;\x0a\x0avarying\x20vec3\x20vLightFront;\x0avarying\x20vec3\x20vIndirectFront;\x0a\x0a#ifdef\x20DOUBLE_SIDED\x0a\x20\x20\x20\x20varying\x20vec3\x20vLightBack;\x0a\x20\x20\x20\x20varying\x20vec3\x20vIndirectBack;\x0a#endif\x0a\x0a\x0a#include\x20<common>\x0a#include\x20<packing>\x0a//\x20#include\x20<dithering_pars_fragment>\x0a#include\x20<color_pars_fragment>\x0a#include\x20<uv_pars_fragment>\x0a#include\x20<uv2_pars_fragment>\x0a#include\x20<map_pars_fragment>\x0a//\x20#include\x20<alphamap_pars_fragment>\x0a#include\x20<aomap_pars_fragment>\x0a#include\x20<lightmap_pars_fragment>\x0a#include\x20<emissivemap_pars_fragment>\x0a//\x20#include\x20<envmap_pars_fragment>\x0a#include\x20<bsdfs>\x20\x20//\x20Shading\x20functions\x0a#include\x20<lights_pars_begin>\x0a#include\x20<fog_pars_fragment>\x0a#include\x20<shadowmap_pars_fragment>\x0a#include\x20<shadowmask_pars_fragment>\x0a//\x20#include\x20<specularmap_pars_fragment>\x0a//\x20#include\x20<logdepthbuf_pars_fragment>\x0a//\x20#include\x20<clipping_planes_pars_fragment>\x0a\x0avoid\x20main()\x20{\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<clipping_planes_fragment>\x0a\x0a\x20\x20\x20\x20vec4\x20diffuseColor\x20=\x20vec4(\x20diffuse,\x20opacity\x20);\x0a\x20\x20\x20\x20ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20totalEmissiveRadiance\x20=\x20emissive;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<logdepthbuf_fragment>\x0a\x20\x20\x20\x20#include\x20<map_fragment>\x0a\x20\x20\x20\x20#include\x20<color_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<alphamap_fragment>\x0a\x20\x20\x20\x20#include\x20<alphatest_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<specularmap_fragment>\x0a\x20\x20\x20\x20#include\x20<emissivemap_fragment>\x0a\x0a\x20\x20\x20\x20//\x20accumulation\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20=\x20getAmbientLightIrradiance(\x20ambientLightColor\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20(\x20gl_FrontFacing\x20)\x20?\x20vIndirectFront\x20:\x20vIndirectBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20vIndirectFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#include\x20<lightmap_fragment>\x0a\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20);\x0a\x0a\x20\x20\x20\x20#ifdef\x20DOUBLE_SIDED\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20(\x20gl_FrontFacing\x20)\x20?\x20vLightFront\x20:\x20vLightBack;\x0a\x0a\x20\x20\x20\x20#else\x0a\x0a\x20\x20\x20\x20\x20\x20\x20\x20reflectedLight.directDiffuse\x20=\x20vLightFront;\x0a\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20*=\x20BRDF_Diffuse_Lambert(\x20diffuseColor.rgb\x20)\x20*\x20getShadowMask();\x0a\x0a\x20\x20\x20\x20//\x20modulation\x0a\x20\x20\x20\x20#include\x20<aomap_fragment>\x0a\x0a\x20\x20\x20\x20vec3\x20outgoingLight\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.indirectDiffuse\x20+\x20totalEmissiveRadiance;\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<envmap_fragment>\x0a\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(\x20outgoingLight,\x20diffuseColor.a\x20);\x0a\x0a\x20\x20\x20\x20//\x20#include\x20<tonemapping_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<encodings_fragment>\x0a\x20\x20\x20\x20#include\x20<fog_fragment>\x0a\x20\x20\x20\x20#include\x20<premultiplied_alpha_fragment>\x0a\x20\x20\x20\x20//\x20#include\x20<dithering_fragment>\x0a}\x0a\x20\x20\x20\x20'
                });
                return Object['assign'](bZk, new bZg['MeshLambertMaterial'](bZh)),
                bZk['isMeshLambertMaterial'] = !0x0,
                bZk['setValues'](bZh),
                bZk;
            }
            ;
        }
        ;
    }
    , function(bZl, bZm, bZn) {
        var bZo;
        !function() {
            'use strict';
            function bZp(bZl) {
                var bZm;
                bZm = 'function' == typeof bZl ? bZl : bZl ? bZz(bZl) : Math['random'],
                this['p'] = bZt(bZm),
                this['perm'] = new Uint8Array(0x200),
                this['permMod12'] = new Uint8Array(0x200);
                for (var bZn = 0x0; 0x200 > bZn; bZn++)
                    this['perm'][bZn] = this['p'][0xff & bZn],
                    this['permMod12'][bZn] = this['perm'][bZn] % 0xc;
            }
            function bZt(bZl) {
                var bZm, bZn = new Uint8Array(0x100);
                for (bZm = 0x0; 0x100 > bZm; bZm++)
                    bZn[bZm] = bZm;
                for (bZm = 0x0; 0xff > bZm; bZm++) {
                    var bZo = bZm + ~~(bZl() * (0x100 - bZm))
                      , bZp = bZn[bZm];
                    bZn[bZm] = bZn[bZo],
                    bZn[bZo] = bZp;
                }
                return bZn;
            }
            function bZz() {
                var bZl = 0x0
                  , bZm = 0x0
                  , bZn = 0x0
                  , bZo = 0x1
                  , bZp = function() {
                    var bZl = 0xefc8249d;
                    return function(bZm) {
                        bZm = bZm['toString']();
                        for (var bZn = 0x0; bZn < bZm['length']; bZn++) {
                            var bZo = 0.02519603282416938 * (bZl += bZm['charCodeAt'](bZn));
                            bZo -= bZl = bZo >>> 0x0,
                            bZl = (bZo *= bZl) >>> 0x0,
                            bZl += 0x100000000 * (bZo -= bZl);
                        }
                        return 2.3283064365386963e-10 * (bZl >>> 0x0);
                    }
                    ;
                }();
                bZl = bZp('\x20'),
                bZm = bZp('\x20'),
                bZn = bZp('\x20');
                for (var bZt = 0x0; bZt < arguments['length']; bZt++)
                    0x0 > (bZl -= bZp(arguments[bZt])) && (bZl += 0x1),
                    0x0 > (bZm -= bZp(arguments[bZt])) && (bZm += 0x1),
                    0x0 > (bZn -= bZp(arguments[bZt])) && (bZn += 0x1);
                return bZp = null,
                function() {
                    var bZp = 0x1fea77 * bZl + 2.3283064365386963e-10 * bZo;
                    return bZl = bZm,
                    bZm = bZn,
                    bZn = bZp - (bZo = 0x0 | bZp);
                }
                ;
            }
            var bZL = 0.5 * (Math['sqrt'](0x3) - 0x1)
              , bZM = (0x3 - Math['sqrt'](0x3)) / 0x6
              , bZN = 0x1 / 0x6
              , bZO = (Math['sqrt'](0x5) - 0x1) / 0x4
              , bZP = (0x5 - Math['sqrt'](0x5)) / 0x14;
            bZp['prototype'] = {
                'grad3': new Float32Array([0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1, 0x0, 0x1, 0x0, 0x1, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, -0x1, 0x0, -0x1, 0x0, 0x1, 0x1, 0x0, -0x1, 0x1, 0x0, 0x1, -0x1, 0x0, -0x1, -0x1]),
                'grad4': new Float32Array([0x0, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x1, 0x0, 0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, 0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, 0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x1, 0x0, 0x1, 0x1, -0x1, 0x0, 0x1, -0x1, 0x1, 0x0, 0x1, -0x1, -0x1, 0x0, -0x1, 0x1, 0x1, 0x0, -0x1, 0x1, -0x1, 0x0, -0x1, -0x1, 0x1, 0x0, -0x1, -0x1, -0x1, 0x0]),
                'noise2D': function(bZl, bZm) {
                    var bZn, bZo, bZp = this['permMod12'], bZt = this['perm'], bZz = this['grad3'], bZN = 0x0, bZO = 0x0, bZP = 0x0, c00 = (bZl + bZm) * bZL, c01 = Math['floor'](bZl + c00), c02 = Math['floor'](bZm + c00), c03 = (c01 + c02) * bZM, c04 = bZl - (c01 - c03), c05 = bZm - (c02 - c03);
                    c04 > c05 ? (bZn = 0x1,
                    bZo = 0x0) : (bZn = 0x0,
                    bZo = 0x1);
                    var c06 = c04 - bZn + bZM
                      , c07 = c05 - bZo + bZM
                      , c08 = c04 - 0x1 + 0x2 * bZM
                      , c09 = c05 - 0x1 + 0x2 * bZM
                      , c0a = 0xff & c01
                      , c0b = 0xff & c02
                      , c0c = 0.5 - c04 * c04 - c05 * c05;
                    if (0x0 <= c0c) {
                        var c0d = 0x3 * bZp[c0a + bZt[c0b]];
                        bZN = (c0c *= c0c) * c0c * (bZz[c0d] * c04 + bZz[c0d + 0x1] * c05);
                    }
                    var c0e = 0.5 - c06 * c06 - c07 * c07;
                    if (0x0 <= c0e) {
                        var c0f = 0x3 * bZp[c0a + bZn + bZt[c0b + bZo]];
                        bZO = (c0e *= c0e) * c0e * (bZz[c0f] * c06 + bZz[c0f + 0x1] * c07);
                    }
                    var c0g = 0.5 - c08 * c08 - c09 * c09;
                    if (0x0 <= c0g) {
                        var c0h = 0x3 * bZp[c0a + 0x1 + bZt[c0b + 0x1]];
                        bZP = (c0g *= c0g) * c0g * (bZz[c0h] * c08 + bZz[c0h + 0x1] * c09);
                    }
                    return 0x46 * (bZN + bZO + bZP);
                },
                'noise3D': function(bZl, bZm, bZn) {
                    var bZo, bZp, bZt, bZz, bZL, bZM, bZO, bZP, c0t, c0u, c0v = this['permMod12'], c0w = this['perm'], c0x = this['grad3'], c0y = (bZl + bZm + bZn) * (0x1 / 0x3), c0z = Math['floor'](bZl + c0y), c0A = Math['floor'](bZm + c0y), c0B = Math['floor'](bZn + c0y), c0C = (c0z + c0A + c0B) * bZN, c0D = bZl - (c0z - c0C), c0E = bZm - (c0A - c0C), c0F = bZn - (c0B - c0C);
                    c0D >= c0E ? c0E >= c0F ? (bZL = 0x1,
                    bZM = 0x0,
                    bZO = 0x0,
                    bZP = 0x1,
                    c0t = 0x1,
                    c0u = 0x0) : c0D >= c0F ? (bZL = 0x1,
                    bZM = 0x0,
                    bZO = 0x0,
                    bZP = 0x1,
                    c0t = 0x0,
                    c0u = 0x1) : (bZL = 0x0,
                    bZM = 0x0,
                    bZO = 0x1,
                    bZP = 0x1,
                    c0t = 0x0,
                    c0u = 0x1) : c0E < c0F ? (bZL = 0x0,
                    bZM = 0x0,
                    bZO = 0x1,
                    bZP = 0x0,
                    c0t = 0x1,
                    c0u = 0x1) : c0D < c0F ? (bZL = 0x0,
                    bZM = 0x1,
                    bZO = 0x0,
                    bZP = 0x0,
                    c0t = 0x1,
                    c0u = 0x1) : (bZL = 0x0,
                    bZM = 0x1,
                    bZO = 0x0,
                    bZP = 0x1,
                    c0t = 0x1,
                    c0u = 0x0);
                    var c0G = c0D - bZL + bZN
                      , c0H = c0E - bZM + bZN
                      , c0I = c0F - bZO + bZN
                      , c0J = c0D - bZP + 0x2 * bZN
                      , c0K = c0E - c0t + 0x2 * bZN
                      , c0L = c0F - c0u + 0x2 * bZN
                      , c0M = c0D - 0x1 + 0.5
                      , c0N = c0E - 0x1 + 0.5
                      , c0O = c0F - 0x1 + 0.5
                      , c0P = 0xff & c0z
                      , c0Q = 0xff & c0A
                      , c0R = 0xff & c0B
                      , c0S = 0.6 - c0D * c0D - c0E * c0E - c0F * c0F;
                    if (0x0 > c0S)
                        bZo = 0x0;
                    else {
                        var c0T = 0x3 * c0v[c0P + c0w[c0Q + c0w[c0R]]];
                        bZo = (c0S *= c0S) * c0S * (c0x[c0T] * c0D + c0x[c0T + 0x1] * c0E + c0x[c0T + 0x2] * c0F);
                    }
                    var c0U = 0.6 - c0G * c0G - c0H * c0H - c0I * c0I;
                    if (0x0 > c0U)
                        bZp = 0x0;
                    else {
                        var c0V = 0x3 * c0v[c0P + bZL + c0w[c0Q + bZM + c0w[c0R + bZO]]];
                        bZp = (c0U *= c0U) * c0U * (c0x[c0V] * c0G + c0x[c0V + 0x1] * c0H + c0x[c0V + 0x2] * c0I);
                    }
                    var c0W = 0.6 - c0J * c0J - c0K * c0K - c0L * c0L;
                    if (0x0 > c0W)
                        bZt = 0x0;
                    else {
                        var c0X = 0x3 * c0v[c0P + bZP + c0w[c0Q + c0t + c0w[c0R + c0u]]];
                        bZt = (c0W *= c0W) * c0W * (c0x[c0X] * c0J + c0x[c0X + 0x1] * c0K + c0x[c0X + 0x2] * c0L);
                    }
                    var c0Y = 0.6 - c0M * c0M - c0N * c0N - c0O * c0O;
                    if (0x0 > c0Y)
                        bZz = 0x0;
                    else {
                        var c0Z = 0x3 * c0v[c0P + 0x1 + c0w[c0Q + 0x1 + c0w[c0R + 0x1]]];
                        bZz = (c0Y *= c0Y) * c0Y * (c0x[c0Z] * c0M + c0x[c0Z + 0x1] * c0N + c0x[c0Z + 0x2] * c0O);
                    }
                    return 0x20 * (bZo + bZp + bZt + bZz);
                },
                'noise4D': function(bZl, bZm, bZn, bZo) {
                    var bZp, bZt, bZz, bZL, bZM, bZN, c1a, c1b, c1c, c1d, c1e, c1f, c1g, c1h, c1i, c1j, c1k, c1l = this['perm'], c1m = this['grad4'], c1n = (bZl + bZm + bZn + bZo) * bZO, c1o = Math['floor'](bZl + c1n), c1p = Math['floor'](bZm + c1n), c1q = Math['floor'](bZn + c1n), c1r = Math['floor'](bZo + c1n), c1s = (c1o + c1p + c1q + c1r) * bZP, c1t = bZl - (c1o - c1s), c1u = bZm - (c1p - c1s), c1v = bZn - (c1q - c1s), c1w = bZo - (c1r - c1s), c1x = 0x0, c1y = 0x0, c1z = 0x0, c1A = 0x0;
                    c1t > c1u ? c1x++ : c1y++,
                    c1t > c1v ? c1x++ : c1z++,
                    c1t > c1w ? c1x++ : c1A++,
                    c1u > c1v ? c1y++ : c1z++,
                    c1u > c1w ? c1y++ : c1A++,
                    c1v > c1w ? c1z++ : c1A++;
                    var c1B = c1t - (bZN = 0x3 <= c1x ? 0x1 : 0x0) + bZP
                      , c1C = c1u - (c1a = 0x3 <= c1y ? 0x1 : 0x0) + bZP
                      , c1D = c1v - (c1b = 0x3 <= c1z ? 0x1 : 0x0) + bZP
                      , c1E = c1w - (c1c = 0x3 <= c1A ? 0x1 : 0x0) + bZP
                      , c1F = c1t - (c1d = 0x2 <= c1x ? 0x1 : 0x0) + 0x2 * bZP
                      , c1G = c1u - (c1e = 0x2 <= c1y ? 0x1 : 0x0) + 0x2 * bZP
                      , c1H = c1v - (c1f = 0x2 <= c1z ? 0x1 : 0x0) + 0x2 * bZP
                      , c1I = c1w - (c1g = 0x2 <= c1A ? 0x1 : 0x0) + 0x2 * bZP
                      , c1J = c1t - (c1h = 0x1 <= c1x ? 0x1 : 0x0) + 0x3 * bZP
                      , c1K = c1u - (c1i = 0x1 <= c1y ? 0x1 : 0x0) + 0x3 * bZP
                      , c1L = c1v - (c1j = 0x1 <= c1z ? 0x1 : 0x0) + 0x3 * bZP
                      , c1M = c1w - (c1k = 0x1 <= c1A ? 0x1 : 0x0) + 0x3 * bZP
                      , c1N = c1t - 0x1 + 0x4 * bZP
                      , c1O = c1u - 0x1 + 0x4 * bZP
                      , c1P = c1v - 0x1 + 0x4 * bZP
                      , c1Q = c1w - 0x1 + 0x4 * bZP
                      , c1R = 0xff & c1o
                      , c1S = 0xff & c1p
                      , c1T = 0xff & c1q
                      , c1U = 0xff & c1r
                      , c1V = 0.6 - c1t * c1t - c1u * c1u - c1v * c1v - c1w * c1w;
                    if (0x0 > c1V)
                        bZp = 0x0;
                    else {
                        var c1W = c1l[c1R + c1l[c1S + c1l[c1T + c1l[c1U]]]] % 0x20 * 0x4;
                        bZp = (c1V *= c1V) * c1V * (c1m[c1W] * c1t + c1m[c1W + 0x1] * c1u + c1m[c1W + 0x2] * c1v + c1m[c1W + 0x3] * c1w);
                    }
                    var c1X = 0.6 - c1B * c1B - c1C * c1C - c1D * c1D - c1E * c1E;
                    if (0x0 > c1X)
                        bZt = 0x0;
                    else {
                        var c1Y = c1l[c1R + bZN + c1l[c1S + c1a + c1l[c1T + c1b + c1l[c1U + c1c]]]] % 0x20 * 0x4;
                        bZt = (c1X *= c1X) * c1X * (c1m[c1Y] * c1B + c1m[c1Y + 0x1] * c1C + c1m[c1Y + 0x2] * c1D + c1m[c1Y + 0x3] * c1E);
                    }
                    var c1Z = 0.6 - c1F * c1F - c1G * c1G - c1H * c1H - c1I * c1I;
                    if (0x0 > c1Z)
                        bZz = 0x0;
                    else {
                        var c20 = c1l[c1R + c1d + c1l[c1S + c1e + c1l[c1T + c1f + c1l[c1U + c1g]]]] % 0x20 * 0x4;
                        bZz = (c1Z *= c1Z) * c1Z * (c1m[c20] * c1F + c1m[c20 + 0x1] * c1G + c1m[c20 + 0x2] * c1H + c1m[c20 + 0x3] * c1I);
                    }
                    var c21 = 0.6 - c1J * c1J - c1K * c1K - c1L * c1L - c1M * c1M;
                    if (0x0 > c21)
                        bZL = 0x0;
                    else {
                        var c22 = c1l[c1R + c1h + c1l[c1S + c1i + c1l[c1T + c1j + c1l[c1U + c1k]]]] % 0x20 * 0x4;
                        bZL = (c21 *= c21) * c21 * (c1m[c22] * c1J + c1m[c22 + 0x1] * c1K + c1m[c22 + 0x2] * c1L + c1m[c22 + 0x3] * c1M);
                    }
                    var c23 = 0.6 - c1N * c1N - c1O * c1O - c1P * c1P - c1Q * c1Q;
                    if (0x0 > c23)
                        bZM = 0x0;
                    else {
                        var c24 = c1l[c1R + 0x1 + c1l[c1S + 0x1 + c1l[c1T + 0x1 + c1l[c1U + 0x1]]]] % 0x20 * 0x4;
                        bZM = (c23 *= c23) * c23 * (c1m[c24] * c1N + c1m[c24 + 0x1] * c1O + c1m[c24 + 0x2] * c1P + c1m[c24 + 0x3] * c1Q);
                    }
                    return 0x1b * (bZp + bZt + bZz + bZL + bZM);
                }
            },
            bZp['_buildPermutationTable'] = bZt,
            void 0x0 !== (bZo = function() {
                return bZp;
            }
            ['call'](bZm, bZn, bZm, bZl)) && (bZl['exports'] = bZo),
            bZm['SimplexNoise'] = bZp,
            bZl['exports'] = bZp;
        }();
    }
    , function(c25, c26) {
        c25['exports']['easing'] = {
            'linear': function(c25) {
                return c25;
            },
            'easeInQuad': function(c25) {
                return c25 * c25;
            },
            'easeOutQuad': function(c25) {
                return c25 * (0x2 - c25);
            },
            'easeInOutQuad': function(c25) {
                return 0.5 > c25 ? 0x2 * c25 * c25 : (0x4 - 0x2 * c25) * c25 - 0x1;
            },
            'easeInCubic': function(c25) {
                return c25 * c25 * c25;
            },
            'easeOutCubic': function(c25) {
                return --c25 * c25 * c25 + 0x1;
            },
            'easeInOutCubic': function(c25) {
                return 0.5 > c25 ? 0x4 * c25 * c25 * c25 : (c25 - 0x1) * (0x2 * c25 - 0x2) * (0x2 * c25 - 0x2) + 0x1;
            },
            'easeInQuart': function(c25) {
                return c25 * c25 * c25 * c25;
            },
            'easeOutQuart': function(c25) {
                return 0x1 - --c25 * c25 * c25 * c25;
            },
            'easeInOutQuart': function(c25) {
                return 0.5 > c25 ? 0x8 * c25 * c25 * c25 * c25 : 0x1 - 0x8 * --c25 * c25 * c25 * c25;
            },
            'easeInQuint': function(c25) {
                return c25 * c25 * c25 * c25 * c25;
            },
            'easeOutQuint': function(c25) {
                return 0x1 + --c25 * c25 * c25 * c25 * c25;
            },
            'easeInOutQuint': function(c25) {
                return 0.5 > c25 ? 0x10 * c25 * c25 * c25 * c25 * c25 : 0x1 + 0x10 * --c25 * c25 * c25 * c25 * c25;
            }
        };
    }
    , function(c2k, c2l, c2m) {
        var c2n, c2o, c2p = 0x0, c2q = function(c2k) {
            this['sid'] = c2p++,
            this['uid'] = c2k['uid'],
            this['width'] = c2k['w'],
            this['length'] = c2k['l'],
            this['height'] = c2k['h'],
            this['active'] = !0x0,
            this['x'] = c2k['x'],
            this['orgX'] = this['x'],
            this['y'] = c2k['y'],
            this['orgY'] = this['y'],
            this['z'] = c2k['z'],
            this['orgZ'] = this['z'],
            this['dir'] = c2k['d'],
            this['src'] = c2k['src'],
            this['ramp'] = c2k['ramp'],
            this['ladder'] = c2k['ladder'],
            this['jumpPad'] = c2k['jumpPad'],
            this['noShoot'] = c2k['noShoot'],
            this['stepSrc'] = c2k['s'],
            this['score'] = c2k['score'],
            this['scoreP'] = c2k['scoreP'],
            this['kill'] = c2k['kill'],
            this['dummy'] = c2k['dummy'],
            this['noVis'] = c2k['noVis'],
            this['complexMesh'] = c2k['complexMesh'],
            this['penetrable'] = c2k['penetrable'],
            this['health'] = c2k['health'],
            this['startHealth'] = c2k['health'],
            this['transparent'] = c2k['transparent'],
            this['boost'] = c2k['boost'],
            this['boostDr'] = c2k['boostDr'],
            this['aoMlt'] = c2k['aoM'],
            this['team'] = c2k['team'],
            this['flag'] = c2k['flag'],
            this['trigger'] = c2k['trigger'],
            this['pickup'] = c2k['pickup'],
            this['orgPickup'] = c2k['orgPickup'],
            this['pickupRep'] = c2k['pickupRep'],
            this['meshRef'] = c2k['meshRef'],
            this['checkpoint'] = c2k['checkpoint'],
            this['singleUse'] = c2k['singleUse'],
            this['isBorder'] = c2k['isBorder'],
            this['node'] = c2k['node'],
            this['channel'] = c2k['channel'],
            this['teleporter'] = c2k['teleporter'],
            this['telCooldown'] = 0x0,
            this['propID'] = c2k['propID'],
            this['telStopMo'] = c2k['momentum'],
            this['noAmb'] = c2k['noAmb'],
            this['tRadius'] = c2k['tRadius'],
            this['gate'] = c2k['gate'],
            this['noMsg'] = c2k['noMsg'],
            this['method'] = c2k['method'],
            this['closeable'] = c2k['closeable'],
            this['triggerEvent'] = c2k['event'],
            this['triggerAction'] = c2k['action'],
            this['triggerConstant'] = c2k['constant'],
            c2k['eventN'] && (this[c2k['eventN']] = !0x0),
            this['classIndx'] = c2k['classIndx'],
            this['respawnT'] = c2k['respawnT'],
            this['respawnR'] = c2k['respawnR'],
            this['respawnTStart'] = c2k['respawnT'],
            this['canRespawn'] = !(!c2k['respawnR'] && !c2k['respawnT']),
            this['skill'] = c2k['skill'],
            this['hpMlt'] = c2k['hpMlt'],
            this['destroyedBy'] = null;
        };
        c2k['exports']['manager'] = function(c2k, c2l, c2p) {
            var c2v, c2w;
            c2k && (c2n = c2m(0x25)['prefabs'],
            c2o = c2m(0x4)),
            this['aoOpac'] = 0x0,
            this['objects'] = [],
            this['objectives'] = [],
            this['flags'] = [],
            this['pickups'] = [],
            this['gates'] = [],
            this['teleporters'] = [],
            this['collision'] = function(c2k, c2l, c2m) {
                return c2k['x'] - c2k['width'] - c2m <= c2l['x'] + c2l['width'] && c2k['x'] + c2k['width'] + c2m >= c2l['x'] - c2l['width'] && c2k['z'] - c2k['length'] - c2m <= c2l['z'] + c2l['length'] && c2k['z'] + c2k['length'] + c2m >= c2l['z'] - c2l['length'] && c2k['y'] - c2k['height'] - c2m <= c2l['y'] + c2l['height'] && c2k['y'] + c2k['height'] + c2m >= c2l['y'] - c2l['height'];
            }
            ,
            this['checkPos'] = function(c2k, c2m, c2n, c2o, c2p) {
                for (var c2q = 0x0; c2q < this['objects']['length']; ++c2q)
                    if (this['objects'][c2q] != c2o && this['objects'][c2q] != c2p && !this['objects'][c2q]['ramp'] && c2l['pointInBox3D'](c2k, c2m, c2n, this['objects'][c2q]))
                        return !0x1;
                return !0x0;
            }
            ,
            this['findByUid'] = function(c2k, c2l) {
                c2v = c2l || this['objects'];
                for (var c2m = 0x0; c2m < c2v['length']; ++c2m)
                    if (c2v[c2m]['uid'] === c2k)
                        return c2v[c2m];
                return null;
            }
            ,
            this['findBySid'] = function(c2k, c2l) {
                c2v = c2l || this['objects'];
                for (var c2m = 0x0; c2m < c2v['length']; ++c2m)
                    if (c2v[c2m]['sid'] === c2k)
                        return c2v[c2m];
                return null;
            }
            ,
            this['addCylinder'] = function(c2l, c2m, c2n, c2o, c2p, c2q) {
                c2k && (c2q['shadows'] = !0x0,
                c2k['addCylinder'](c2l, c2m, c2n, c2o, c2p, c2q));
            }
            ,
            this['getZoneDat'] = function(c2k, c2l) {
                return {
                    'src': 'zone_r',
                    'texSrc': 'zone_' + (c2l && c2k == c2l['team'] ? 'b' : 'r'),
                    'noGroup': !0x0,
                    'mat': c2o['MeshBasicMaterial'],
                    'transparent': !0x0,
                    'depthWrite': !0x1,
                    'side': 0x2
                };
            }
            ,
            this['getFlagDat'] = function(c2k, c2l) {
                var c2m = c2l && c2k == c2l['team'] ? '1' : '0';
                return {
                    'src': 'crystal_0',
                    'texSrc': 'crystal_' + c2m,
                    'noGroup': !0x0,
                    'noShadow': !0x0,
                    'noFog': !0x0,
                    'emissive': '0' == c2m ? 0x853434 : 0x428a9d
                };
            }
            ,
            this['addFlag'] = function(c2l, c2m, c2n, c2o) {
                var c2v = null;
                c2k && ((c2v = c2k['loadMesh'](this['getFlagDat'](c2o), c2l, c2m + c2p['flagOff'], c2n, 0x0, c2p['flagScale'], c2k['scene']))['layers']['set'](0x2),
                c2v['zoneMesh'] = c2k['addCube'](c2l, c2m, c2n, c2p['flagZoneS'], c2p['flagZoneH'], c2p['flagZoneS'], [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], this['getZoneDat'](c2o)));
                var c2w = new c2q({
                    'uid': this['objects']['length'],
                    'meshRef': c2v,
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2p['flagScale'] / 0x2 + c2p['flagOff'],
                    'w': c2p['flagScale'],
                    'l': c2p['flagScale'],
                    'h': c2p['flagScale'] / 0x2,
                    'team': c2o,
                    'flag': !0x0,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                });
                this['flags']['push'](c2w),
                this['objects']['push'](c2w);
                var c33 = new c2q({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2p['flagZoneH'] / 0x2,
                    'w': c2p['flagZoneS'] / 0x2,
                    'l': c2p['flagZoneS'] / 0x2,
                    'h': c2p['flagZoneH'] / 0x2,
                    'team': c2o,
                    'trigger': !0x0,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                });
                c33['flagObj'] = c2w,
                this['objects']['push'](c33);
            }
            ,
            this['addWeapon'] = function(c2l, c2m, c2n, c2o, c2v, c2w, c3a) {
                c2o = c2o || {};
                var c3b = null;
                c2k && ((c3b = c2k['loadMesh']({
                    'src': 'weapons/' + c2o['weapon']['src'],
                    'texSrc': 'weapons/' + c2o['weapon']['src'],
                    'noGroup': !0x0,
                    'noShadow': !0x0,
                    'transparent': !0x0,
                    'noFog': !0x0
                }, c2l, c2m + c2p['pickupOff'], c2n, 0x0, c2o['weapon']['scale'], c2k['scene']))['rotateY'](c2v || 0x0),
                c3b['rotateX']((c2w || 0x0) - Math['PI'] / 0x2),
                c3b['rotateZ'](c3a || 0x0));
                var c3c = new c2q({
                    'uid': this['objects']['length'],
                    'meshRef': c3b,
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2p['pickupZoneH'] / 0x2,
                    'w': c2p['pickupZoneX'],
                    'l': c2p['pickupZoneZ'],
                    'h': 0x2 * c2p['pickupZoneH'],
                    'pickup': c2o['weaponId'],
                    'pickupRep': !c2o['noRep'],
                    'orgPickup': c2o['weaponId'],
                    'scoreP': c2o['scoreP'],
                    'noMsg': c2o['noMsg'],
                    'method': c2o['method'],
                    'trigger': !0x0,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                });
                this['pickups']['push'](c3c),
                this['objects']['push'](c3c);
            }
            ,
            this['addObjective'] = function(c2l, c2m, c2n, c2p, c2q, c2v) {
                var c2w;
                c2k && ((c2w = c2k['addCube'](c2l, c2m, c2n, c2p, c2v, c2q, [0x1, 0x1, 0x0, 0x0, 0x1, 0x1], {
                    'src': 'objective_0',
                    'noGroup': !0x0,
                    'mat': c2o['MeshBasicMaterial'],
                    'transparent': !0x0,
                    'depthWrite': !0x1,
                    'side': 0x2
                }))['visible'] = !0x1),
                this['objectives']['push']({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2v / 0x2,
                    'mesh': c2w,
                    'width': c2p / 0x2,
                    'length': c2q / 0x2,
                    'height': c2v / 0x2
                });
            }
            ,
            this['addDeathZone'] = function(c2k, c2l, c2m, c2n, c2o, c2p) {
                this['objects']['push'](new c2q({
                    'x': c2k,
                    'z': c2m,
                    'y': c2l + c2p / 0x2,
                    'w': c2n / 0x2,
                    'l': c2o / 0x2,
                    'h': c2p / 0x2,
                    'kill': !0x0,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                }));
            }
            ,
            this['addScoreZone'] = function(c2k, c2l, c2m, c2n, c2o, c2p, c2v) {
                this['objects']['push'](new c2q({
                    'x': c2k,
                    'z': c2m,
                    'y': c2l + c2p / 0x2,
                    'w': c2n / 0x2,
                    'l': c2o / 0x2,
                    'h': c2p / 0x2,
                    'score': !0x0,
                    'scoreP': c2v,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                }));
            }
            ,
            this['addCheckPoint'] = function(c2k, c2l, c2m, c2n, c2o, c2p, c2v, c2w) {
                this['objects']['push'](new c2q({
                    'x': c2k,
                    'z': c2m,
                    'y': c2l + c2p / 0x2,
                    'w': c2n / 0x2,
                    'l': c2o / 0x2,
                    'h': c2p / 0x2,
                    'd': parseInt(c2w) || 0x0,
                    'checkpoint': !0x0,
                    'singleUse': c2v,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                }));
            }
            ,
            this['addTeleporter'] = function(c2k, c2l, c2m, c2n, c2o, c2p, c2v, c2w, c3N) {
                var c3O = new c2q({
                    'uid': this['objects']['length'],
                    'x': c2k,
                    'z': c2m,
                    'y': c2l + c2p / 0x2,
                    'w': c2n / 0x2,
                    'l': c2o / 0x2,
                    'h': c2p / 0x2,
                    'teleporter': !0x0,
                    'channel': c2v || 0x0,
                    'node': c2w || 0x0,
                    'momentum': c3N,
                    'noShoot': !0x0,
                    'complexMesh': !0x0
                });
                this['objects']['push'](c3O),
                this['teleporters']['push'](c3O);
            }
            ,
            this['addGrass'] = function(c2l, c2m, c2n, c2p, c2q, c2v, c2w) {
                c2w = c2w || {},
                c2k && !c2w['noVis'] && (c2w['side'] = c2o['DoubleSide'],
                c2w['transparent'] = !0x0,
                c2w['alphaTest'] = 0.2,
                c2w['vertexColors'] = c2o['VertexColors'],
                c2w['shadowsR'] = !0x0,
                c2w['noGroup'] = !!c2w['health'],
                c2k['addGrass'](c2l, c2m, c2n, c2p, c2q, c2v, c2w));
            }
            ,
            this['addLadder'] = function(c2m, c2n, c2w, c3Z, c40, c41, c42, c43) {
                var c44 = c2p['ladderScale']
                  , c45 = c2p['ladderScale'];
                if (0x0 == c40 || c40 == Math['PI'] ? c45 = c2p['ladderWidth'] : c44 = c2p['ladderWidth'],
                c2v = new c2q({
                    'ladder': !0x0,
                    'complexMesh': !0x0,
                    'noShoot': !0x0,
                    'd': c40,
                    'x': c2m + c2p['ladderScale'] * Math['cos'](c40),
                    'z': c2w + c2p['ladderScale'] * Math['sin'](c40),
                    'y': c2n,
                    'w': c44,
                    'l': c45,
                    'h': c3Z
                }),
                this['objects']['push'](c2v),
                c2k && !c41) {
                    var c46 = {
                        'src': c42 || 'floor_0',
                        'vertexColors': c2o['VertexColors'],
                        'colr': c43,
                        'scale': 0.02,
                        'amb': c2p['ambientVal'],
                        'shadows': !0x0
                    };
                    c2k['addCube'](c2v['x'] + c2p['ladderWidth'] * Math['sin'](c40), c2v['y'], c2v['z'] + c2p['ladderWidth'] * Math['cos'](c40), 0x2 * c2p['ladderScale'], c3Z + 0x2, 0x2 * c2p['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c46),
                    c2k['addCube'](c2v['x'] - c2p['ladderWidth'] * Math['sin'](c40), c2v['y'], c2v['z'] - c2p['ladderWidth'] * Math['cos'](c40), 0x2 * c2p['ladderScale'], c3Z + 0x2, 0x2 * c2p['ladderScale'], [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c46);
                    for (var c47 = Math['floor'](c3Z / 0x6), c48 = 0x0; c48 < c47; ++c48)
                        c46['dark'] = 0.6 + c48 / c47 * 0.4,
                        c2k['addPlane'](c2v['x'], c2n + 0x6 * (c48 + 0x1) + c2l['randFloat'](-0x1, 0x1), c2v['z'], c2p['ladderWidth'], c2p['ladderScale'], c46, -c40 + Math['PI'] / 0x2, Math['PI'] / 0x2, c2l['randFloat'](-0.1, 0.1));
                }
            }
            ,
            this['addRamp'] = function(c2l, c2m, c2n, c2v, c2w, c4e, c4f, c4g, c4h, c4i, c4j, c4k, c4l, c4m, c4n) {
                var c4o = 0x0 != c4f && c4f != Math['PI']
                  , c4p = (c4o ? c4e : c2v) / 0x2
                  , c4q = Math['sqrt'](c2w * c2w + c4e * c4e)
                  , c4r = Math['asin'](c2w / c4q);
                if (this['objects']['push'](new c2q({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2w / 0x2,
                    'w': c2v / 0x2,
                    'l': c4e / 0x2,
                    'h': c2w / 0x2,
                    'd': c4f,
                    'noShoot': !0x0,
                    'complexMesh': !0x0,
                    'boostDr': c4g ? c4r : null,
                    'boost': c4g || null,
                    'ramp': {
                        'sX': c2l - c4p * Math['cos'](c4f),
                        'sZ': c2n - c4p * Math['sin'](c4f),
                        'eX': c2l + c4p * Math['cos'](c4f),
                        'eZ': c2n + c4p * Math['sin'](c4f)
                    },
                    'noAmb': c4n
                })),
                c2k && !c4i) {
                    var c4s = {
                        'src': c4h || 'default',
                        'vertexColors': c2o['VertexColors'],
                        'colr': c4j,
                        'scale': 0x1,
                        'shadowsR': !0x0,
                        'side': c2o['DoubleSide'],
                        'movT': c4l,
                        'movD': c4m
                    };
                    if (c4s['transparent'] = 'link_0' == c4s['src'],
                    'link_0' == c4s['src'] && (c4s['depthWrite'] = !0x0,
                    c4s['alphaTest'] = c4s['transparent'] ? 0.02 : 0x0),
                    c2k['addRamp'](c2l, c2m, c2n, c4o ? c2v : c4e, c2w, (c4o ? c4e : c2v) / 0x2, c4f, c4s),
                    !c4n) {
                        c2m += c2p['ambOff'];
                        var c4t = (c4o ? c2v : c4e) / 0x2 - c4k;
                        c4o ? c2v = 0x2 * c4k : c4e = 0x2 * c4k;
                        for (var c4u, c4v = 0x0; 0x2 > c4v; ++c4v)
                            c4u = c4v ? 0x1 : -0x1,
                            c2k['addRamp'](c2l + c4t * c4u * Math['cos'](c4f + Math['PI'] / 0x2), c2m, c2n + c4t * c4u * Math['sin'](c4f + Math['PI'] / 0x2), c4o ? c2v : c4e, c2w, (c4o ? c4e : c2v) / 0x2, c4f, {
                                'src': 'ambient_1',
                                'euler': 'ZYX',
                                'depthWrite': !0x1,
                                'transparent': !0x0,
                                'side': c2o['DoubleSide']
                            }, c4v ? 0x0 : Math['PI']);
                    }
                }
            }
            ,
            this['addGate'] = function(c2l, c2m, c2n, c2p, c2v, c2w, c4C) {
                (c4C = c4C || {})['src'] = c4C['src'] || 'wall_0';
                var c4D = new c2q({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2w / 0x2,
                    'w': c2p / 0x2,
                    'l': c2v / 0x2,
                    'h': c2w / 0x2,
                    'uid': this['objects']['length'],
                    'src': c4C['src'],
                    'noVis': c4C['noVis'],
                    'noAmb': c4C['noAmb'],
                    'transparent': c4C['transparent'],
                    'penetrable': c4C['penetrable'],
                    'isBorder': c4C['isBorder'],
                    'complexMesh': c4C['xR'] || c4C['yR'] || c4C['zR'] || 'link_0' == c4C['src'],
                    'ter': !0x0,
                    'tRadius': 0x7,
                    'gate': !0x0,
                    'scoreP': c4C['scoreP'],
                    'noMsg': c4C['noMsg'],
                    'method': c4C['method'],
                    'closeable': c4C['closeable']
                });
                if (c2k && !c4C['noVis']) {
                    c4C['transparent'] = 'link_0' == c4C['src'] || 0x1 != c4C['opacity'],
                    'link_0' == c4C['src'] && (c4C['depthWrite'] = 0x1 == c4C['opacity'],
                    c4C['alphaTest'] = c4C['transparent'] ? 0.02 : 0x0),
                    c4C['vertexColors'] = c2o['VertexColors'],
                    c4C['scale'] = null == c4C['scale'] ? 0x1 : c4C['scale'],
                    c4C['shadows'] = !c4C['shadowsR'] && 0x1 == c4C['opacity'],
                    c4C['noFog'] = !!c4C['emissive'],
                    c4C['noGroup'] = !0x0;
                    var c4E = c2k['addCube'](c2l, c2m, c2n, c2p, c2w, c2v, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4C);
                    c4D['meshRef'] = c4E;
                }
                this['objects']['push'](c4D),
                this['gates']['push'](c4D);
            }
            ,
            this['addTrigger'] = function(c2l, c2m, c2n, c2p, c2v, c2w, c4L) {
                (c4L = c4L || {})['src'] = c4L['src'] || 'wall_0';
                var c4M = new c2q({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2w / 0x2,
                    'w': c2p / 0x2,
                    'l': c2v / 0x2,
                    'h': c2w / 0x2,
                    'uid': this['objects']['length'],
                    'src': c4L['src'],
                    'noVis': c4L['noVis'],
                    'noAmb': c4L['noAmb'],
                    'health': c4L['health'],
                    'respawnT': c4L['respawnT'],
                    'respawnR': c4L['respawnR'],
                    'transparent': c4L['transparent'],
                    'complexMesh': c4L['xR'] || c4L['yR'] || c4L['zR'] || 'link_0' == c4L['src'],
                    'ter': !0x0,
                    'constant': c4L['constant'],
                    'eventN': c4L['eventN'],
                    'event': c4L['event'],
                    'action': c4L['action']
                });
                if (c2k && !c4L['noVis']) {
                    c4L['transparent'] = 'link_0' == c4L['src'] || 0x1 != c4L['opacity'],
                    'link_0' == c4L['src'] && (c4L['depthWrite'] = 0x1 == c4L['opacity'],
                    c4L['alphaTest'] = c4L['transparent'] ? 0.02 : 0x0),
                    c4L['vertexColors'] = c2o['VertexColors'],
                    c4L['scale'] = null == c4L['scale'] ? 0x1 : c4L['scale'],
                    c4L['shadows'] = !c4L['shadowsR'] && 0x1 == c4L['opacity'],
                    c4L['noFog'] = !!c4L['emissive'],
                    c4L['noGroup'] = !0x0;
                    var c4N = c2k['addCube'](c2l, c2m, c2n, c2p, c2w, c2v, [0x1, 0x1, 0x1, 0x1, 0x1, 0x1], c4L);
                    c4L['health'] && !c4L['noCol'] && (c4M['meshRef'] = c4N);
                }
                this['objects']['push'](c4M);
            }
            ,
            this['addAI'] = function(c2k, c2l, c2m, c2n, c2o) {
                c2n = c2n || {};
                var c2p = new c2q({
                    'x': c2k,
                    'z': c2m,
                    'y': c2l + h / 0x2,
                    'w': 0x5,
                    'l': 0x5,
                    'h': 0xa,
                    'd': c2o,
                    'uid': this['objects']['length'],
                    'classIndx': c2n['classIndx'],
                    'respawnT': c2n['respawnT'],
                    'respawnR': c2n['respawnR'],
                    'skill': c2n['skill'],
                    'hpMlt': c2n['hpMlt']
                });
                this['objects']['push'](c2p);
            }
            ,
            this['addBlock'] = function(c2l, c2m, c2n, c2p, c2v, c2w, c50, c51) {
                if ((c51 = c51 || {})['src'] = c51['src'] || 'wall_0',
                c51['noCol'] || this['objects']['push'](new c2q({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m + c2w / 0x2,
                    'w': c2p / 0x2,
                    'l': c2v / 0x2,
                    'h': c2w / 0x2,
                    'uid': this['objects']['length'],
                    's': c51['sound'],
                    'src': c51['src'],
                    'noVis': c51['noVis'],
                    'noAmb': c51['noAmb'],
                    'health': c51['health'],
                    'respawnT': c51['respawnT'],
                    'respawnR': c51['respawnR'],
                    'transparent': c51['transparent'],
                    'penetrable': c51['penetrable'],
                    'isBorder': c51['isBorder'],
                    'complexMesh': c51['xR'] || c51['yR'] || c51['zR'] || 'link_0' == c51['src'],
                    'ter': !0x0,
                    'trigger': c51['trig']
                })),
                c2k && !c51['noVis']) {
                    c51['transparent'] = 'link_0' == c51['src'] || 0x1 != c51['opacity'],
                    'link_0' == c51['src'] && (c51['depthWrite'] = 0x1 == c51['opacity'],
                    c51['alphaTest'] = c51['transparent'] ? 0.02 : 0x0),
                    c51['vertexColors'] = c2o['VertexColors'],
                    c51['scale'] = null == c51['scale'] ? 0x1 : c51['scale'],
                    c51['shadows'] = !c51['shadowsR'] && 0x1 == c51['opacity'],
                    c51['noFog'] = !!c51['emissive'],
                    c51['noGroup'] = !!c51['health'];
                    var c52 = c2k['addCube'](c2l, c2m, c2n, c2p, c2w, c2v, c50, c51);
                    c51['health'] && !c51['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c52);
                }
            }
            ,
            this['addCanvas'] = function(c2m, c2n, c2p, c2q, c2v, c2w, c59, c5a, c5b) {
                c2w = c2w || {},
                c2k && (c2w['canvas'] = c2l['createCanvasText'](0x2 * c2v, 0x2 * c2q, c2w['text'] || 'Hello\x20World', c2w['fontSize'] || 0xa, c2w['fcolr'] || '#000', c2w['bcolr'] || '#fff', c2w['noBVis'], c2w['tAlign'] || 0x0),
                c2w['transparent'] = !0x0,
                c2w['depthWrite'] = !0x0,
                c2w['alphaTest'] = 0.02,
                c2w['side'] = c2o['DoubleSide'],
                c2k['addPlane'](c2m, c2n, c2p, c2v, c2q, c2w, c59, (c5a || 0x0) + Math['PI'] / 0x2, c5b));
            }
            ,
            this['addMesh'] = function(c2m, c2v, c2w, c5f, c5g, c5h, c5i, c5j) {
                if (c2v += c5h,
                (c5j = c5j || {})['noCol'] || this['objects']['push'](new c2q({
                    'complexMesh': !!c2n && c2n[c5j['src']['toUpperCase']()]['complex'],
                    'aoM': c2n && c2n[c5j['src']['toUpperCase']()]['aoMlt'] || 0x0,
                    'propID': 0x0 <= c2p['propsH']['indexOf'](c5j['src']) ? c5j['src'] : null,
                    'x': c2m,
                    'z': c2w,
                    'y': c2v,
                    'w': c5g,
                    'l': c5i,
                    'h': c5h,
                    'uid': this['objects']['length'],
                    'ter': !0x0,
                    'noVis': c5j['noVis'],
                    'noAmb': c5j['noAmb'],
                    'health': c5j['health'],
                    'respawnT': c5j['respawnT'],
                    'respawnR': c5j['respawnR']
                })),
                c2n && c2n[c5j['src']['toUpperCase']()]['transparent'] && (c2v += c2l['randFloat'](-0.01, 0.01)),
                c2k && !c5j['noVis']) {
                    var c5k = c2k['loadMesh']({
                        'src': c5j['src'] + '_0',
                        'emissive': c2n[c5j['src']['toUpperCase']()]['emiss'] ? 0xffffff : null,
                        'side': c2n[c5j['src']['toUpperCase']()]['doubleSide'] ? c2o['DoubleSide'] : c2o['FrontSide'],
                        'transparent': c2n[c5j['src']['toUpperCase']()]['transparent'],
                        'shadows': c2n[c5j['src']['toUpperCase']()]['castShadow'],
                        'shadowsR': c2n[c5j['src']['toUpperCase']()]['receiveShadow'],
                        'vertexColors': c2o['VertexColors'],
                        'color': c5j['colr'] || 0xffffff,
                        'noGroup': !!c5j['health']
                    }, c2m, c2v, c2w, c5f, c2p[c5j['src'] + 'Scale'], c2k['scene'], !c5j['health']);
                    c5j['health'] && !c5j['noCol'] && (this['objects'][this['objects']['length'] - 0x1]['meshRef'] = c5k);
                }
            }
            ;
            var c5l = [];
            this['addNoisePlanes'] = function() {
                for (var c2l = 0x0; c2l < c5l['length']; ++c2l)
                    c5l[c2l][0x5]['objects'] = this['objects'],
                    c2k['addPlane'](...c5l[c2l]);
                c5l['length'] = 0x0;
            }
            ,
            this['addPlane'] = function(c2l, c2m, c2n, c2p, c2v, c2w, c5t, c5u, c5v) {
                if ((c2w = c2w || {})['noCol'] || this['objects']['push'](new c2q({
                    'x': c2l,
                    'z': c2n,
                    'y': c2m,
                    'w': c2v,
                    'l': c2p,
                    'h': 0x0,
                    's': c2w['sound'],
                    'health': c2w['health'],
                    'respawnT': c2w['respawnT'],
                    'respawnR': c2w['respawnR'],
                    'transparent': c2w['transparent'],
                    'penetrable': c2w['penetrable'],
                    'noVis': c2w['noVis'],
                    'noAmb': c2w['noAmb']
                })),
                c2k && !c2w['noVis']) {
                    c2w['transparent'] = !0x0,
                    c2w['side'] = c2o['DoubleSide'],
                    c2w['vertexColors'] = c2o['VertexColors'],
                    c2w['noise'] && (c2w['pinEdges'] = !0x0,
                    c2w['margin'] = 0x1,
                    c2w['tilesX'] = Math['round'](c2v / 0x5),
                    c2w['tilesZ'] = Math['round'](c2p / 0x5));
                    var c5w = [c2l, c2m, c2n, c2v, c2p, c2w, c5t, (c5u || 0x0) + Math['PI'] / 0x2, c5v];
                    if (!c2w['noise'])
                        return c2k['addPlane'](...c5w);
                    c5l['push'](c5w);
                }
            }
            ,
            this['pointInObjs'] = function(c2k, c2m, c2n) {
                for (var c2o = 0x0; c2o < this['objects']['length']; ++c2o)
                    if (!(c2v = this['objects'][c2o])['noVis'] && !c2v['complexMesh'] && !c2v['health'] && 0x0 > c2m['indexOf'](c2v['sid']) && c2l['pointInBox3D'](c2k[0x0], c2k[0x1], c2k[0x2], c2v, c2n || 0x0))
                        return !0x0;
                return !0x1;
            }
            ,
            this['setMaxAO'] = function(c2k, c2l, c2m) {
                c2k['maxAOS'] = c2k['maxAOS'] || {},
                c2k['maxAOS'][c2l['sid']] = Math['max'](c2m, c2k['maxAOS'][c2l['sid']] || 0x0),
                c2l['maxAOS'] = c2l['maxAOS'] || {},
                c2l['maxAOS'][c2k['sid']] = Math['max'](c2m, c2l['maxAOS'][c2k['sid']] || 0x0);
            }
            ,
            this['aosToAdd'] = {},
            this['addAmbient'] = function(c2k, c2m, c2n, c2o, c2q, c2v, c2w, c5l, c5M, c5N, c5O) {
                var c5P = !c5N;
                if (c5N)
                    for (var c5Q = 0x0; c5Q < c5N['length']; ++c5Q)
                        if (c2l['pointInBox3D'](c2k, c2m, c2n, c5N[c5Q], 0x2 * c2p['ambOff'])) {
                            c5P = !0x0;
                            break;
                        }
                if (c5P)
                    if (c5N) {
                        var c5R = c5N[0x0]['sid'] + '-' + c5N[0x1]['sid'];
                        this['aosToAdd'][c5R] || (this['aosToAdd'][c5R] = []),
                        this['aosToAdd'][c5R]['push']({
                            'vals': [c2k, c2m, c2n, c2o, c2q, c2v, c2w + c2p['ambOff'], c5l + c2p['ambOff'], c5M],
                            'group': c5O
                        });
                    } else
                        this['addPlane'](c2k, c2m, c2n, c2w, c5l, {
                            'src': 'ambient_' + (c5M || 0x0),
                            'euler': 'ZYX',
                            'depthWrite': !0x1,
                            'noCol': !0x0
                        }, c2o, c2q, c2v);
            }
            ;
            var c5S = [['g6-1-2', 'g4-1-2'], ['g5-1-2', 'g4-0-1'], ['g6-0-1', 'g3-1-2'], ['g5-0-1', 'g3-0-1'], ['g6-0-3', 'g2-0-3'], ['g5-0-3', 'g2-1-1'], ['g6-1-1', 'g1-0-3'], ['g5-1-1', 'g1-1-1'], ['g6-0-2', 'g1-1-0'], ['g5-0-2', 'g1-0-2'], ['g6-1-0', 'g2-1-0'], ['g5-1-0', 'g2-0-2'], ['g4-0-2', 'g1-0-0'], ['g3-0-2', 'g1-1-3'], ['g4-1-0', 'g2-0-0'], ['g3-1-0', 'g2-1-3'], ['g4-0-3', 'g2-1-2'], ['g3-0-3', 'g2-0-1'], ['g4-1-1', 'g1-1-2'], ['g3-1-1', 'g1-0-1'], ['g6-1-3', 'g3-0-0'], ['g5-1-3', 'g3-1-3'], ['g6-0-0', 'g4-0-0'], ['g5-0-0', 'g4-1-3']];
            this['groupsMatch'] = function(c2k, c2l) {
                for (var c2m = 0x0; c2m < c5S['length']; ++c2m)
                    if (0x0 <= c5S[c2m]['indexOf'](c2k) && 0x0 <= c5S[c2m]['indexOf'](c2l))
                        return !0x0;
                return !0x1;
            }
            ,
            this['clearAOGroup'] = function(c2k) {
                for (var c2l = c2k['length'] - 0x1; 0x0 <= c2l; --c2l) {
                    c2v = c2k[c2l];
                    for (var c2m = c2k['length'] - 0x1; 0x0 <= c2m; --c2m)
                        if (c2w = c2k[c2m],
                        !c2v['dontAdd'] && !c2w['dontAdd'] && c2v != c2w && this['groupsMatch'](c2v['group'], c2w['group'])) {
                            c2v['vals'][0x6] + c2v['vals'][0x7] >= c2w['vals'][0x6] + c2w['vals'][0x7] ? c2w['dontAdd'] = !0x0 : c2v['dontAdd'] = !0x0;
                            break;
                        }
                }
            }
            ,
            this['addPendingAOs'] = function() {
                for (var c2k in this['aosToAdd'])
                    if (this['aosToAdd']['hasOwnProperty'](c2k)) {
                        this['clearAOGroup'](this['aosToAdd'][c2k]);
                        for (var c2l = 0x0; c2l < this['aosToAdd'][c2k]['length']; ++c2l)
                            this['aosToAdd'][c2k][c2l]['dontAdd'] || this['addAmbient'](...this['aosToAdd'][c2k][c2l]['vals']);
                    }
                this['aosToAdd'] = {};
            }
            ,
            this['limitAmb'] = function(c2k, c2m, c2n, c2o, c2p, c2q, c2v) {
                var c2w = [c2l['cdv'][c2o]]
                  , c5l = [c2l['cdv'][c2p]];
                return c2k = c2n == -Math['PI'] / 0x2 || c2n == Math['PI'] + Math['PI'] / 0x2 ? Math['min'](c2k, (c2m[c2p] - Math['min'](c2q[c2p] - c2q[c5l], c2v[c2p] - c2v[c5l])) / 0x2) : c2n == Math['PI'] / 0x2 ? Math['min'](c2k, (Math['max'](c2q[c2p] + c2q[c5l], c2v[c2p] + c2v[c5l]) - c2m[c2p]) / 0x2) : 0x0 == c2n ? Math['min'](c2k, (Math['max'](c2q[c2o] + c2q[c2w], c2v[c2o] + c2v[c2w]) - c2m[c2o]) / 0x2) : Math['min'](c2k, (c2m[c2o] - Math['min'](c2q[c2o] - c2q[c2w], c2v[c2o] - c2v[c2w])) / 0x2);
            }
            ,
            this['resetAll'] = function() {
                this['aosToAdd'] = {};
                for (var c2l = 0x0; c2l < this['objects']['length']; ++c2l)
                    this['objects'][c2l]['active'] = !0x0,
                    this['objects'][c2l]['startHealth'] && (this['objects'][c2l]['health'] = this['objects'][c2l]['startHealth']),
                    this['objects'][c2l]['meshRef'] && (this['objects'][c2l]['meshRef']['visible'] = !0x0);
                c2k && c2k['updateShadowMap']();
            }
            ,
            this['removeAll'] = function() {
                this['objects']['length'] = 0x0,
                this['objectives']['length'] = 0x0,
                this['flags']['length'] = 0x0,
                this['pickups']['length'] = 0x0,
                this['teleporters']['length'] = 0x0;
            }
            ;
        }
        ;
    }
    , function(c6b, c6c) {
        c6b['exports']['wheels'] = [{
            'name': 'Starter',
            'lab': {
                'nm': 'Any',
                'col': '#E040FB'
            },
            'price': 0x32,
            'rarities': [0x4b, 0x16, 0x3, 0x0, 0x0, 0x0]
        }, {
            'name': 'Elite',
            'lab': {
                'nm': 'Any',
                'col': '#E040FB'
            },
            'price': 0x64,
            'rarities': [0x32, 0x1e, 0xf, 0x5, 0x0, 0x0]
        }, {
            'name': 'Heroic',
            'lab': {
                'nm': 'Any',
                'col': '#E040FB'
            },
            'price': 0x1f4,
            'rarities': [0x0, 0x30, 0x23, 0xe, 2.5, 0.5]
        }, {
            'name': 'Hunter',
            'lab': {
                'nm': 'Snipers\x20Only!',
                'col': '#fab640'
            },
            'itemTypes': [0x0],
            'weaponType': 0x1,
            'price': 0x258,
            'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
        }, {
            'name': 'Attire',
            'lab': {
                'nm': 'Outfits\x20Only!',
                'col': '#ed4242'
            },
            'itemTypes': [0x1, 0x2],
            'price': 0x2ee,
            'rarities': [0x2b, 0x21, 0x10, 0x6, 0x2, 0x0]
        }, {
            'name': 'Free',
            'free': !0x0,
            'openURL': !0x0,
            'minLvl': 0x5,
            'price': 0x0,
            'priceT': 'Follow\x20for\x20a\x20free\x20Spin',
            'rarities': [0x2b, 0x21, 0x11, 0x6, 0x1, 0x0]
        }],
        c6b['exports']['types'] = ['weapons/weapon_', 'hats/hat_', 'body/body_', 'melee/melee_'],
        c6b['exports']['purchases'] = [{
            'val': 0x12c,
            'price': 0.99
        }, {
            'val': 0x258,
            'price': 1.79
        }, {
            'val': 0xa28,
            'price': 7.49
        }, {
            'val': 0x1b58,
            'price': 15.99
        }, {
            'val': 0x4e20,
            'price': 34.99,
            'tag': 'Popular!',
            'tagCol': '#ed4242'
        }, {
            'val': 0xea60,
            'tag': 'Best\x20Value!',
            'tagCol': '#E040FB',
            'price': 99.99
        }],
        c6b['exports']['rarities'] = [{
            'name': 'Uncommon',
            'rar': 0x3c,
            'color': '#b2f252'
        }, {
            'name': 'Rare',
            'rar': 0x28,
            'color': '#2196F3'
        }, {
            'name': 'Epic',
            'rar': 0x19,
            'color': '#E040FB'
        }, {
            'name': 'Legendary',
            'rar': 0xa,
            'color': '#FBC02D'
        }, {
            'name': 'Relic',
            'rar': 2.5,
            'color': '#ed4242'
        }, {
            'name': 'Contraband',
            'rar': 0.5,
            'color': '#292929'
        }, {
            'name': 'Unobtainable',
            'noSpin': !0x0,
            'rar': 0x0,
            'color': '#fff53d'
        }],
        c6b['exports']['previews'] = {
            1: {
                'xOff': -0x2,
                'yOff': -2.6,
                'zRota': 0.2,
                'scl': 0.001376794727638135
            },
            2: {
                'xOff': -1.4,
                'yOff': -0.8,
                'scl': 0.001148941748743716
            },
            3: {
                'xOff': 0x0,
                'yOff': 0x1,
                'scl': 0.000676917226130652
            },
            4: {
                'xOff': -1.5,
                'yOff': 0.5,
                'scl': 0.000940741507537686
            },
            5: {
                'xOff': -0.8,
                'yOff': 0.5,
                'scl': 0.00079312502512562
            },
            6: {
                'xOff': -0x1,
                'scl': 0.00099521137688442
            },
            7: {
                'xOff': -0x1,
                'yOff': -0.9,
                'scl': 0.001221518472361808
            },
            8: {
                'xOff': -0x1,
                'yOff': -0.6,
                'scl': 0.0012179208743718641
            },
            9: {
                'xOff': -1.2,
                'yOff': -0x1,
                'scl': 0.0010676876984924638
            },
            10: {
                'scl': 1.6
            },
            15: {
                'scl': 0.00098426884422111
            }
        },
        c6b['exports']['skins'] = [{
            'name': 'Arctic\x20Hunt',
            'id': 0x0,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20Hunt',
            'id': 0x1,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Reticle\x20Blaze',
            'id': 0x2,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20Hunt',
            'id': 0x3,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Moon\x20Dragon',
            'id': 0x4,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Scharfschütze',
            'id': 0x5,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Woodland\x20Sniper',
            'id': 0x6,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20Reticle',
            'id': 0x7,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20Reticle',
            'id': 0x8,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Seafarer',
            'id': 0x9,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Acid\x20Breath',
            'glow': !0x0,
            'id': 0xa,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Trail\x20Scout',
            'id': 0xb,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Arctic\x20AK',
            'id': 0x0,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20AK',
            'id': 0x1,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Blaze\x20AK',
            'id': 0x2,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20AK',
            'id': 0x3,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Luna\x20Dragon',
            'id': 0x4,
            'weapon': 0x2,
            'rarity': 0x3
        }, {
            'name': 'Flecken\x20AK',
            'id': 0x5,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Woodland\x20AK',
            'id': 0x6,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20AK',
            'id': 0x7,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20AK',
            'id': 0x8,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Seafarer\x20AK',
            'id': 0x9,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Trail\x20AK',
            'id': 0xa,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Arctic',
            'id': 0x0,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Autumn',
            'id': 0x1,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Blaze',
            'id': 0x2,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Digital',
            'id': 0x3,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Flecken',
            'id': 0x4,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Woodland',
            'id': 0x5,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Hazard',
            'id': 0x6,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Kodac',
            'id': 0x7,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Seafarer',
            'id': 0x8,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Trail',
            'id': 0x9,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Arctic\x20Python',
            'id': 0x0,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20Python',
            'id': 0x1,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Blaze\x20Python',
            'id': 0x2,
            'weapon': 0x5,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20Python',
            'id': 0x3,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Flecken\x20Python',
            'id': 0x4,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Woodland',
            'id': 0x5,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20Python',
            'id': 0x6,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20Python',
            'id': 0x7,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Seafarer',
            'id': 0x8,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Trail\x20Python',
            'id': 0x9,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Arctic\x20Slug',
            'id': 0x0,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20Slug',
            'id': 0x1,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Twin\x20Blaze',
            'id': 0x2,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'SG\x20Digital',
            'id': 0x3,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Flecken',
            'id': 0x4,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Woodland',
            'id': 0x5,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20Slug',
            'id': 0x6,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20Slug',
            'id': 0x7,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Buccaneer',
            'id': 0x8,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'SG\x20Trail',
            'id': 0x9,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Arctic\x20LMG',
            'id': 0x0,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20LMG',
            'id': 0x1,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Blaze\x20LMG',
            'id': 0x2,
            'weapon': 0x7,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20LMG',
            'id': 0x3,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Flecken\x20LMG',
            'id': 0x4,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Woodland\x20LMG',
            'id': 0x5,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20LMG',
            'id': 0x6,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20LMG',
            'id': 0x7,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Seafarer\x20LMG',
            'id': 0x8,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Trail\x20LMG',
            'id': 0x9,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Arctic\x20Auto',
            'id': 0x0,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20Auto',
            'id': 0x1,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Blaze\x20Auto',
            'id': 0x2,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20Auto',
            'id': 0x3,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Flecken\x20Auto',
            'id': 0x4,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Woodland\x20Auto',
            'id': 0x5,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20Auto',
            'id': 0x6,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20Auto',
            'id': 0x7,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Seafarer\x20Auto',
            'id': 0x8,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Trail\x20Auto',
            'id': 0x9,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Mach\x20Auto',
            'id': 0xa,
            'creator': 'AtarSt',
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Arctic\x20RL',
            'id': 0x0,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20RL',
            'id': 0x1,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Blaze\x20RL',
            'id': 0x2,
            'weapon': 0x9,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20RL',
            'id': 0x3,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Flecken\x20RL',
            'id': 0x4,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Woodland\x20RL',
            'id': 0x5,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Hazard\x20RL',
            'id': 0x6,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20RL',
            'id': 0x7,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Seafarer\x20RL',
            'id': 0x8,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Trail\x20RL',
            'id': 0x9,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': '101\x20Skullbreaker',
            'id': 0xc,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Reticle\x20Faded',
            'id': 0xd,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Puma\x20Sniper',
            'id': 0xe,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Scoped\x20Elite',
            'id': 0xf,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Faded\x20AK',
            'id': 0xb,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Puma\x20AR',
            'id': 0xc,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Fade',
            'id': 0xa,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Puma',
            'id': 0xb,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'Faded\x20Python',
            'id': 0xa,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Puma\x20Python',
            'id': 0xb,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'SG\x20Fade',
            'id': 0xa,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Slug\x20Puma',
            'id': 0xb,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Faded\x20LMG',
            'id': 0xa,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Puma\x20LMG',
            'id': 0xb,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Faded\x20MMR',
            'id': 0xb,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Puma\x20MMR',
            'id': 0xc,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Faded\x20RTL',
            'id': 0xa,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Puma\x20RTL',
            'id': 0xb,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Scoped\x20Carbon',
            'id': 0x10,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Carbon\x20AK',
            'id': 0xd,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Carbon',
            'id': 0xc,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Carbon\x20Python',
            'id': 0xc,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'SG\x20Carbon',
            'id': 0xc,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Carbon\x20LMG',
            'id': 0xc,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Carbon\x20MMR',
            'id': 0xd,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Carbon\x20RTL',
            'id': 0xc,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Neon\x20Ripper',
            'id': 0xe,
            'glow': !0x0,
            'weapon': 0x2,
            'rarity': 0x4
        }, {
            'name': 'Top\x20Hat',
            'type': 0x1,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x4,
            'id': 0x1,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Spitfire',
            'id': 0xd,
            'weapon': 0x4,
            'rarity': 0x3
        }, {
            'name': 'Cowboy\x20Hat',
            'type': 0x1,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x3,
            'id': 0x0,
            'rarity': 0x0
        }, {
            'name': 'Flame\x20Tamer',
            'id': 0xd,
            'pulsT': 0.0015,
            'weapon': 0x5,
            'glow': !0x0,
            'rarity': 0x5
        }, {
            'name': 'Cool\x20Cap',
            'type': 0x1,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x3,
            'xOff': 0x2,
            'id': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Jack\x20O\x27\x20Lantern',
            'type': 0x1,
            'scl': 2.8,
            'glow': !0x0,
            'sclMlt': 1.4,
            'sitOff': 2.05,
            'yOff': -0x4,
            'id': 0x3,
            'rarity': 0x3
        }, {
            'name': 'Medic\x20Helmet',
            'type': 0x1,
            'scl': 2.8,
            'sclMlt': 0x1,
            'sitOff': 0.65,
            'yOff': -2.5,
            'id': 0x4,
            'rarity': 0x2
        }, {
            'name': 'Neon\x20Reaver',
            'creator': 'Electrode_',
            'id': 0x11,
            'glow': !0x0,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Sun\x20Glasses',
            'type': 0x1,
            'scl': 2.8,
            'sclMlt': 0x1,
            'sitOff': 2.3,
            'yOff': -0x5,
            'xOff': 0x2,
            'id': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Afro',
            'type': 0x1,
            'scl': 0x2,
            'sclMlt': 0.9,
            'sitOff': 1.4,
            'yOff': -0x4,
            'id': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Hard\x20Hat',
            'type': 0x1,
            'scl': 0x3,
            'sitOff': 0.4,
            'yOff': -0x3,
            'id': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Zombie\x20Head',
            'type': 0x1,
            'scl': 2.8,
            'glow': !0x0,
            'sclMlt': 1.2,
            'sitOff': 2.05,
            'yOff': -0x4,
            'id': 0x8,
            'rarity': 0x3
        }, {
            'name': 'Barbed\x20Rifle',
            'id': 0x12,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Blushed\x20Sniper',
            'id': 0x13,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'AWP\x20Mech',
            'id': 0x14,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Olympus\x20Rifle',
            'id': 0x15,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Scoped\x20Tuscan',
            'id': 0x16,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'AWP\x20Pacemaker',
            'id': 0x17,
            'weapon': 0x1,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'AR\x20Wired',
            'id': 0xf,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Blushed\x20AK',
            'id': 0x10,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Mach\x20Rifle',
            'id': 0x11,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Olympus\x20Rifle',
            'id': 0x12,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'AR\x20Tuscan',
            'id': 0x13,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Barbed',
            'id': 0xe,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Blossom',
            'id': 0xf,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Machinist',
            'id': 0x10,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Lazarus',
            'id': 0x11,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Tuscan',
            'id': 0x12,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'Barbed\x20Python',
            'id': 0xe,
            'weapon': 0x5,
            'rarity': 0x2
        }, {
            'name': 'Blushed\x20Revolver',
            'id': 0xf,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Machinist\x20Python',
            'id': 0x10,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'REV\x20Olympus',
            'id': 0x11,
            'weapon': 0x5,
            'rarity': 0x2
        }, {
            'name': 'Tuscan\x20Revolver',
            'id': 0x12,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Coach\x20Barb',
            'id': 0xd,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Blossom',
            'id': 0xe,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'MD\x20Frag',
            'id': 0xf,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'SG\x20Olympus',
            'id': 0x10,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'SG\x20Tuscan',
            'id': 0x11,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Blushed\x20LMG',
            'id': 0xd,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Machinist\x20LMG',
            'id': 0xe,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Olympus\x20LMG',
            'id': 0xf,
            'weapon': 0x7,
            'rarity': 0x2
        }, {
            'name': 'Tuscan\x20LMG',
            'id': 0x10,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Barbed\x20Auto',
            'id': 0xe,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Blushed\x20MMA',
            'id': 0xf,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Auto\x20Machinist',
            'id': 0x10,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Olympus\x20MMA',
            'id': 0x11,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Tuscan\x20MMA',
            'id': 0x12,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Barbed\x20Launcher',
            'id': 0xd,
            'weapon': 0x9,
            'rarity': 0x2
        }, {
            'name': 'Blushed\x20Launcher',
            'id': 0xe,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Machinist\x20Launcher',
            'id': 0xf,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Olympus\x20Launcher',
            'id': 0x10,
            'weapon': 0x9,
            'rarity': 0x2
        }, {
            'name': 'Tuscan\x20Launcher',
            'id': 0x11,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Omen',
            'glow': !0x0,
            'id': 0x18,
            'creator': 'Zino',
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Scoped\x20Moss',
            'id': 0x19,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Swamped\x20Scope',
            'id': 0x1a,
            'weapon': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Tiger\x20Bolt',
            'id': 0x1b,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20Bolt',
            'id': 0x1c,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Necron\x20Bolt',
            'id': 0x1d,
            'weapon': 0x1,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Lava\x20Bolt',
            'id': 0x1e,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Sky\x20Bolt',
            'id': 0x1f,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'AWP\x20Iris',
            'id': 0x20,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Bolt\x20Wanderer',
            'id': 0x21,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'Mossy\x20Rifle',
            'id': 0x14,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Swamped\x20AK',
            'id': 0x15,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Tiger\x20Rifle',
            'id': 0x16,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20Rifle',
            'id': 0x17,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Plasma\x20Rifle',
            'id': 0x18,
            'weapon': 0x2,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Lava\x20Rifle',
            'id': 0x19,
            'weapon': 0x2,
            'glow': !0x0,
            'rarity': 0x3
        }, {
            'name': 'Sky\x20Rifle',
            'id': 0x1a,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Bark\x20AK',
            'id': 0x1b,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Rifle\x20Wanderer',
            'id': 0x1c,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Growth',
            'id': 0x13,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'SMG\x20Marsh',
            'id': 0x14,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Tigris',
            'id': 0x15,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Safari',
            'id': 0x16,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'Rapid\x20Plasma',
            'id': 0x17,
            'weapon': 0x4,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Lava\x20SMG',
            'id': 0x18,
            'weapon': 0x4,
            'rarity': 0x3,
            'glow': !0x0
        }, {
            'name': 'UMP\x20Atmos',
            'id': 0x19,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'Birch\x20SMG',
            'id': 0x1a,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Wanderer',
            'id': 0x1b,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Mossy\x20Python',
            'id': 0x13,
            'weapon': 0x5,
            'rarity': 0x1
        }, {
            'name': 'Swamped\x20Revolver',
            'id': 0x14,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Tiger\x20Python',
            'id': 0x15,
            'weapon': 0x5,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20Python',
            'id': 0x16,
            'weapon': 0x5,
            'rarity': 0x2
        }, {
            'name': 'Venomous',
            'creator': 'Rengar',
            'glow': !0x0,
            'id': 0x17,
            'weapon': 0x5,
            'rarity': 0x3
        }, {
            'name': 'Lava\x20Revolver',
            'id': 0x18,
            'weapon': 0x5,
            'rarity': 0x3
        }, {
            'name': 'Sky\x20Python',
            'id': 0x19,
            'weapon': 0x5,
            'rarity': 0x2,
            'glow': !0x0
        }, {
            'name': 'Bark\x20Python',
            'id': 0x1a,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Wanderer\x20Python',
            'id': 0x1b,
            'weapon': 0x5,
            'rarity': 0x0
        }, {
            'name': 'Gabrand',
            'id': 0x13,
            'weapon': 0x6,
            'rarity': 0x1
        }, {
            'name': 'Tennessee',
            'id': 0x14,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'SG\x20Tigris',
            'id': 0x15,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Safaris',
            'id': 0x16,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Neuromance',
            'id': 0x17,
            'weapon': 0x6,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Anatomis',
            'id': 0x18,
            'weapon': 0x6,
            'rarity': 0x3,
            'glow': !0x0
        }, {
            'name': 'Sky\x20Pump',
            'id': 0x19,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Bark\x20Slug',
            'id': 0x1a,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Slug\x20Wanderer',
            'id': 0x1b,
            'weapon': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Mossy\x20LMG',
            'id': 0x11,
            'weapon': 0x7,
            'rarity': 0x1
        }, {
            'name': 'Swamped\x20LMG',
            'id': 0x12,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Tiger\x20LMG',
            'id': 0x13,
            'weapon': 0x7,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20LMG',
            'id': 0x14,
            'weapon': 0x7,
            'rarity': 0x2
        }, {
            'name': 'Heavy\x20Plasma',
            'id': 0x15,
            'weapon': 0x7,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Lava\x20LMG',
            'id': 0x16,
            'weapon': 0x7,
            'rarity': 0x3
        }, {
            'name': 'Sky\x20LMG',
            'id': 0x17,
            'weapon': 0x7,
            'rarity': 0x2,
            'glow': !0x0
        }, {
            'name': 'Bark\x20LMG',
            'id': 0x18,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'LMG\x20Wanderer',
            'id': 0x19,
            'weapon': 0x7,
            'rarity': 0x0
        }, {
            'name': 'Overgrowth',
            'id': 0x13,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Marshland',
            'id': 0x14,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Tiger\x20MMA',
            'id': 0x15,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20MMA',
            'id': 0x16,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'MMA\x20Plasma',
            'id': 0x17,
            'weapon': 0x8,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Magnis',
            'id': 0x18,
            'weapon': 0x8,
            'rarity': 0x3,
            'glow': !0x0
        }, {
            'name': 'Sky\x20AUTO',
            'id': 0x19,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Bark\x20AUTO',
            'id': 0x1a,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'MMA\x20Wanderer',
            'id': 0x1b,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Mossy\x20Rocket',
            'id': 0x12,
            'weapon': 0x9,
            'rarity': 0x1
        }, {
            'name': 'Swamped\x20Launcher',
            'id': 0x13,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Tiger\x20Rocket',
            'id': 0x14,
            'weapon': 0x9,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20Launcher',
            'id': 0x15,
            'weapon': 0x9,
            'rarity': 0x2
        }, {
            'name': 'Plasma\x20Nuke',
            'id': 0x16,
            'weapon': 0x9,
            'rarity': 0x4,
            'glow': !0x0
        }, {
            'name': 'Lava\x20Rocket',
            'id': 0x17,
            'weapon': 0x9,
            'rarity': 0x3
        }, {
            'name': 'Sky\x20Launcher',
            'id': 0x18,
            'weapon': 0x9,
            'rarity': 0x2
        }, {
            'name': 'Bark\x20Launcher',
            'id': 0x19,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Wanderer\x20Rocket',
            'id': 0x1a,
            'weapon': 0x9,
            'rarity': 0x0
        }, {
            'name': 'Purple\x20Cap',
            'id': 0x2,
            'tex': 0x1,
            'type': 0x1,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x3,
            'xOff': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Bear\x20Mask',
            'id': 0x9,
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 1.3,
            'sitOff': 2.05,
            'yOff': -0x4,
            'xOff': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Panda\x20Mask',
            'id': 0x9,
            'tex': 0x1,
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 1.3,
            'sitOff': 2.05,
            'yOff': -0x4,
            'xOff': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Brown\x20Beard',
            'id': 0xb,
            'type': 0x1,
            'scl': 2.8,
            'sclMlt': 0.9,
            'sitOff': 0x2,
            'yOff': -0x3,
            'rarity': 0x2
        }, {
            'name': 'Blonde\x20Beard',
            'id': 0xb,
            'tex': 0x1,
            'type': 0x1,
            'scl': 2.8,
            'sclMlt': 0.9,
            'sitOff': 0x2,
            'yOff': -0x3,
            'rarity': 0x2
        }, {
            'name': 'Skull\x20Mask',
            'id': 0xc,
            'type': 0x1,
            'scl': 0x3,
            'glow': !0x0,
            'sclMlt': 1.05,
            'sitOff': 2.5,
            'sitOffZ': 1.1,
            'yOff': -4.5,
            'xOff': -0x3,
            'tex': 0x0,
            'rarity': 0x3
        }, {
            'name': 'Red\x20Beanie',
            'id': 0xd,
            'type': 0x1,
            'scl': 0x3,
            'sclMlt': 1.1,
            'sitOff': 0.4,
            'yOff': -0x3,
            'tex': 0x0,
            'rarity': 0x0
        }, {
            'name': 'Blue\x20Beanie',
            'id': 0xd,
            'type': 0x1,
            'scl': 0x3,
            'sclMlt': 1.1,
            'sitOff': 0.4,
            'yOff': -0x3,
            'tex': 0x1,
            'rarity': 0x0
        }, {
            'name': 'Krunk\x20Headset',
            'id': 0xe,
            'type': 0x1,
            'scl': 0x2,
            'sclMlt': 1.1,
            'sitOff': 1.4,
            'yOff': -0x4,
            'rarity': 0x2
        }, {
            'name': 'Cherry\x20Headset',
            'id': 0xe,
            'type': 0x1,
            'tex': 0x1,
            'scl': 0x2,
            'sclMlt': 1.1,
            'sitOff': 1.4,
            'yOff': -0x4,
            'rarity': 0x2
        }, {
            'name': 'Demonic\x20Wings',
            'id': 0x0,
            'type': 0x2,
            'glow': !0x0,
            'scl': 3.5,
            'sclMlt': 0x3,
            'xOff': -1.5,
            'sitOff': -1.3,
            'sitOffZ': -1.4,
            'yOff': -0x2,
            'rarity': 0x4
        }, {
            'name': 'Bass\x20Guitar',
            'id': 0x1,
            'type': 0x2,
            'scl': 0x4,
            'sclMlt': 3.8,
            'sitOff': -1.3,
            'sitOffZ': -0x1,
            'yOff': -0x2,
            'rarity': 0x2
        }, {
            'name': 'Samurai\x20Blades',
            'id': 0x2,
            'type': 0x2,
            'glow': !0x0,
            'scl': 0.00048112055276382,
            'sclMlt': 0.000406279577889448,
            'sitOff': -1.3,
            'sitOffZ': -0.95,
            'yOff': -0x1,
            'xOff': -0.5,
            'rarity': 0x3
        }, {
            'name': 'Blood\x20Harvest',
            'id': 0x3,
            'type': 0x2,
            'glow': !0x0,
            'scl': 5.1,
            'sclMlt': 0x5,
            'sitOff': -1.3,
            'sitOffZ': -0.95,
            'yOff': -0x1,
            'rarity': 0x3
        }, {
            'name': 'Panda\x20Body',
            'id': 0x4,
            'type': 0x2,
            'scl': 2.1,
            'sclMlt': 1.3,
            'sitOff': 2.2,
            'sitOffZ': 0x0,
            'yOff': -0x5,
            'rarity': 0x3
        }, {
            'name': 'Bear\x20Body',
            'id': 0x4,
            'tex': 0x1,
            'type': 0x2,
            'scl': 2.1,
            'sclMlt': 1.3,
            'sitOff': 2.2,
            'sitOffZ': 0x0,
            'yOff': -0x5,
            'rarity': 0x3
        }, {
            'name': 'Angelic\x20Wings',
            'id': 0x5,
            'type': 0x2,
            'glow': !0x0,
            'scl': 3.5,
            'sclMlt': 3.6,
            'xOff': -1.5,
            'sitOff': -1.3,
            'sitOffZ': -1.4,
            'yOff': -0x2,
            'rarity': 0x4
        }, {
            'name': 'Ninja\x20Mask',
            'id': 0xf,
            'glow': !0x0,
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 1.1,
            'sitOff': 2.05,
            'yOff': -0x4,
            'xOff': 0x0,
            'rarity': 0x3
        }, {
            'name': 'Halo',
            'id': 0x10,
            'glow': !0x0,
            'type': 0x1,
            'scl': 3.5,
            'sclMlt': 1.1,
            'sitOff': -0.65,
            'yOff': -0x1,
            'rarity': 0x3
        }, {
            'name': 'Welder\x20Mask',
            'type': 0x1,
            'scl': 2.5,
            'sitOff': 2.1,
            'yOff': -0x3,
            'xOff': 0x1,
            'id': 0x11,
            'rarity': 0x1
        }, {
            'name': 'Diver\x20Goggles',
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 0.9,
            'sitOff': 0x1,
            'yOff': -0x1,
            'id': 0x12,
            'rarity': 0x1
        }, {
            'name': 'Mad\x20Cap',
            'type': 0x1,
            'tex': 0x2,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x3,
            'xOff': 0x2,
            'id': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Ace\x20Cap',
            'type': 0x1,
            'tex': 0x3,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x3,
            'xOff': 0x2,
            'id': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Ice\x20Cap',
            'type': 0x1,
            'tex': 0x4,
            'scl': 2.5,
            'sitOff': 0.4,
            'yOff': -0x3,
            'xOff': 0x2,
            'id': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Soldier\x20Pack',
            'id': 0x6,
            'type': 0x2,
            'glow': !0x0,
            'scl': 2.6,
            'sclMlt': 1.8,
            'xOff': 0x1,
            'sitOff': 1.3,
            'sitOffZ': -1.75,
            'yOff': -0x5,
            'rarity': 0x1
        }, {
            'name': 'Robo\x20Wings',
            'id': 0x7,
            'type': 0x2,
            'glow': !0x0,
            'scl': 0x5,
            'sclMlt': 3.9,
            'xOff': -3.5,
            'sitOff': -1.3,
            'sitOffZ': -0.75,
            'yOff': -0x4,
            'rarity': 0x4
        }, {
            'name': 'Basket',
            'id': 0x8,
            'type': 0x2,
            'scl': 3.5,
            'sclMlt': 0x2,
            'xOff': -1.5,
            'sitOff': 0.75,
            'sitOffZ': -0.8,
            'yOff': -0x4,
            'rarity': 0x1
        }, {
            'name': 'Baby\x20Panda',
            'id': 0x9,
            'type': 0x2,
            'scl': 3.5,
            'sclMlt': 0x2,
            'xOff': 0x1,
            'sitOff': 0.75,
            'sitOffZ': -0.8,
            'yOff': -0x5,
            'xRot': Math['PI'],
            'rarity': 0x3
        }, {
            'name': 'Sturm\x20Helmet',
            'type': 0x1,
            'tex': 0x1,
            'scl': 2.8,
            'sclMlt': 0x1,
            'sitOff': 0.65,
            'yOff': -2.5,
            'id': 0x4,
            'rarity': 0x1
        }, {
            'name': 'Brown\x20Afro',
            'type': 0x1,
            'tex': 0x1,
            'scl': 0x2,
            'sclMlt': 0.9,
            'sitOff': 1.4,
            'yOff': -0x4,
            'id': 0x6,
            'rarity': 0x0
        }, {
            'name': 'Acid\x20Skull',
            'id': 0xc,
            'type': 0x1,
            'tex': 0x1,
            'scl': 0x3,
            'glow': !0x0,
            'sclMlt': 1.05,
            'sitOff': 2.5,
            'sitOffZ': 1.1,
            'yOff': -4.5,
            'xOff': -0x3,
            'rarity': 0x3
        }, {
            'name': 'Uranium',
            'type': 0x1,
            'tex': 0x1,
            'scl': 2.5,
            'sitOff': 2.1,
            'yOff': -0x3,
            'xOff': 0x1,
            'id': 0x11,
            'rarity': 0x2
        }, {
            'name': 'Panda\x20King',
            'id': 0x13,
            'glow': !0x0,
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 1.3,
            'sitOff': 2.05,
            'yOff': -0x4,
            'xOff': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Kolt\x20Rifle',
            'creator': 'iSpy',
            'id': 0x23,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Pace\x20Dore',
            'id': 0x22,
            'glow': !0x0,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Shot\x20Element',
            'creator': 'Electrode_',
            'glow': !0x0,
            'id': 0x1c,
            'weapon': 0x6,
            'rarity': 0x3
        }, {
            'name': 'Warp\x20Sequence',
            'creator': 'Electrode_',
            'id': 0x1c,
            'glow': !0x0,
            'weapon': 0x4,
            'rarity': 0x4
        }, {
            'name': 'Radioactive',
            'creator': 'Electrode_',
            'glow': !0x0,
            'id': 0x1d,
            'weapon': 0x5,
            'rarity': 0x4
        }, {
            'name': 'Targeted',
            'creator': 'Subza',
            'glow': !0x0,
            'id': 0x1c,
            'weapon': 0x5,
            'rarity': 0x3
        }, {
            'name': 'Robot\x20Helmet',
            'type': 0x1,
            'glow': !0x0,
            'scl': 2.4,
            'sclMlt': 0x1,
            'sitOff': 0x2,
            'yOff': -3.4,
            'id': 0x14,
            'rarity': 0x3
        }, {
            'name': 'Knight\x20Helmet',
            'type': 0x1,
            'scl': 2.3,
            'sclMlt': 0x1,
            'sitOff': 0x2,
            'yOff': -3.2,
            'id': 0x15,
            'rarity': 0x3
        }, {
            'name': 'Cat\x20Ears',
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 1.2,
            'sitOff': 1.65,
            'yOff': -3.2,
            'id': 0x16,
            'rarity': 0x2
        }, {
            'name': 'Snowman',
            'type': 0x1,
            'scl': 2.2,
            'sclMlt': 0x1,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x17,
            'rarity': 0x2
        }, {
            'name': 'Trendy\x20Biker',
            'type': 0x1,
            'scl': 2.2,
            'sclMlt': 0x1,
            'sitOff': 1.8,
            'yOff': -3.2,
            'id': 0x18,
            'rarity': 0x3
        }, {
            'name': 'Golden\x20Crown',
            'type': 0x1,
            'glow': !0x0,
            'scl': 2.4,
            'sclMlt': 0x1,
            'sitOff': 0.65,
            'yOff': -3.2,
            'id': 0x19,
            'rarity': 0x3
        }, {
            'name': 'Master\x20Drinker',
            'type': 0x1,
            'scl': 2.4,
            'sclMlt': 0x1,
            'sitOff': 0.65,
            'yOff': -2.7,
            'id': 0x1a,
            'rarity': 0x3
        }, {
            'name': 'Pig\x20Head',
            'type': 0x1,
            'scl': 2.5,
            'sclMlt': 0x1,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x1b,
            'rarity': 0x3
        }, {
            'name': 'Red\x20Bandana',
            'type': 0x1,
            'scl': 2.2,
            'sclMlt': 0x1,
            'sitOff': 1.6,
            'yOff': -3.2,
            'id': 0x1c,
            'rarity': 0x1
        }, {
            'name': 'Sheriff',
            'type': 0x1,
            'scl': 2.2,
            'sclMlt': 0x1,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x1d,
            'rarity': 0x4
        }, {
            'name': 'Bandit',
            'type': 0x1,
            'glow': !0x0,
            'scl': 2.2,
            'sclMlt': 0x1,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x1e,
            'rarity': 0x4
        }, {
            'name': 'Vlaine',
            'creator': 'Hoodgail',
            'id': 0x24,
            'weapon': 0x1,
            'rarity': 0x1
        }, {
            'name': 'AWP\x20Supersport',
            'creator': 'Kitter',
            'id': 0x25,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Reine',
            'id': 0x26,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Melted',
            'glow': !0x0,
            'id': 0x27,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Viper',
            'glow': !0x0,
            'id': 0x28,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Razor',
            'glow': !0x0,
            'id': 0x29,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Lazor',
            'id': 0x1d,
            'glow': !0x0,
            'weapon': 0x2,
            'rarity': 0x4
        }, {
            'name': 'Uzera',
            'creator': 'Hoodgail',
            'id': 0x2,
            'glow': !0x0,
            'weapon': 0xa,
            'rarity': 0x4
        }, {
            'name': 'Tazor',
            'creator': 'Hoodgail',
            'glow': !0x0,
            'id': 0x7,
            'weapon': 0xa,
            'rarity': 0x3
        }, {
            'name': 'Dual\x20Woodland',
            'id': 0x0,
            'weapon': 0xa,
            'rarity': 0x1
        }, {
            'name': 'Flecken\x20Uzi',
            'id': 0x1,
            'weapon': 0xa,
            'rarity': 0x1
        }, {
            'name': 'Dual\x20Seafarer',
            'id': 0x3,
            'weapon': 0xa,
            'rarity': 0x2
        }, {
            'name': 'Rapid\x20Digital',
            'id': 0x4,
            'weapon': 0xa,
            'rarity': 0x1
        }, {
            'name': 'Sap\x20Uzi',
            'id': 0x5,
            'weapon': 0xa,
            'rarity': 0x0
        }, {
            'name': 'Torn\x20Dual',
            'id': 0x6,
            'weapon': 0xa,
            'rarity': 0x1
        }, {
            'name': 'Haste',
            'glow': !0x0,
            'id': 0x2a,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Leine',
            'creator': 'Hoodgail',
            'id': 0x2b,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Lore',
            'glow': !0x0,
            'id': 0x2c,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Reaver',
            'glow': !0x0,
            'id': 0x2d,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Splixen',
            'glow': !0x0,
            'id': 0x2e,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'AWP\x20Stream',
            'creator': 'Electrode_',
            'glow': !0x0,
            'id': 0x2f,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Circuit',
            'creator': 'Electrode_',
            'glow': !0x0,
            'id': 0x1e,
            'weapon': 0x2,
            'rarity': 0x4
        }, {
            'name': 'SMG\x20Iris',
            'id': 0x1d,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Venom',
            'id': 0x1e,
            'weapon': 0x4,
            'rarity': 0x2,
            'glow': !0x0
        }, {
            'name': 'SMG\x20Wingman',
            'id': 0x1f,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'x0n-voX',
            'creator': '???',
            'pat': 0x0,
            'tex': 'weapons/pat/0',
            'dot': 'dot_1',
            'sameGlow': !0x0,
            'movT': 0.0001,
            'weapon': 0x4,
            'rarity': 0x5
        }, {
            'name': '1Ad-dA0',
            'creator': '???',
            'pat': 0x0,
            'tex': 'weapons/pat/0',
            'dot': 'dot_1',
            'sameGlow': !0x0,
            'movT': 0.0001,
            'weapon': 0x2,
            'rarity': 0x5
        }, {
            'name': 'Raynb0w',
            'creator': '???',
            'pat': 0x1,
            'tex': 'weapons/pat/1',
            'dot': 'dot_1',
            'sameGlow': !0x0,
            'movT': 0.0015,
            'weapon': 0x2,
            'rarity': 0x5
        }, {
            'name': 'Raynb0w',
            'creator': '???',
            'pat': 0x1,
            'tex': 'weapons/pat/1',
            'dot': 'dot_1',
            'sameGlow': !0x0,
            'movT': 0.0015,
            'weapon': 0x4,
            'rarity': 0x5
        }, {
            'name': 'UMP\x20Saphire',
            'id': 0x20,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Jade',
            'id': 0x21,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Plexus',
            'id': 0x22,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Lapis',
            'id': 0x23,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Perplex',
            'id': 0x24,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'UMP\x20Torpe',
            'id': 0x25,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Como',
            'id': 0x26,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Liquid',
            'id': 0x27,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Clementine',
            'id': 0x28,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'Dropper',
            'id': 0x29,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'SMG\x20Auburn',
            'id': 0x2a,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Laurel',
            'id': 0x2b,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Crimson',
            'id': 0x2c,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Azure',
            'id': 0x2d,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'Laguna',
            'id': 0x2e,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Cygenta',
            'id': 0x2f,
            'weapon': 0x4,
            'rarity': 0x1
        }, {
            'name': 'UMP\x20Cygentro',
            'id': 0x30,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'Chartreuse',
            'id': 0x31,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'UMP\x20Tortobe',
            'id': 0x32,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'UMP\x20Octo',
            'id': 0x33,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'UMP\x20Versate',
            'id': 0x34,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'SMG\x20Purpur',
            'id': 0x35,
            'weapon': 0x4,
            'rarity': 0x2
        }, {
            'name': 'Leaf',
            'id': 0x36,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Flame',
            'id': 0x37,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Aqua',
            'id': 0x38,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'Gravel',
            'id': 0x39,
            'weapon': 0x4,
            'rarity': 0x0
        }, {
            'name': 'AR\x20Saphire',
            'id': 0x1f,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'AR\x20Jade',
            'id': 0x20,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'AR\x20Plexus',
            'id': 0x21,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'AR\x20Lapis',
            'id': 0x22,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Perplex',
            'id': 0x23,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Trople',
            'id': 0x24,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'AR\x20Altis',
            'id': 0x25,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Liquid',
            'id': 0x26,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Clementine',
            'id': 0x27,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Dropper',
            'id': 0x28,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Laurel',
            'id': 0x29,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Crimson',
            'id': 0x2a,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Azure',
            'id': 0x2b,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Laguna',
            'id': 0x2c,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Cygenta',
            'id': 0x2d,
            'weapon': 0x2,
            'rarity': 0x1
        }, {
            'name': 'Cygento',
            'id': 0x2e,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Chartreuse',
            'id': 0x2f,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Tortobe',
            'id': 0x30,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'AK\x20Octo',
            'id': 0x31,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Versate',
            'id': 0x32,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Purpur',
            'id': 0x33,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Leaf',
            'id': 0x34,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Flame',
            'id': 0x35,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Aqua',
            'id': 0x36,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Gravel',
            'id': 0x37,
            'weapon': 0x2,
            'rarity': 0x0
        }, {
            'name': 'Saphire',
            'id': 0x1c,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Jade',
            'id': 0x1d,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Plexus',
            'id': 0x1e,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Lapis',
            'id': 0x1f,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Perplexum',
            'id': 0x20,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Torped',
            'id': 0x21,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Commo',
            'id': 0x22,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'MMA\x20Liquid',
            'id': 0x23,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Dropper',
            'id': 0x24,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'MMA\x20Auburn',
            'id': 0x25,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'MMA\x20Laurel',
            'id': 0x26,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'MMA\x20Crimson',
            'id': 0x27,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'MMA\x20Azure',
            'id': 0x28,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'MMA\x20Laguna',
            'id': 0x29,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'MMA\x20Cygneta',
            'id': 0x2a,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'MMA\x20Cygneto',
            'id': 0x2b,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'M14\x20Chartreuse',
            'id': 0x2c,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'MMA\x20Tortobe',
            'id': 0x2d,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'MMA\x20Octo',
            'id': 0x2e,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'MMA\x20Versate',
            'id': 0x2f,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'MMA\x20Purpur',
            'id': 0x30,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Nature',
            'id': 0x31,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Flame',
            'id': 0x32,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Aqua',
            'id': 0x33,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Earth',
            'id': 0x34,
            'weapon': 0x8,
            'rarity': 0x0
        }, {
            'name': 'Black\x20Ice',
            'creator': 'Electrode_',
            'id': 0x35,
            'weapon': 0x8,
            'rarity': 0x2
        }, {
            'name': 'Mach\x203',
            'creator': 'Jytesh',
            'id': 0x36,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Bloodripper',
            'creator': 'Jytesh',
            'id': 0x37,
            'weapon': 0x8,
            'rarity': 0x1
        }, {
            'name': 'Theta',
            'creator': 'Floatingpoint',
            'id': 0x30,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Raynb0w',
            'creator': '???',
            'pat': 0x1,
            'tex': 'weapons/pat/1',
            'dot': 'dot_1',
            'sameGlow': !0x0,
            'movT': 0.0015,
            'weapon': 0x1,
            'rarity': 0x5
        }, {
            'name': 'Diablo\x20Wings',
            'id': 0xa,
            'type': 0x2,
            'scl': 0.0005593478391959849,
            'sclMlt': 0.0006552360402010109,
            'xOff': -0x3,
            'sitOff': -1.3,
            'sitOffZ': -1.4,
            'yOff': -0x2,
            'rarity': 0x4
        }, {
            'name': 'AK\x20Gold\x20Rush',
            'creator': '_irizu',
            'id': 0x38,
            'weapon': 0x2,
            'rarity': 0x3
        }, {
            'name': 'AK\x20Mortal',
            'creator': '_irizu',
            'glow': !0x0,
            'id': 0x39,
            'weapon': 0x2,
            'rarity': 0x4
        }, {
            'name': 'nV\x20Dragon',
            'creator': 'nightly-build7',
            'id': 0x33,
            'weapon': 0x1,
            'rarity': 0x3
        }, {
            'name': 'Cherry\x20Blossom',
            'creator': 'jonschmiddy',
            'id': 0x32,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Vapormoon',
            'creator': 'jonschmiddy',
            'id': 0x3a,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Tesselate',
            'creator': 'jonschmiddy',
            'id': 0x3b,
            'weapon': 0x2,
            'rarity': 0x2
        }, {
            'name': 'Polydrive',
            'creator': 'Ziggy',
            'id': 0x31,
            'weapon': 0x1,
            'rarity': 0x2
        }, {
            'name': 'Safran',
            'id': 0x1d,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Purple\x20Rain',
            'id': 0x1e,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Cobra',
            'id': 0x1f,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Spectrum',
            'id': 0x20,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Anodized',
            'creator': 'Blitz-.',
            'id': 0x21,
            'weapon': 0x6,
            'rarity': 0x3
        }, {
            'name': 'Blunderbuss',
            'creator': 'Blitz-.',
            'id': 0x22,
            'weapon': 0x6,
            'rarity': 0x2
        }, {
            'name': 'Tv\x20Tron\x20A',
            'type': 0x1,
            'glow': !0x0,
            'scl': 0x1,
            'sclMlt': 0.6,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x20,
            'rarity': 0x4
        }, {
            'name': 'Tv\x20Tron\x20B',
            'tex': 0x1,
            'type': 0x1,
            'glow': !0x0,
            'scl': 0x1,
            'sclMlt': 0.6,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x20,
            'rarity': 0x4
        }, {
            'name': 'Hollow\x20Fade',
            'keyW': 'Knife',
            'animInd': 0x1,
            'glow': !0x0,
            'tex': 0x2,
            'id': 0x0,
            'type': 0x3,
            'scl': 0x2,
            'sclMlt': 0.9,
            'yOff': -0x2,
            'rarity': 0x5
        }, {
            'name': 'Tv\x20Tron\x20C',
            'tex': 0x2,
            'type': 0x1,
            'glow': !0x0,
            'scl': 0x1,
            'sclMlt': 0.6,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x20,
            'rarity': 0x4
        }, {
            'name': 'Tv\x20Tron\x20D',
            'tex': 0x3,
            'type': 0x1,
            'glow': !0x0,
            'scl': 0x1,
            'sclMlt': 0.6,
            'sitOff': 2.05,
            'yOff': -3.2,
            'id': 0x20,
            'rarity': 0x4
        }, {
            'name': 'AWP\x20Dazzle',
            'glow': !0x0,
            'id': 0x35,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Octodance',
            'glow': !0x0,
            'id': 0x36,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Ice\x20Fade',
            'glow': !0x0,
            'id': 0x37,
            'weapon': 0x1,
            'rarity': 0x4
        }, {
            'name': 'Frostlance',
            'keyW': 'Knife',
            'animInd': 0x1,
            'glow': !0x0,
            'tex': 0x3,
            'id': 0x0,
            'type': 0x3,
            'scl': 0x2,
            'sclMlt': 0.9,
            'yOff': -0x2,
            'rarity': 0x5
        }, {
            'name': 'Frostbite',
            'keyW': 'Axe',
            'animInd': 0x1,
            'glow': !0x0,
            'id': 0x1,
            'type': 0x3,
            'scl': 0x2,
            'sclMlt': 0.9,
            'yOff': -0.5,
            'rarity': 0x6
        }, {
            'name': 'Arctic',
            'id': 0x0,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'Autumn\x20Burst',
            'id': 0x1,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'Reticle\x20Burst',
            'id': 0x2,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'Digital\x20Burst',
            'id': 0x3,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'Bushwalker',
            'id': 0x4,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'Woodland',
            'id': 0x5,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'Burst\x20Hazard',
            'id': 0x6,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'Kodac\x20Famas',
            'id': 0x7,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'Seafarer\x20G2',
            'id': 0x8,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'G2\x20Trail',
            'id': 0x9,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'Burst\x20Fade',
            'id': 0xa,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'G2\x20Puma',
            'id': 0xb,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'Burst\x20Carbo',
            'id': 0xc,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'G2\x20Barb',
            'id': 0xd,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'F1\x20Blush',
            'id': 0xe,
            'weapon': 0xf,
            'rarity': 0x0
        }, {
            'name': 'Machinist',
            'id': 0xf,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'Triple\x20Olympus',
            'id': 0x10,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'Honey\x20Badger',
            'id': 0x11,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'G2\x20Moss',
            'id': 0x12,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'F1\x20Marshland',
            'id': 0x13,
            'weapon': 0xf,
            'rarity': 0x1
        }, {
            'name': 'G2\x20Tigris',
            'id': 0x14,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'Zebra\x20Burst',
            'id': 0x15,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'Skyfarer',
            'id': 0x16,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'Commando\x20Fade',
            'id': 0x17,
            'weapon': 0xf,
            'rarity': 0x2
        }, {
            'name': 'Mindseeker',
            'id': 0x18,
            'glow': !0x0,
            'weapon': 0xf,
            'rarity': 0x4
        }, {
            'name': 'Intervention\x20VI',
            'mid': 0x0,
            'glow': !0x0,
            'pulsT': 0.0015,
            'scl': 0.00094830394974876,
            'mScl': 0.0010536710552764,
            'zOff': -0.25,
            'yOff': 0.05,
            'weapon': 0x1,
            'rarity': 0x5
        }, {
            'name': 'Intervention\x20XI',
            'mid': 0x0,
            'midT': 'weapons/weapon_1_1',
            'glow': !0x0,
            'pulsT': 0.0015,
            'scl': 0.00094830394974876,
            'mScl': 0.0010536710552764,
            'zOff': -0.25,
            'yOff': 0.05,
            'weapon': 0x1,
            'rarity': 0x5
        }];
    }
    , function(c6d, c6e, c6f) {
        var c6g;
        try {
            window && (c6g = c6f(0x4));
        } catch (c6h) {}
        var c6i = function(c6d, c6e, c6f, c6g, c6i) {
            var c6o;
            this['id'] = c6d,
            this['sentTo'] = [],
            this['inputs'] = [],
            this['spins'] = [],
            this['stateHistory'] = [],
            this['weaponMeshes'] = [],
            this['weaponGeos'] = {},
            this['legMeshes'] = [],
            this['armMeshes'] = [],
            this['lastInput'] = [],
            this['lastDeltas'] = [],
            this['reloads'] = [],
            this['ammos'] = [],
            this['ping'] = 0x0,
            this['pings'] = [],
            this['avgSpn'] = 0x0,
            this['score'] = 0x0,
            this['scoreObjs'] = {},
            this['checkPoint'] = null,
            this['checkPointList'] = [],
            this['lstDrs'] = [],
            this['convs'] = 0x0,
            this['timer'] = null,
            this['gameTimer'] = null,
            this['kills'] = 0x0,
            this['deaths'] = 0x0,
            this['assists'] = 0x0,
            this['melees'] = 0x0,
            this['setbacks'] = 0x0,
            this['caps'] = 0x0,
            this['deathStreak'] = 0x0,
            this['level'] = 0x0,
            this['lives'] = c6i['waitTimers'] && c6i['config'] && (c6i['config']['lives'] || c6i['mode']['lives']) || 0x0,
            this['deltaAdd'] = 0x0,
            this['deltaDiv'] = 0x1,
            this['sprayIndex'] = 0x0,
            this['hatIndex'] = -0x1,
            this['backIndex'] = -0x1,
            this['meleeIndex'] = -0x1,
            this['skinColIndex'] = -0x1,
            this['lastSpray'] = 0x0,
            this['lastInteract'] = 0x0,
            this['lastPicked'] = [],
            this['playTime'] = 0x0,
            this['logTime'] = 0x0,
            this['lastCheck'] = 0x0,
            this['sCount'] = 0x0,
            this['streaks'] = {},
            this['weaponTier'] = 0x0,
            this['init'] = function(c6d, c6e, c6f, c6o, c6t, c6u) {
                this['x'] = c6d,
                this['y'] = c6e,
                this['z'] = c6f,
                this['stepSrc'] = null,
                this['name'] = c6o || 'unknown',
                this['xVel'] = 0x0,
                this['yVel'] = 0x0,
                this['zVel'] = 0x0,
                this['lastInObj'] = 0x0,
                this['renderMinimal'] = !0x1,
                this['spins']['length'] = 0x0,
                this['noMovTimer'] = 0x0,
                this['xDire'] = 0x0,
                this['yDire'] = 0x0,
                this['hitTimer'] = 0x0,
                this['ticker'] = 0x0,
                this['spread'] = 0x0,
                this['spreadPlus'] = 0x0,
                this['aimVal'] = 0x1,
                this['aimDir'] = 0x0,
                this['aimTime'] = 0x0,
                this['streak'] = 0x0,
                this['killStreak'] = 0x0,
                this['realKillStreak'] = 0x0,
                this['lastKill'] = 0x0,
                this['stateHistory']['length'] = 0x0,
                this['lastInput']['length'] = 0x0,
                this['swapTweenA'] = 0x0,
                this['dmgReceived'] = {},
                this['landBobY'] = 0x0,
                this['landBobYR'] = 0x0,
                this['jumpBobY'] = 0x0,
                this['slideTimer'] = 0x0,
                this['canSlide'] = !0x0,
                this['leanAnimX'] = 0x0,
                this['leanAnimY'] = 0x0,
                this['leanAnimZ'] = 0x0,
                this['bobAnimZ'] = 0x0,
                this['bobAnimY'] = 0x0,
                this['idleAnim'] = 0x0,
                this['inspecting'] = !0x1,
                this['inspectX'] = !0x1,
                this['stepVal'] = 0x0,
                this['stepChase'] = 0x0,
                this['stepDir'] = 0x1,
                this['stepDirR'] = 0x1,
                this['reward'] = 0x0,
                this['recoilAnim'] = 0x0,
                this['recoilAnimY'] = 0x0,
                this['recoilForce'] = 0x0,
                this['recoilTweenY'] = 0x0,
                this['recoilTweenYM'] = 0x0,
                this['recoilTweenZ'] = 0x0,
                this['burstCount'] = 0x0,
                this['jumpRot'] = 0x0,
                this['jumpRotM'] = 0x0,
                this['slideLegV'] = 0x0,
                this['recoilX'] = 0x0,
                this['recoilZ'] = 0x0,
                this['crouchVal'] = 0x0,
                this['onGround'] = !0x0,
                this['onLadder'] = !0x1,
                this['terrainSlipping'] = !0x1,
                this['rampFix'] = null,
                this['didJump'] = !0x1,
                this['jumpCooldown'] = 0x0,
                this['didShoot'] = !0x1,
                this['lodActive'] = !0x1,
                this['locked'] = !0x1,
                this['latestData'] = !0x1,
                this['airTime'] = 0x0,
                this['height'] = c6g['playerHeight'],
                this['headScale'] = c6g['cameraHeight'],
                this['scale'] = c6g['playerScale'],
                this['active'] = !0x0,
                this['interpolate'] = !0x1,
                this['isYou'] = c6t,
                this['sentTo']['length'] = 0x0,
                this['inputSN'] = 0x0,
                this['inputs']['length'] = 0x0,
                this['weaponIndex'] = 0x0,
                this['swapTime'] = 0x0,
                this['recon'] = !0x1,
                this['inView'] = !0x1,
                this['meleeAnim'] = {},
                this['isHacker'] = c6u,
                this['customLoadout'] = null,
                this['lastCheck'] = c6i['now'],
                this['lastPicked']['length'] = 0x0,
                this['propID'] = 0x0,
                this['weaponTier'] = 0x0,
                this['inObject'] = null;
            }
            ,
            this['setClass'] = function(c6d, c6e, c6i, c6o) {
                c6o || (c6d['config'] && 0x0 > c6d['config']['classes']['indexOf'](c6e) && (c6e != c6d['config']['classes'][0x0] && (this['skins'] = [-0x1, -0x1]),
                c6e = c6d['config']['classes'][0x0]),
                c6d['mode'] && (c6d['mode']['noWeap'] && (c6e = 0x9),
                c6d['mode']['teamClass'] && c6d['mode']['teamClass'][this['team']] && (c6e = c6d['mode']['teamClass'][this['team']],
                this['skins'] = [-0x1, -0x1]))),
                (null == c6e || null == c6e) && (c6e = c6d['classes']['length'] - 0x1),
                this['classIndex'] = c6e,
                this['reloads']['length'] = 0x0,
                this['ammos']['length'] = 0x0,
                this['loadout'] = [c6d['classes'][c6e]['loadout'][0x0]],
                !!c6d['config'] && c6d['config']['noSecondary'] || (c6d['classes'][c6e]['secondary'] ? c6f['isNumber'](c6i) && this['loadout']['push'](c6i) : this['secIndex'] = null),
                0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc),
                this['speed'] = c6d['classes'][c6e]['speed'] || 0x1;
                for (var c6z = 0x0; c6z < this['loadout']['length']; ++c6z)
                    this['reloads']['push'](0x0),
                    this['ammos']['push'](c6d['weapons'][this['loadout'][c6z]]['ammo']);
                this['reloadTimer'] = 0x0,
                this['regenDelay'] = c6d['classes'][c6e]['regenDelay'] || c6g['regenDelay'],
                this['maxHealth'] = c6d['classes'][c6e]['health'] * (c6d['config'] && c6d['config']['healthMlt'] || 0x1),
                this['health'] = this['maxHealth'],
                this['hpChase'] = 0x1,
                this['regen'] = c6d['mode'] && c6d['mode']['noRegen'] ? 0x0 : c6d['classes'][c6e]['regen'] || c6g['regenVal'];
            }
            ,
            this['updateLoadout'] = function(c6d, c6g, c6i=!0x0, c6o, c6E) {
                this['weaponIndex'] = c6g,
                this['reloads']['length'] = 0x0,
                this['ammos']['length'] = 0x0,
                this['loadout'] = [c6o],
                this['skins'] = [-0x1, -0x1],
                c6f['isNumber'](c6E) && this['loadout']['push'](c6E),
                c6f['isNumber'](c6E) && (this['secIndex'] = c6E),
                0x0 > this['loadout']['indexOf'](0xc) && this['loadout']['push'](0xc);
                for (var c6F = 0x0; c6F < this['loadout']['length']; ++c6F)
                    this['reloads']['push'](0x0),
                    this['ammos']['push'](c6d['weapons'][this['loadout'][c6F]]['ammo']);
                this['customLoadout'] = [...this['loadout']],
                c6i && this['active'] && c6e['regenMeshes'](this);
            }
            ,
            this['resetInputs'] = function() {
                this['inputs']['length'] = 0x0;
            }
            ,
            this['procInputs'] = function(c6d, c6i, c6I) {
                this['recon'] = c6I;
                var c6J = Math['max'](0x0, Math['min'](c6d[0x1], c6g['dltMx'])) / this['deltaDiv'];
                this['inputSN'] = c6d[0x0];
                var c6K = c6f['getAngleDst'](c6d[0x2], this['xDire']);
                c6e['saveSpin'](this, c6K);
                var c6L = !c6I && this['isYou'];
                if (c6L && (this['leanAnimX'] -= c6K * c6g['leanSens'],
                this['leanAnimX'] = c6f['limit'](this['leanAnimX'], c6g['leanMax']),
                this['leanAnimY'] -= c6f['getAngleDst'](c6d[0x3], this['yDire']) * c6g['leanSens'],
                this['leanAnimY'] = c6f['limit'](this['leanAnimY'], c6g['leanMax']),
                this['leanAnimX'] && (this['leanAnimX'] *= Math['pow'](c6g['leanPull'], c6J)),
                this['leanAnimY'] && (this['leanAnimY'] *= Math['pow'](c6g['leanPull'], c6J)),
                this['leanAnimZ'] && (this['leanAnimZ'] *= Math['pow'](c6g['leanPullZ'], c6J)),
                this['bobAnimZ'] && (this['bobAnimZ'] *= Math['pow'](c6g['bobPullZ'], c6J)),
                this['bobAnimY'] && (this['bobAnimY'] *= Math['pow'](c6g['bobPullY'], c6J)),
                this['recoilX'] && (this['recoilX'] *= Math['pow'](c6g['leanPull'], c6J)),
                this['recoilZ'] && (this['recoilZ'] *= Math['pow'](c6g['leanPull'], c6J)),
                this['inspecting'] && this['inspectX'] < Math['PI'] / 2.8 && (this['inspectX'] += 0.1 * (Math['PI'] / 2.8 - this['inspectX']))),
                0x2 == c6d[0xb] ? c6e['swapMelee'](this, c6I) : 0x1 == c6d[0xb] ? c6e['swapSecondary'](this, c6I) : 0x3 == c6d[0xb] ? c6e['swapWeapon'](this, null, null, void 0x0, 0x0, c6I) : c6d[0xa] && c6e['swapWeapon'](this, c6d[0xa], !0x1, void 0x0, void 0x0, c6I),
                c6I || (this['recoilForce'] && (this['recoilAnim'] += this['recoilForce'] * c6J,
                this['recoilAnimY'] += this['recoilForce'] * (this['weapon']['recoilY'] || 0x1) * (0x1 - 0.3 * this['crouchVal']) * c6J,
                this['recoilForce'] *= Math['pow'](this['weapon']['recoverF'], c6J)),
                this['recoilAnim'] && (this['recoilAnim'] *= Math['pow'](this['weapon']['recover'], c6J)),
                this['recoilAnimY'] && (this['recoilAnimY'] *= Math['pow'](this['weapon']['recoverY'] || this['weapon']['recover'], c6J))),
                this['xDire'] = (c6d[0x2] || 0x0)['round'](0x3),
                this['yDire'] = (c6d[0x3] || 0x0)['round'](0x3),
                this['yDire'] > Math['PI'] / 0x2 ? this['yDire'] = Math['PI'] / 0x2 : this['yDire'] < -Math['PI'] / 0x2 && (this['yDire'] = -Math['PI'] / 0x2),
                this['oldX'] = this['x'],
                this['oldY'] = this['y'],
                this['oldZ'] = this['z'],
                this['weapon']['zoom'] && 'prop' != this['team'] && (!this['weapon']['noAim'] || 0x0 < this['swapTime'])) {
                    var c6M = 0x0 >= this['reloadTimer'] && 0x0 >= this['swapTime'];
                    c6d[0x6] && 0x0 < this['aimVal'] && c6M ? (c6e['cancelInspect'](this),
                    this['aimDir'] = 0x0,
                    this['aimVal'] -= 0x1 / (this['weapon']['aimSpeed'] / c6J),
                    0x0 >= this['aimVal'] && (this['aimVal'] = 0x0,
                    this['isYou'] && !c6I && c6e['toggleAim'](this, 0x1)),
                    this['isYou'] && !c6I && !this['weapon']['scope'] && c6e['updateAim'](this, 0x1 - this['aimVal'])) : (!c6M || !c6d[0x6] && 0x1 > this['aimVal']) && (this['aimDir'] = 0x1,
                    !this['aimVal'] && this['isYou'] && !c6I && c6e['toggleAim'](this, 0x0),
                    this['aimVal'] += 0x1 / (this['weapon']['aimSpeed'] / c6J),
                    0x1 <= this['aimVal'] && (this['aimVal'] = 0x1),
                    this['isYou'] && !c6I && !this['weapon']['scope'] && c6e['updateAim'](this, 0x1 - this['aimVal'])),
                    0x0 == this['aimVal'] ? this['aimTime'] += c6J : this['aimTime'] = 0x0;
                }
                c6d[0x8] && 0x1 > this['crouchVal'] && !this['onLadder'] ? (this['crouchVal'] += c6g['crouchSpeed'] * c6J,
                0x1 <= this['crouchVal'] && (this['crouchVal'] = 0x1),
                this['onGround'] ? c6L && (this['bobAnimY'] -= 1.4 * c6g['crouchAnim'] * c6J) : this['y'] += c6g['crouchSpeed'] * c6J) : !c6d[0x8] && 0x0 < this['crouchVal'] && (this['crouchVal'] -= c6g['crouchSpeed'] * c6J,
                0x0 >= this['crouchVal'] && (this['crouchVal'] = 0x0),
                this['onGround'] ? c6L && (this['bobAnimY'] += c6g['crouchAnim'] * c6J) : this['y'] -= c6g['crouchSpeed'] * c6J),
                this['crouchVal'] && (this['crouchVal'] = this['crouchVal']['round'](0x3)),
                c6e['updateHeight'](this);
                var c6N, c6O = this['onGround'] || this['onLadder'];
                c6N = c6O ? (this['terrainSlipping'] ? c6g['slippingSpeed'] : c6g['playerSpeed']) * this['speed'] : c6g['airSpeed'],
                c6N *= this['aimVal'] ? 0x1 : c6g['aimSlow'],
                c6N *= c6i['mode']['spdMlt'] && c6i['mode']['spdMlt'][this['team']] || 0x1,
                c6N *= this['crouchVal'] ? c6g['crouchSlow'] : 0x1,
                c6N *= this['weapon']['spdMlt'] * c6J;
                var c6P = 0x0;
                if (c6P = this['onLadder'] ? c6g['ladderDecel'] : this['terrainSlipping'] ? c6g['terrainSlipDecel'] : this['onTerrain'] ? c6g['terrainDecel'] : this['onGround'] ? c6g['groundDecel'] : c6g['airDecel'],
                0.5 >= this['crouchVal'] && (this['canSlide'] = !0x0),
                this['onGround'] && this['crouchVal'] || (this['slideTimer'] = 0x0),
                this['slideTimer'])
                    if (this['slideTimer'] -= c6J,
                    0x0 >= this['slideTimer'])
                        this['slideTimer'] = 0x0;
                    else {
                        c6N *= 0.25,
                        c6P = this['onTerrain'] ? c6g['terrainSlideDecel'] : c6g['slideDecel'];
                        var c6Q = c6f['getDistance'](this['xVel'], this['zVel'], 0x0, 0x0)
                          , c6R = c6f['getDirection'](0x0, 0x0, this['xVel'], this['zVel'])
                          , c6S = c6f['getDirection'](Math['sin'](this['xDire']), Math['cos'](this['xDire']), 0x0, 0x0)
                          , c6T = 0.03 * c6f['getAngleDst'](c6S, c6R);
                        this['xVel'] = c6Q * Math['cos'](c6R + Math['PI'] - c6T),
                        this['zVel'] = c6Q * Math['sin'](c6R + Math['PI'] - c6T);
                    }
                c6i['lockMove'] && (c6N *= 0x0),
                this['jumpCooldown'] = Math['max'](this['jumpCooldown'] - c6J, 0x0),
                this['onGround'] && 0x0 >= this['jumpCooldown'] && c6e['tryJump'](this, c6d[0x7]),
                c6O || (this['yVel'] -= c6J * (c6g['gravity'] * (c6i['config'] ? c6i['config']['gravMlt'] : 0x1)));
                var c6U = c6g['movDirs'][c6d[0x4]];
                c6U != Math['PI'] && 0x0 != c6U && c6U != Math['PI'] / 0x2 && c6U != -Math['PI'] / 0x2 && (c6N *= c6i['config'] ? c6i['config']['strafeSpd'] : 0x1),
                void 0x0 !== c6U && (this['xVel'] += c6N * Math['cos'](c6U - this['xDire']),
                this['zVel'] += c6N * Math['sin'](c6U - this['xDire'])),
                this['xVel'] && (this['x'] += this['xVel'] * c6J,
                this['xVel'] *= Math['pow'](c6P, c6J),
                this['xVel'] = c6f['cropVal'](this['xVel'], c6g['decelMin'])),
                this['yVel'] && (this['y'] += this['yVel'] * c6J,
                this['yVel'] *= Math['pow'](c6P, c6J)),
                this['zVel'] && (this['z'] += this['zVel'] * c6J,
                this['zVel'] *= Math['pow'](c6P, c6J),
                this['zVel'] = c6f['cropVal'](this['zVel'], c6g['decelMin'])),
                'prop' == this['team'] && c6d[0x5] && c6e['pickProp'](this);
                var c6V = this['onGround'] && !this['didJump']
                  , c6W = !0x1;
                this['onGround'] = !0x1,
                this['onLadder'] = !0x1;
                for (var c6X = !0x1, c6Y = 'Pickup', c6Z = 0x0; c6Z < c6i['map']['manager']['objects']['length']; ++c6Z)
                    if (((c6o = c6i['map']['manager']['objects'][c6Z])['active'] || !c6o['active'] && c6o['closeable']) && c6o['tRadius'] && this['collides'](c6o, c6o['tRadius']) && c6o['gate'] && !c6o['noMsg'] && (c6X = !0x0,
                    c6Y = (!c6o['active'] && c6o['closeable'] ? 'Close' : 'Open') + '\x20gate' + (0x0 == c6o['scoreP'] ? '' : '\x20<span\x20style=\x27color:' + (this['score'] >= c6o['scoreP'] ? '#9eeb56' : '#eb5656') + '\x27>[' + (c6o['method'] ? 'Req' : 'Cost') + '\x20' + (c6o['scoreP'] || 0x0) + ']</span>')),
                    c6o['active'] && this['collides'](c6o))
                        if (c6o['onEnter'] && this['inObject'] != c6o['sid'])
                            c6i['onTrigger'](this, c6o),
                            this['inObject'] = c6o['sid'];
                        else if (c6o['score'])
                            this['scoreObjs'][c6o['sid']] || (this['scoreObjs'][c6o['sid']] = 0x1,
                            c6e['score'](this, c6o['scoreP']));
                        else if (c6o['teleporter'])
                            c6i['checkTeleport'](this, c6o);
                        else if (c6o['checkpoint'])
                            c6i['setCheckPoint'](this, c6o);
                        else if (c6f['isNumber'](c6o['pickup']))
                            c6o['noMsg'] || (c6X = !0x0,
                            c6Y = 'Pickup\x20weapon' + (0x0 == c6o['scoreP'] ? '' : '\x20<span\x20style=\x27color:' + (this['score'] >= c6o['scoreP'] ? '#9eeb56' : '#eb5656') + '\x27>[' + (c6o['method'] ? 'Req' : 'Cost') + ':\x20' + (c6o['scoreP'] || 0x0) + ']</span>'));
                        else if (c6o['flag'])
                            c6i['pickupFlag'](this, c6o);
                        else if (c6o['trigger'])
                            this['flag'] && c6o['team'] == this['team'] && c6o['flagObj'] && !c6o['flagObj']['carrier'] && c6o['flagObj']['x'] == c6o['flagObj']['orgX'] && c6o['flagObj']['y'] == c6o['flagObj']['orgY'] && c6o['flagObj']['z'] == c6o['flagObj']['orgZ'] && c6i['capFlag'](this, this['flag']);
                        else if (c6o['kill'])
                            this['flag'] && (c6i['resetFlag'](this['flag']),
                            this['flag'] = null),
                            c6e['hasServer'] && c6e['kill'](this);
                        else if (c6o['ladder']) {
                            if (this['y'] < c6o['y'] + c6o['height'] && 0x0 == this['crouchVal'] && (this['yVel'] = 0x0,
                            this['onLadder'] = !0x0,
                            this['onTerrain'] = !0x1,
                            this['stepSrc'] = null,
                            void 0x0 !== c6U)) {
                                var c70 = (Math['abs'](c6f['getAngleDst'](c6o['dir'], c6U - this['xDire'])) - Math['PI'] / 0x2) / (Math['PI'] / 0x2);
                                0x0 < c70 && (this['y'] += c6g['ladderSpeed'] * this['weapon']['spdMlt'] * c6J * c70,
                                this['y'] <= c6o['y'] - c6o['height'] ? this['y'] = c6o['y'] - c6o['height'] : this['y'] >= c6o['y'] + c6o['height'] && (this['y'] = c6o['y'] + c6o['height']));
                            }
                        } else if (c6o['ramp']) {
                            if (this['y'] < c6o['y'] + c6o['height']) {
                                var c71 = Math['max'](0x0, Math['min'](0x1, c6f['progressOnLine'](c6o['ramp']['sX'], c6o['ramp']['sZ'], c6o['ramp']['eX'], c6o['ramp']['eZ'], this['x'] + this['scale'] * Math['cos'](c6o['dir']), this['z'] + this['scale'] * Math['sin'](c6o['dir']))))
                                  , c72 = c6o['y'] - c6o['height'] + 0x2 * c6o['height'] * c71;
                                if (this['y'] <= c72 || c6V)
                                    if (c6o['boost']) {
                                        this['y'] = c72;
                                        var c73 = c6o['boost'] * c6g['boosterSpd'] * c6J;
                                        this['xVel'] += c73 * Math['sin'](-c6o['dir'] + Math['PI'] / 0x2) * Math['cos'](c6o['boostDr']),
                                        this['zVel'] += c73 * Math['cos'](-c6o['dir'] + Math['PI'] / 0x2) * Math['cos'](c6o['boostDr']),
                                        this['yVel'] += c73 * Math['sin'](c6o['boostDr']);
                                    } else
                                        this['oldY'] > this['y'] && c6e['resetStep'](this, c6I),
                                        this['y'] = c72,
                                        this['yVel'] = 0x0,
                                        this['onGround'] = !0x0,
                                        this['onTerrain'] = !0x1,
                                        c6W = !0x0,
                                        this['rampFix'] = c6o['y'] - c6o['height'] + 0x2 * c6o['height'] * Math['round'](c71);
                            }
                        } else
                            !c6o['isBorder'] && this['y'] < c6o['y'] + c6o['height'] && c6o['y'] + c6o['height'] - this['y'] <= c6g['climbHeight'] && this['oldY'] < c6o['y'] + c6o['height'] && c6V ? (this['y'] += 0.3 * (c6o['y'] + c6o['height'] - this['y']),
                            this['onGround'] = !0x0,
                            this['onTerrain'] = !0x1) : this['oldY'] >= c6o['y'] + c6o['height'] + (c6o['isBorder'] ? c6g['borderH'] : 0x0) ? (this['stepSrc'] = c6o['stepSrc'],
                            this['oldY'] > this['y'] && c6e['resetStep'](this, c6I),
                            this['y'] = c6o['y'] + c6o['height'] + (c6o['isBorder'] ? c6g['borderH'] : 0x0),
                            this['yVel'] = 0x0,
                            this['onGround'] = !0x0,
                            this['onTerrain'] = !0x1) : this['oldX'] - this['scale'] >= c6o['x'] + c6o['width'] - 0.00001 ? (this['x'] = c6o['x'] + c6o['width'] + this['scale'],
                            this['xVel'] = 0x0) : this['oldX'] + this['scale'] <= c6o['x'] - c6o['width'] + 0.00001 ? (this['x'] = c6o['x'] - c6o['width'] - this['scale'],
                            this['xVel'] = 0x0) : this['oldZ'] - this['scale'] >= c6o['z'] + c6o['length'] - 0.00001 ? (this['z'] = c6o['z'] + c6o['length'] + this['scale'],
                            this['zVel'] = 0x0) : this['oldZ'] + this['scale'] <= c6o['z'] - c6o['length'] + 0.00001 ? (this['z'] = c6o['z'] - c6o['length'] - this['scale'],
                            this['zVel'] = 0x0) : this['oldY'] + this['height'] <= c6o['y'] - c6o['height'] && (this['y'] = c6o['y'] - c6o['height'] - this['height'],
                            this['yVel'] = 0x0);
                    else
                        c6o['sid'] == this['inObject'] && (this['inObject'] = null);
                !this['didJump'] && null != this['rampFix'] && Math['abs'](this['y'] - this['rampFix']) <= c6g['climbHeight'] ? !c6W && (this['y'] = this['rampFix'],
                this['onGround'] = !0x0,
                this['yVel'] = 0x0,
                this['rampFix'] = null) : this['rampFix'] = null;
                var c74 = c6i['map']['terrain'];
                if (c74) {
                    var c75 = c74['raycast'](this['x'], -this['z'], 0x2710, 0x0, 0x0, -0x4e20, !0x0);
                    if (c75) {
                        var c76 = c75['z'];
                        if (this['y'] <= c76 && (this['oldY'] > this['y'] && c6e['resetStep'](this, c6I),
                        this['onTerrain'] = !0x0),
                        this['onTerrain']) {
                            this['onGround'] = !0x0;
                            var c77 = c74['_raycastNormal'];
                            c77['set'](c77['x'], c77['z'], -c77['y']),
                            this['y'] = c76;
                            var c78 = c77['x']
                              , c79 = -0x1 + c77['y']
                              , c7a = c77['z']
                              , c7b = Math['sqrt'](c78 * c78 + c79 * c79 + c7a * c7a);
                            if (this['terrainSlipping'] = c7b > c6g['terrainSlideThreshold'],
                            this['terrainSlipping'] = !0x1,
                            this['terrainSlipping'])
                                c7b *= c6g['gravity'] * (c6i['config'] ? c6i['config']['gravMlt'] : 0x1) * c6g['terrainGravityMlt'] * c6J,
                                this['xVel'] += c78 * c7b,
                                this['yVel'] += c79 * c7b,
                                this['zVel'] += c7a * c7b;
                            else
                                this['yVel'] = 0x0,
                                this['jumpCooldown'] = 0x0;
                        }
                    }
                    this['onTerrain'] || (this['terrainSlipping'] = !0x1);
                }
                if (this['onGround'] ? this['airTime'] = 0x0 : this['airTime'] += c6J,
                !c6I && 'prop' != this['team']) {
                    var c7c = c6f['getDistance3D'](this['oldX'], this['oldY'], this['oldZ'], this['x'], this['y'], this['z']);
                    if (this['isYou'] && (this['onLadder'] && (c7c *= 1.4),
                    c6f['getDirection'](this['oldX'], this['oldZ'], this['x'], this['z']),
                    this['bobAnimZ'] += c6f['getDistance'](this['oldX'], this['oldZ'], this['x'], this['z']) * c6g['bobMltZ'],
                    this['bobAnimY'] -= (this['oldY'] - this['y']) * c6g['bobMltY'],
                    c6O && void 0x0 !== c6U ? (c6e['playerStep'](this, c7c),
                    this['leanAnimZ'] -= c7c * c6g['leanMltZ'] * (this['weapon']['zLnM'] || 0x1) * Math['cos'](c6U)) : this['stepVal'] *= Math['pow'](c6g['stepPull'], c6J),
                    this['stepChase'] != this['stepVal'] && (this['stepChase'] += 0.15 * (this['stepVal'] - this['stepChase']))),
                    this['spreadPlus'] += c7c * c6g['spreadMove'] + Math['abs'](this['oldY'] - this['y']) * c6g['spreadFall'],
                    this['spreadPlus'] *= Math['pow'](c6g['spreadRecover'], c6J),
                    this['spread'] = Math['max'](this['weapon']['minSpread'] || 0x0, (this['weapon']['spread'] - this['weapon']['spread'] * c6g['crouchSpread'] * this['crouchVal'] + this['recoilAnim'] * (this['weapon']['spreadInc'] || 0x1) * c6g['spreadMlt'] + this['spreadPlus']) * this['aimVal']),
                    c6d[0x9] && c6e['reload'](this),
                    0x0 < this['reloadTimer']) {
                        var c7d = this['reloadTimer'];
                        this['reloadTimer'] -= c6J,
                        this['isYou'] && c7d >= this['weapon']['reload'] / 0x2 && this['reloadTimer'] < this['weapon']['reload'] / 0x2 && c6e['endReload'](this['weapon']),
                        0x0 >= this['reloadTimer'] && (this['reloadTimer'] = 0x0,
                        this['didShoot'] = !0x1,
                        this['ammos'][this['weaponIndex']] = this['weapon']['ammo'],
                        c6e['updatePlayerAmmo'](this));
                    }
                    0x0 < this['swapTime'] && (this['swapTime'] -= c6J,
                    0x0 > this['swapTime'] && (this['swapTime'] = 0x0));
                    for (c6Z = 0x0; c6Z < this['reloads']['length']; ++c6Z)
                        0x0 < this['reloads'][c6Z] && (this['reloads'][c6Z] -= c6J,
                        0x0 > this['reloads'][c6Z] && (this['reloads'][c6Z] = 0x0));
                    if (this['weapon']) {
                        var c7e = this['burstCount'] || !this['weapon']['nAuto'] && c6d[0x5];
                        this['didShoot'] && !c6d[0x5] && (this['didShoot'] = !0x1),
                        !this['didShoot'] && c6d[0x5] && (c7e = !0x0),
                        c7e && 0x0 >= this['reloads'][this['weaponIndex']] && 0x0 >= this['swapTime'] && 0x0 >= this['reloadTimer'] && (this['noMovTimer'] = 0x0,
                        this['weapon']['melee'] ? c6e['melee'](this) : 0x0 < this['ammos'][this['weaponIndex']] ? c6e['shoot'](this, c6d) : c6e['reload'](this));
                    }
                }
                c6I && c6d['velObj'] && (this['xVel'] -= c6d['velObj']['x'],
                this['zVel'] -= c6d['velObj']['y'],
                this['yVel'] -= c6d['velObj']['z'],
                this['onGround'] = !0x1),
                c6e['playerCollisions'](this),
                c6e['updateInteract'](this, c6X, c6Y);
            }
            ,
            this['collides'] = function(c6d, c6e) {
                return this['x'] - this['scale'] < c6d['x'] + (c6d['width'] + (c6e || 0x0)) && this['x'] + this['scale'] > c6d['x'] - (c6d['width'] + (c6e || 0x0)) && this['z'] - this['scale'] < c6d['z'] + (c6d['length'] + (c6e || 0x0)) && this['z'] + this['scale'] > c6d['z'] - (c6d['length'] + (c6e || 0x0)) && this['y'] <= c6d['y'] + c6d['height'] + (c6d['isBorder'] ? c6g['borderH'] : 0x0) && this['y'] + this['height'] >= c6d['y'] - c6d['height'];
            }
            ,
            this['getStateConst'] = function() {
                return this['ping'] * (this['lagComp'] || 0x1);
            }
            ,
            this['update'] = function(c6d, c6i) {
                if (this['active']) {
                    if (this['inputs']['length']) {
                        for (var c6o = 0x0; c6o < this['inputs']['length']; ++c6o)
                            this['procInputs'](this['inputs'][c6o], c6d);
                        this['resetInputs']();
                    }
                    if (this['idleAnim'] += c6g['idleAnimS'] * c6i,
                    this['hpChase'] > this['health'] / this['maxHealth'] ? (this['hpChase'] -= 0.0002 * c6i,
                    0x0 >= this['hpChase'] && (this['hpChase'] = 0x0)) : this['hpChase'] = this['health'] / this['maxHealth'],
                    this['interpolate']) {
                        this['dt'] += c6i;
                        var c7k = Math['min'](1.6, this['dt'] / (c6g['serverSendRate'] * c6g['interpolation']));
                        c7k /= c6d['config'] ? c6d['config']['deltaMlt'] : 0x1,
                        this['oldX'] = this['x'],
                        this['oldY'] = this['y'],
                        this['oldZ'] = this['z'],
                        this['x'] = this['x1'] + (this['x2'] - this['x1']) * c7k,
                        this['y'] = this['y1'] + (this['y2'] - this['y1']) * c7k,
                        this['z'] = this['z1'] + (this['z2'] - this['z1']) * c7k,
                        this['onGround'] && c6e['playerStep'](this, c6f['getDistance'](this['oldX'], this['oldZ'], this['x'], this['z'])),
                        this['xDire'] = Math['lerpAngle'](this['xDir2'], this['xDir1'], Math['min'](0x1, c7k)),
                        this['yDire'] = Math['lerpAngle'](this['yDir2'], this['yDir1'], Math['min'](0x1, c7k));
                    }
                }
            }
            ,
            this['resetMeleeAnim'] = function() {
                this['meleeAnim']['armT'] = 0x0,
                this['meleeAnim']['armM'] = 0x0,
                this['meleeAnim']['armE'] = 0x0,
                this['meleeAnim']['weaR'] = 0x0,
                this['meleeAnim']['weaM'] = 0x0,
                this['meleeAnim']['armY'] = 0x0,
                this['meleeAnim']['armR'] = 0x0,
                this['meleeAnim']['lArm'] = 0x0,
                this['meleeAnim']['flipW'] = 0x0;
            }
            ,
            this['reset'] = function() {
                this['checkPoint'] = null,
                this['checkPointList']['length'] = 0x0,
                this['weaponTier'] = 0x0,
                this['customLoadout'] = null,
                this['lastPicked']['length'] = 0x0,
                this['inObject'] = null;
            }
            ;
        };
        c6d['exports']['Player'] = c6i,
        c6d['exports']['manager'] = function(c6d, c6e, c7n, c7o, c7p, c7q, c7r) {
            this['list'] = [];
            var c7s, c7t, c7u, c7v = c6f(0x4f);
            this['hasServer'] = c7r ? 0x1 : 0x0,
            this['setTeam'] = function(c6e) {
                if (!c6d['waitTimers'] && c6d['mode']['convTeam'])
                    c6e['team'] = c6d['mode']['convTeam'];
                else if (c6d['mode']['startTeam'])
                    c6e['team'] = c6d['mode']['startTeam'];
                else if (c6d['mode']['friendly'])
                    c6e['team'] = 0x1;
                else if (c6d['mode']['clanWar'])
                    c6e['team'] = c6e['account'] && c6e['account']['clan'] ? c6e['account']['clan'] : 0x1;
                else if (!c6e['team'] && c6d['mode']['teams'] && !c6e['spectating']) {
                    for (var c6f = 0x0, c6g = 0x0, c6i = 0x0; c6i < this['list']['length']; ++c6i)
                        this['list'][c6i]['spectating'] || (this['list'][c6i]['team'] == (c6d['mode']['teamNs'] ? c6d['mode']['teamNs'][0x0] : 0x1) && c6f++,
                        this['list'][c6i]['team'] == (c6d['mode']['teamNs'] ? c6d['mode']['teamNs'][0x1] : 0x2) && c6g++);
                    c6e['team'] = c6f >= c6g ? 0x2 : 0x1,
                    c6d['mode']['teamNs'] && (c6e['team'] = c6d['mode']['teamNs'][c6e['team'] - 0x1]);
                }
            }
            ,
            this['update'] = function(c6f) {
                for (var c6g = 0x0; c6g < this['list']['length']; ++c6g)
                    (c7s = this['list'][c6g])['active'] && (c7s['update'](c6d, c6f),
                    c7r && (this['tickPlayer'](c7s, c6f),
                    this['storeState'](c7s),
                    c7s['y'] <= c6d['map']['deathY'] && (c7s['flag'] && (c6d['resetFlag'](c7s['flag']),
                    c7s['flag'] = null),
                    this['kill'](c7s))),
                    c6e && (this['updateMesh'](c7s),
                    this['updateHeight'](c7s)));
            }
            ,
            this['playerCollisions'] = function(c6e) {
                if (c7r && c6d['mode']['convTeam'] && !c6d['waitTimers'])
                    for (var c6f = 0x0; c6f < this['list']['length']; ++c6f)
                        if (c6e['active'] && this['list'][c6f]['active'] && c6e['team'] == c6d['mode']['convTeam'] && c6e['team'] != this['list'][c6f]['team']) {
                            var c6g = c7q['playerHeight'] / 0x2;
                            c7p['getDistance3D'](c6e['x'], c6e['y'] + c6g, c6e['z'], this['list'][c6f]['x'], this['list'][c6f]['y'] + c6g, this['list'][c6f]['z']) <= 2.4 * c6g && (c7r['broadcast']('game' + c6d['sid'], 'ac', c6e['sid'], this['list'][c6f]['sid'], c6d['mode']['convWord']),
                            this['score'](c6e, 0x64),
                            c6e['convs']++,
                            c6d['updateTeam'](this['list'][c6f], c6e['team']),
                            c6d['mode']['killConv'] && this['kill'](this['list'][c6f], null, null, !0x0),
                            c6d['gameTimer'] && (c6d['gameTimer'] += 0x2710));
                        }
            }
            ,
            this['activeCount'] = function() {
                for (var c6d = 0x0, c6e = 0x0; c6e < this['list']['length']; ++c6e)
                    this['list'][c6e]['active'] && c6d++;
                return c6d;
            }
            ,
            this['forcePos'] = function() {
                for (var c6d = 0x0; c6d < this['list']['length']; ++c6d)
                    this['list'][c6d]['forcePos'] = !0x0,
                    this['list'][c6d]['objInstances'] && (this['list'][c6d]['objInstances']['visible'] = !0x1,
                    this['list'][c6d]['inView'] = !0x1);
            }
            ,
            this['saveSpin'] = function(c6d, c6e) {
                c7r && (c6d['spins']['unshift'](c6e),
                c6d['spins']['length'] > c7q['spinTimer'] / c7q['serverTickRate'] && (c6d['spins']['length'] = Math['round'](c7q['spinTimer'] / c7q['serverTickRate'])));
            }
            ,
            this['getSpin'] = function(c6d) {
                for (var c6e = 0x0, c6f = 0x0; c6f < c6d['spins']['length']; ++c6f)
                    c6e += c6d['spins'][c6f];
                return Math['abs'](c6e * (0xb4 / Math['PI']));
            }
            ,
            this['storeState'] = function(c6e) {
                c6e['stateHistory']['unshift']({
                    'time': c6d['now'],
                    'x': c6e['x'],
                    'y': c6e['y'],
                    'z': c6e['z']
                });
                for (var c6f = c6e['stateHistory']['length'] - 0x1; 0x0 <= c6f; --c6f)
                    c6d['now'] - c6e['stateHistory'][c6f]['time'] >= c7q['stateHistory'] && c6e['stateHistory']['splice'](c6f, 0x1);
            }
            ,
            this['fetchState'] = function(c6e, c6f) {
                for (var c6g = c6d['now'] - (c6f + c7q['serverSendRate'] * c7q['interpolation']), c6i = 0x0; c6i < c6e['stateHistory']['length']; ++c6i)
                    if (c6e['stateHistory'][c6i]['time'] <= c6g)
                        return c6e['stateHistory'][c6i];
                return c6e['stateHistory'][c6e['stateHistory']['length'] - 0x1];
            }
            ,
            this['updateMesh'] = function(c6f, c6g) {
                if (c6f['objInstances']) {
                    var c6i = c6f['weapon']['animWhileAim'] ? 0x1 : c6f['aimVal']
                      , c7n = (0x1 - (0x1 - c7q['aimAnimMlt']) * (0x1 - c6f['aimVal'])) * c7q['animMult'] * c6e['weaponBob']
                      , c7o = 0x1 - 0.8 * c6f['crouchVal']
                      , c7p = (0x1 - (0x1 - c6f['aimVal'])) * c7q['animMult']
                      , c7r = (0x1 - (0x1 - c6f['aimVal']) * (c6f['weapon']['recoilYMA'] || 0x1)) * c7q['animMult'];
                    c6f['isYou'] || (c7p = 0x0);
                    var c7s = 0x1 - (c6f['weapon']['recoilZM'] || 0.5) * (0x1 - c6i)
                      , c7t = (0x1 - (c6f['weapon']['zRot'] || 0.3) * (0x1 - c6i)) * (c6f['weapon']['zRM'] || 0x1) * c6e['weaponBob']
                      , c7u = 0x1 - (c6f['weapon']['jYMlt'] || 0x1) * (0x1 - c6i)
                      , c7v = 0x1 - 0.45 * (0x1 - c6i)
                      , c84 = 0.9 * c6f['bobAnimY'] * c7u * c6e['weaponBob'] * c7p
                      , c85 = c6f['landBobY'] * (c6f['weapon']['landBob'] || 0x1) * 0.6 * (0x1 - 0.75 * (0x1 - c6i)) * c6e['weaponBob'];
                    c6f['landBobYR'] != c85 && (c6f['landBobYR'] += 0.1 * (c85 - c6f['landBobYR']));
                    var c86 = c6f['landBobY'] * (c6f['weapon']['landBob'] || 0x1) * 0.1
                      , c87 = 0x1 - 0.5 * c6f['crouchVal']
                      , c88 = (c6f['crouchVal'],
                    c6f['jumpRot'] * c87 * c7p * c6e['weaponBob']);
                    c6f['jumpRotM'] != c88 && (c6f['jumpRotM'] += 0.08 * (c88 - c6f['jumpRotM']));
                    var c89 = c6f['jumpBobY'] * (c6f['weapon']['jumpYM'] || 0x1) * c7p * c87 * c6e['weaponBob']
                      , c8a = 0x1 - 0.89 * (0x1 - c6i)
                      , c8b = 0x1 - (c6f['weapon']['aimRecMlt'] || 0x1) * (0x1 - c6i)
                      , c8c = c6g ? 0.05 : c7q['stepAnim']
                      , c8d = Math['sin'](c6f['stepVal']) * c8c
                      , c8e = Math['cos'](0x2 * c6f['stepVal']) / 0x2 * c8c
                      , c8f = -Math['sin'](c6f['stepChase']) * c8c
                      , c8g = -Math['cos'](0x2 * c6f['stepChase']) / 0x2 * c8c
                      , c8h = c6d['config']['thirdPerson'] ? 0x0 : 0x1 - c6f['aimVal']
                      , c8i = 0.5 * (0.5 >= c8h ? c8h : 0.5 - (c8h - 0.5))
                      , c8j = c6f['swapTime'] / c6f['weapon']['swapTime']
                      , c8k = c6f['weapon']['xOff'] * (c6f['isYou'] ? c6e['weaponOffX'] : 0x1)
                      , c8l = c6f['weapon']['yOff'] * (c6f['isYou'] ? c6e['weaponOffY'] : 0x1)
                      , c8m = c6f['weapon']['zOff'] * (c6f['isYou'] ? c6e['weaponOffZ'] : 0x1)
                      , c8n = 0x0;
                    0x0 < c6f['reloadTimer'] && (c8n = 0.5 < (c8n = 0x1 - c6f['reloadTimer'] / c6f['weapon']['reload']) ? 0.5 - (c8n - 0.5) : c8n);
                    var c8o = 1.75 * (0x1 - 0.88 * (0x1 - c6f['aimVal'])) * c6e['weaponBob'];
                    c6e['moveMesh'](c6f['objInstances'], c6f['x'], c6f['y'] + (c6f['isYou'] && !c6d['config']['thirdPerson'] ? 0x0 : Math['abs'](3.5 * c8d)), c6f['z']),
                    'prop' != c6f['team'] && c6e['rotateMesh'](c6f['objInstances'], c6f['xDire'] + (c6f['isYou'] ? c6d['config']['thirdPerson'] ? 0.5 * -c8d : 0x0 : 0x2 * -c8d)),
                    c8e -= c8e * (c6f['crouchVal'] * c7q['crouchAnimMlt']),
                    c8d -= c8d * (c6f['crouchVal'] * c7q['crouchAnimMlt']);
                    for (var c8p = 0x0; c8p < c6f['legMeshes']['length']; ++c8p)
                        c6e['lowSpec'] ? c6f['legMeshes'][c8p]['visible'] = !0x1 : c6f['legMeshes'][c8p]['rotation']['x'] = c8d * (0x1 == c8p || 0x3 == c8p ? 0x1 : -0x1) * 0x7 + (0x1 < c8p ? -0.6 : 0x0);
                    for (c8p = 0x0; c8p < c6f['armMeshes']['length']; ++c8p)
                        -(c6f[(0x0 == c8p ? 'l' : 'r') + 'HndTweenA'] || 0x0),
                        c6f['armMeshes'][c8p]['position']['z'] = c8d * (c8p ? -0x1 : 0x1),
                        c6f['armMeshes'][c8p]['rotation']['x'] = c6f['armMeshes'][c8p]['xR'] || 0x0,
                        c6f['armMeshes'][c8p]['rotation']['y'] = c6f['armMeshes'][c8p]['yR'] || 0x0,
                        c6f['armMeshes'][c8p]['position']['x'] = c6f['armMeshes'][c8p]['xP'] || 0x0,
                        c6f['armMeshes'][c8p]['position']['y'] = c6f['armMeshes'][c8p]['yP'] || 0x0,
                        0x1 == c8p ? (c6f['armMeshes'][0x1]['rotation']['z'] = c6f['armMeshes'][c8p]['zR'] + 0.12 * c6f['crouchVal'] + -0x1 * c8g + 0.2 * c6f['jumpBobY'],
                        c6f['meleeAnim'] && c6f['weaponGeos'][c6f['weaponIndex']] && (c6f['armMeshes'][0x1]['rotation']['z'] += (c6f['meleeAnim']['armR'] || 0x0) * c7p,
                        c6f['armMeshes'][0x1]['rotation']['y'] += (c6f['meleeAnim']['armT'] || 0x0) * c7p,
                        c6f['armMeshes'][0x1]['position']['x'] += (c6f['meleeAnim']['armM'] || 0x0) * c7p,
                        c6f['armMeshes'][0x1]['position']['z'] += (c6f['meleeAnim']['armE'] || 0x0) * c7p,
                        c6f['armMeshes'][0x1]['position']['y'] += (c6f['meleeAnim']['armY'] || 0x0) * c7p,
                        c6f['weaponGeos'][c6f['weaponIndex']] && (c6f['weaponGeos'][c6f['weaponIndex']]['rotation']['z'] = c6f['weaponGeos'][c6f['weaponIndex']]['zR'] + (c6f['meleeAnim']['weaR'] || 0x0),
                        c6f['weaponGeos'][c6f['weaponIndex']]['position']['x'] = c6f['weaponGeos'][c6f['weaponIndex']]['xP'] + (c6f['meleeAnim']['weaM'] || 0x0),
                        c6f['weaponGeos'][c6f['weaponIndex']]['rotation']['y'] = c6f['weaponGeos'][c6f['weaponIndex']]['yR'] + (c6f['meleeAnim']['flipW'] || 0x0)))) : c6f['meleeAnim'] && c6f['weaponGeos'][c6f['weaponIndex']] && (c6f['armMeshes'][0x0]['position']['z'] += c6f['meleeAnim']['lArm'] || 0x0,
                        c6f['armMeshes'][0x0]['rotation']['y'] += 0.1 * (c6f['meleeAnim']['lArm'] || 0x0),
                        c6f['armMeshes'][0x0]['position']['x'] -= 0.3 * (c6f['meleeAnim']['lArm'] || 0x0));
                    var c8q = c6d['attach'][c6f['weapon']['attach']]
                      , c8r = c8q && c8q['aimOffY'] || 0x0;
                    c6f['weaponMeshes'][c6f['weaponIndex']] && c6f['weaponMeshes'][c6f['weaponIndex']]['flapMesh'] && c6f['weapon']['flap'] && (fRot = 0x3 * c8g + 2.8 * c6f['recoilAnim'] - c6f['leanAnimZ'] - 0x3 * c6f['leanAnimX'] - 1.8 * c6f['landBobYR'] + c84 + 0.1 * c6f['crouchVal'],
                    c6e['rotateMesh'](c6f['weaponMeshes'][c6f['weaponIndex']]['flapMesh'], c6f['weapon']['flap']['rot'] * c6f['swapTweenA'] + fRot, null, null));
                    var c8s = c6d['config']['thirdPerson'] ? 0.4 : 0x1;
                    c6e['rotateMesh'](c6f['upperBody'], c8n * (-0x1 * c8s), -0.2 * c84 + +c86 + c8n * (-2.8 * c8s) + c6f['yDire'] * (c6f['isYou'] && !c6d['config']['thirdPerson'] ? 0x1 : 0.5) + (-Math['PI'] / 0x4 * c8j + c6f['recoilAnimY'] * c7q['recoilMlt']) + (c6f['weapon']['yRot'] || 0x0)),
                    c6e['moveMesh'](c6f['upperBody'], 0x0, c6f['recoilAnimY'] * ((c6f['weapon']['recoilYM'] || 0.3) * c7r) + (c6f['height'] - c7q['cameraHeight'] - c7q['legHeight']), 0x0),
                    c6e['rotateMesh'](c6f['weaponMeshes'][c6f['weaponIndex']], c6f['inspectX'] + 0.2 * c6f['jumpRotM'] + c6f['recoilX'] * c8a + c6f['leanAnimX'] * c7v * c6e['weaponLean'] * (c6f['weapon']['leanMlt'] || 0x1) + (0.16 * -c8f * c7p * c7o + 0.2 * c6f['leanAnimZ']) * c7n, -Math['cos'](c6f['idleAnim']) * c87 * 0.01 * c8o + (c6f['weapon']['rotOff'] || 0x0) * c7p - 0.25 * (c6f['swapTweenR'] || 0x0) * c7p + 0.6 * -c6f['landBobYR'] + c6f['recoilTweenY'] * c8b + c6f['leanAnimY'] * c7v * c6e['weaponLean'] * (c6f['weapon']['leanMlt'] || 0x1) + -0.9 * c8g * c7n, c88 + c8i + c6f['recoilX'] * c8a + (c6f['swapTweenR'] || 0x0) * c7p * 0.1 + c6f['leanAnimZ'] * c7t + -c6f['inspectX'] * (c6f['weapon']['inspectR'] || 0x0) + ((c6f['weapon']['cLean'] || 0x0) * c6f['crouchVal'] * c7p + 0x0 * -c8f) * c7n),
                    c6e['moveMesh'](c6f['weaponMeshes'][c6f['weaponIndex']], -c6f['jumpRotM'] * c7p * 1.3 + -c6f['inspectX'] * (c6f['weapon']['inspectM'] || 0x0) + (0.35 * c6f['leanAnimZ'] - (c6f['weapon']['cRot'] || 0x0) * c6f['crouchVal'] * c7p + 0.5 * c8d * c7o * c7p) * c6f['aimVal'] * c7n + c8k - (c8k - c6f['weapon']['xOrg']) * c8h, 0.02 * Math['sin'](c6f['idleAnim']) * c8o + c6f['recoilTweenYM'] * c8b + c89 + 0.7 * c85 - 1.5 * c84 + (0.85 * c8e - (c6f['weapon']['cDrop'] || 0x0) * c6f['crouchVal'] * c7p) * c7n + c8l - (c8l - c6f['weapon']['yOrg'] + c8r) * c8h, c8m - (c8m - c6f['weapon']['zOrg']) * c8h + c6f['bobAnimZ'] * c7n + c6f['recoilAnim'] * (c6f['weapon']['recoilZ'] || 0x0) * c7s);
                }
            }
            ,
            this['updateHeight'] = function(c6f) {
                var c6g = c7q['crouchDst'] * c6f['crouchVal'];
                if (!c6e || c6f['isYou'] && !c6d['config']['thirdPerson'])
                    c6f['height'] = c7q['playerHeight'] - c6g;
                else {
                    var c6i = c7q['crouchLean'] * c6f['crouchVal'];
                    c6e['rotateMesh'](c6f['lowerBody'], 0x0, c6i + 0.5 * c6f['yDire'], 0x0),
                    c6f['upperBody'] && (c6f['upperBody']['rotation']['x'] -= c6i),
                    c6e['moveMesh'](c6f['lowerBody'], 0x0, c7q['legHeight'] - c6g, 0x0);
                    for (var c7n = 0x0; 0x4 > c7n; ++c7n)
                        c6f['legMeshes'][c7n] && !c6e['lowSpec'] && (c6f['legMeshes'][c7n]['visible'] = 0x1 >= c7n ? !c6f['crouchVal'] : !!c6f['crouchVal']);
                }
            }
            ,
            this['generateMeshes'] = function(c6f, c6i, c7n=!0x1) {
                var c7p = c6d['classes'][c6f['classIndex']]['colors']
                  , c7r = c7p[0x0];
                c7q['skinColors'][c6f['skinColIndex']] && (c7r = c7q['skinColors'][c6f['skinColIndex']]);
                var c7s = c6d['config']['thirdPerson'] || !c6i;
                if (c6f['objInstances'] = c6e['genObj3D'](c6f['x'], c6f['y'], c6f['z']),
                'inf' == c6f['team'] && (c7r = 0x596151,
                c6f['hatIndex'] = 0x7a),
                'prop' == c6f['team']) {
                    var c7t = c7q['propsH'][c6f['propID']];
                    c6e['loadMesh']({
                        'src': c7t + '_0'
                    }, 0x0, c7q[c7t + 'Scale'] + (c7q['propsCPY'][c7t] || 0x0), 0x0, 0x0, c7q[c7t + 'Scale'], c6f['objInstances'], !0x1);
                } else {
                    if (c6f['lowerBody'] = c6e['genObj3D'](0x0, c7q['legHeight'], 0x0),
                    c7s && c6f['lowerBody']['add'](c6e['genBody'](c7p[0x1], c7p[0x2], c7p[0x4], c7r, c6f['isPreview'] || c6f['isYou'])),
                    c6f['upperBody'] = c6e['genObj3D'](0x0, 0x0, 0x0),
                    c6f['lowerBody']['add'](c6f['upperBody']),
                    0x0 <= c6f['backIndex'] && c7s && (c6f['backMesh'] = c6e['genObj3D'](0x0, (c7q['playerHeight'] - c7q['legHeight'] - c7q['headScale']) / 0x2 - (c6d['store']['skins'][c6f['backIndex']]['sitOff'] || 0x0), -(c6d['store']['skins'][c6f['backIndex']]['sitOffZ'] || 0x0)),
                    c6f['lowerBody']['add'](c6f['backMesh']),
                    c6e['loadMesh']({
                        'src': 'body/body_' + c6d['store']['skins'][c6f['backIndex']]['id'],
                        'texSrc': c6d['store']['skins'][c6f['backIndex']]['tex'] ? 'body/body_' + c6d['store']['skins'][c6f['backIndex']]['id'] + '_' + c6d['store']['skins'][c6f['backIndex']]['tex'] : null,
                        'glowText': c6d['store']['skins'][c6f['backIndex']]['glow'],
                        'emissive': c6d['store']['skins'][c6f['backIndex']]['glow'] ? 0xffffff : null,
                        'noGreen': !0x0
                    }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c6d['store']['skins'][c6f['backIndex']]['sclMlt'] || 0x1), c6f['backMesh'])),
                    0x0 <= c6f['hatIndex'] && c7s && (c6f['hatMesh'] = c6e['genObj3D'](0x0, c7q['playerHeight'] - c7q['legHeight'] - (c6d['store']['skins'][c6f['hatIndex']]['sitOff'] || 0x0), -(c6d['store']['skins'][c6f['hatIndex']]['sitOffZ'] || 0x0)),
                    c6f['lowerBody']['add'](c6f['hatMesh']),
                    c6e['loadMesh']({
                        'src': 'hats/hat_' + c6d['store']['skins'][c6f['hatIndex']]['id'],
                        'texSrc': c6d['store']['skins'][c6f['hatIndex']]['tex'] ? 'hats/hat_' + c6d['store']['skins'][c6f['hatIndex']]['id'] + '_' + c6d['store']['skins'][c6f['hatIndex']]['tex'] : null,
                        'glowText': c6d['store']['skins'][c6f['hatIndex']]['glow'],
                        'emissive': c6d['store']['skins'][c6f['hatIndex']]['glow'] ? 0xffffff : null,
                        'noGreen': !0x0
                    }, 0x0, 0x0, 0x0, Math['PI'] / 0x2, 2.1 * (c6d['store']['skins'][c6f['hatIndex']]['sclMlt'] || 0x1), c6f['hatMesh'])),
                    c7s)
                        for (var c7u = 0x0; 0x4 > c7u; ++c7u)
                            c6f['legMeshes']['push'](c6e['genLeg'](0x1 == c7u || 0x3 == c7u, c7p[0x2], c7p[0x3], 0x1 < c7u)),
                            0x2 <= c7u && c6e['rotateMesh'](c6f['legMeshes'][c7u], 0x2 == c7u ? -Math['PI'] / 0x6 : Math['PI'] / 0x8, 0x0, 0x0),
                            c6f['legMeshes'][c7u]['visible'] = 0x1 >= c7u,
                            c6f['objInstances']['add'](c6f['legMeshes'][c7u]);
                    for (c7u = 0x0; c7u < c6f['ammos']['length']; ++c7u) {
                        var c7v = c6e['genObj3D'](0x0, 0x0, 0x0)
                          , c8G = c6d['weapons'][c6f['loadout'][c7u]]
                          , c8H = null == c8G['attach'] ? null : c6d['attach'][c8G['attach']];
                        if (c6i && c8G['ammo']) {
                            c7v['muzzles'] = [],
                            c7v['casings'] = [];
                            for (var c8I = 0x0; 0x2 > c8I; ++c8I)
                                (!c8I || c8G['akimbo']) && (c7v['muzzles']['push'](new c6g['Sprite']()),
                                c7v['muzzles'][c8I]['visible'] = !0x1,
                                c7v['muzzles'][c8I]['static'] = !0x0,
                                c7o['particles']['push'](c7v['muzzles'][c8I]),
                                c7v['add'](c7v['muzzles'][c8I]),
                                c7v['casings']['push'](c6e['genObj3D'](c8I ? 0x2 * -c8G['xOff'] : 0x0, c8G['caseYOff'] || 0x0, c8G['caseZOff'] || 0x0)),
                                c7v['add'](c7v['casings'][c8I]));
                            c7v['muzzleFlash'] = c6e['genObj3D'](0x0, 0.4, 0x0),
                            c7v['muzzles'][0x0]['add'](c7v['muzzleFlash']);
                        }
                        if (c8G['src'] || !c6f['isYou'])
                            c7v['add'](c6e['genArms'](c8G, c7p[0x1], c7p[0x5], c7r, null, c6f['isPreview'] || c6f['isYou']));
                        else {
                            var c8J;
                            for (c8I = 0x0; 0x2 > c8I; ++c8I)
                                c8J = c6e['genArms'](c8G, c7p[0x1], c7p[0x5], c7r, c8I + 0x1, c6f['isPreview'] || c6f['isYou']),
                                c7v['add'](c8J),
                                c6f['armMeshes']['push'](c8J);
                        }
                        if (c6f['weaponMeshes']['push'](c7v),
                        c6f['weaponMeshes'][c7u]['visible'] = !0x1,
                        c6f['upperBody']['add'](c6f['weaponMeshes'][c7u]),
                        c8G['melee'] && (c6f['isYou'] || 'inf' != c6f['team'])) {
                            var c8K = c6d['store']['skins'][c6f['meleeIndex']] || {};
                            c6f['weaponGeos'][c7u] = c6e['loadMesh']({
                                'src': 'melee/melee_' + (c8K['id'] || 0x0),
                                'texSrc': c8K['tex'] ? 'melee/melee_' + (c8K['id'] || 0x0) + '_' + c8K['tex'] : '',
                                'glowText': c8K['glow'],
                                'emissive': c8K['glow'] ? 0xffffff : null,
                                'tFilter': c6g['LinearFilter'],
                                'mat': c7n || c6f['isYou'] ? c6g['MeshPhongMaterial'] : null,
                                'noGreen': !0x0,
                                'uv2': !0x0,
                                'specular': 0x292929,
                                'shininess': 0x64
                            }, c6f['isYou'] ? 0.9 : 1.7, c6f['isYou'] ? -0.95 : -0.4, c6f['isYou'] ? 0.72 : 1.2, [-Math['PI'] / 3.5, c6f['isYou'] ? 0.3 : Math['PI'] / 0x2, -0.9 * Math['PI']], c8K['sclMlt'] || 0.9, c6f['armMeshes'][0x1] ? c6f['armMeshes'][0x1] : c6f['weaponMeshes'][c7u]),
                            c6f['armMeshes'][0x1] && (c6f['armMeshes'][0x1]['yR'] = c6f['armMeshes'][0x1]['rotation']['y'],
                            c6f['isYou'] ? (c6f['armMeshes'][0x1]['zR'] = c6f['armMeshes'][0x1]['rotation']['z'] = -0.3,
                            c6f['armMeshes'][0x1]['xR'] = c6f['armMeshes'][0x1]['rotation']['x'] = -0.4,
                            c6f['armMeshes'][0x1]['xP'] = c6f['armMeshes'][0x1]['position']['x'] = 0.4,
                            c6f['armMeshes'][0x1]['yP'] = c6f['armMeshes'][0x1]['position']['y'] = 0.3) : (c6f['armMeshes'][0x1]['zR'] = c6f['armMeshes'][0x1]['rotation']['z'] = 0.3,
                            c6f['armMeshes'][0x1]['yP'] = c6f['armMeshes'][0x1]['position']['y'] = -0.4,
                            c6f['armMeshes'][0x1]['xR'] = c6f['armMeshes'][0x1]['rotation']['x'],
                            c6f['armMeshes'][0x1]['xP'] = c6f['armMeshes'][0x1]['position']['x'] = -0.2),
                            c6f['armMeshes'][0x0]['xP'] = c6f['armMeshes'][0x0]['position']['x'] = 0.3,
                            c6f['armMeshes'][0x0]['yP'] = c6f['armMeshes'][0x0]['position']['y'] = -0.5,
                            c6f['armMeshes'][0x0]['zR'] = c6f['armMeshes'][0x0]['rotation']['z'] = -0.4,
                            c6f['armMeshes'][0x0]['yR'] = c6f['armMeshes'][0x0]['rotation']['y']);
                        }
                        if (c8G['src']) {
                            var c8L = c6d['store']['skins'][c6f['skins'][c7u]] || {}
                              , c8M = 0x0 <= c6f['skins'][c7u] && (c8L['glow'] || c8L['sameGlow']);
                            for (c8I = 0x0; 0x2 > c8I; ++c8I)
                                (!c8I || c8G['akimbo']) && c6e['loadMesh']({
                                    'src': 'weapons/' + c8G['src'] + (null == c8L['mid'] ? '' : '_' + c8L['mid']),
                                    'texSrc': null == c8L['mid'] ? c8L['tex'] ? c8L['tex'] : 0x0 <= c6f['skins'][c7u] ? 'weapons/skins/' + c8G['src'] + '_' + c8L['id'] : null : c8L['midT'],
                                    'tFilter': c6g['LinearFilter'],
                                    'mat': c7n || c6f['isYou'] ? c6g['MeshPhongMaterial'] : null,
                                    'movT': c8L['movT'],
                                    'movD': c8L['movD'] || 0x0,
                                    'pulsT': c8L['pulsT'],
                                    'sameGlow': c8L['sameGlow'],
                                    'glowText': c8M,
                                    'noGreen': !0x0,
                                    'uv2': !0x0,
                                    'ao': c6i && !c8G['noAo'],
                                    'shininess': c8L['shine'] || c8G['shine'] || 0x3c,
                                    'specular': 0x292929,
                                    'transparent': c8G['seeThrough'],
                                    'emissive': c8G['transp'] || c8M ? 0xffffff : null
                                }, 0x1 == c8I ? -0x2 * c8G['xOff'] : 0x0, c8L['yOff'] || 0x0, c8L['zOff'] || 0x0, Math['PI'] / 0x2, c8L['mScl'] || c8G['scale'], c6f['weaponMeshes'][c7u]);
                        }
                        c6i && c8G['flap'] && c6e['sniperFlap'] && (c6f['weaponMeshes'][c7u]['flapMesh'] = c6e['loadMesh']({
                            'src': 'attach/' + c8G['flap']['src'],
                            'tFilter': c6g['LinearFilter'],
                            'noGreen': !0x0,
                            'mat': c6g['MeshPhongMaterial'],
                            'shininess': 0x3c,
                            'transparent': !0x0
                        }, c8G['flap']['xOff'], c8G['flap']['yOff'], c8G['flap']['zOff'], Math['PI'] / 0x2, c8G['flap']['scl'], c6f['weaponMeshes'][c7u])),
                        c8H && (c6i || c7n) && c6e['loadMesh']({
                            'src': 'attach/' + c8H['src'],
                            'tFilter': c6g['LinearFilter'],
                            'noGreen': !0x0,
                            'mat': c6f['isYou'] ? c6g['MeshPhongMaterial'] : null,
                            'specular': 0x292929,
                            'shininess': 0x3c,
                            'transparent': !0x0
                        }, 0x0, -(c8G['yOrg'] || 0x0) + (c8G['attachYOff'] || 0x0), -(c8G['attachZOff'] || 0x0), Math['PI'] / 0x2, c8H['scale'], c6f['weaponMeshes'][c7u]);
                    }
                    c6f['objInstances']['add'](c6f['lowerBody']),
                    c6i && c6f['objInstances']['traverse'](function(c6d) {
                        c6d['layers']['set'](0x1);
                    });
                }
                return c6f['objInstances'];
            }
            ,
            this['pickProp'] = function(c6e) {
                if (c7r && c6e && c6e['active'] && (!c6e['lastPropPick'] || 0xc8 <= c6d['now'] - c6e['lastPropPick'])) {
                    c6e['lastPropPick'] = c6d['now'];
                    var c6f = c6e['xDire']
                      , c6g = c6e['yDire'];
                    caf['length'] = 0x0;
                    for (var c6i, c7n = 0x0, c7o = 0x1 / (0x19 * Math['sin'](c6f + Math['PI']) * Math['cos'](c6g)), c7s = 0x1 / (0x19 * Math['cos'](c6f + Math['PI']) * Math['cos'](c6g)), c7t = 0x1 / (0x19 * Math['sin'](c6g)), c7u = c6e['y'] + c6e['height'] - c7q['cameraHeight'], c7v = 0x0; c7v < c6d['map']['manager']['objects']['length']; ++c7v)
                        (c6i = c6d['map']['manager']['objects'][c7v])['active'] && c6i['propID'] && !c6i['noShoot'] && ((c7n = c7p['lineInRect'](c6e['x'], c6e['z'], c7u, c7o, c7s, c7t, c6i['x'] - c6i['width'], c6i['z'] - c6i['length'], c6i['y'] - c6i['height'], c6i['x'] + c6i['width'], c6i['z'] + c6i['length'], c6i['y'] + c6i['height'])) && 0x1 >= c7n && caf['push']({
                            'obj': c6i,
                            'dst': c7n
                        }));
                    caf['length'] && (caf['sort'](c7p['orderByDst']),
                    caf[0x0] && caf[0x0]['obj'] && this['updateProp'](c6e, c7q['propsH']['indexOf'](caf[0x0]['obj']['propID'])));
                }
            }
            ,
            this['updateProp'] = function(c6e, c6f, c6g) {
                if (c6e && c6e['active']) {
                    null != c6f && (c6e['propID'] = c6f);
                    var c6i = c7q[c7q['propsH'][c6f] + 'Scale']
                      , c7n = c7q['propsCP'][c7q['propsH'][c6f]] || 0x0;
                    c6e['height'] = c6i + c7n,
                    c6e['scale'] = c6i + c7n,
                    c6g && this['regenMeshes'](c6e),
                    c7r && c7r['broadcast']('game' + c6d['sid'], 'up', c6e['sid'], c6f);
                }
            }
            ,
            this['regenMeshes'] = function(c6d) {
                c6d['objInstances'] && this['disposeMesh'](c6d, !0x0),
                c6e && c6e['add'](this['generateMeshes'](c6d, c6d['isYou'])),
                this['swapWeapon'](c6d, 0x0, !0x0);
            }
            ,
            this['hideAll'] = function() {
                for (var c6d = 0x0; c6d < this['list']['length']; ++c6d)
                    this['list'][c6d]['active'] && this['list'][c6d]['objInstances'] && (this['list'][c6d]['forcePos'] = !this['list'][c6d]['latestData'],
                    this['list'][c6d]['latestData'] = !0x1,
                    this['list'][c6d]['isYou'] || (this['list'][c6d]['objInstances']['visible'] = !0x1));
            }
            ,
            this['clear'] = function() {
                if (c6e)
                    for (var c6d = 0x0; c6d < this['list']['length']; ++c6d)
                        this['disposeMesh'](this['list'][c6d]);
                this['list']['length'] = 0x0;
            }
            ,
            this['toggleLOD'] = function(c6d, c6e) {
                c6d['objInstances'] && (c6d['objInstances']['visible'] = c6e),
                c6d['lodActive'] = !c6e;
            }
            ,
            this['disposeMesh'] = function(c6d) {
                c6e['remove'](c6d['objInstances']),
                c6d['objInstances'] = null,
                c6d['hatMesh'] = null,
                c6d['backMesh'] = null,
                c6d['weaponMeshes']['length'] = 0x0,
                c6d['weaponGeos'] = {},
                c6d['armMeshes']['length'] = 0x0,
                c6d['legMeshes']['length'] = 0x0;
            }
            ,
            this['add'] = function(c6f, c6g, c7n, c7o, c7s, c7t, c7u, c7v, c9h, c9i, c9j, c9k, c9l, c9m, c9n, c9o, c9p, c9q) {
                for (var c9r, c9s = 0x0; c9s < this['list']['length']; ++c9s)
                    if (this['list'][c9s]['id'] == c6f) {
                        c9r = this['list'][c9s];
                        break;
                    }
                return c9r ? (c9r['weaponMeshes']['length'] = 0x0,
                c9r['weaponGeos'] = {},
                c9r['legMeshes']['length'] = 0x0,
                c9r['armMeshes']['length'] = 0x0) : ((c9r = new c6i(c6f,this,c7p,c7q,c6d))['sid'] = c6g || c7p['generateSID'](this['list']),
                this['list']['push'](c9r)),
                c7t || (c7t = 'Guest_' + c9r['sid']),
                c9r['init'](c7n, c7o, c7s, c7t, c9o, c9p),
                c7r && null != c6d['mode'] && this['setTeam'](c9r),
                c9n && (c9r['team'] = c9n),
                c9r['skins'] = c7v || [-0x1, -0x1],
                c9r['hatIndex'] = c9h,
                c9r['backIndex'] = c9i,
                c9r['meleeIndex'] = c9j,
                c9r['skinColIndex'] = c9k,
                c9r['secIndex'] = c9l,
                c9r['setClass'](c6d, c7u, c9l, !!c6e),
                !c9q && c6d['mode']['startingLoadout'] && (c9q = c6d['mode']['startingLoadout']),
                c9q && c9r['updateLoadout'](c6d, c9r['weaponIndex'], !0x1, ...c9q),
                c6e && c6e['add'](this['generateMeshes'](c9r, c9o)),
                'prop' == c9r['team'] && this['updateProp'](c9r, c9m || 0x0, !0x0),
                this['swapWeapon'](c9r, 0x0, !0x0),
                'undefined' != typeof window && 'updateWindow'in window && window['updateWindow'](0x17),
                c9r;
            }
            ,
            this['remove'] = function(c6e) {
                var c6f = this['indexBySid'](c6e);
                if (0x0 <= c6f) {
                    c7r && this['list'][c6f] && (c6d['dropFlag'](this['list'][c6f]['flag']),
                    this['dropWeapon'](this['list'][c6f], !0x0));
                    this['list'][c6f]['room'];
                    var c6g = this['list'][c6f]['id'];
                    if (this['list'][c6f]['objInstances'] && this['disposeMesh'](this['list'][c6f]),
                    this['list']['splice'](c6f, 0x1),
                    c7r) {
                        for (var c6i = this['list']['length'] - 0x1; 0x0 <= c6i; --c6i)
                            0x0 <= (c6f = this['list'][c6i]['sentTo']['indexOf'](c6g)) && this['list'][c6i]['sentTo']['splice'](c6f, 0x1);
                        c7r['broadcast']('game' + c6d['sid'], '2', c6e),
                        this['syncLeaders']();
                    }
                    'undefined' != typeof window && 'updateWindow'in window && window['updateWindow'](0x17);
                }
            }
            ;
            var c9x = [0x0, 0x1, 0x2];
            this['getStepSound'] = function() {
                var c6d = c7p['randInt'](0x0, c9x['length'] - 0x1)
                  , c6e = c9x[c6d];
                return c9x['splice'](c6d, 0x1),
                0x0 >= c9x['length'] && c9x['push'](0x0, 0x1, 0x2),
                c6e;
            }
            ,
            this['playerStep'] = function(c6e, c6f, c6g) {
                if (c6f && (!c6e['isYou'] && c6e['crouchVal'] && (c6f *= 1.6),
                c6e['stepVal'] += c6f * c7q['stepMlt'] * c6e['stepDir'],
                c6e['stepVal'] >= Math['PI'] / 0x2 && 0x1 == c6e['stepDir'] || c6e['stepVal'] <= -Math['PI'] / 0x2 && -0x1 == c6e['stepDir'])) {
                    if (c7n && !c6g) {
                        var c6i = c7p['randFloat'](0.15, 0.25) * (0x1 > c6e['crouchVal'] ? 0x1 : c6e['isYou'] ? 0.5 : 0x0)
                          , c7o = (0x1 > c6e['crouchVal'] ? 0x1 : 0.8) * c7p['randFloat'](0.8, 1.2)
                          , c7r = c6e['stepSrc'] ? '_' + c6e['stepSrc'] : '';
                        c6e['isYou'] ? c7n['play']('step_' + this['getStepSound']() + c7r, c6i, !0x1, c7o) : c6i && c6d['playerSound']('step_' + c7p['randInt'](0x0, 0x2) + c7r, 0x0, c6i, c6e, c7o, 0xb4);
                    }
                    c6e['stepDir'] *= -0x1;
                }
            }
            ,
            this['resetStep'] = function(c6e, c6f) {
                if (!c6f && c6e['isYou'] && c6e['yVel'] && (c6e['jumpTween'] && c6e['jumpTween']['stop'](),
                c6e['landTween'] && c6e['landTween']['stop'](),
                c6e['landTween'] = new TWEEN['Tween'](c6e)['to']({
                    'landBobY': 0x6 * c6e['yVel'],
                    'jumpBobY': 0x0
                }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
                    c6e['landTween'] = new TWEEN['Tween'](c6e)['to']({
                        'landBobY': 0x0
                    }, 0x44c)['easing'](TWEEN['Easing']['Elastic']['Out'])['start']();
                })['start']()),
                c7n && !c6f && c6e['yVel'] && (c6e['stepSrc'] && c6e['stepSrc'],
                c7n['play']('step_' + this['getStepSound'](), 0.7, !0x1, c7p['randFloat'](0.9, 1.2)),
                c6e['isYou'] && c6e['crouchVal'] && c6d['config']['canSlide'] && c6e['canSlide'] && c7n['play']('slide_0', 0.35, !0x1, c7p['randFloat'](0.9, 1.1))),
                c6d['config']['canSlide'] && c6e['crouchVal'] && c6e['canSlide']) {
                    c6e['canSlide'] = !0x1,
                    c6e['slideTimer'] = c7q['slideTime'] * c6e['crouchVal'];
                    var c6g = this['onTerrain'] ? c7q['playerTerrainSlideVelMlt'] : c7q['playerSlideVelMlt'];
                    c6e['xVel'] *= c6g,
                    c6e['zVel'] *= c6g;
                }
            }
            ,
            this['tryJump'] = function(c6e, c6f) {
                c6d['config'] && c6d['config']['autoJump'] && c6f ? this['jump'](c6e) : (c6e['didJump'] && !c6f && (c6e['didJump'] = !0x1),
                !c6e['didJump'] && c6f && this['jump'](c6e));
            }
            ,
            this['jump'] = function(c6e) {
                c6e['jumpCooldown'] = c6e['terrainSlipping'] ? c7q['playerSlippingJumpCooldown'] : 0x0,
                c6e['didJump'] = !0x0,
                c6e['onTerrain'] = !0x1;
                var c6f = c7q['jumpVel'] * (c6d['config'] ? c6d['config']['jumpMlt'] : 0x1)
                  , c6g = c7q['jumpPush'] * (c6d['config'] ? c6d['config']['jumpMlt'] : 0x1);
                c6e['yVel'] += (c6f - c6f * (c7q['crouchJump'] * c6e['crouchVal'])) * c6e['weapon']['spdMlt'] * (c6e['aimVal'] ? 0x1 : c7q['aimJumpSlow']);
                var c6i = c7p['getDistance'](0x0, 0x0, c6e['xVel'], c6e['zVel']);
                if (c6e['xVel'] -= c6g * c6i * Math['sin'](c6e['xDire']),
                c6e['zVel'] -= c6g * c6i * Math['cos'](c6e['xDire']),
                c7n && !c6e['recon'] && c6e['isYou']) {
                    c6e['landTween'] && c6e['landTween']['stop'](),
                    c6e['landTween'] = new TWEEN['Tween'](c6e)['to']({
                        'landBobY': 0x0
                    }, 0x64)['easing'](TWEEN['Easing']['Linear']['None'])['start'](),
                    c6e['jumpTween'] && c6e['jumpTween']['stop'](),
                    c6e['jumpTween'] = new TWEEN['Tween'](c6e)['to']({
                        'jumpBobY': 0.22
                    }, 0x1f4)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                    var c7o = c7p['randFloat'](0.12, 0.15);
                    new TWEEN['Tween'](c6e)['to']({
                        'jumpRot': [c7o, 0x0]
                    }, 0x384)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                    c7n['play']('jump_' + c7p['randInt'](0x0, 0x1), 0.04, !0x1, c7p['randFloat'](0.9, 0x1));
                }
            }
            ,
            this['updateAim'] = function(c6d, c6f) {
                c6e['zoom'](0x1 + (c6d['weapon']['zoom'] - 0x1) * c6f);
            }
            ,
            this['toggleAim'] = function(c6f, c6g) {
                if (c7n && !c6f['recon'] && c7n['play']('aim_' + c6g, 0.1),
                c6g && 'prop' != c6f['team'] || this['resetAim'](),
                c6f['weapon']['scope'] && c6f['weaponMeshes'] && c6f['weaponMeshes'][c6f['weaponIndex']] && (c6e['zoom'](c6g ? c6f['weapon']['zoom'] : 0x1),
                c6f['weaponMeshes'][c6f['weaponIndex']]['visible'] = !this['isWeaponHidden'](c6f, c6f['weaponIndex']) && !c6g,
                aimRecticle['style']['opacity'] = c6g ? 0x1 : 0x0),
                c6d['attach'][c6f['weapon']['attach']]) {
                    aimDot['style']['opacity'] = c6g ? 0x1 : 0x0;
                    var c6i = c6d['store']['skins'][c6f['skins'][c6f['weaponIndex']]]
                      , c7o = './textures/dots/' + (c6i && c6i['dot'] || 'dot_0') + '.png';
                    aimDot['src'] != c7o && (aimDot['src'] = c7o);
                }
                c6e['hideADS'] && (c6f['weaponMeshes'][c6f['weaponIndex']]['visible'] = !c6g);
            }
            ,
            this['resetAim'] = function() {
                c6e['zoom'](0x1),
                aimRecticle['style']['opacity'] = 0x0,
                aimDot['style']['opacity'] = 0x0;
            }
            ,
            this['isWeaponHidden'] = function(c6e, c6f) {
                var c6g = c6e['loadout'][c6f];
                return !(!c6d['weapons'][c6g]['melee'] || !c6d['hideWeapon'][0x2]) || (!(!c6d['weapons'][c6g]['secondary'] || !c6d['hideWeapon'][0x1]) || !(c6d['weapons'][c6g]['melee'] || c6d['weapons'][c6g]['secondary'] || !c6d['hideWeapon'][0x0]));
            }
            ,
            this['reload'] = function(c6d) {
                !c6d['reloadTimer'] && c6d['ammos'][c6d['weaponIndex']] < c6d['weapon']['ammo'] && (c7n && c7n['play']('reload_1', 0.25),
                c6d['reloadTimer'] = c6d['weapon']['reload'],
                c6d['burstCount'] = 0x0,
                c6d['isYou'] && this['cancelInspect'](c6d));
            }
            ,
            this['endReload'] = function(c6d) {
                c7n && c7n['play']('reload_2' + (c6d['custReload'] || ''), 0.25);
            }
            ,
            this['updatePlayerAmmo'] = function(c6d) {
                c6d['isYou'] && (ammoDisplay['style']['display'] = 'inline-block',
                ammoVal['innerHTML'] = (c6d['ammos'][c6d['weaponIndex']] || (c6d['weapon']['melee'] ? '-' : 0x0)) + '\x20<span\x20id=\x27ammoMax\x27>\x20|\x20' + (c6d['weapon']['ammo'] || '-') + '</span>',
                0x0 >= c6d['ammos'][c6d['weaponIndex']] ? (reloadMsg['innerHTML'] = '[R]\x20Reload',
                reloadMsg['style']['display'] = 'block') : reloadMsg['style']['display'] = 'none');
            }
            ,
            this['cancelInspect'] = function(c6d) {
                c6d['inspecting'] = !0x1,
                c6d['inspectX'] = 0x0;
            }
            ,
            this['wInspect'] = function(c6d) {
                c6d['inspecting'] ? this['cancelInspect'](c6d) : !c6d['weapon']['nInsp'] && !c6d['inspecting'] && 0x1 == c6d['aimVal'] && !c6d['reloadTimer'] && (c6d['inspecting'] = !0x0);
            }
            ,
            this['melee'] = function(c6e) {
                if (c6e['reloads'][c6e['weaponIndex']] = c6e['weapon']['rate'],
                c6e['didShoot'] = !0x0,
                c6e['isYou']) {
                    if (c6d['controls'] && c6d['controls']['gamepad']['_connected'] && c6d['controls']['gamepad']['rumble'](c6e['weapon']['rumbleDur'] || 0xc8, c6e['weapon']['rumble'] || 0.5),
                    c6e['weapon']['anim']) {
                        var c6f = c6d['store']['skins'][c6e['meleeIndex']] || {};
                        c6e['weapon']['anim'](c6e, TWEEN, c6f['animInd'] || 0x1);
                    }
                    c6e['weapon']['sounds'] && c7n['play'](c6e['weapon']['sounds'][c7p['randInt'](0x0, c6e['weapon']['sounds']['length'] - 0x1)], 0.1, !0x1, c7p['randFloat'](0.9, 1.1));
                }
                var c6g = c6e['xDire']
                  , c6i = c6e['yDire'];
                caf['length'] = 0x0;
                for (var c7o = 0x0, c7s = 0x1 / (c6e['weapon']['range'] * Math['sin'](c6g + Math['PI']) * Math['cos'](c6i)), c7u = 0x1 / (c6e['weapon']['range'] * Math['cos'](c6g + Math['PI']) * Math['cos'](c6i)), c7v = 0x1 / (c6e['weapon']['range'] * Math['sin'](c6i)), c9x = c6e['y'] + c6e['height'] - c7q['cameraHeight'], cad = 0x0; cad < c6d['map']['manager']['objects']['length']; ++cad)
                    (c7t = c6d['map']['manager']['objects'][cad])['active'] && !c7t['noShoot'] && ((c7o = c7p['lineInRect'](c6e['x'], c6e['z'], c9x, c7s, c7u, c7v, c7t['x'] - c7t['width'], c7t['z'] - c7t['length'], c7t['y'] - c7t['height'], c7t['x'] + c7t['width'], c7t['z'] + c7t['length'], c7t['y'] + c7t['height'])) && 0x1 >= c7o && caf['push']({
                        'obj': c7t,
                        'dst': c7o
                    }));
                if (c7r)
                    for (cad = 0x0; cad < this['list']['length']; ++cad)
                        this['list'][cad]['active'] && c6e != this['list'][cad] && (!c6e['team'] || c6e['team'] != this['list'][cad]['team']) && ((c7t = this['fetchState'](this['list'][cad], c6e['getStateConst']())) && ((c7o = c7p['lineInRect'](c6e['x'], c6e['z'], c9x, c7s, c7u, c7v, c7t['x'] - this['list'][cad]['scale'] - c6d['config']['hitBoxPad'], c7t['z'] - this['list'][cad]['scale'] - c6d['config']['hitBoxPad'], c7t['y'], c7t['x'] + this['list'][cad]['scale'] + c6d['config']['hitBoxPad'], c7t['z'] + this['list'][cad]['scale'] + c6d['config']['hitBoxPad'], c7t['y'] + this['list'][cad]['height'] + c6d['config']['hitBoxPad'])) && 0x1 >= c7o && caf['push']({
                            'player': !0x0,
                            'obj': this['list'][cad],
                            'dst': c7o
                        })));
                c6e['weapon']['range'];
                if (caf['length']) {
                    caf['sort'](c7p['orderByDst']);
                    var cae = c6e['weapon']['dmg'];
                    for (cad = 0x0; cad < caf['length'] && (c7t = caf[cad],
                    c6e['weapon']['range'] * c7t['dst'],
                    c7r) && (c7r && !c6d['waitTimers'] && c7t['obj'] && c7t['obj']['health'] && !c7t['player'] && (c7r['send'](c6e['id'], '4'),
                    c7t['obj']['health'] -= cae,
                    0x0 >= c7t['obj']['health'] && (c7t['obj']['active'] = !0x1,
                    c7t['obj']['health'] = 0x0,
                    c7t['obj']['destroyedBy'] = c6e,
                    c6d['destObjs']['push'](c7t['obj']['uid']),
                    c7r['broadcast']('game' + c6d['sid'], 'do', c7t['obj']['uid']),
                    c7t['obj'] && c7t['obj']['onDestroy'] && c6d['onTrigger'](c6e, c7t['obj']))),
                    c7r && 'seek' == c6e['team'] && !c7t['player'] && c7t['obj'] && c7t['obj']['propID'] && this['changeHealth'](c6e, null, 0xa) && this['kill'](c6e, null, {}),
                    c7t['obj'] && (c7t['obj']['onMelee'] || c7t['obj']['onDamage']) && c6d['onTrigger'](c6e, c7t['obj']),
                    c7t['player'] || c7t['obj'] && c7t['obj']['dummy']) && (this['changeHealth'](c7t['obj'], c6e, cae) && (c6e && (c6e['melees']++,
                    c7r && c6d['incStat']('mk', c6e)),
                    this['kill'](c7t['obj'], c6e, {
                        'weaponId': c6d['weapons']['findIndexBySrc'](c6e['weapon']['src']),
                        'weapon': c6e['weapon']
                    })),
                    !(0x0 >= (cae -= null == c6e['weapon']['pierce'] ? cae : c6e['weapon']['dmg'] * c7q['materialDens']['flesh'] * c6e['weapon']['pierce']))); ++cad)
                        ;
                }
            }
            ;
            var caf = [];
            this['shoot'] = function(c6f, c6g) {
                var c6i = !0x1;
                if (c7r && c6d['incStat']('s', c6f),
                c6d['config']['noReload'] || c6f['ammos'][c6f['weaponIndex']]--,
                c6f['didShoot'] = !0x0,
                c6f['burstCount'] ? c6f['burstCount']-- : c6f['burstCount'] = c6f['weapon']['burst'] ? c6f['weapon']['burst']['c'] - 0x1 : 0x0,
                c6f['reloads'][c6f['weaponIndex']] = c6f['burstCount'] && c6f['weapon']['burst'] ? c6f['weapon']['burst']['r'] : c6f['weapon']['rate'],
                this['updatePlayerAmmo'](c6f),
                c6d['playSound']) {
                    var c7s = c6f['ammos'][c6f['weaponIndex']] / c6d['weapons'][c6f['loadout'][c6f['weaponIndex']]]['ammo']
                      , c7u = c6d['store']['skins'][c6f['skins'][c6f['weaponIndex']]]
                      , c7v = c6f['weapon']['sound'] + (c7u && null != c7u['mid'] ? '_' + c7u['mid'] : '');
                    c6f['isYou'] && 0.25 >= c7s && !c6f['weapon']['nRing'] ? c6d['playSound'](c7v, 0.85, c6f, !0x1, c7p['randFloat'](0.9, 0x1) + 0.15 * (0x1 - c7s / 0.25)) : c6d['playSound'](c7v, 0.85, c6f, !0x1, c7p['randFloat'](0.9, 0x1));
                }
                if (c6f['recoilForce'] += c6f['weapon']['recoil'],
                c6f['isYou']) {
                    c6d['controls'] && c6d['controls']['gamepad']['_connected'] && c6d['controls']['gamepad']['rumble'](c6f['weapon']['rumbleDur'] || 0xc8, c6f['weapon']['rumble'] || 0.5);
                    var c9x = c7p['randInt'](0x0, 0x1) ? -c6f['weapon']['recoilR'] : c6f['weapon']['recoilR'];
                    c6f['recoilX'] += c9x,
                    c6f['recoilZ'] += c9x,
                    c6f['recoilTween'] && c6f['recoilTween']['stop']();
                    var can = c6f['weapon']['recoilAnim'] && c6f['weapon']['recoilAnim']['time'] || c6f['weapon']['rate'];
                    0x0 == c6f['aimVal'] && c6f['weapon']['recoilAnim'] && c6f['weapon']['recoilAnim']['aimTime'] && (can = c6f['weapon']['recoilAnim']['aimTime']),
                    c6f['recoilTween'] = new TWEEN['Tween'](c6f)['to'](c6f['weapon']['recoilAnim'] || {}, 0.15 * can)['easing'](TWEEN['Easing']['Linear']['None'])['onComplete'](function() {
                        c6f['recoilTween'] = new TWEEN['Tween'](c6f)['to']({
                            'recoilTweenY': 0x0,
                            'recoilTweenYM': 0x0,
                            'recoilTweenZ': 0x0
                        }, 0.95 * can)['easing'](TWEEN['Easing']['Back']['Out'])['start']();
                    })['start'](),
                    this['cancelInspect'](c6f);
                }
                if (c6f['isYou'] && !this['isWeaponHidden'](c6f, c6f['weaponIndex'])) {
                    var cao = c6f['weaponMeshes'][c6f['weaponIndex']]
                      , cap = 0x0 == c6f['aimVal'] && c6f['weapon']['scope'];
                    if (c7o['showMuzzle'] && !c6f['weapon']['nMuz'] && (0x0 == c6e['useDepthMap'] || '0' == c6e['useDepthMap'])) {
                        for (var caq = 0x0; caq < cao['muzzles']['length']; ++caq)
                            cao['muzzles'][caq]['visible'] = !0x0,
                            c7o['setMaterial'](cao['muzzles'][caq], c6f['weapon']['muzID'] || 0x2, 0x1, !0x0),
                            cao['muzzles'][caq]['init'](caq ? -0x2 * c6f['weapon']['xOff'] : 0x0, c6f['weapon']['muzOffY'] || 0x0, -c6f['weapon']['muzOff'], 0x0, 0x0, 0x0, 0x4 * (c6f['weapon']['muzMlt'] || 0x1), 0x1);
                        if (!cap)
                            (cb2 = c6f['weaponMeshes'][c6f['weaponIndex']]['muzzles'][0x0]['getWorldPosition']()['clone']())['project'](c6e['camera']),
                            cb2['x'] = (cb2['x'] + 0x1) / 0x2,
                            cb2['y'] = (cb2['y'] + 0x1) / 0x2,
                            c6e['flash'](cb2['x'], cb2['y']);
                    }
                    if (!c6f['weapon']['nCase'] && c7o['active'])
                        for (caq = 0x0; caq < c6f['weaponMeshes'][c6f['weaponIndex']]['casings']['length']; ++caq)
                            if (cb2 = c6f['weaponMeshes'][c6f['weaponIndex']]['casings'][caq]['getWorldPosition'](),
                            c7n && 0x190 < c6d['now'] - (c6f['lastShell'] || 0x0) && (c6f['lastShell'] = c6d['now'],
                            c7n['play3D']('case_' + c7p['randInt'](0x0, 0x1), cb2['x'], cb2['y'], cb2['z'], 0.65, c7p['randFloat'](0.8, 1.3))),
                            !cap) {
                                var car = c7p['randInt'](0x0, 0x1) ? 1.4 : 0.8;
                                c7o['physObj'](cb2['x'], cb2['y'], cb2['z'], c6f['xDire'] - Math['PI'] / 0x2 * (caq ? -0x1 : 0x1), Math['PI'] / 0x5 * c7p['randFloat'](0.75, 1.2) * car, 0x19, !0x1, c6f['weapon']['caseInd'] || 0x1, c6f);
                            }
                }
                if (null == c6f['weapon']['projectile'])
                    for (var cas = 0x0, cat = c6f['weapon']['physPow'] ? -0x1 : 0x0; cat < (c6f['weapon']['shots'] || 0x1); ++cat) {
                        var cau = 0x0
                          , cav = 0x0;
                        if (c6f['weapon']['cSpread'] && 0x0 <= cat) {
                            var caw = c7p['randFloat'](0.09, 0.14);
                            cau = c6f['xDire'] + c6f['weapon']['cSpread'][cas] * caw,
                            cav = c6f['yDire'] + c6f['weapon']['cSpread'][cas + 0x1] * caw,
                            cas += 0x2;
                        } else {
                            var cax = 0x0 <= cat ? (c6f['spread'] + (c6f['weapon']['innac'] || 0x0)) * c7q['spreadAdj'] : 0x0;
                            cau = c6f['xDire'] + c7p['randFloat'](-cax, cax),
                            cav = c6f['yDire'] + c7p['randFloat'](-cax, cax);
                        }
                        cav += c6f['recoilAnimY'] * c7q['recoilMlt'];
                        var cay = c6f['weapon']['range'];
                        0x0 > cat && (cay = c6f['weapon']['physRang']),
                        caf['length'] = 0x0;
                        for (var caz = 0x0, caA = 0x1 / (cay * Math['sin'](cau + Math['PI']) * Math['cos'](cav)), caB = 0x1 / (cay * Math['cos'](cau + Math['PI']) * Math['cos'](cav)), caC = 0x1 / (cay * Math['sin'](cav)), caD = c6f['y'] + c6f['height'] - c7q['cameraHeight'], caE = 0x0; caE < c6d['map']['manager']['objects']['length']; ++caE)
                            (c7t = c6d['map']['manager']['objects'][caE])['active'] && !c7t['noShoot'] && ((caz = c7p['lineInRect'](c6f['x'], c6f['z'], caD, caA, caB, caC, c7t['x'] - c7t['width'], c7t['z'] - c7t['length'], c7t['y'] - c7t['height'], c7t['x'] + c7t['width'], c7t['z'] + c7t['length'], c7t['y'] + c7t['height'])) && 0x1 >= caz && caf['push']({
                                'obj': c7t,
                                'dst': caz
                            }));
                        if (c7r && 0x0 <= cat)
                            for (caE = 0x0; caE < this['list']['length']; ++caE)
                                this['list'][caE]['active'] && c6f != this['list'][caE] && (!c6f['team'] || c6f['team'] != this['list'][caE]['team']) && ((c7t = this['fetchState'](this['list'][caE], c6f['getStateConst']())) && ((caz = c7p['lineInRect'](c6f['x'], c6f['z'], caD, caA, caB, caC, c7t['x'] - this['list'][caE]['scale'] - c6d['config']['hitBoxPad'], c7t['z'] - this['list'][caE]['scale'] - c6d['config']['hitBoxPad'], c7t['y'], c7t['x'] + this['list'][caE]['scale'] + c6d['config']['hitBoxPad'], c7t['z'] + this['list'][caE]['scale'] + c6d['config']['hitBoxPad'], c7t['y'] + this['list'][caE]['height'] + c6d['config']['hitBoxPad'])) && 0x1 >= caz && caf['push']({
                                    'player': !0x0,
                                    'obj': this['list'][caE],
                                    'dst': caz
                                })));
                        var caF = c6d['map']['terrain'];
                        if (caF) {
                            var caG = caF['raycast'](c6f['x'], -c6f['z'], caD, 0x1 / caA, -0x1 / caB, 0x1 / caC);
                            if (caG) {
                                let c6d = c7p['getDistance3D'](c6f['x'], caD, c6f['z'], caG['x'], caG['z'], -caG['y']);
                                caf['push']({
                                    'terrain': !0x0,
                                    'dst': c6d / cay
                                });
                            }
                        }
                        var caI = cay;
                        if (caf['length']) {
                            caf['sort'](c7p['orderByDst']);
                            var caJ = c6f['weapon']['dmg']
                              , caK = !0x1;
                            for (caE = 0x0; caE < caf['length']; ++caE) {
                                if (caI = cay * (c7t = caf[caE])['dst'],
                                0x0 > cat) {
                                    var caL = (0x1 - c7t['dst']) * (c6f['weapon']['physPow'] * (c6d['config'] ? c6d['config']['impulseMlt'] : 0x1))
                                      , caM = caL * Math['sin'](cau + Math['PI']) * Math['cos'](cav);
                                    c6f['xVel'] -= caM;
                                    var caN = caL * Math['cos'](cau + Math['PI']) * Math['cos'](cav);
                                    c6f['zVel'] -= caN;
                                    var caO = caL * Math['sin'](cav);
                                    c6f['yVel'] -= caO,
                                    c6f['onGround'] = !0x1,
                                    c7r || (c6g['velObj'] = {
                                        'x': caM,
                                        'y': caN,
                                        'z': caO
                                    });
                                    break;
                                }
                                if (!c7r)
                                    break;
                                var caP = c6f['weapon']['dropStart'] || 0x0
                                  , caQ = Math['min'](0x1, 0x1 - (0x1 - c7t['dst']) * cay / (cay - caP))
                                  , caR = caJ - c6f['weapon']['dmgDrop'] * caQ
                                  , caS = !0x1
                                  , caT = !0x1;
                                if (c7t['player']) {
                                    var caU = caD + caI * Math['sin'](cav);
                                    caS = c7t['obj']['y'] + c7t['obj']['height'] - caU < c7q['headScale'],
                                    caT = c7t['obj']['y'] + c7q['legHeight'] > caU,
                                    caR *= caS && !c6f['weapon']['noHeadShot'] ? 1.5 : 0x1,
                                    caR *= caT ? 0.5 : 0x1,
                                    caS || !c6d['config'] || !c6d['config']['headshotOnly'] || (caR = 0x0);
                                }
                                if (c7r && !c6d['waitTimers'] && c7t['obj'] && c7t['obj']['health'] && !c7t['player'] && (c7t['obj']['health'] -= caR,
                                c7r['send'](c6f['id'], '4'),
                                0x0 >= c7t['obj']['health'] && (c7t['obj']['active'] = !0x1,
                                c7t['obj']['health'] = 0x0,
                                c7t['obj']['destroyedBy'] = c6f,
                                c6d['destObjs']['push'](c7t['obj']['uid']),
                                c7r['broadcast']('game' + c6d['sid'], 'do', c7t['obj']['uid']),
                                c7t['obj'] && c7t['obj']['onDestroy'] && c6d['onTrigger'](c6f, c7t['obj']))),
                                c7r && 'seek' == c6f['team'] && !c7t['player'] && c7t['obj'] && c7t['obj']['propID'] && this['changeHealth'](c6f, null, 0xa) && this['kill'](c6f, null, {}),
                                c7t['obj'] && (c7t['obj']['onShoot'] || c7t['obj']['onDamage']) && c6d['onTrigger'](c6f, c7t['obj']),
                                c7t['player'] || c7t['obj'] && c7t['obj']['dummy']) {
                                    if (c7t['player'] && (c6i = !0x0),
                                    this['changeHealth'](c7t['obj'], c6f, caR)) {
                                        var caV = {
                                            'dst': c7t['dst'],
                                            'headShot': caS,
                                            'wallbang': caK,
                                            'weaponId': c6d['weapons']['findIndexBySrc'](c6f['weapon']['src']),
                                            'weapon': c6f['weapon']
                                        };
                                        this['kill'](c7t['obj'], c6f, caV);
                                    }
                                    caJ -= null == c6f['weapon']['pierce'] ? caJ : c6f['weapon']['dmg'] * c7q['materialDens']['flesh'] * c6f['weapon']['pierce'];
                                } else {
                                    if (!c7t['obj'] || !c7t['obj']['penetrable'])
                                        break;
                                    caK = !0x0,
                                    caJ -= null == c6f['weapon']['pierce'] ? caJ : c6f['weapon']['dmg'] * c7q['materialDens']['default'] * c6f['weapon']['pierce'];
                                }
                                if (0x0 >= caJ)
                                    break;
                            }
                        }
                        caI -= 0.12;
                        var caW = c6f['x'] + caI * Math['sin'](cau + Math['PI']) * Math['cos'](cav)
                          , caX = (caU = caD + caI * Math['sin'](cav),
                        c6f['z'] + caI * Math['cos'](cau + Math['PI']) * Math['cos'](cav))
                          , caY = 0x0
                          , caZ = 0x0;
                        if (caf['length'] && (c7t['terrain'] ? caZ = Math['PI'] / 0x2 : caU >= c7t['obj']['y'] + c7t['obj']['height'] ? caZ = Math['PI'] / 0x2 : caU <= c7t['obj']['y'] - c7t['obj']['height'] ? caZ = -Math['PI'] / 0x2 : caW <= c7t['obj']['x'] - c7t['obj']['width'] ? caY = -Math['PI'] / 0x2 : caW >= c7t['obj']['x'] + c7t['obj']['width'] ? caY = Math['PI'] / 0x2 : caX <= c7t['obj']['z'] - c7t['obj']['length'] && (caY = Math['PI']),
                        !c7r && c7o['effect'](caW, caU, caX, caY, caZ, 0x0)),
                        c7r) {
                            var cb0 = c6f['weapon'] && c6f['weapon']['trail'] ? 0x1 : 0x0;
                            for (caE = 0x0; caE < this['list']['length']; ++caE)
                                (this['list'][caE]['active'] || this['list'][caE]['spectating']) && this['list'][caE] != c6f && (caf['length'] && !c7t['player'] ? c7r['send'](this['list'][caE]['id'], '9', c6f['sid'], Math['round'](caW), Math['round'](caU), Math['round'](caX), caY['round'](0x1), caZ['round'](0x1), cb0) : c7r['send'](this['list'][caE]['id'], '9', c6f['sid'], Math['round'](caW), Math['round'](caU), Math['round'](caX), void 0x0, void 0x0, cb0));
                        }
                        if (c6f['isYou'] && caI >= c7q['tracerMinDst']) {
                            var cb1 = c7p['randInt'](0x0, c6f['weaponMeshes'][c6f['weaponIndex']]['muzzles']['length'] - 0x1)
                              , cb2 = c6f['weaponMeshes'][c6f['weaponIndex']]['muzzles'][cb1]['getWorldPosition']()
                              , cb3 = c6f['weapon'] && c6f['weapon']['scope'] && 0x0 == c6f['aimVal'] ? 0x7 : 0x0
                              , cb4 = cb2['x'] - cb3 * Math['sin'](cau + Math['PI']) * Math['cos'](cav)
                              , cb5 = cb2['y'] - cb3 * Math['sin'](cav)
                              , cb6 = cb2['z'] - cb3 * Math['cos'](cau + Math['PI']) * Math['cos'](cav);
                            c7p['getDistance3D'](cb4, cb5, cb6, caW, caU, caX),
                            caY = c7p['getDirection'](cb6, cb4, caX, caW),
                            caZ = c7p['getDirection'](c7p['getDistance'](cb4, cb6, caW, caX), caU, 0x0, cb5);
                            c7o['physObj'](cb4, cb5, cb6, caY, caZ, Math['min'](caI + cb3, c7q['tracerMaxDst']), c6f['weapon'] && c6f['weapon']['trail'], 0x0, c6f);
                        }
                    }
                else if (c7r) {
                    cax = (c6f['spread'] + (c6f['weapon']['innac'] || 0x0)) * c7q['spreadAdj'],
                    cau = c6f['xDire'] + c7p['randFloat'](-cax, cax),
                    cav = c6f['yDire'] + c6f['recoilAnimY'] * c7q['recoilMlt'] + c7p['randFloat'](-cax, cax);
                    c6d['projectiles']['init'](c6f['x'], c6f['y'] + c6f['height'] - c7q['cameraHeight'], c6f['z'], cau, cav, c6f['weapon']['projectile'], c6f, {
                        'weaponId': c6d['weapons']['findIndexBySrc'](c6f['weapon']['src']),
                        'weapon': c6f['weapon']
                    });
                }
                c6i && c7r && c6d['incStat']('h', c6f);
            }
            ,
            this['spray'] = function(c6e) {
                if (c6d['now'] - c6e['lastSpray'] >= c7q['sprayTimer']) {
                    caf['length'] = 0x0;
                    for (var c6f = 0x0, c6g = 0x1 / (c7q['sprayRange'] * Math['sin'](c6e['xDire'] + Math['PI']) * Math['cos'](c6e['yDire'])), c6i = 0x1 / (c7q['sprayRange'] * Math['cos'](c6e['xDire'] + Math['PI']) * Math['cos'](c6e['yDire'])), c7n = 0x1 / (c7q['sprayRange'] * Math['sin'](c6e['yDire'])), c7o = 0x0; c7o < c6d['map']['manager']['objects']['length']; ++c7o)
                        (c7t = c6d['map']['manager']['objects'][c7o])['noShoot'] || c7t['noVis'] || (c6f = c7p['lineInRect'](c6e['x'], c6e['z'], c6e['y'] + c6e['height'] - c7q['cameraHeight'], c6g, c6i, c7n, c7t['x'] - c7t['width'], c7t['z'] - c7t['length'], c7t['y'] - c7t['height'], c7t['x'] + c7t['width'], c7t['z'] + c7t['length'], c7t['y'] + c7t['height'])) && 0x1 >= c6f && caf['push']({
                            'obj': c7t,
                            'dst': c6f
                        });
                    if (caf['length'] && (caf['sort'](c7p['orderByDst']),
                    c7t = caf[0x0]['obj'])) {
                        var c7s = c7q['sprayRange'] * caf[0x0]['dst'] - 0.1
                          , c7u = c6e['y'] + c6e['height'] - c7q['cameraHeight'] + c7s * Math['sin'](c6e['yDire'])
                          , c7v = c6e['x'] + c7s * Math['sin'](c6e['xDire'] + Math['PI']) * Math['cos'](c6e['yDire'])
                          , c9x = c6e['z'] + c7s * Math['cos'](c6e['xDire'] + Math['PI']) * Math['cos'](c6e['yDire'])
                          , cbh = 0x0
                          , cbi = 0x0;
                        c7u >= c7t['y'] + c7t['height'] ? cbi = -0x5a : c7u <= c7t['y'] - c7t['height'] ? cbi = 0x5a : c7v <= c7t['x'] - c7t['width'] ? cbh = -0x5a : c7v >= c7t['x'] + c7t['width'] ? cbh = 0x5a : c9x <= c7t['z'] - c7t['length'] && (cbh = 0xb4);
                        var cbj = c7q['sprayScale'] / 0x2;
                        if (cbi) {
                            if (c7t['width'] < cbj || c7t['length'] < cbj)
                                return;
                            c9x - cbj < c7t['z'] - c7t['length'] ? c9x = c7t['z'] - c7t['length'] + cbj : c9x + cbj > c7t['z'] + c7t['length'] && (c9x = c7t['z'] + c7t['length'] - cbj),
                            c7v - cbj < c7t['x'] - c7t['width'] ? c7v = c7t['x'] - c7t['width'] + cbj : c7v + cbj > c7t['x'] + c7t['width'] && (c7v = c7t['x'] + c7t['width'] - cbj);
                        } else {
                            if (c7t['height'] < cbj)
                                return;
                            if (0x5a == cbh || -0x5a == cbh) {
                                if (c7t['length'] < cbj)
                                    return;
                                c9x - cbj < c7t['z'] - c7t['length'] ? c9x = c7t['z'] - c7t['length'] + cbj : c9x + cbj > c7t['z'] + c7t['length'] && (c9x = c7t['z'] + c7t['length'] - cbj);
                            } else {
                                if (c7t['width'] < cbj)
                                    return;
                                c7v - cbj < c7t['x'] - c7t['width'] ? c7v = c7t['x'] - c7t['width'] + cbj : c7v + cbj > c7t['x'] + c7t['width'] && (c7v = c7t['x'] + c7t['width'] - cbj);
                            }
                            c7u + cbj > c7t['y'] + c7t['height'] && (c7u = c7t['y'] + c7t['height'] - cbj);
                        }
                        c6e['lastSpray'] = c6d['now'],
                        c6d['playSound'] && c6d['playSound']('spray', 0.4, c6e, !0x0),
                        c7r['broadcast']('game' + c6d['sid'], 'sp', c6e['sid'], c6e['sprayIndex'], c7v['round'](0x2), c7u['round'](0x2), c9x['round'](0x2), cbh, cbi);
                    }
                }
            }
            ,
            this['interact'] = function(c6e) {
                if (c6d['now'] - c6e['lastInteract'] >= c7q['interactTimer']) {
                    if (c6e['lastInteract'] = c6d['now'],
                    'inf' != c6e['team'])
                        for (var c6f = 0x0; c6f < c6d['map']['manager']['pickups']['length']; ++c6f)
                            if (null != (c7s = c6d['map']['manager']['pickups'][c6f])['pickup'] && c6e['collides'](c7s) && -0x1 == c6e['loadout']['indexOf'](c7s['pickup']) && c6e['score'] >= c7s['scoreP']) {
                                if (c6d['weapons'][c6e['loadout'][0x0]] && c6d['weapons'][c6e['loadout'][0x0]]['melee'] && 0x1 == c6e['loadout']['length'])
                                    c7t = void 0x0,
                                    c6e['loadout'][0x0] = c7s['pickup'],
                                    c6e['weaponIndex'] = 0x0,
                                    c7s['pickupRep'] && null == c7t && this['addPicked'](c6e, c7s['pickup']);
                                else if (c6d['weapons'][c7s['pickup']]['type'])
                                    c6d['weapons'][c6e['loadout'][0x0]]['type'] ? (c7t = c6e['loadout'][0x0],
                                    c6e['loadout'][0x0] = c7s['pickup'],
                                    c6e['weaponIndex'] = 0x0) : !c6d['weapons'][c6e['loadout'][0x0]]['type'] && (c7t = c6d['weapons'][c6e['loadout'][0x1]] && c6d['weapons'][c6e['loadout'][0x1]]['melee'] ? void 0x0 : c6e['loadout'][0x1],
                                    c6e['loadout'][0x1] = c7s['pickup'],
                                    c6e['weaponIndex'] = 0x1),
                                    this['removePicked'](c6e, c7t),
                                    c7s['pickupRep'] && null == c7t && this['addPicked'](c6e, c7s['pickup']);
                                else if (!c6d['weapons'][c7s['pickup']]['type']) {
                                    c7t = c6d['weapons'][c6e['loadout'][0x0]] && c6d['weapons'][c6e['loadout'][0x0]]['melee'] ? void 0x0 : c6e['loadout'][0x0];
                                    var c6g = !0x1;
                                    c6d['weapons'][c6e['loadout'][0x0]]['type'] ? (c6e['loadout']['splice'](0x0, 0x0, c7s['pickup']),
                                    c6d['weapons'][c6e['loadout'][0x1]] && c6d['weapons'][c6e['loadout'][0x1]]['melee'] && (c6e['loadout']['length'] = 0x1),
                                    c7t = void 0x0) : !c6d['weapons'][c6e['loadout'][0x0]]['type'] && (!(c6d['weapons'][c6e['loadout'][0x0]] && c6d['weapons'][c6e['loadout'][0x0]]['melee']) && (c6g = this['removePicked'](c6e, c6e['loadout'][0x0])),
                                    c6e['loadout'][0x0] = c7s['pickup']),
                                    c7s['pickupRep'] && (null == c7t || c6g) && this['addPicked'](c6e, c7s['pickup']),
                                    c6e['weaponIndex'] = 0x0;
                                }
                                c7s['pickupRep'] && (c7s['pickup'] = c7t),
                                c7r['broadcast']('game' + c6d['sid'], 'inat', c6e['sid'], c6e['loadout'], c6e['weaponIndex'], c7s['uid'], c7s['pickupRep'] ? c7t : c7s['pickup']),
                                c6e['updateLoadout'](c6d, c6e['weaponIndex'], !0x0, ...c6e['loadout']),
                                0x0 == c7s['scoreP'] || c7s['method'] || (c7r['send'](c6e['id'], 'am', ['Purchased', null]),
                                this['score'](c6e, -c7s['scoreP']));
                                break;
                            }
                    for (c6f = 0x0; c6f < c6d['map']['manager']['gates']['length']; ++c6f)
                        if (((c7s = c6d['map']['manager']['gates'][c6f])['active'] || !c7s['active'] && c7s['closeable']) && c6e['collides'](c7s, c7s['tRadius']) && c6e['score'] >= c7s['scoreP']) {
                            0x0 != c7s['scoreP'] && (c7r['send'](c6e['id'], 'am', [c7s['method'] ? 'Unlocked' : 'Purchased', null]),
                            !c7s['method'] && this['score'](c6e, -c7s['scoreP'])),
                            c7r['broadcast']('game' + c6d['sid'], 'gte', c7s['uid'], !c7s['active'] && c7s['closeable']),
                            c7s['active'] = !c7s['active'];
                            break;
                        }
                }
            }
            ,
            this['findEmptyPickup'] = function() {
                for (var c6e, c6f = 0x0; c6f < c6d['map']['manager']['pickups']['length']; ++c6f)
                    if ((c6e = c6d['map']['manager']['pickups'][c6f])['pickupRep'] && null == c6e['pickup'])
                        return c6e['uid'];
                return null;
            }
            ,
            this['addPicked'] = function(c6d, c6e) {
                -0x1 == c6d['lastPicked']['indexOf'](c6e) && c6d['lastPicked']['push'](c6e);
            }
            ,
            this['removePicked'] = function(c6d, c6e) {
                var c6f = c6d['lastPicked']['indexOf'](c6e);
                return -0x1 < c6f && c6d['lastPicked']['splice'](c6f, 0x1),
                -0x1 < c6f;
            }
            ,
            this['dropWeapon'] = function(c6e, c6f) {
                if (c6d['map']['manager']['pickups']['length']) {
                    var c6g, c6i = c6e['weaponIndex'], c7n = c6e['loadout'][c6i], c7o = [c6e['x'] + c7p['randInt'](-0x5, 0x5), c6e['y'] + 0x1, c6e['z'] + c7p['randInt'](-0x5, 0x5)];
                    if (c6f) {
                        for (var c7q = 0x0; c7q < c6e['loadout']['length']; c7q++)
                            c7n = c6e['loadout'][c7q],
                            (c6g = this['findEmptyPickup']()) && -0x1 < c6e['lastPicked']['indexOf'](c7n) && !c6d['weapons'][c7n]['melee'] && (c7o = [c6e['x'] + c7p['randInt'](-0x5, 0x5), c6e['y'] + 0x1, c6e['z'] + c7p['randInt'](-0x5, 0x5)],
                            c6d['updatePickup'](c6g, c7n, null, c7o),
                            c7r['broadcast']('game' + c6d['sid'], 'inat', -0x1, null, null, c6g, c7n, !0x0, c7o));
                        c6e['lastPicked']['length'] = 0x0;
                    } else if (!c6d['weapons'][c7n]['melee']) {
                        var c7s = (c6g = this['findEmptyPickup']()) && -0x1 < c6e['lastPicked']['indexOf'](c7n);
                        c7s && (this['removePicked'](c6e, c7n),
                        c6d['updatePickup'](c6g, c7n, null, c7o)),
                        c6e['loadout'] = 0x1 == c6e['loadout']['length'] ? [] : [c6e['loadout'][c6i ? 0x0 : 0x1]],
                        c6e['weaponIndex'] = 0x0,
                        c7r['broadcast']('game' + c6d['sid'], 'inat', c6e['sid'], c6e['loadout'], c6e['weaponIndex'], c6g, c7n, c7s, c7o),
                        c6e['updateLoadout'](c6d, c6e['weaponIndex'], !0x0, ...c6e['loadout']);
                    }
                }
            }
            ,
            this['updateInteract'] = function(c6e, c6f, c6g='Pickup\x20weapon') {
                if ((c6d['map']['manager']['pickups']['length'] || c6d['map']['manager']['gates']['length']) && c6e['isYou']) {
                    inner = 'Press\x20<span\x20style=\x22color:#fbc02d\x22>[' + c7p['getKeyName'](c6d['controls']['interactKey']) + ']</span>\x20to\x20' + c6g;
                    var c6i = c6f ? 'block' : 'none';
                    interactMsg['innerHTML'] != inner && (interactMsg['innerHTML'] = inner),
                    interactMsg['style']['display'] != c6i && (interactMsg['style']['display'] = c6i);
                }
            }
            ;
            var cbG = [];
            this['syncLeaders'] = function() {
                var c6e = c6d['mode']['leaderStat'] || 'score';
                c7u = c6d['mode']['killSort'] ? this['list']['slice']()['sort'](c7p['orderByKills']) : this['list']['slice']()['sort'](c7p['orderByScore']),
                cbG['length'] = 0x0;
                for (var c6f = 0x0, c6g = 0x0, c6i = 0x0; c6i < c7u['length']; ++c6i)
                    c7u[c6i]['spectating'] ? c6g++ : 0xa > c6f && (c6f++,
                    cbG['push'](c7u[c6i]['sid'], c7u[c6i]['account'] ? c7u[c6i]['account']['name'] : c7u[c6i]['name'], c7u[c6i]['team'], c6d['mode']['killSort'] ? c7u[c6i]['kills'] : c7q['endForm'][c6e] ? c7q['endForm'][c6e](c7u[c6i][c6e], c6d, c7u[c6i]) : c7u[c6i][c6e], c7u[c6i]['account'] ? c7u[c6i]['account']['clan'] : 0x0, c7u[c6i]['account'] ? c7u[c6i]['account']['featured'] : 0x0));
                c7r['broadcast']('game' + c6d['sid'], '7', cbG, c6g);
            }
            ,
            this['score'] = function(c6e, c6f, c6g) {
                c7r && (c6e['score'] += c6f,
                null == c6d['host'] && 0x32c8 < c6e['score'] && (c6e['score'] = 0x32c8,
                c6f = 0x0),
                c7r['send'](c6e['id'], '5', c6f),
                this['syncLeaders'](),
                c6d['mode']['teams'] && c6e['team'] && c6d['teams'] && !c6d['mode']['noScoreC'] && (!c6g || !c6d['mode']['objective']) && (c6d['teams'][c6e['team']] ? c6d['teams'][c6e['team']] += c6f : c6d['teams'][c6e['team']] = c6f,
                c7r['broadcast']('game' + c6d['sid'], 'ts', c6e['team'], c6d['teams'][c6e['team']])));
            }
            ,
            this['tickPlayer'] = function(c6d, c6e) {
                c6d['playTime'] += c6e,
                c6d['account'] && (c6d['logTime'] += c6e),
                0x0 < c6d['hitTimer'] && (c6d['hitTimer'] -= c6e),
                c6d['ticker'] -= c6e,
                0x0 >= c6d['ticker'] && (c6d['ticker'] = 0x1f4,
                0x0 >= c6d['hitTimer'] && !c6d['challMode'] && this['changeHealth'](c6d, null, -c6d['maxHealth'] * (c6d['regen'] || 0x0)));
            }
            ,
            this['changeHealth'] = function(c6e, c6f, c6g, c6i) {
                if ((!c6d['waitTimers'] || c6d['waitTimers'][0x0]['canDMG']) && !(0x0 > c6g && c6e['health'] == c6e['maxHealth']) && (c6f && c6f['account'] && c6f['account']['hack'] && c6g && (c6g *= 0.2),
                c6f && 0.1 <= c6f['avgSpn'] && (c6g *= 0.2),
                c6f && c6f['isHacker'] && (c6g *= 0.1),
                c6f && c6f['lastHack'] && 0x190 >= c6d['now'] - c6f['lastHack'] && (c6g *= 0.2),
                !(!c6i && c6e['team'] && c6f && c6e['team'] == c6f['team'] && 0x0 < c6g))) {
                    if (c6f && c6f != c6e && 0x0 < c6g && c7r['send'](c6f['id'], '4', c6e['sid'], Math['round'](c6g)),
                    c6e['dummy'])
                        return !0x0;
                    0x0 < c6g && (c6e['hitTimer'] = c6e['regenDelay'] || 0x0),
                    c6e['health'] -= c6g,
                    c6e['health'] = Math['max'](Math['min'](c6e['maxHealth'], c6e['health']), 0x0),
                    c6f ? (c7r['send'](c6e['id'], 'h', Math['ceil'](c6e['health']), null, Math['round'](c6f['x']), Math['round'](c6f['z'])),
                    c6f != c6e && (c6e['dmgReceived'][c6f['id']] ? (c6e['dmgReceived'][c6f['id']]['val'] += c6g,
                    c6e['dmgReceived'][c6f['id']]['time'] = c6d['now']) : c6e['dmgReceived'][c6f['id']] = {
                        'time': c6d['now'],
                        'val': c6g
                    })) : c7r['send'](c6e['id'], 'h', Math['ceil'](c6e['health']));
                    for (var c7n = 0x0; c7n < this['list']['length']; ++c7n)
                        this['list'][c7n] != c6e && c7r['send'](this['list'][c7n]['id'], 'h', Math['ceil'](c6e['health']), c6e['sid']);
                    return 0x0 >= c6e['health'];
                }
            }
            ,
            this['changePosition'] = function(c6d, c6e, c6f, c6g, c6i) {
                c6d['x'] = c6d['oldX'] = c6e,
                c6d['y'] = c6d['oldY'] = c6f,
                c6d['z'] = c6d['oldZ'] = c6g,
                c6i && (c6d['lastX'] = c6e,
                c6d['lastY'] = c6f,
                c6d['lastZ'] = c6g,
                c6d['stepVal'] = 0x0,
                c6d['xVel'] = 0x0,
                c6d['yVel'] = 0x0,
                c6d['zVel'] = 0x0);
            }
            ,
            this['swapMelee'] = function(c6d, c6e) {
                0x1 >= c6d['ammos']['length'] || (c6d['weaponIndex'] == c6d['ammos']['length'] - 0x1 ? this['swapWeapon'](c6d, 0x1, !0x1, void 0x0, void 0x0, c6e) : this['swapWeapon'](c6d, null, null, void 0x0, c6d['ammos']['length'] - 0x1, c6e));
            }
            ,
            this['swapSecondary'] = function(c6e, c6f) {
                if (!(0x1 >= c6e['ammos']['length']))
                    for (var c6g, c6i = 0x0; c6i < c6e['ammos']['length']; ++c6i)
                        c6g = c6e['loadout'][c6i],
                        c6d['weapons'][c6g] && c6d['weapons'][c6g]['secondary'] && (c6e['weaponIndex'] == c6i ? this['swapWeapon'](c6e, null, null, void 0x0, 0x0, c6f) : this['swapWeapon'](c6e, null, null, void 0x0, c6i, c6f));
            }
            ,
            this['swapWeapon'] = function(c6f, c6g, c6i, c7n, c7o, c7q) {
                if (!(0x1 >= c6f['ammos']['length'] && c6g || c7n > c6f['ammos']['length'])) {
                    var c7r = c6f['weaponIndex'];
                    if (c6g && (0x1 != c6g && -0x1 != c6g && (c6g = 0x0),
                    c6f['weaponIndex'] += c6g,
                    0x1 == c6g ? c6f['weaponIndex'] > c6f['ammos']['length'] - 0x2 && (c6f['weaponIndex'] = 0x0) : 0x0 > c6f['weaponIndex'] ? c6f['weaponIndex'] = Math['min'](c6f['ammos']['length'] - 0x1, 0x2) : c6f['weaponIndex'] = 0x0),
                    null != c7n && (c6f['weaponIndex'] = c7n),
                    null != c7o && (c6f['weaponIndex'] = c7o),
                    (null != c6g || null != c7o) && (c7r != c6f['weaponIndex'] || c6i) && (c6f['reloadTimer'] = 0x0,
                    c6f['didShoot'] = !0x1,
                    c6f['burstCount'] = 0x0),
                    c6f['weapon'] = c6d['weapons'][c6f['loadout'][c6f['weaponIndex']]],
                    c6f['weapon'] || (c6f['weapon'] = c6d['weapons'][c6f['loadout'][0x0]],
                    c6f['weapon'] && (c6f['weaponIndex'] = 0x0)),
                    c6e && (c7r != c6f['weaponIndex'] || c6i)) {
                        this['cancelInspect'](c6f);
                        for (var c7s = 0x0; c7s < c6f['weaponMeshes']['length']; ++c7s)
                            c6f['weaponMeshes'][c7s]['visible'] = !0x1;
                        c6f['weaponMeshes'][c6f['weaponIndex']] && (c6f['weaponMeshes'][c6f['weaponIndex']]['visible'] = !this['isWeaponHidden'](c6f, c6f['weaponIndex']) || !c6f['isYou']);
                    }
                    if (null == c7n && c6f['weapon'] && (!c6e || c6f['isYou']) && (c6f['isYou'] && c7r == c6f['weaponIndex'] || c7q || (c6f['swapTime'] = c6f['weapon']['swapTime']),
                    c6f['isYou'] && (c7r != c6f['weaponIndex'] || c6i))) {
                        var c7t, c7u = '';
                        for (c7s = 0x0; c7s < c6f['ammos']['length']; ++c7s)
                            c7t = c7s == c6f['weaponIndex'],
                            c6d['weapons'][c6f['loadout'][c7s]]['icon'] && (c7u += '<div\x20class=\x27weaponItem\x27>' + (0x0 < c7s ? '<div\x20class=\x27weapKey\x27>' + (c6d['weapons'][c6f['loadout'][c7s]]['melee'] ? '[' + c7p['getKeyName'](c6d['controls']['meleeKey']) + ']' : '[' + c7p['getKeyName'](c6d['controls']['swapKey']) + ']') + '</div>' : '') + '<img\x20style=\x27opacity:' + (c7t ? 0x1 : 0.7) + (c7s ? ';margin-right:25px' : '') + '\x27\x20class=\x27weaponIcon\x27\x20src=\x27' + (c6d['weapons'][c6f['loadout'][c7s]]['melee'] ? './textures/melee/icon_' + (c6d['store']['skins'][c6f['meleeIndex']] && c6d['store']['skins'][c6f['meleeIndex']]['id'] || 0x0) : './textures/weapons/' + c6d['weapons'][c6f['loadout'][c7s]]['icon']) + '.png\x27\x20/></div>');
                        c7q || (c6f['swapTween'] && c6f['swapTween']['stop'](),
                        c6f['swapTweenA'] = 0.5,
                        c6f['swapTween'] = new TWEEN['Tween'](c6f)['to']({
                            'swapTweenA': 0x1
                        }, 0x4b0)['easing'](TWEEN['Easing']['Elastic']['Out'])['start'](),
                        c7r != c6f['weaponIndex'] && 0x1 == c6f['aimVal'] && (c6f['swapTweenAnim'] && c6f['swapTweenAnim']['stop'](),
                        c6f['swapTweenR'] = c6f['weapon']['swapWiggle'] || 0.6,
                        c6f['swapTweenAnim'] = new TWEEN['Tween'](c6f)['to']({
                            'swapTweenR': 0x0
                        }, c6f['weapon']['swapTime'] + 0xdc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()),
                        c7r != c6f['weaponIndex'] && 0x1 == c6f['aimVal'] && (c6f['meleeAnim']['anim'] && c6f['meleeAnim']['anim']['stop'](),
                        c6f['resetMeleeAnim'](),
                        c6f['meleeAnim']['armR'] = 0.15,
                        c6f['weapon']['melee'] && (c6f['meleeAnim']['anim'] = new TWEEN['Tween'](c6f['meleeAnim'])['to']({
                            'armR': 0x0
                        }, 0x2bc)['easing'](TWEEN['Easing']['Back']['InOut'])['start']()))),
                        weaponDisplay['innerHTML'] = c7u,
                        this['updatePlayerAmmo'](c6f);
                    }
                }
            }
            ,
            this['taunt'] = function(c6e, c6f) {
                c6e && c6e['active'] && c7q['taunts'][c6f] && (!c6e['lastTaunt'] || 0x0 <= c6d['now'] - c6e['lastTaunt']) && (c6e['lastTaunt'] = c6d['now'] + c7q['taunts'][c6f]['tm'],
                c6d['playSound'](c7q['taunts'][c6f]['id'], 0.3, c6e, !0x0, c7p['randFloat'](0.9, 0x1)));
            }
            ,
            this['checkStreak'] = function(c6e) {
                for (var c6f = 0x0; c6f < c6d['streaks']['length']; ++c6f)
                    c6e['realKillStreak'] == c6d['streaks'][c6f]['kills'] && this['addStreak'](c6e, c6f);
                c6e['realKillStreak'] >= c6d['maxStreak'] && (c6e['realKillStreak'] = 0x0);
            }
            ,
            this['useStreak'] = function(c6e, c6f) {
                c6e['streaks'][c6f] && c6e['streaks'][c6f]['streak']['activate'](c6d, c6e) && (0x1 < c6e['streaks'][c6f]['cnt'] ? c6e['streaks'][c6f]['cnt']-- : c6e['streaks'][c6f] = null,
                c7r['send'](c6e['id'], 'st', c6f, c6e['streaks'][c6f] && c6e['streaks'][c6f]['cnt'] || 0x0));
            }
            ,
            this['addStreak'] = function(c6e, c6f) {
                c6e['streaks'][c6f] ? c6e['streaks'][c6f]['cnt']++ : c6e['streaks'][c6f] = {
                    'cnt': 0x1,
                    'streak': c6d['streaks'][c6f]
                },
                c7r['send'](c6e['id'], 'st', c6f, c6e['streaks'][c6f]['cnt']);
            }
            ,
            this['kill'] = function(c6e, c6f, c6g, c6i, c7n) {
                if (c6e['dummy'] || c6e['active']) {
                    var c7o = !0x1;
                    if (c6e['dummy'] || (c6e['active'] = !0x1,
                    c6e['isYou'] && this['toggleAim'](c6e, 0x0),
                    c6e['objInstances'] && this['disposeMesh'](c6e)),
                    c7r) {
                        var c7p, c7s = 0x0;
                        if (c6e['deaths']++,
                        c6d['mode']['noStreaks'] || c6e['deathStreak']++,
                        c6e['lives'] && !c6d['waitTimers'] && (c6e['lives']--,
                        c7r['send'](c6e['id'], 'lv', c6e['lives'])),
                        c6d['kills']++,
                        c6f && c6f != c6e && (!c6e['dummy'] && c6f['kills']++,
                        !c6d['mode']['noStreaks'] && (c6f['streak']++,
                        c6f['killStreak']++,
                        c6f['realKillStreak']++,
                        c6f['deathStreak'] = 0x0,
                        this['checkStreak'](c6f),
                        0x0 == c6f['killStreak'] % 0x5 && (c7s = c6f['killStreak']),
                        c6d['now'] - c6f['lastKill'] >= c7q['feedTimer'] && (c6f['streak'] = 0x0)),
                        c6f['lastKill'] = c6d['now'],
                        !c7n && c6d['config']['killRewards'] && !c6d['mode']['noKillRewards'] && ((c7p = c7v['reward'](this, c6f, c6e, c6g, c6d)) && c7r['send'](c6f['id'], '6', c7p, c6g['headShot'] ? 0x1 : 0x0, c6f['kills']),
                        this['score'](c6f, c7v['getScore'](c7p), !0x0),
                        c7o = !0x0),
                        c6d['players']['dropWeapon'](c6e, !0x0)),
                        c6g && c6g['weapon'] && delete c6g['weapon'],
                        !c6e['dummy'])
                            for (var c7t = 0x0; c7t < this['list']['length']; ++c7t)
                                !c6d['mode']['noAssists'] && c6e['dmgReceived'][this['list'][c7t]['id']] && c6f != this['list'][c7t] && c6e['dmgReceived'][this['list'][c7t]['id']]['val'] >= c7q['assistMin'] && c6d['now'] - c6e['dmgReceived'][this['list'][c7t]['id']]['time'] <= c7q['assistTime'] && (this['list'][c7t]['assists']++,
                                this['score'](this['list'][c7t], c7q['assistScore'], !0x0),
                                c7r['send'](this['list'][c7t]['id'], '10'),
                                c7o = !0x0),
                                this['list'][c7t] == c6e ? c7r['send'](c6e['id'], '3', c6e['sid'], c6e['deaths'], c6f ? c6f['sid'] : 0x0, [c6f ? null == c6g['weaponId'] ? c6f['loadout'][c6f['weaponIndex']] : c6g['weaponId'] : -0x1, c7p ? c7v['getScore'](c7p) : 0x0], c6g, c6i) : c7r['send'](this['list'][c7t]['id'], '3', c6e['sid'], c6e['deaths'], c6f ? c6f['sid'] : 0x0, null, c6g, c6i);
                        c6d['mode']['onKill'] && c6d['mode']['onKill'](c6d, c7r, c6e, c6f, c6g),
                        c7s && c7r['broadcast']('game' + c6d['sid'], 'kst', c6f['sid'], c7s);
                    }
                    c7r && !c7o && this['syncLeaders']();
                }
            }
            ,
            this['indexBySid'] = function(c6d) {
                for (var c6e = 0x0; c6e < this['list']['length']; ++c6e)
                    if (this['list'][c6e]['sid'] == c6d)
                        return c6e;
                return -0x1;
            }
            ,
            this['findBySid'] = function(c6d) {
                for (var c6e = 0x0; c6e < this['list']['length']; ++c6e)
                    if (this['list'][c6e]['sid'] === c6d)
                        return this['list'][c6e];
                return null;
            }
            ;
        }
        ;
    }
    , function(ccB, ccC, ccD) {
        'use strict';
        ccD['r'](ccC);
        var ccE = {};
        ccD['r'](ccE),
        ccD['d'](ccE, 'FunctionToString', function() {
            return cdv;
        }),
        ccD['d'](ccE, 'InboundFilters', function() {
            return cdW;
        });
        var ccF = {};
        ccD['r'](ccF),
        ccD['d'](ccF, 'GlobalHandlers', function() {
            return cmG;
        }),
        ccD['d'](ccF, 'TryCatch', function() {
            return ckQ;
        }),
        ccD['d'](ccF, 'Breadcrumbs', function() {
            return cli;
        }),
        ccD['d'](ccF, 'LinkedErrors', function() {
            return cmJ;
        }),
        ccD['d'](ccF, 'UserAgent', function() {
            return cmL;
        });
        var ccG = {};
        ccD['r'](ccG),
        ccD['d'](ccG, 'BaseTransport', function() {
            return ciY;
        }),
        ccD['d'](ccG, 'FetchTransport', function() {
            return cj0;
        }),
        ccD['d'](ccG, 'XHRTransport', function() {
            return cj1;
        });
        var ccH, ccI, ccJ, ccK = ccD(0x0);
        (ccI = ccH || (ccH = {}))['Fatal'] = 'fatal',
        ccI['Error'] = 'error',
        ccI['Warning'] = 'warning',
        ccI['Log'] = 'log',
        ccI['Info'] = 'info',
        ccI['Debug'] = 'debug',
        ccI['Critical'] = 'critical',
        function(ccB) {
            ccB['fromString'] = function(ccC) {
                switch (ccC) {
                case 'debug':
                    return ccB['Debug'];
                case 'info':
                    return ccB['Info'];
                case 'warn':
                case 'warning':
                    return ccB['Warning'];
                case 'error':
                    return ccB['Error'];
                case 'fatal':
                    return ccB['Fatal'];
                case 'critical':
                    return ccB['Critical'];
                case 'log':
                default:
                    return ccB['Log'];
                }
            }
            ;
        }(ccH || (ccH = {})),
        function(ccB) {
            ccB['Unknown'] = 'unknown',
            ccB['Skipped'] = 'skipped',
            ccB['Success'] = 'success',
            ccB['RateLimit'] = 'rate_limit',
            ccB['Invalid'] = 'invalid',
            ccB['Failed'] = 'failed';
        }(ccJ || (ccJ = {})),
        function(ccB) {
            ccB['fromHttpCode'] = function(ccC) {
                return 0xc8 <= ccC && 0x12c > ccC ? ccB['Success'] : 0x1ad === ccC ? ccB['RateLimit'] : 0x190 <= ccC && 0x1f4 > ccC ? ccB['Invalid'] : 0x1f4 <= ccC ? ccB['Failed'] : ccB['Unknown'];
            }
            ;
        }(ccJ || (ccJ = {}));
        var ccQ = ccD(0x9);
        function ccR(ccB) {
            for (var ccC = [], ccD = 0x1; ccD < arguments['length']; ccD++)
                ccC[ccD - 0x1] = arguments[ccD];
            var ccE = Object(ccQ['b'])();
            if (ccE && ccE[ccB])
                return ccE[ccB]['apply'](ccE, ccK['d'](ccC));
            throw new Error('No\x20hub\x20defined\x20or\x20' + ccB + '\x20was\x20not\x20found\x20on\x20the\x20hub,\x20please\x20open\x20a\x20bug\x20report.');
        }
        function ccW(ccB) {
            var ccC;
            try {
                throw new Error('Sentry\x20syntheticException');
            } catch (ccZ) {
                ccC = ccZ;
            }
            return ccR('captureException', ccB, {
                'originalException': ccB,
                'syntheticException': ccC
            });
        }
        function cd0(ccB, ccC) {
            var ccD;
            try {
                throw new Error(ccB);
            } catch (cd4) {
                ccD = cd4;
            }
            return ccR('captureMessage', ccB, ccC, {
                'originalException': ccB,
                'syntheticException': ccD
            });
        }
        function cd5(ccB) {
            return ccR('captureEvent', ccB);
        }
        function cd7(ccB) {
            ccR('configureScope', ccB);
        }
        function cd9(ccB) {
            ccR('addBreadcrumb', ccB);
        }
        function cdb(ccB, ccC) {
            ccR('setContext', ccB, ccC);
        }
        function cde(ccB) {
            ccR('setExtras', ccB);
        }
        function cdg(ccB) {
            ccR('setTags', ccB);
        }
        function cdi(ccB, ccC) {
            ccR('setExtra', ccB, ccC);
        }
        function cdl(ccB, ccC) {
            ccR('setTag', ccB, ccC);
        }
        function cdo(ccB) {
            ccR('setUser', ccB);
        }
        function cdq(ccB) {
            ccR('withScope', ccB);
        }
        var cds, cdt = ccD(0xa), cdu = ccD(0xd), cdv = function() {
            function ccB() {
                this['name'] = ccB['id'];
            }
            return ccB['prototype']['setupOnce'] = function() {
                cds = Function['prototype']['toString'],
                Function['prototype']['toString'] = function() {
                    for (var ccB = [], ccC = 0x0; ccC < arguments['length']; ccC++)
                        ccB[ccC] = arguments[ccC];
                    var ccD = this['__sentry__'] ? this['__sentry_original__'] : this;
                    return cds['apply'](ccD, ccB);
                }
                ;
            }
            ,
            ccB['id'] = 'FunctionToString',
            ccB;
        }(), cdw = ccD(0x18), cdx = ccD(0x2), cdy = ccD(0x5);
        function cdD(ccB, ccC) {
            return void 0x0 === ccC && (ccC = 0x0),
            'string' != typeof ccB || 0x0 === ccC ? ccB : ccB['length'] <= ccC ? ccB : ccB['substr'](0x0, ccC) + '...';
        }
        function cdG(ccB, ccC) {
            if (!Array['isArray'](ccB))
                return '';
            for (var ccD, ccE = [], ccF = 0x0; ccF < ccB['length']; ccF++) {
                ccD = ccB[ccF];
                try {
                    ccE['push'](ccD + '');
                } catch (cdM) {
                    ccE['push']('[value\x20cannot\x20be\x20serialized]');
                }
            }
            return ccE['join'](ccC);
        }
        function cdN(ccB, ccC) {
            if (void 0x0 === ccC && (ccC = 0x28),
            !ccB['length'])
                return '[object\x20has\x20no\x20keys]';
            if (ccB[0x0]['length'] >= ccC)
                return cdD(ccB[0x0], ccC);
            for (var ccD, ccE = ccB['length']; 0x0 < ccE; ccE--)
                if (!((ccD = ccB['slice'](0x0, ccE)['join'](',\x20'))['length'] > ccC))
                    return ccE === ccB['length'] ? ccD : cdD(ccD, ccC);
            return '';
        }
        function cdS(ccB, ccC) {
            return Object(cdy['g'])(ccC) ? ccC['test'](ccB) : !('string' != typeof ccC) && ccB['includes'](ccC);
        }
        var cdV = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/]
          , cdW = function() {
            function ccB(ccC) {
                void 0x0 === ccC && (ccC = {}),
                this['_options'] = ccC,
                this['name'] = ccB['id'];
            }
            return ccB['prototype']['setupOnce'] = function() {
                Object(cdt['b'])(function(ccC) {
                    var ccD = Object(ccQ['b'])();
                    if (!ccD)
                        return ccC;
                    var ccE = ccD['getIntegration'](ccB);
                    if (ccE) {
                        var ccF = ccD['getClient']()
                          , ccG = ccF ? ccF['getOptions']() : {}
                          , ccH = ccE['_mergeOptions'](ccG);
                        if (ccE['_shouldDropEvent'](ccC, ccH))
                            return null;
                    }
                    return ccC;
                });
            }
            ,
            ccB['prototype']['_shouldDropEvent'] = function(ccB, ccC) {
                return this['_isSentryError'](ccB, ccC) ? (cdw['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20internal\x20Sentry\x20Error.\x0aEvent:\x20' + Object(cdx['d'])(ccB)),
                !0x0) : this['_isIgnoredError'](ccB, ccC) ? (cdw['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`ignoreErrors`\x20option.\x0aEvent:\x20' + Object(cdx['d'])(ccB)),
                !0x0) : this['_isBlacklistedUrl'](ccB, ccC) ? (cdw['a']['warn']('Event\x20dropped\x20due\x20to\x20being\x20matched\x20by\x20`blacklistUrls`\x20option.\x0aEvent:\x20' + Object(cdx['d'])(ccB) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](ccB)),
                !0x0) : !this['_isWhitelistedUrl'](ccB, ccC) && (cdw['a']['warn']('Event\x20dropped\x20due\x20to\x20not\x20being\x20matched\x20by\x20`whitelistUrls`\x20option.\x0aEvent:\x20' + Object(cdx['d'])(ccB) + '.\x0aUrl:\x20' + this['_getEventFilterUrl'](ccB)),
                !0x0);
            }
            ,
            ccB['prototype']['_isSentryError'] = function(ccB, ccC) {
                if (void 0x0 === ccC && (ccC = {}),
                !ccC['ignoreInternal'])
                    return !0x1;
                try {
                    return 'SentryError' === ccB['exception']['values'][0x0]['type'];
                } catch (ceg) {
                    return !0x1;
                }
            }
            ,
            ccB['prototype']['_isIgnoredError'] = function(ccB, ccC) {
                return void 0x0 === ccC && (ccC = {}),
                !(!ccC['ignoreErrors'] || !ccC['ignoreErrors']['length']) && this['_getPossibleEventMessages'](ccB)['some'](function(ccB) {
                    return ccC['ignoreErrors']['some'](function(ccC) {
                        return cdS(ccB, ccC);
                    });
                });
            }
            ,
            ccB['prototype']['_isBlacklistedUrl'] = function(ccB, ccC) {
                if (void 0x0 === ccC && (ccC = {}),
                !ccC['blacklistUrls'] || !ccC['blacklistUrls']['length'])
                    return !0x1;
                var ccD = this['_getEventFilterUrl'](ccB);
                return !!ccD && ccC['blacklistUrls']['some'](function(ccB) {
                    return cdS(ccD, ccB);
                });
            }
            ,
            ccB['prototype']['_isWhitelistedUrl'] = function(ccB, ccC) {
                if (void 0x0 === ccC && (ccC = {}),
                !ccC['whitelistUrls'] || !ccC['whitelistUrls']['length'])
                    return !0x0;
                var ccD = this['_getEventFilterUrl'](ccB);
                return !ccD || ccC['whitelistUrls']['some'](function(ccB) {
                    return cdS(ccD, ccB);
                });
            }
            ,
            ccB['prototype']['_mergeOptions'] = function(ccB) {
                return void 0x0 === ccB && (ccB = {}),
                {
                    'blacklistUrls': ccK['d'](this['_options']['blacklistUrls'] || [], ccB['blacklistUrls'] || []),
                    'ignoreErrors': ccK['d'](this['_options']['ignoreErrors'] || [], ccB['ignoreErrors'] || [], cdV),
                    'ignoreInternal': void 0x0 === this['_options']['ignoreInternal'] || this['_options']['ignoreInternal'],
                    'whitelistUrls': ccK['d'](this['_options']['whitelistUrls'] || [], ccB['whitelistUrls'] || [])
                };
            }
            ,
            ccB['prototype']['_getPossibleEventMessages'] = function(ccB) {
                if (ccB['message'])
                    return [ccB['message']];
                if (ccB['exception'])
                    try {
                        var ccC = ccB['exception']['values'][0x0]
                          , ccD = ccC['type']
                          , ccE = ccC['value'];
                        return ['' + ccE, ccD + ':\x20' + ccE];
                    } catch (cey) {
                        return cdw['a']['error']('Cannot\x20extract\x20message\x20for\x20event\x20' + Object(cdx['d'])(ccB)),
                        [];
                    }
                return [];
            }
            ,
            ccB['prototype']['_getEventFilterUrl'] = function(ccB) {
                try {
                    if (ccB['stacktrace']) {
                        var ccC = ccB['stacktrace']['frames'];
                        return ccC[ccC['length'] - 0x1]['filename'];
                    }
                    if (ccB['exception']) {
                        var ccD = ccB['exception']['values'][0x0]['stacktrace']['frames'];
                        return ccD[ccD['length'] - 0x1]['filename'];
                    }
                    return null;
                } catch (ceC) {
                    return cdw['a']['error']('Cannot\x20extract\x20url\x20for\x20event\x20' + Object(cdx['d'])(ccB)),
                    null;
                }
            }
            ,
            ccB['id'] = 'InboundFilters',
            ccB;
        }()
          , cdX = ccD(0x6)
          , cdY = function(ccB) {
            function ccC(ccC) {
                var ccD = this['constructor']
                  , ccE = ccB['call'](this, ccC) || this;
                return ccE['message'] = ccC,
                ccE['name'] = ccD['prototype']['constructor']['name'],
                Object['setPrototypeOf'](ccE, ccD['prototype']),
                ccE;
            }
            return ccK['b'](ccC, ccB),
            ccC;
        }(Error)
          , cdZ = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/
          , ce0 = function() {
            function ccB(ccB) {
                'string' == typeof ccB ? this['_fromString'](ccB) : this['_fromComponents'](ccB),
                this['_validate']();
            }
            return ccB['prototype']['toString'] = function(ccB) {
                void 0x0 === ccB && (ccB = !0x1);
                var ccC = this
                  , ccD = ccC['host']
                  , ccE = ccC['path']
                  , ccF = ccC['pass']
                  , ccG = ccC['port']
                  , ccH = ccC['projectId'];
                return ccC['protocol'] + '://' + ccC['user'] + (ccB && ccF ? ':' + ccF : '') + '@' + ccD + (ccG ? ':' + ccG : '') + '/' + (ccE ? ccE + '/' : ccE) + ccH;
            }
            ,
            ccB['prototype']['_fromString'] = function(ccB) {
                var ccC = cdZ['exec'](ccB);
                if (!ccC)
                    throw new cdY('Invalid\x20Dsn');
                var ccD = ccK['c'](ccC['slice'](0x1), 0x6)
                  , ccE = ccD[0x0]
                  , ccF = ccD[0x1]
                  , ccG = ccD[0x2]
                  , ccH = void 0x0 === ccG ? '' : ccG
                  , ccI = ccD[0x3]
                  , ccJ = ccD[0x4]
                  , ccQ = void 0x0 === ccJ ? '' : ccJ
                  , ccR = ''
                  , ccW = ccD[0x5]
                  , cd0 = ccW['split']('/');
                0x1 < cd0['length'] && (ccR = cd0['slice'](0x0, -0x1)['join']('/'),
                ccW = cd0['pop']()),
                Object['assign'](this, {
                    'host': ccI,
                    'pass': ccH,
                    'path': ccR,
                    'projectId': ccW,
                    'port': ccQ,
                    'protocol': ccE,
                    'user': ccF
                });
            }
            ,
            ccB['prototype']['_fromComponents'] = function(ccB) {
                this['protocol'] = ccB['protocol'],
                this['user'] = ccB['user'],
                this['pass'] = ccB['pass'] || '',
                this['host'] = ccB['host'],
                this['port'] = ccB['port'] || '',
                this['path'] = ccB['path'] || '',
                this['projectId'] = ccB['projectId'];
            }
            ,
            ccB['prototype']['_validate'] = function() {
                var ccB = this;
                if (['protocol', 'user', 'host', 'projectId']['forEach'](function(ccC) {
                    if (!ccB[ccC])
                        throw new cdY('Invalid\x20Dsn');
                }),
                'http' !== this['protocol'] && 'https' !== this['protocol'])
                    throw new cdY('Invalid\x20Dsn');
                if (this['port'] && Number['isNaN'](parseInt(this['port'], 0xa)))
                    throw new cdY('Invalid\x20Dsn');
            }
            ,
            ccB;
        }()
          , ce1 = function() {
            function ccB(ccB) {
                this['dsn'] = ccB,
                this['_dsnObject'] = new ce0(ccB);
            }
            return ccB['prototype']['getDsn'] = function() {
                return this['_dsnObject'];
            }
            ,
            ccB['prototype']['getStoreEndpoint'] = function() {
                return '' + this['_getBaseUrl']() + this['getStoreEndpointPath']();
            }
            ,
            ccB['prototype']['getStoreEndpointWithUrlEncodedAuth'] = function() {
                var ccB = {
                    'sentry_key': this['_dsnObject']['user'],
                    'sentry_version': '7'
                };
                return this['getStoreEndpoint']() + '?' + Object(cdX['d'])(ccB);
            }
            ,
            ccB['prototype']['_getBaseUrl'] = function() {
                var ccB = this['_dsnObject']
                  , ccC = ccB['protocol'] ? ccB['protocol'] + ':' : ''
                  , ccD = ccB['port'] ? ':' + ccB['port'] : '';
                return ccC + '//' + ccB['host'] + ccD;
            }
            ,
            ccB['prototype']['getStoreEndpointPath'] = function() {
                var ccB = this['_dsnObject'];
                return (ccB['path'] ? '/' + ccB['path'] : '') + '/api/' + ccB['projectId'] + '/store/';
            }
            ,
            ccB['prototype']['getRequestHeaders'] = function(ccB, ccC) {
                var ccD = this['_dsnObject']
                  , ccE = ['Sentry\x20sentry_version=7'];
                return ccE['push']('sentry_timestamp=' + new Date()['getTime']()),
                ccE['push']('sentry_client=' + ccB + '/' + ccC),
                ccE['push']('sentry_key=' + ccD['user']),
                ccD['pass'] && ccE['push']('sentry_secret=' + ccD['pass']),
                {
                    'Content-Type': 'application/json',
                    'X-Sentry-Auth': ccE['join'](',\x20')
                };
            }
            ,
            ccB['prototype']['getReportDialogEndpoint'] = function(ccB) {
                void 0x0 === ccB && (ccB = {});
                var ccC = this['_dsnObject']
                  , ccD = this['_getBaseUrl']() + (ccC['path'] ? '/' + ccC['path'] : '') + '/api/embed/error-page/'
                  , ccE = [];
                for (var ccF in ccE['push']('dsn=' + ccC['toString']()),
                ccB)
                    if ('user' == ccF) {
                        if (!ccB['user'])
                            continue;
                        ccB['user']['name'] && ccE['push']('name=' + encodeURIComponent(ccB['user']['name'])),
                        ccB['user']['email'] && ccE['push']('email=' + encodeURIComponent(ccB['user']['email']));
                    } else
                        ccE['push'](encodeURIComponent(ccF) + '=' + encodeURIComponent(ccB[ccF]));
                return ccE['length'] ? ccD + '?' + ccE['join']('&') : ccD;
            }
            ,
            ccB;
        }()
          , ce2 = ccD(0x49)
          , ce3 = [];
        function cfn(ccB) {
            var ccC = {};
            return function(ccB) {
                var ccC = ccB['defaultIntegrations'] && ccK['d'](ccB['defaultIntegrations']) || []
                  , ccD = ccB['integrations']
                  , ccE = [];
                if (Array['isArray'](ccD)) {
                    var ccF = ccD['map'](function(ccB) {
                        return ccB['name'];
                    })
                      , ccG = [];
                    ccC['forEach'](function(ccB) {
                        -0x1 === ccF['indexOf'](ccB['name']) && -0x1 === ccG['indexOf'](ccB['name']) && (ccE['push'](ccB),
                        ccG['push'](ccB['name']));
                    }),
                    ccD['forEach'](function(ccB) {
                        -0x1 === ccG['indexOf'](ccB['name']) && (ccE['push'](ccB),
                        ccG['push'](ccB['name']));
                    });
                } else {
                    if ('function' != typeof ccD)
                        return ccK['d'](ccC);
                    ccE = ccD(ccC),
                    ccE = Array['isArray'](ccE) ? ccE : [ccE];
                }
                return ccE;
            }(ccB)['forEach'](function(ccB) {
                ccC[ccB['name']] = ccB,
                function(ccB) {
                    -0x1 !== ce3['indexOf'](ccB['name']) || (ccB['setupOnce'](cdt['b'], ccQ['b']),
                    ce3['push'](ccB['name']),
                    cdw['a']['log']('Integration\x20installed:\x20' + ccB['name']));
                }(ccB);
            }),
            ccC;
        }
        var cfB = function() {
            function ccB(ccB, ccC) {
                this['_processing'] = !0x1,
                this['_backend'] = new ccB(ccC),
                this['_options'] = ccC,
                ccC['dsn'] && (this['_dsn'] = new ce0(ccC['dsn'])),
                this['_integrations'] = cfn(this['_options']);
            }
            return ccB['prototype']['captureException'] = function(ccB, ccC, ccD) {
                var ccE = this
                  , ccF = ccC && ccC['event_id'];
                return this['_processing'] = !0x0,
                this['_getBackend']()['eventFromException'](ccB, ccC)['then'](function(ccB) {
                    return ccE['_processEvent'](ccB, ccC, ccD);
                })['then'](function(ccB) {
                    ccF = ccB && ccB['event_id'],
                    ccE['_processing'] = !0x1;
                })['catch'](function(ccB) {
                    cdw['a']['error'](ccB),
                    ccE['_processing'] = !0x1;
                }),
                ccF;
            }
            ,
            ccB['prototype']['captureMessage'] = function(ccB, ccC, ccD, ccE) {
                var ccF = this
                  , ccG = ccD && ccD['event_id'];
                return this['_processing'] = !0x0,
                (Object(cdy['f'])(ccB) ? this['_getBackend']()['eventFromMessage']('' + ccB, ccC, ccD) : this['_getBackend']()['eventFromException'](ccB, ccD))['then'](function(ccB) {
                    return ccF['_processEvent'](ccB, ccD, ccE);
                })['then'](function(ccB) {
                    ccG = ccB && ccB['event_id'],
                    ccF['_processing'] = !0x1;
                })['catch'](function(ccB) {
                    cdw['a']['error'](ccB),
                    ccF['_processing'] = !0x1;
                }),
                ccG;
            }
            ,
            ccB['prototype']['captureEvent'] = function(ccB, ccC, ccD) {
                var ccE = this
                  , ccF = ccC && ccC['event_id'];
                return this['_processing'] = !0x0,
                this['_processEvent'](ccB, ccC, ccD)['then'](function(ccB) {
                    ccF = ccB && ccB['event_id'],
                    ccE['_processing'] = !0x1;
                })['catch'](function(ccB) {
                    cdw['a']['error'](ccB),
                    ccE['_processing'] = !0x1;
                }),
                ccF;
            }
            ,
            ccB['prototype']['getDsn'] = function() {
                return this['_dsn'];
            }
            ,
            ccB['prototype']['getOptions'] = function() {
                return this['_options'];
            }
            ,
            ccB['prototype']['flush'] = function(ccB) {
                var ccC = this;
                return this['_isClientProcessing'](ccB)['then'](function(ccD) {
                    return ccC['_processingInterval'] && clearInterval(ccC['_processingInterval']),
                    ccC['_getBackend']()['getTransport']()['close'](ccB)['then'](function(ccB) {
                        return ccD && ccB;
                    });
                });
            }
            ,
            ccB['prototype']['close'] = function(ccB) {
                var ccC = this;
                return this['flush'](ccB)['then'](function(ccB) {
                    return ccC['getOptions']()['enabled'] = !0x1,
                    ccB;
                });
            }
            ,
            ccB['prototype']['getIntegrations'] = function() {
                return this['_integrations'] || {};
            }
            ,
            ccB['prototype']['getIntegration'] = function(ccB) {
                try {
                    return this['_integrations'][ccB['id']] || null;
                } catch (cgd) {
                    return cdw['a']['warn']('Cannot\x20retrieve\x20integration\x20' + ccB['id'] + '\x20from\x20the\x20current\x20Client'),
                    null;
                }
            }
            ,
            ccB['prototype']['_isClientProcessing'] = function(ccB) {
                var ccC = this;
                return new Promise(function(ccD) {
                    var ccE = 0x0;
                    ccC['_processingInterval'] && clearInterval(ccC['_processingInterval']),
                    ccC['_processingInterval'] = setInterval(function() {
                        ccC['_processing'] ? (ccE += 0x1,
                        ccB && ccE >= ccB && ccD(!0x1)) : ccD(!0x0);
                    }, 0x1);
                }
                );
            }
            ,
            ccB['prototype']['_getBackend'] = function() {
                return this['_backend'];
            }
            ,
            ccB['prototype']['_isEnabled'] = function() {
                return !0x1 !== this['getOptions']()['enabled'] && void 0x0 !== this['_dsn'];
            }
            ,
            ccB['prototype']['_prepareEvent'] = function(ccB, ccC, ccD) {
                var ccE = this['getOptions']()
                  , ccF = ccE['environment']
                  , ccG = ccE['release']
                  , ccH = ccE['dist']
                  , ccI = ccE['maxValueLength']
                  , ccJ = void 0x0 === ccI ? 0xfa : ccI
                  , ccQ = ccK['a']({}, ccB);
                void 0x0 === ccQ['environment'] && void 0x0 !== ccF && (ccQ['environment'] = ccF),
                void 0x0 === ccQ['release'] && void 0x0 !== ccG && (ccQ['release'] = ccG),
                void 0x0 === ccQ['dist'] && void 0x0 !== ccH && (ccQ['dist'] = ccH),
                ccQ['message'] && (ccQ['message'] = cdD(ccQ['message'], ccJ));
                var ccR = ccQ['exception'] && ccQ['exception']['values'] && ccQ['exception']['values'][0x0];
                ccR && ccR['value'] && (ccR['value'] = cdD(ccR['value'], ccJ));
                var ccW = ccQ['request'];
                ccW && ccW['url'] && (ccW['url'] = cdD(ccW['url'], ccJ)),
                void 0x0 === ccQ['event_id'] && (ccQ['event_id'] = Object(cdx['g'])()),
                this['_addIntegrations'](ccQ['sdk']);
                var cd0 = ce2['a']['resolve'](ccQ);
                return ccC && (cd0 = ccC['applyToEvent'](ccQ, ccD)),
                cd0;
            }
            ,
            ccB['prototype']['_addIntegrations'] = function(ccB) {
                var ccC = Object['keys'](this['_integrations']);
                ccB && 0x0 < ccC['length'] && (ccB['integrations'] = ccC);
            }
            ,
            ccB['prototype']['_processEvent'] = function(ccB, ccC, ccD) {
                var ccE = this
                  , ccF = this['getOptions']()
                  , ccG = ccF['beforeSend']
                  , ccH = ccF['sampleRate'];
                return this['_isEnabled']() ? 'number' == typeof ccH && Math['random']() > ccH ? ce2['a']['reject']('This\x20event\x20has\x20been\x20sampled,\x20will\x20not\x20send\x20event.') : new ce2['a'](function(ccF, ccH) {
                    ccE['_prepareEvent'](ccB, ccD, ccC)['then'](function(ccB) {
                        if (null !== ccB) {
                            var ccD = ccB;
                            try {
                                if (ccC && ccC['data'] && !0x0 === ccC['data']['__sentry__'] || !ccG)
                                    return ccE['_getBackend']()['sendEvent'](ccD),
                                    void ccF(ccD);
                                var ccI = ccG(ccB, ccC);
                                if (void 0x0 === ccI)
                                    cdw['a']['error']('`beforeSend`\x20method\x20has\x20to\x20return\x20`null`\x20or\x20a\x20valid\x20event.');
                                else if (Object(cdy['j'])(ccI))
                                    ccE['_handleAsyncBeforeSend'](ccI, ccF, ccH);
                                else {
                                    if (null === (ccD = ccI))
                                        return cdw['a']['log']('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.'),
                                        void ccF(null);
                                    ccE['_getBackend']()['sendEvent'](ccD),
                                    ccF(ccD);
                                }
                            } catch (cgJ) {
                                ccE['captureException'](cgJ, {
                                    'data': {
                                        '__sentry__': !0x0
                                    },
                                    'originalException': cgJ
                                }),
                                ccH('`beforeSend`\x20throw\x20an\x20error,\x20will\x20not\x20send\x20event.');
                            }
                        } else
                            ccH('An\x20event\x20processor\x20returned\x20null,\x20will\x20not\x20send\x20event.');
                    });
                }
                ) : ce2['a']['reject']('SDK\x20not\x20enabled,\x20will\x20not\x20send\x20event.');
            }
            ,
            ccB['prototype']['_handleAsyncBeforeSend'] = function(ccB, ccC, ccD) {
                var ccE = this;
                ccB['then'](function(ccB) {
                    return null === ccB ? void ccD('`beforeSend`\x20returned\x20`null`,\x20will\x20not\x20send\x20event.') : (ccE['_getBackend']()['sendEvent'](ccB),
                    void ccC(ccB));
                })['catch'](function(ccB) {
                    ccD('beforeSend\x20rejected\x20with\x20' + ccB);
                });
            }
            ,
            ccB;
        }()
          , cfC = function() {
            function ccB() {}
            return ccB['prototype']['sendEvent'] = function() {
                return Promise['resolve']({
                    'reason': 'NoopTransport:\x20Event\x20has\x20been\x20skipped\x20because\x20no\x20Dsn\x20is\x20configured.',
                    'status': ccJ['Skipped']
                });
            }
            ,
            ccB['prototype']['close'] = function() {
                return Promise['resolve'](!0x0);
            }
            ,
            ccB;
        }()
          , cfD = function() {
            function ccB(ccB) {
                this['_options'] = ccB,
                this['_options']['dsn'] || cdw['a']['warn']('No\x20DSN\x20provided,\x20backend\x20will\x20not\x20do\x20anything.'),
                this['_transport'] = this['_setupTransport']();
            }
            return ccB['prototype']['_setupTransport'] = function() {
                return new cfC();
            }
            ,
            ccB['prototype']['eventFromException'] = function() {
                throw new cdY('Backend\x20has\x20to\x20implement\x20`eventFromException`\x20method');
            }
            ,
            ccB['prototype']['eventFromMessage'] = function() {
                throw new cdY('Backend\x20has\x20to\x20implement\x20`eventFromMessage`\x20method');
            }
            ,
            ccB['prototype']['sendEvent'] = function(ccB) {
                this['_transport']['sendEvent'](ccB)['catch'](function(ccB) {
                    cdw['a']['error']('Error\x20while\x20sending\x20event:\x20' + ccB);
                });
            }
            ,
            ccB['prototype']['getTransport'] = function() {
                return this['_transport'];
            }
            ,
            ccB;
        }();
        function cgV() {
            if (!('fetch'in Object(cdx['e'])()))
                return !0x1;
            try {
                return new Headers(),
                new Request(''),
                new Response(),
                !0x0;
            } catch (cgW) {
                return !0x1;
            }
        }
        function cgX() {
            if (!cgV())
                return !0x1;
            try {
                return new Request('_',{
                    'referrerPolicy': 'origin'
                }),
                !0x0;
            } catch (cgY) {
                return !0x1;
            }
        }
        /**
 * TraceKit - Cross brower stack traces
 *
 * This was originally forked from github.com/occ/TraceKit, but has since been
 * largely modified and is now maintained as part of Sentry JS SDK.
 *
 * NOTE: Last merge with upstream repository
 * Jul 11,2018 - #f03357c
 *
 * https://github.com/csnover/TraceKit
 * @license MIT
 * @namespace TraceKit
 */
        /**
 * TraceKit - Cross brower stack traces
 *
 * This was originally forked from github.com/occ/TraceKit, but has since been
 * largely modified and is now maintained as part of Sentry JS SDK.
 *
 * NOTE: Last merge with upstream repository
 * Jul 11,2018 - #f03357c
 *
 * https://github.com/csnover/TraceKit
 * @license MIT
 * @namespace TraceKit
 */
        var cgZ = Object(cdx['e'])()
          , ch0 = {
            '_report': !0x1,
            '_collectWindowErrors': !0x1,
            '_computeStackTrace': !0x1,
            '_linesOfContext': !0x1
        }
          , ch1 = '?'
          , ch2 = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;
        function ch3(ccB, ccC) {
            return Object['prototype']['hasOwnProperty']['call'](ccB, ccC);
        }
        function ch6() {
            return 'undefined' == typeof document || null == document['location'] ? '' : document['location']['href'];
        }
        ch0['_report'] = function() {
            function ccB(ccB, ccC, ccD) {
                var ccE = null;
                if (!ccC || ch0['_collectWindowErrors']) {
                    for (var ccF in ccI)
                        if (ch3(ccI, ccF))
                            try {
                                ccI[ccF](ccB, ccC, ccD);
                            } catch (chd) {
                                ccE = chd;
                            }
                    if (ccE)
                        throw ccE;
                }
            }
            function ccC(ccC, ccD, ccF, ccH, ccI) {
                var ccJ = null;
                if (ccI = Object(cdy['d'])(ccI) ? ccI['error'] : ccI,
                ccC = Object(cdy['d'])(ccC) ? ccC['message'] : ccC,
                ccQ)
                    ch0['_computeStackTrace']['_augmentStackTraceWithInitialElement'](ccQ, ccD, ccF, ccC),
                    ccE();
                else if (ccI && Object(cdy['c'])(ccI))
                    (ccJ = ch0['_computeStackTrace'](ccI))['mechanism'] = 'onerror',
                    ccB(ccJ, !0x0, ccI);
                else {
                    var ccR, ccW = {
                        'url': ccD,
                        'line': ccF,
                        'column': ccH
                    }, cd0 = ccC;
                    if ('[object\x20String]' === {}['toString']['call'](ccC)) {
                        var cd5 = ccC['match'](ch2);
                        cd5 && (ccR = cd5[0x1],
                        cd0 = cd5[0x2]);
                    }
                    ccW['func'] = ch1,
                    ccW['context'] = null,
                    ccB(ccJ = {
                        'name': ccR,
                        'message': cd0,
                        'mode': 'onerror',
                        'mechanism': 'onerror',
                        'stack': [ccK['a']({}, ccW, {
                            'url': ccW['url'] || ch6()
                        })]
                    }, !0x0, null);
                }
                return !!ccG && ccG['apply'](this, arguments);
            }
            function ccD(ccC) {
                var ccD = ccC && (ccC['detail'] ? ccC['detail']['reason'] : ccC['reason']) || ccC
                  , ccE = ch0['_computeStackTrace'](ccD);
                ccE['mechanism'] = 'onunhandledrejection',
                ccE['message'] || (ccE['message'] = JSON['stringify'](Object(cdX['b'])(ccD))),
                ccB(ccE, !0x0, ccD);
            }
            function ccE() {
                var ccC = ccQ
                  , ccD = ccJ;
                ccQ = null,
                ccJ = null,
                ccB(ccC, !0x1, ccD);
            }
            function ccF(ccB) {
                if (ccQ) {
                    if (ccJ === ccB)
                        return;
                    ccE();
                }
                var ccC = ch0['_computeStackTrace'](ccB);
                throw ccQ = ccC,
                ccJ = ccB,
                setTimeout(function() {
                    ccJ === ccB && ccE();
                }, ccC['incomplete'] ? 0x7d0 : 0x0),
                ccB;
            }
            var ccG, ccH, ccI = [], ccJ = null, ccQ = null;
            return ccF['_subscribe'] = function(ccB) {
                ccI['push'](ccB);
            }
            ,
            ccF['_installGlobalHandler'] = function() {
                !0x0 === ccH || (ccG = cgZ['onerror'],
                cgZ['onerror'] = ccC,
                ccH = !0x0);
            }
            ,
            ccF['_installGlobalUnhandledRejectionHandler'] = function() {
                cgZ['onunhandledrejection'] = ccD;
            }
            ,
            ccF;
        }(),
        ch0['_computeStackTrace'] = function() {
            function ccB(ccB) {
                if (!ccB || !ccB['stack'])
                    return null;
                for (var ccC, ccD, ccE, ccF = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, ccG = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i, ccH = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i, ccI = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i, ccJ = /\((\S*)(?::(\d+))(?::(\d+))\)/, ccK = ccB['stack']['split']('\x0a'), ccQ = [], ccR = /^(.*) is undefined$/['exec'](ccB['message']), ccW = 0x0, cd0 = ccK['length']; ccW < cd0; ++ccW) {
                    if (ccD = ccF['exec'](ccK[ccW])) {
                        var cd5 = ccD[0x2] && 0x0 === ccD[0x2]['indexOf']('native');
                        ccD[0x2] && 0x0 === ccD[0x2]['indexOf']('eval') && (ccC = ccJ['exec'](ccD[0x2])) && (ccD[0x2] = ccC[0x1],
                        ccD[0x3] = ccC[0x2],
                        ccD[0x4] = ccC[0x3]),
                        ccE = {
                            'url': ccD[0x2],
                            'func': ccD[0x1] || ch1,
                            'args': cd5 ? [ccD[0x2]] : [],
                            'line': ccD[0x3] ? +ccD[0x3] : null,
                            'column': ccD[0x4] ? +ccD[0x4] : null
                        };
                    } else if (ccD = ccH['exec'](ccK[ccW]))
                        ccE = {
                            'url': ccD[0x2],
                            'func': ccD[0x1] || ch1,
                            'args': [],
                            'line': +ccD[0x3],
                            'column': ccD[0x4] ? +ccD[0x4] : null
                        };
                    else {
                        if (!(ccD = ccG['exec'](ccK[ccW])))
                            continue;
                        ccD[0x3] && -0x1 < ccD[0x3]['indexOf']('\x20>\x20eval') && (ccC = ccI['exec'](ccD[0x3])) ? (ccD[0x1] = ccD[0x1] || 'eval',
                        ccD[0x3] = ccC[0x1],
                        ccD[0x4] = ccC[0x2],
                        ccD[0x5] = '') : 0x0 == ccW && !ccD[0x5] && void 0x0 !== ccB['columnNumber'] && (ccQ[0x0]['column'] = ccB['columnNumber'] + 0x1),
                        ccE = {
                            'url': ccD[0x3],
                            'func': ccD[0x1] || ch1,
                            'args': ccD[0x2] ? ccD[0x2]['split'](',') : [],
                            'line': ccD[0x4] ? +ccD[0x4] : null,
                            'column': ccD[0x5] ? +ccD[0x5] : null
                        };
                    }
                    !ccE['func'] && ccE['line'] && (ccE['func'] = ch1),
                    ccE['context'] = null,
                    ccQ['push'](ccE);
                }
                return ccQ['length'] ? (ccQ[0x0] && ccQ[0x0]['line'] && !ccQ[0x0]['column'] && ccR && (ccQ[0x0]['column'] = null),
                {
                    'mode': 'stack',
                    'name': ccB['name'],
                    'message': ccB['message'],
                    'stack': ccQ
                }) : null;
            }
            function ccC(ccB, ccC, ccD, ccE) {
                var ccF = {
                    'url': ccC,
                    'line': ccD
                };
                if (ccF['url'] && ccF['line']) {
                    if (ccB['incomplete'] = !0x1,
                    ccF['func'] || (ccF['func'] = ch1),
                    ccF['context'] || (ccF['context'] = null),
                    / '([^']+)' /['exec'](ccE) && (ccF['column'] = null),
                    0x0 < ccB['stack']['length'] && ccB['stack'][0x0]['url'] === ccF['url']) {
                        if (ccB['stack'][0x0]['line'] === ccF['line'])
                            return !0x1;
                        if (!ccB['stack'][0x0]['line'] && ccB['stack'][0x0]['func'] === ccF['func'])
                            return ccB['stack'][0x0]['line'] = ccF['line'],
                            ccB['stack'][0x0]['context'] = ccF['context'],
                            !0x1;
                    }
                    return ccB['stack']['unshift'](ccF),
                    ccB['partial'] = !0x0,
                    !0x0;
                }
                return ccB['incomplete'] = !0x0,
                !0x1;
            }
            function ccD(ccB, ccE) {
                for (var ccF, ccG, ccH = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, ccI = [], ccJ = {}, ccK = !0x1, ccQ = ccD['caller']; ccQ && !ccK; ccQ = ccQ['caller'])
                    if (ccQ !== ciJ && ccQ !== ch0['_report']) {
                        if (ccG = {
                            'url': null,
                            'func': ch1,
                            'args': [],
                            'line': null,
                            'column': null
                        },
                        ccQ['name'] ? ccG['func'] = ccQ['name'] : (ccF = ccH['exec'](ccQ['toString']())) && (ccG['func'] = ccF[0x1]),
                        void 0x0 === ccG['func'])
                            try {
                                ccG['func'] = ccF['input']['substring'](0x0, ccF['input']['indexOf']('{'));
                            } catch (cib) {}
                        ccJ['' + ccQ] ? ccK = !0x0 : ccJ['' + ccQ] = !0x0,
                        ccI['push'](ccG);
                    }
                ccE && ccI['splice'](0x0, ccE);
                var ccR = {
                    'mode': 'callers',
                    'name': ccB['name'],
                    'message': ccB['message'],
                    'stack': ccI
                };
                return ccC(ccR, ccB['sourceURL'] || ccB['fileName'], ccB['line'] || ccB['lineNumber'], ccB['message'] || ccB['description']),
                ccR;
            }
            function ccE(ccC, ccE) {
                var ccF = null;
                ccE = null == ccE ? 0x0 : +ccE;
                try {
                    if (ccF = function(ccB) {
                        var ccC = ccB['stacktrace'];
                        if (ccC) {
                            for (var ccD, ccE, ccF = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, ccG = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, ccH = ccC['split']('\x0a'), ccI = [], ccJ = 0x0; ccJ < ccH['length']; ccJ += 0x2)
                                ccE = null,
                                (ccD = ccF['exec'](ccH[ccJ])) ? ccE = {
                                    'url': ccD[0x2],
                                    'line': +ccD[0x1],
                                    'column': null,
                                    'func': ccD[0x3],
                                    'args': []
                                } : (ccD = ccG['exec'](ccH[ccJ])) && (ccE = {
                                    'url': ccD[0x6],
                                    'line': +ccD[0x1],
                                    'column': +ccD[0x2],
                                    'func': ccD[0x3] || ccD[0x4],
                                    'args': ccD[0x5] ? ccD[0x5]['split'](',') : []
                                }),
                                ccE && (!ccE['func'] && ccE['line'] && (ccE['func'] = ch1),
                                ccE['line'] && (ccE['context'] = null),
                                !ccE['context'] && (ccE['context'] = [ccH[ccJ + 0x1]]),
                                ccI['push'](ccE));
                            return ccI['length'] ? {
                                'mode': 'stacktrace',
                                'name': ccB['name'],
                                'message': ccB['message'],
                                'stack': ccI
                            } : null;
                        }
                    }(ccC))
                        return ccF;
                } catch (ciq) {}
                try {
                    if (ccF = ccB(ccC))
                        return ccF;
                } catch (cir) {}
                try {
                    if (ccF = function(ccB) {
                        var ccC = ccB['message']['split']('\x0a');
                        if (0x4 > ccC['length'])
                            return null;
                        var ccD, ccE = /^\s*Line (\d+) of linked script ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, ccF = /^\s*Line (\d+) of inline#(\d+) script in ((?:file|https?|blob)\S+)(?:: in function (\S+))?\s*$/i, ccG = /^\s*Line (\d+) of function script\s*$/i, ccH = [], ccI = cgZ && cgZ['document'] && cgZ['document']['getElementsByTagName']('script'), ccJ = [];
                        for (var ccK in ccI)
                            ch3(ccI, ccK) && !ccI[ccK]['src'] && ccJ['push'](ccI[ccK]);
                        for (var ccQ, ccR = 0x2; ccR < ccC['length']; ccR += 0x2)
                            ccQ = null,
                            (ccD = ccE['exec'](ccC[ccR])) ? ccQ = {
                                'url': ccD[0x2],
                                'func': ccD[0x3],
                                'args': [],
                                'line': +ccD[0x1],
                                'column': null
                            } : (ccD = ccF['exec'](ccC[ccR])) ? ccQ = {
                                'url': ccD[0x3],
                                'func': ccD[0x4],
                                'args': [],
                                'line': +ccD[0x1],
                                'column': null
                            } : (ccD = ccG['exec'](ccC[ccR])) && (ccQ = {
                                'url': ch6()['replace'](/#.*$/, ''),
                                'func': '',
                                'args': [],
                                'line': ccD[0x1],
                                'column': null
                            }),
                            ccQ && (!ccQ['func'] && (ccQ['func'] = ch1),
                            ccQ['context'] = [ccC[ccR + 0x1]],
                            ccH['push'](ccQ));
                        return ccH['length'] ? {
                            'mode': 'multiline',
                            'name': ccB['name'],
                            'message': ccC[0x0],
                            'stack': ccH
                        } : null;
                    }(ccC))
                        return ccF;
                } catch (ciE) {}
                try {
                    if (ccF = ccD(ccC, ccE + 0x1))
                        return ccF;
                } catch (ciF) {}
                return {
                    'original': ccC,
                    'name': ccC['name'],
                    'message': ccC['message'],
                    'mode': 'failed'
                };
            }
            return ccE['_augmentStackTraceWithInitialElement'] = ccC,
            ccE['_computeStackTraceFromStackProp'] = ccB,
            ccE;
        }(),
        ch0['_collectWindowErrors'] = !0x0,
        ch0['_linesOfContext'] = 0xb;
        var ciG = ch0['_report']['_subscribe']
          , ciH = ch0['_report']['_installGlobalHandler']
          , ciI = ch0['_report']['_installGlobalUnhandledRejectionHandler']
          , ciJ = ch0['_computeStackTrace']
          , ciK = 0x32;
        function ciL(ccB) {
            var ccC = ciR(ccB['stack'])
              , ccD = {
                'type': ccB['name'],
                'value': ccB['message']
            };
            return ccC && ccC['length'] && (ccD['stacktrace'] = {
                'frames': ccC
            }),
            void 0x0 === ccD['type'] && '' === ccD['value'] && (ccD['value'] = 'Unrecoverable\x20error\x20caught'),
            ccD;
        }
        function ciP(ccB) {
            return {
                'exception': {
                    'values': [ciL(ccB)]
                }
            };
        }
        function ciR(ccB) {
            if (!ccB || !ccB['length'])
                return [];
            var ccC = ccB
              , ccD = ccC[0x0]['func'] || ''
              , ccE = ccC[ccC['length'] - 0x1]['func'] || '';
            return (ccD['includes']('captureMessage') || ccD['includes']('captureException')) && (ccC = ccC['slice'](0x1)),
            ccE['includes']('sentryWrapped') && (ccC = ccC['slice'](0x0, -0x1)),
            ccC['map'](function(ccB) {
                return {
                    'colno': ccB['column'],
                    'filename': ccB['url'] || ccC[0x0]['url'],
                    'function': ccB['func'] || '?',
                    'in_app': !0x0,
                    'lineno': ccB['line']
                };
            })['slice'](0x0, ciK)['reverse']();
        }
        var ciX = function() {
            function ccB(ccB) {
                this['_limit'] = ccB,
                this['_buffer'] = [];
            }
            return ccB['prototype']['isReady'] = function() {
                return void 0x0 === this['_limit'] || this['length']() < this['_limit'];
            }
            ,
            ccB['prototype']['add'] = function(ccB) {
                var ccC = this;
                return this['isReady']() ? (-0x1 === this['_buffer']['indexOf'](ccB) && this['_buffer']['push'](ccB),
                ccB['then'](function() {
                    return ccC['remove'](ccB);
                })['catch'](function() {
                    return ccC['remove'](ccB)['catch'](function() {});
                }),
                ccB) : Promise['reject'](new cdY('Not\x20adding\x20Promise\x20due\x20to\x20buffer\x20limit\x20reached.'));
            }
            ,
            ccB['prototype']['remove'] = function(ccB) {
                return this['_buffer']['splice'](this['_buffer']['indexOf'](ccB), 0x1)[0x0];
            }
            ,
            ccB['prototype']['length'] = function() {
                return this['_buffer']['length'];
            }
            ,
            ccB['prototype']['drain'] = function(ccB) {
                var ccC = this;
                return new Promise(function(ccD) {
                    var ccE = setTimeout(function() {
                        ccB && 0x0 < ccB && ccD(!0x1);
                    }, ccB);
                    Promise['all'](ccC['_buffer'])['then'](function() {
                        clearTimeout(ccE),
                        ccD(!0x0);
                    })['catch'](function() {
                        ccD(!0x0);
                    });
                }
                );
            }
            ,
            ccB;
        }()
          , ciY = function() {
            function ccB(ccB) {
                this['options'] = ccB,
                this['_buffer'] = new ciX(0x1e),
                this['url'] = new ce1(this['options']['dsn'])['getStoreEndpointWithUrlEncodedAuth']();
            }
            return ccB['prototype']['sendEvent'] = function() {
                throw new cdY('Transport\x20Class\x20has\x20to\x20implement\x20`sendEvent`\x20method');
            }
            ,
            ccB['prototype']['close'] = function(ccB) {
                return this['_buffer']['drain'](ccB);
            }
            ,
            ccB;
        }()
          , ciZ = Object(cdx['e'])()
          , cj0 = function(ccB) {
            function ccC() {
                return null !== ccB && ccB['apply'](this, arguments) || this;
            }
            return ccK['b'](ccC, ccB),
            ccC['prototype']['sendEvent'] = function(ccB) {
                var ccC = {
                    'body': JSON['stringify'](ccB),
                    'method': 'POST',
                    'referrerPolicy': cgX() ? 'origin' : ''
                };
                return this['_buffer']['add'](ciZ['fetch'](this['url'], ccC)['then'](function(ccB) {
                    return {
                        'status': ccJ['fromHttpCode'](ccB['status'])
                    };
                }));
            }
            ,
            ccC;
        }(ciY)
          , cj1 = function(ccB) {
            function ccC() {
                return null !== ccB && ccB['apply'](this, arguments) || this;
            }
            return ccK['b'](ccC, ccB),
            ccC['prototype']['sendEvent'] = function(ccB) {
                var ccC = this;
                return this['_buffer']['add'](new Promise(function(ccD, ccE) {
                    var ccF = new XMLHttpRequest();
                    ccF['onreadystatechange'] = function() {
                        0x4 !== ccF['readyState'] || (0xc8 === ccF['status'] && ccD({
                            'status': ccJ['fromHttpCode'](ccF['status'])
                        }),
                        ccE(ccF));
                    }
                    ,
                    ccF['open']('POST', ccC['url']),
                    ccF['send'](JSON['stringify'](ccB));
                }
                ));
            }
            ,
            ccC;
        }(ciY)
          , cj2 = function(ccB) {
            function ccC() {
                return null !== ccB && ccB['apply'](this, arguments) || this;
            }
            return ccK['b'](ccC, ccB),
            ccC['prototype']['_setupTransport'] = function() {
                if (!this['_options']['dsn'])
                    return ccB['prototype']['_setupTransport']['call'](this);
                var ccC = this['_options']['transportOptions'] ? this['_options']['transportOptions'] : {
                    'dsn': this['_options']['dsn']
                };
                return this['_options']['transport'] ? new this['_options']['transport'](ccC) : cgV() ? new cj0(ccC) : new cj1(ccC);
            }
            ,
            ccC['prototype']['eventFromException'] = function(ccB, ccC) {
                var ccD, ccE = this;
                if (Object(cdy['d'])(ccB) && ccB['error'])
                    return ccB = ccB['error'],
                    ccD = ciP(ciJ(ccB)),
                    ce2['a']['resolve'](this['_buildEvent'](ccD, ccC));
                if (Object(cdy['a'])(ccB) || Object(cdy['b'])(ccB)) {
                    var ccF = ccB
                      , ccG = ccF['name'] || (Object(cdy['a'])(ccF) ? 'DOMError' : 'DOMException')
                      , ccI = ccF['message'] ? ccG + ':\x20' + ccF['message'] : ccG;
                    return this['eventFromMessage'](ccI, ccH['Error'], ccC)['then'](function(ccB) {
                        return Object(cdx['a'])(ccB, ccI),
                        ce2['a']['resolve'](ccE['_buildEvent'](ccB, ccC));
                    });
                }
                if (Object(cdy['c'])(ccB))
                    return ccD = ciP(ciJ(ccB)),
                    ce2['a']['resolve'](this['_buildEvent'](ccD, ccC));
                if (Object(cdy['e'])(ccB) && ccC && ccC['syntheticException'])
                    return ccD = function(ccB, ccC) {
                        var ccD = Object['keys'](ccB)['sort']()
                          , ccE = {
                            'extra': {
                                '__serialized__': Object(cdX['c'])(ccB)
                            },
                            'message': 'Non-Error\x20exception\x20captured\x20with\x20keys:\x20' + cdN(ccD)
                        };
                        if (ccC) {
                            var ccF = ciR(ciJ(ccC)['stack']);
                            ccE['stacktrace'] = {
                                'frames': ccF
                            };
                        }
                        return ccE;
                    }(ccB, ccC['syntheticException']),
                    Object(cdx['a'])(ccD, 'Custom\x20Object', void 0x0, {
                        'handled': !0x0,
                        'synthetic': !0x0,
                        'type': 'generic'
                    }),
                    ccD['level'] = ccH['Error'],
                    ce2['a']['resolve'](this['_buildEvent'](ccD, ccC));
                var ccJ = ccB;
                return this['eventFromMessage'](ccJ, void 0x0, ccC)['then'](function(ccB) {
                    return Object(cdx['a'])(ccB, '' + ccJ, void 0x0, {
                        'handled': !0x0,
                        'synthetic': !0x0,
                        'type': 'generic'
                    }),
                    ccB['level'] = ccH['Error'],
                    ce2['a']['resolve'](ccE['_buildEvent'](ccB, ccC));
                });
            }
            ,
            ccC['prototype']['_buildEvent'] = function(ccB, ccC) {
                return ccK['a']({}, ccB, {
                    'event_id': ccC && ccC['event_id']
                });
            }
            ,
            ccC['prototype']['eventFromMessage'] = function(ccB, ccC, ccD) {
                void 0x0 === ccC && (ccC = ccH['Info']);
                var ccE = {
                    'event_id': ccD && ccD['event_id'],
                    'level': ccC,
                    'message': ccB
                };
                if (this['_options']['attachStacktrace'] && ccD && ccD['syntheticException']) {
                    var ccF = ciR(ciJ(ccD['syntheticException'])['stack']);
                    ccE['stacktrace'] = {
                        'frames': ccF
                    };
                }
                return ce2['a']['resolve'](ccE);
            }
            ,
            ccC;
        }(cfD)
          , cj3 = 'sentry.javascript.browser'
          , cj4 = function(ccB) {
            function ccC(ccC) {
                return void 0x0 === ccC && (ccC = {}),
                ccB['call'](this, cj2, ccC) || this;
            }
            return ccK['b'](ccC, ccB),
            ccC['prototype']['_prepareEvent'] = function(ccC, ccD, ccE) {
                return ccC['platform'] = ccC['platform'] || 'javascript',
                ccC['sdk'] = ccK['a']({}, ccC['sdk'], {
                    'name': cj3,
                    'packages': ccK['d'](ccC['sdk'] && ccC['sdk']['packages'] || [], [{
                        'name': 'npm:@sentry/browser',
                        'version': '5.4.3'
                    }]),
                    'version': '5.4.3'
                }),
                ccB['prototype']['_prepareEvent']['call'](this, ccC, ccD, ccE);
            }
            ,
            ccC['prototype']['showReportDialog'] = function(ccB) {
                void 0x0 === ccB && (ccB = {});
                var ccC = Object(cdx['e'])()['document'];
                if (ccC) {
                    if (!this['_isEnabled']())
                        return void cdw['a']['error']('Trying\x20to\x20call\x20showReportDialog\x20with\x20Sentry\x20Client\x20is\x20disabled');
                    var ccD = ccB['dsn'] || this['getDsn']();
                    if (!ccB['eventId'])
                        return void cdw['a']['error']('Missing\x20`eventId`\x20option\x20in\x20showReportDialog\x20call');
                    if (!ccD)
                        return void cdw['a']['error']('Missing\x20`Dsn`\x20option\x20in\x20showReportDialog\x20call');
                    var ccE = ccC['createElement']('script');
                    ccE['async'] = !0x0,
                    ccE['src'] = new ce1(ccD)['getReportDialogEndpoint'](ccB),
                    ccB['onLoad'] && (ccE['onload'] = ccB['onLoad']),
                    (ccC['head'] || ccC['body'])['appendChild'](ccE);
                }
            }
            ,
            ccC;
        }(cfB);
        var ck2, ck3, ck4 = 0x3e8, ck5 = 0x0;
        function ck6(ccB, ccC, ccD) {
            if (void 0x0 === ccC && (ccC = {}),
            'function' != typeof ccB)
                return ccB;
            try {
                if (ccB['__sentry__'])
                    return ccB;
                if (ccB['__sentry_wrapped__'])
                    return ccB['__sentry_wrapped__'];
            } catch (cka) {
                return ccB;
            }
            var ccE = function() {
                ccD && 'function' == typeof ccD && ccD['apply'](this, arguments);
                var ccE = Array['prototype']['slice']['call'](arguments);
                try {
                    var ccF = ccE['map'](function(ccB) {
                        return ck6(ccB, ccC);
                    });
                    return ccB['handleEvent'] ? ccB['handleEvent']['apply'](this, ccF) : ccB['apply'](this, ccF);
                } catch (ckf) {
                    throw ck5 += 0x1,
                    setTimeout(function() {
                        ck5 -= 0x1;
                    }),
                    cdq(function(ccD) {
                        ccD['addEventProcessor'](function(ckf) {
                            var ccD = ccK['a']({}, ckf);
                            return ccC['mechanism'] && Object(cdx['a'])(ccD, void 0x0, void 0x0, ccC['mechanism']),
                            ccD['extra'] = ccK['a']({}, ccD['extra'], {
                                'arguments': Object(cdX['b'])(ccE, 0x3)
                            }),
                            ccD;
                        }),
                        ccW(ckf);
                    }),
                    ckf;
                }
            };
            try {
                for (var ccF in ccB)
                    Object['prototype']['hasOwnProperty']['call'](ccB, ccF) && (ccE[ccF] = ccB[ccF]);
            } catch (ckk) {}
            ccB['prototype'] = ccB['prototype'] || {},
            ccE['prototype'] = ccB['prototype'],
            Object['defineProperty'](ccB, '__sentry_wrapped__', {
                'enumerable': !0x1,
                'value': ccE
            }),
            Object['defineProperties'](ccE, {
                '__sentry__': {
                    'enumerable': !0x1,
                    'value': !0x0
                },
                '__sentry_original__': {
                    'enumerable': !0x1,
                    'value': ccB
                }
            });
            try {
                Object['getOwnPropertyDescriptor'](ccE, 'name')['configurable'] && Object['defineProperty'](ccE, 'name', {
                    'get': function() {
                        return ccB['name'];
                    }
                });
            } catch (ckl) {}
            return ccE;
        }
        var ckm = 0x0;
        function ckn(ccB, ccC) {
            return void 0x0 === ccC && (ccC = !0x1),
            function(ccD) {
                if (ck2 = void 0x0,
                ccD && ck3 !== ccD) {
                    ck3 = ccD;
                    var ccE = function() {
                        var ccC;
                        try {
                            ccC = ccD['target'] ? ckz(ccD['target']) : ckz(ccD);
                        } catch (ckt) {
                            ccC = '<unknown>';
                        }
                        0x0 === ccC['length'] || Object(ccQ['b'])()['addBreadcrumb']({
                            'category': 'ui.' + ccB,
                            'message': ccC
                        }, {
                            'event': ccD,
                            'name': ccB
                        });
                    };
                    ckm && clearTimeout(ckm),
                    ccC ? ckm = setTimeout(ccE) : ccE();
                }
            }
            ;
        }
        function cku() {
            return function(ccB) {
                var ccC;
                try {
                    ccC = ccB['target'];
                } catch (ckx) {
                    return;
                }
                var ccD = ccC && ccC['tagName'];
                ccD && ('INPUT' === ccD || 'TEXTAREA' === ccD || ccC['isContentEditable']) && (!ck2 && ckn('input')(ccB),
                clearTimeout(ck2),
                ck2 = setTimeout(function() {
                    ck2 = void 0x0;
                }, ck4));
            }
            ;
        }
        function ckz(ccB) {
            for (var ccC, ccD = ccB, ccE = [], ccF = 0x0, ccG = 0x0, ccH = '\x20>\x20'['length']; ccD && ccF++ < 0x5 && !('html' === (ccC = ckH(ccD)) || 0x1 < ccF && ccG + ccE['length'] * ccH + ccC['length'] >= 0x50); )
                ccE['push'](ccC),
                ccG += ccC['length'],
                ccD = ccD['parentNode'];
            return ccE['reverse']()['join']('\x20>\x20');
        }
        function ckH(ccB) {
            var ccC, ccD, ccE, ccF, ccG, ccH = [];
            if (!ccB || !ccB['tagName'])
                return '';
            if (ccH['push'](ccB['tagName']['toLowerCase']()),
            ccB['id'] && ccH['push']('#' + ccB['id']),
            (ccC = ccB['className']) && Object(cdy['h'])(ccC))
                for (ccD = ccC['split'](/\s+/),
                ccG = 0x0; ccG < ccD['length']; ccG++)
                    ccH['push']('.' + ccD[ccG]);
            var ccI = ['type', 'name', 'title', 'alt'];
            for (ccG = 0x0; ccG < ccI['length']; ccG++)
                ccE = ccI[ccG],
                (ccF = ccB['getAttribute'](ccE)) && ccH['push']('[' + ccE + '=\x22' + ccF + '\x22]');
            return ccH['join']('');
        }
        var ckQ = function() {
            function ccB() {
                this['_ignoreOnError'] = 0x0,
                this['name'] = ccB['id'];
            }
            return ccB['prototype']['_wrapTimeFunction'] = function(ccB) {
                return function() {
                    for (var ccC = [], ccD = 0x0; ccD < arguments['length']; ccD++)
                        ccC[ccD] = arguments[ccD];
                    var ccE = ccC[0x0];
                    return ccC[0x0] = ck6(ccE, {
                        'mechanism': {
                            'data': {
                                'function': cld(ccB)
                            },
                            'handled': !0x0,
                            'type': 'instrument'
                        }
                    }),
                    ccB['apply'](this, ccC);
                }
                ;
            }
            ,
            ccB['prototype']['_wrapRAF'] = function(ccB) {
                return function(ccC) {
                    return ccB(ck6(ccC, {
                        'mechanism': {
                            'data': {
                                'function': 'requestAnimationFrame',
                                'handler': cld(ccB)
                            },
                            'handled': !0x0,
                            'type': 'instrument'
                        }
                    }));
                }
                ;
            }
            ,
            ccB['prototype']['_wrapEventTarget'] = function(ccB) {
                var ccC = Object(cdx['e'])()
                  , ccD = ccC[ccB] && ccC[ccB]['prototype'];
                ccD && ccD['hasOwnProperty'] && ccD['hasOwnProperty']('addEventListener') && (Object(cdX['a'])(ccD, 'addEventListener', function(ccC) {
                    return function(ccD, ccE, ccF) {
                        try {
                            ccE['handleEvent'] = ck6(ccE['handleEvent']['bind'](ccE), {
                                'mechanism': {
                                    'data': {
                                        'function': 'handleEvent',
                                        'handler': cld(ccE),
                                        'target': ccB
                                    },
                                    'handled': !0x0,
                                    'type': 'instrument'
                                }
                            });
                        } catch (cl5) {}
                        return ccC['call'](this, ccD, ck6(ccE, {
                            'mechanism': {
                                'data': {
                                    'function': 'addEventListener',
                                    'handler': cld(ccE),
                                    'target': ccB
                                },
                                'handled': !0x0,
                                'type': 'instrument'
                            }
                        }), ccF);
                    }
                    ;
                }),
                Object(cdX['a'])(ccD, 'removeEventListener', function(ccB) {
                    return function(ccC, ccD, ccE) {
                        var ccF = ccD;
                        try {
                            ccF = ccF && (ccF['__sentry_wrapped__'] || ccF);
                        } catch (clb) {}
                        return ccB['call'](this, ccC, ccF, ccE);
                    }
                    ;
                }));
            }
            ,
            ccB['prototype']['setupOnce'] = function() {
                this['_ignoreOnError'] = this['_ignoreOnError'];
                var ccB = Object(cdx['e'])();
                Object(cdX['a'])(ccB, 'setTimeout', this['_wrapTimeFunction']['bind'](this)),
                Object(cdX['a'])(ccB, 'setInterval', this['_wrapTimeFunction']['bind'](this)),
                Object(cdX['a'])(ccB, 'requestAnimationFrame', this['_wrapRAF']['bind'](this)),
                ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload']['forEach'](this['_wrapEventTarget']['bind'](this));
            }
            ,
            ccB['id'] = 'TryCatch',
            ccB;
        }();
        function cld(ccB) {
            try {
                return ccB && ccB['name'] || '<anonymous>';
            } catch (clf) {
                return '<anonymous>';
            }
        }
        var clg, clh = Object(cdx['e'])(), cli = function() {
            function ccB(ccC) {
                this['name'] = ccB['id'],
                this['_options'] = ccK['a']({
                    'console': !0x0,
                    'dom': !0x0,
                    'fetch': !0x0,
                    'history': !0x0,
                    'sentry': !0x0,
                    'xhr': !0x0
                }, ccC);
            }
            return ccB['prototype']['_instrumentConsole'] = function() {
                'console'in clh && ['debug', 'info', 'warn', 'error', 'log', 'assert']['forEach'](function(ccC) {
                    ccC in clh['console'] && Object(cdX['a'])(clh['console'], ccC, function(ccD) {
                        return function() {
                            for (var ccE = [], ccF = 0x0; ccF < arguments['length']; ccF++)
                                ccE[ccF] = arguments[ccF];
                            var ccG = {
                                'category': 'console',
                                'data': {
                                    'extra': {
                                        'arguments': Object(cdX['b'])(ccE, 0x3)
                                    },
                                    'logger': 'console'
                                },
                                'level': ccH['fromString'](ccC),
                                'message': cdG(ccE, '\x20')
                            };
                            'assert' === ccC && !0x1 === ccE[0x0] && (ccG['message'] = 'Assertion\x20failed:\x20' + (cdG(ccE['slice'](0x1), '\x20') || 'console.assert'),
                            ccG['data']['extra']['arguments'] = Object(cdX['b'])(ccE['slice'](0x1), 0x3)),
                            ccB['addBreadcrumb'](ccG, {
                                'input': ccE,
                                'level': ccC
                            }),
                            ccD && Function['prototype']['apply']['call'](ccD, clh['console'], ccE);
                        }
                        ;
                    });
                });
            }
            ,
            ccB['prototype']['_instrumentDOM'] = function() {
                'document'in clh && (clh['document']['addEventListener']('click', ckn('click'), !0x1),
                clh['document']['addEventListener']('keypress', cku(), !0x1),
                ['EventTarget', 'Node']['forEach'](function(ccB) {
                    var ccC = clh[ccB] && clh[ccB]['prototype'];
                    ccC && ccC['hasOwnProperty'] && ccC['hasOwnProperty']('addEventListener') && (Object(cdX['a'])(ccC, 'addEventListener', function(ccB) {
                        return function(ccC, ccD, ccE) {
                            return ccD && ccD['handleEvent'] ? ('click' === ccC && Object(cdX['a'])(ccD, 'handleEvent', function(ccB) {
                                return function(ccC) {
                                    return ckn('click')(ccC),
                                    ccB['call'](this, ccC);
                                }
                                ;
                            }),
                            'keypress' === ccC && Object(cdX['a'])(ccD, 'handleEvent', cku())) : ('click' === ccC && ckn('click', !0x0)(this),
                            'keypress' === ccC && cku()(this)),
                            ccB['call'](this, ccC, ccD, ccE);
                        }
                        ;
                    }),
                    Object(cdX['a'])(ccC, 'removeEventListener', function(ccB) {
                        return function(ccC, ccD, ccE) {
                            var ccF = ccD;
                            try {
                                ccF = ccF && (ccF['__sentry_wrapped__'] || ccF);
                            } catch (clD) {}
                            return ccB['call'](this, ccC, ccF, ccE);
                        }
                        ;
                    }));
                }));
            }
            ,
            ccB['prototype']['_instrumentFetch'] = function() {
                (function() {
                    if (!cgV())
                        return !0x1;
                    var ccB = function(ccB) {
                        return -0x1 !== ccB['toString']()['indexOf']('native');
                    }
                      , ccC = Object(cdx['e'])()
                      , ccD = null
                      , ccE = ccC['document'];
                    if (ccE) {
                        var ccF = ccE['createElement']('iframe');
                        ccF['hidden'] = !0x0;
                        try {
                            ccE['head']['appendChild'](ccF),
                            ccF['contentWindow'] && ccF['contentWindow']['fetch'] && (ccD = ccB(ccF['contentWindow']['fetch'])),
                            ccE['head']['removeChild'](ccF);
                        } catch (clK) {
                            cdw['a']['warn']('Could\x20not\x20create\x20sandbox\x20iframe\x20for\x20pure\x20fetch\x20check,\x20bailing\x20to\x20window.fetch:\x20', clK);
                        }
                    }
                    return null === ccD && (ccD = ccB(ccC['fetch'])),
                    ccD;
                }() && Object(cdX['a'])(clh, 'fetch', function(ccC) {
                    return function() {
                        for (var ccD = [], ccE = 0x0; ccE < arguments['length']; ccE++)
                            ccD[ccE] = arguments[ccE];
                        var ccF, ccG = ccD[0x0], ccI = 'GET';
                        'string' == typeof ccG ? ccF = ccG : 'Request'in clh && ccG instanceof Request ? (ccF = ccG['url'],
                        ccG['method'] && (ccI = ccG['method'])) : ccF = ccG + '',
                        ccD[0x1] && ccD[0x1]['method'] && (ccI = ccD[0x1]['method']);
                        var ccJ = Object(ccQ['b'])()['getClient']()
                          , ccK = ccJ && ccJ['getDsn']();
                        if (ccK) {
                            var ccR = new ce1(ccK)['getStoreEndpoint']();
                            if (ccR && ccF['includes'](ccR))
                                return 'POST' === ccI && ccD[0x1] && ccD[0x1]['body'] && cmC(ccD[0x1]['body']),
                                ccC['apply'](clh, ccD);
                        }
                        var ccW = {
                            'method': ccI,
                            'url': ccF
                        };
                        return ccC['apply'](clh, ccD)['then'](function(ccC) {
                            return ccW['status_code'] = ccC['status'],
                            ccB['addBreadcrumb']({
                                'category': 'fetch',
                                'data': ccW,
                                'type': 'http'
                            }, {
                                'input': ccD,
                                'response': ccC
                            }),
                            ccC;
                        })['catch'](function(ccC) {
                            throw ccB['addBreadcrumb']({
                                'category': 'fetch',
                                'data': ccW,
                                'level': ccH['Error'],
                                'type': 'http'
                            }, {
                                'error': ccC,
                                'input': ccD
                            }),
                            ccC;
                        });
                    }
                    ;
                }));
            }
            ,
            ccB['prototype']['_instrumentHistory'] = function() {
                function ccC(ccB) {
                    return function() {
                        for (var ccC = [], ccD = 0x0; ccD < arguments['length']; ccD++)
                            ccC[ccD] = arguments[ccD];
                        var ccF = 0x2 < ccC['length'] ? ccC[0x2] : void 0x0;
                        return ccF && ccE(clg, ccF + ''),
                        ccB['apply'](this, ccC);
                    }
                    ;
                }
                var ccD = this;
                if (function() {
                    var ccB = Object(cdx['e'])()
                      , ccC = ccB['chrome']
                      , ccD = ccC && ccC['app'] && ccC['app']['runtime']
                      , ccE = 'history'in ccB && !!ccB['history']['pushState'] && !!ccB['history']['replaceState'];
                    return !ccD && ccE;
                }()) {
                    var ccE = function(ccC, ccD) {
                        var ccE = Object(cdx['f'])(clh['location']['href'])
                          , ccF = Object(cdx['f'])(ccD)
                          , ccG = Object(cdx['f'])(ccC);
                        ccG['path'] || (ccG = ccE),
                        clg = ccD,
                        ccE['protocol'] === ccF['protocol'] && ccE['host'] === ccF['host'] && (ccD = ccF['relative']),
                        ccE['protocol'] === ccG['protocol'] && ccE['host'] === ccG['host'] && (ccC = ccG['relative']),
                        ccB['addBreadcrumb']({
                            'category': 'navigation',
                            'data': {
                                'from': ccC,
                                'to': ccD
                            }
                        });
                    }
                      , ccF = clh['onpopstate'];
                    clh['onpopstate'] = function() {
                        for (var ccB = [], ccC = 0x0; ccC < arguments['length']; ccC++)
                            ccB[ccC] = arguments[ccC];
                        var ccG = clh['location']['href'];
                        if (ccE(clg, ccG),
                        ccF)
                            return ccF['apply'](ccD, ccB);
                    }
                    ,
                    Object(cdX['a'])(clh['history'], 'pushState', ccC),
                    Object(cdX['a'])(clh['history'], 'replaceState', ccC);
                }
            }
            ,
            ccB['prototype']['_instrumentXHR'] = function() {
                if ('XMLHttpRequest'in clh) {
                    var ccC = XMLHttpRequest['prototype'];
                    Object(cdX['a'])(ccC, 'open', function(ccB) {
                        return function() {
                            for (var ccC = [], ccD = 0x0; ccD < arguments['length']; ccD++)
                                ccC[ccD] = arguments[ccD];
                            var ccE = ccC[0x1];
                            this['__sentry_xhr__'] = {
                                'method': ccC[0x0],
                                'url': ccC[0x1]
                            };
                            var ccF = Object(ccQ['b'])()['getClient']()
                              , ccG = ccF && ccF['getDsn']();
                            if (ccG) {
                                var ccH = new ce1(ccG)['getStoreEndpoint']();
                                Object(cdy['h'])(ccE) && ccH && ccE['includes'](ccH) && (this['__sentry_own_request__'] = !0x0);
                            }
                            return ccB['apply'](this, ccC);
                        }
                        ;
                    }),
                    Object(cdX['a'])(ccC, 'send', function(ccC) {
                        return function() {
                            function ccD() {
                                if (0x4 === ccG['readyState']) {
                                    if (ccG['__sentry_own_request__'])
                                        return;
                                    try {
                                        ccG['__sentry_xhr__'] && (ccG['__sentry_xhr__']['status_code'] = ccG['status']);
                                    } catch (cmr) {}
                                    ccB['addBreadcrumb']({
                                        'category': 'xhr',
                                        'data': ccG['__sentry_xhr__'],
                                        'type': 'http'
                                    }, {
                                        'xhr': ccG
                                    });
                                }
                            }
                            for (var ccE = [], ccF = 0x0; ccF < arguments['length']; ccF++)
                                ccE[ccF] = arguments[ccF];
                            var ccG = this;
                            return ccG['__sentry_own_request__'] && cmC(ccE[0x0]),
                            ['onload', 'onerror', 'onprogress']['forEach'](function(ccB) {
                                !function(ccB, ccC) {
                                    ccB in ccC && 'function' == typeof ccC[ccB] && Object(cdX['a'])(ccC, ccB, function(ccC) {
                                        return ck6(ccC, {
                                            'mechanism': {
                                                'data': {
                                                    'function': ccB,
                                                    'handler': ccC && ccC['name'] || '<anonymous>'
                                                },
                                                'handled': !0x0,
                                                'type': 'instrument'
                                            }
                                        });
                                    });
                                }(ccB, ccG);
                            }),
                            'onreadystatechange'in ccG && 'function' == typeof ccG['onreadystatechange'] ? Object(cdX['a'])(ccG, 'onreadystatechange', function(ccB) {
                                return ck6(ccB, {
                                    'mechanism': {
                                        'data': {
                                            'function': 'onreadystatechange',
                                            'handler': ccB && ccB['name'] || '<anonymous>'
                                        },
                                        'handled': !0x0,
                                        'type': 'instrument'
                                    }
                                }, ccD);
                            }) : ccG['onreadystatechange'] = ccD,
                            ccC['apply'](this, ccE);
                        }
                        ;
                    });
                }
            }
            ,
            ccB['addBreadcrumb'] = function(ccC, ccD) {
                Object(ccQ['b'])()['getIntegration'](ccB) && Object(ccQ['b'])()['addBreadcrumb'](ccC, ccD);
            }
            ,
            ccB['prototype']['setupOnce'] = function() {
                this['_options']['console'] && this['_instrumentConsole'](),
                this['_options']['dom'] && this['_instrumentDOM'](),
                this['_options']['xhr'] && this['_instrumentXHR'](),
                this['_options']['fetch'] && this['_instrumentFetch'](),
                this['_options']['history'] && this['_instrumentHistory']();
            }
            ,
            ccB['id'] = 'Breadcrumbs',
            ccB;
        }();
        function cmC(ccB) {
            try {
                var ccC = JSON['parse'](ccB);
                cli['addBreadcrumb']({
                    'category': 'sentry',
                    'event_id': ccC['event_id'],
                    'level': ccC['level'] || ccH['fromString']('error'),
                    'message': Object(cdx['d'])(ccC)
                }, {
                    'event': ccC
                });
            } catch (cmF) {
                cdw['a']['error']('Error\x20while\x20adding\x20sentry\x20type\x20breadcrumb');
            }
        }
        var cmG = function() {
            function ccB(ccC) {
                this['name'] = ccB['id'],
                this['_options'] = ccK['a']({
                    'onerror': !0x0,
                    'onunhandledrejection': !0x0
                }, ccC);
            }
            return ccB['prototype']['setupOnce'] = function() {
                Error['stackTraceLimit'] = 0x32,
                ciG(function(ccC, ccD, ccE) {
                    if (!(0x0 < ck5)) {
                        var ccF = Object(ccQ['b'])()['getIntegration'](ccB);
                        ccF && Object(ccQ['b'])()['captureEvent'](ccF['_eventFromGlobalHandler'](ccC), {
                            'data': {
                                'stack': ccC
                            },
                            'originalException': ccE
                        });
                    }
                }),
                this['_options']['onerror'] && (cdw['a']['log']('Global\x20Handler\x20attached:\x20onerror'),
                ciH()),
                this['_options']['onunhandledrejection'] && (cdw['a']['log']('Global\x20Handler\x20attached:\x20onunhandledrejection'),
                ciI());
            }
            ,
            ccB['prototype']['_eventFromGlobalHandler'] = function(ccB) {
                if (!Object(cdy['h'])(ccB['message']) && 'onunhandledrejection' !== ccB['mechanism']) {
                    var ccC = ccB['message'];
                    ccB['message'] = ccC['error'] && Object(cdy['h'])(ccC['error']['message']) ? ccC['error']['message'] : 'No\x20error\x20message';
                }
                var ccD = ciP(ccB)
                  , ccE = {
                    'mode': ccB['mode']
                };
                ccB['message'] && (ccE['message'] = ccB['message']),
                ccB['name'] && (ccE['name'] = ccB['name']);
                var ccF = Object(ccQ['b'])()['getClient']()
                  , ccG = ccF && ccF['getOptions']()['maxValueLength'] || 0xfa
                  , ccH = ccB['original'] ? cdD(JSON['stringify'](Object(cdX['b'])(ccB['original'])), ccG) : ''
                  , ccI = 'onunhandledrejection' === ccB['mechanism'] ? 'UnhandledRejection' : 'Error';
                return Object(cdx['a'])(ccD, ccH, ccI, {
                    'data': ccE,
                    'handled': !0x1,
                    'type': ccB['mechanism']
                }),
                ccD;
            }
            ,
            ccB['id'] = 'GlobalHandlers',
            ccB;
        }()
          , cmH = 'cause'
          , cmI = 0x5
          , cmJ = function() {
            function ccB(ccC) {
                void 0x0 === ccC && (ccC = {}),
                this['name'] = ccB['id'],
                this['_key'] = ccC['key'] || cmH,
                this['_limit'] = ccC['limit'] || cmI;
            }
            return ccB['prototype']['setupOnce'] = function() {
                Object(cdt['b'])(function(ccC, ccD) {
                    var ccE = Object(ccQ['b'])()['getIntegration'](ccB);
                    return ccE ? ccE['_handler'](ccC, ccD) : ccC;
                });
            }
            ,
            ccB['prototype']['_handler'] = function(ccB, ccC) {
                if (!(ccB['exception'] && ccB['exception']['values'] && ccC && ccC['originalException']instanceof Error))
                    return ccB;
                var ccD = this['_walkErrorTree'](ccC['originalException'], this['_key']);
                return ccB['exception']['values'] = ccK['d'](ccD, ccB['exception']['values']),
                ccB;
            }
            ,
            ccB['prototype']['_walkErrorTree'] = function(ccB, ccC, ccD) {
                if (void 0x0 === ccD && (ccD = []),
                !(ccB[ccC]instanceof Error) || ccD['length'] + 0x1 >= this['_limit'])
                    return ccD;
                var ccE = ciL(ciJ(ccB[ccC]));
                return this['_walkErrorTree'](ccB[ccC], ccC, ccK['d']([ccE], ccD));
            }
            ,
            ccB['id'] = 'LinkedErrors',
            ccB;
        }()
          , cmK = Object(cdx['e'])()
          , cmL = function() {
            function ccB() {
                this['name'] = ccB['id'];
            }
            return ccB['prototype']['setupOnce'] = function() {
                Object(cdt['b'])(function(ccC) {
                    if (Object(ccQ['b'])()['getIntegration'](ccB)) {
                        if (!cmK['navigator'] || !cmK['location'])
                            return ccC;
                        var ccD = ccC['request'] || {};
                        return ccD['url'] = ccD['url'] || cmK['location']['href'],
                        ccD['headers'] = ccD['headers'] || {},
                        ccD['headers']['User-Agent'] = cmK['navigator']['userAgent'],
                        ccK['a']({}, ccC, {
                            'request': ccD
                        });
                    }
                    return ccC;
                });
            }
            ,
            ccB['id'] = 'UserAgent',
            ccB;
        }()
          , cmM = [new ccE['InboundFilters'](), new ccE['FunctionToString'](), new ckQ(), new cli(), new cmG(), new cmJ(), new cmL()];
        function cng(ccB) {
            void 0x0 === ccB && (ccB = {}),
            void 0x0 === ccB['defaultIntegrations'] && (ccB['defaultIntegrations'] = cmM),
            function(ccB, ccC) {
                !0x0 === ccC['debug'] && cdw['a']['enable'](),
                Object(ccQ['b'])()['bindClient'](new ccB(ccC));
            }(cj4, ccB);
        }
        function cnk(ccB) {
            void 0x0 === ccB && (ccB = {}),
            ccB['eventId'] || (ccB['eventId'] = Object(ccQ['b'])()['lastEventId']());
            var ccC = Object(ccQ['b'])()['getClient']();
            ccC && ccC['showReportDialog'](ccB);
        }
        function cnn() {
            return Object(ccQ['b'])()['lastEventId']();
        }
        function cno() {}
        function cnp(ccB) {
            ccB();
        }
        function cnr(ccB) {
            var ccC = Object(ccQ['b'])()['getClient']();
            return ccC ? ccC['flush'](ccB) : Promise['reject'](!0x1);
        }
        function cnu(ccB) {
            var ccC = Object(ccQ['b'])()['getClient']();
            return ccC ? ccC['close'](ccB) : Promise['reject'](!0x1);
        }
        function cnx(ccB) {
            ck6(ccB)();
        }
        ccD['d'](ccC, 'Integrations', function() {
            return cnB;
        }),
        ccD['d'](ccC, 'Severity', function() {
            return ccH;
        }),
        ccD['d'](ccC, 'Status', function() {
            return ccJ;
        }),
        ccD['d'](ccC, 'addGlobalEventProcessor', function() {
            return cdt['b'];
        }),
        ccD['d'](ccC, 'addBreadcrumb', function() {
            return cd9;
        }),
        ccD['d'](ccC, 'captureException', function() {
            return ccW;
        }),
        ccD['d'](ccC, 'captureEvent', function() {
            return cd5;
        }),
        ccD['d'](ccC, 'captureMessage', function() {
            return cd0;
        }),
        ccD['d'](ccC, 'configureScope', function() {
            return cd7;
        }),
        ccD['d'](ccC, 'getHubFromCarrier', function() {
            return ccQ['c'];
        }),
        ccD['d'](ccC, 'getCurrentHub', function() {
            return ccQ['b'];
        }),
        ccD['d'](ccC, 'Hub', function() {
            return ccQ['a'];
        }),
        ccD['d'](ccC, 'Scope', function() {
            return cdt['a'];
        }),
        ccD['d'](ccC, 'setContext', function() {
            return cdb;
        }),
        ccD['d'](ccC, 'setExtra', function() {
            return cdi;
        }),
        ccD['d'](ccC, 'setExtras', function() {
            return cde;
        }),
        ccD['d'](ccC, 'setTag', function() {
            return cdl;
        }),
        ccD['d'](ccC, 'setTags', function() {
            return cdg;
        }),
        ccD['d'](ccC, 'setUser', function() {
            return cdo;
        }),
        ccD['d'](ccC, 'Span', function() {
            return cdu['a'];
        }),
        ccD['d'](ccC, 'withScope', function() {
            return cdq;
        }),
        ccD['d'](ccC, 'BrowserClient', function() {
            return cj4;
        }),
        ccD['d'](ccC, 'defaultIntegrations', function() {
            return cmM;
        }),
        ccD['d'](ccC, 'forceLoad', function() {
            return cno;
        }),
        ccD['d'](ccC, 'init', function() {
            return cng;
        }),
        ccD['d'](ccC, 'lastEventId', function() {
            return cnn;
        }),
        ccD['d'](ccC, 'onLoad', function() {
            return cnp;
        }),
        ccD['d'](ccC, 'showReportDialog', function() {
            return cnk;
        }),
        ccD['d'](ccC, 'flush', function() {
            return cnr;
        }),
        ccD['d'](ccC, 'close', function() {
            return cnu;
        }),
        ccD['d'](ccC, 'wrap', function() {
            return cnx;
        }),
        ccD['d'](ccC, 'SDK_NAME', function() {
            return cj3;
        }),
        ccD['d'](ccC, 'SDK_VERSION', function() {
            return '5.4.3';
        }),
        ccD['d'](ccC, 'Transports', function() {
            return ccG;
        });
        var cnz = {}
          , cnA = Object(cdx['e'])();
        cnA['Sentry'] && cnA['Sentry']['Integrations'] && (cnz = cnA['Sentry']['Integrations']);
        var cnB = ccK['a']({}, cnz, ccE, ccF);
    }
    , function(cnC, cnD, cnE) {
        'use strict';
        cnE['d'](cnD, 'a', function() {
            return cnI;
        });
        var cnF, cnG, cnH = cnE(0x5);
        (cnG = cnF || (cnF = {}))['PENDING'] = 'PENDING',
        cnG['RESOLVED'] = 'RESOLVED',
        cnG['REJECTED'] = 'REJECTED';
        var cnI = function() {
            function cnC(cnC) {
                var cnD = this;
                this['_state'] = cnF['PENDING'],
                this['_handlers'] = [],
                this['_resolve'] = function(cnC) {
                    cnD['_setResult'](cnC, cnF['RESOLVED']);
                }
                ,
                this['_reject'] = function(cnC) {
                    cnD['_setResult'](cnC, cnF['REJECTED']);
                }
                ,
                this['_setResult'] = function(cnC, cnE) {
                    return cnD['_state'] === cnF['PENDING'] ? Object(cnH['j'])(cnC) ? void cnC['then'](cnD['_resolve'], cnD['_reject']) : (cnD['_value'] = cnC,
                    cnD['_state'] = cnE,
                    void cnD['_executeHandlers']()) : void 0x0;
                }
                ,
                this['_executeHandlers'] = function() {
                    if (cnD['_state'] !== cnF['PENDING'])
                        return cnD['_state'] === cnF['REJECTED'] ? cnD['_handlers']['forEach'](function(cnC) {
                            return cnC['onFail'] && cnC['onFail'](cnD['_value']);
                        }) : cnD['_handlers']['forEach'](function(cnC) {
                            return cnC['onSuccess'] && cnC['onSuccess'](cnD['_value']);
                        }),
                        void (cnD['_handlers'] = []);
                }
                ,
                this['_attachHandler'] = function(cnC) {
                    cnD['_handlers'] = cnD['_handlers']['concat'](cnC),
                    cnD['_executeHandlers']();
                }
                ;
                try {
                    cnC(this['_resolve'], this['_reject']);
                } catch (cnT) {
                    this['_reject'](cnT);
                }
            }
            return cnC['prototype']['then'] = function(cnD, cnE) {
                var cnF = this;
                return new cnC(function(cnC, cnG) {
                    cnF['_attachHandler']({
                        'onFail': function(cnD) {
                            if (cnE)
                                try {
                                    return void cnC(cnE(cnD));
                                } catch (co0) {
                                    return void cnG(co0);
                                }
                            else
                                cnG(cnD);
                        },
                        'onSuccess': function(cnE) {
                            if (cnD)
                                try {
                                    return void cnC(cnD(cnE));
                                } catch (co2) {
                                    return void cnG(co2);
                                }
                            else
                                cnC(cnE);
                        }
                    });
                }
                );
            }
            ,
            cnC['prototype']['catch'] = function(cnC) {
                return this['then'](function(cnC) {
                    return cnC;
                }, cnC);
            }
            ,
            cnC['prototype']['toString'] = function() {
                return '[object\x20SyncPromise]';
            }
            ,
            cnC['resolve'] = function(cnD) {
                return new cnC(function(cnC) {
                    cnC(cnD);
                }
                );
            }
            ,
            cnC['reject'] = function(cnD) {
                return new cnC(function(cnC, cnE) {
                    cnE(cnD);
                }
                );
            }
            ,
            cnC;
        }();
    }
    , function(coa, cob) {
        coa['exports'] = function(coa, cob) {
            var coe;
            this['sounds'] = [],
            this['listener'] = {},
            this['rate'] = 0x1,
            this['setVolume'] = function(coa) {
                Howler['volume'](coa);
            }
            ,
            this['getSound'] = function(coa, cob) {
                var coi = coa + (cob || '') + (window['activeHacker'] ? 'hckd' : '');
                (coe = this['sounds'][coi]) || (coe = new Howl({
                    'src': '.././sound/' + (window['activeHacker'] ? 'fart_0' : coa) + '.mp3'
                }),
                this['sounds'][coi] = coe);
            }
            ,
            this['play'] = function(coa, cob, col, com) {
                if (this['getSound'](coa),
                this['rate'] && (!col || !coe['isPlaying'])) {
                    coe['isPlaying'] = !0x0;
                    var con = coe['play']();
                    coe['volume'](cob || 0x1, con),
                    coe['loop'](col, con),
                    coe['rate']((com || 0x1) * this['rate'], con);
                }
            }
            ,
            this['stop'] = function(coa) {
                this['getSound'](coa),
                coe && (coe['isPlaying'] = !0x1,
                coe['stop']());
            }
            ,
            this['play3Dv'] = function(cop, coq, cor, cos, cot, cou, cov, cow) {
                var cox = 0x1 - coa['getDistance3D'](coq, cor, cos, cow['x'], cow['y'], cow['z']) / cot;
                if (0.1 < cox) {
                    this['getSound'](cop, '3dv');
                    var coy = coe['play']();
                    cou = (cou || 0x1) * cox * cob['otherSoundMlt'],
                    coe['volume'](cou, coy),
                    coe['rate'](cov || 0x1, coy);
                }
            }
            ,
            this['play3D'] = function(coa, coA, coB, coC, coD, coE, coF, coG) {
                this['getSound'](coa, '3d');
                var coH = coe['play']();
                0.05 < (coD = (coD || 0x1) * cob['otherSoundMlt']) && (coe['volume'](coD, coH),
                coe['rate'](coE || 0x1, coH),
                coe['pos'](coA, coB, coC, coH),
                coe['pannerAttr']({
                    'refDistance': coF || 0x19,
                    'rolloffFactor': coG || 0x1
                }, coH));
            }
            ;
        }
        ;
    }
    , function(coI, coJ, coK) {
        var coL = coK(0x4)
          , coM = coK(0x8)
          , coN = coK(0x17)
          , coO = new coL['Vector3']()
          , coP = coN['generateCube'](null, 0x1, 0x1, 0x1, {})
          , coQ = function(coI) {
            this['mesh'] = new coL['Mesh'](coP),
            this['init'] = function(coJ) {
                this['dst'] = coJ['dst'],
                this['spd'] = coJ['spd'],
                this['xS'] = coJ['xS'],
                this['zS'] = coJ['zS'],
                this['yS'] = coJ['yS'],
                this['scale'] = 0.45,
                this['len'] = 0x0,
                this['mesh']['material'] = coI['getMat']('default', {
                    'mat': coL['MeshBasicMaterial'],
                    'color': 0xededed,
                    'transparent': !0x0,
                    'opacity': 0.21
                });
                var coK = coJ['mesh']['position']['x']
                  , coM = coJ['mesh']['position']['y']
                  , coN = coJ['mesh']['position']['z'];
                coI['moveMesh'](this['mesh'], coK, coM, coN),
                this['mesh']['lookAt'](coK + this['xS'], coM + this['yS'], coN + this['zS']),
                this['mesh']['rotateX'](Math['PI'] / 0x2),
                coI['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']),
                this['mesh']['visible'] = !0x0;
            }
            ,
            this['update'] = function(coJ) {
                this['mesh']['visible'] && (this['len'] < this['dst'] && (this['len'] += this['spd'] * coJ,
                this['len'] >= this['dst'] && (this['len'] = this['dst'])),
                this['scale'] -= 0.00036 * coJ,
                coI['scaleMesh'](this['mesh'], this['scale'], this['len'], this['scale']),
                0x0 >= this['scale'] && (this['scale'] = 0x0,
                this['mesh']['visible'] = !0x1));
            }
            ;
        };
        function coX() {
            coL['Object3D']['call'](this),
            this['largeSpawnCount'] = 0x8,
            this['smallSpawnCount'] = 0xf,
            this['emissiveness'] = 0.55,
            this['velocityDamping'] = 0x3,
            this['lifeSpeedMin'] = 2.2,
            this['lifeSpeedRange'] = 0x3;
            var coI = new coL['Geometry']({
                'dynamic': !0x0
            })
              , coJ = new coL['Color'](0xbbbbbb);
            this['mesh'] = new coL['Mesh'](coI,new coL['StrippedLambertMaterial']({
                'color': coJ,
                'emissive': coJ['multiplyScalar'](this['emissiveness']),
                'smoothShading': !0x0
            })),
            this['mesh']['castShadow'] = !0x0,
            this['mesh']['receiveShadow'] = !0x0,
            this['add'](this['mesh']),
            this['cubeTemplate'] = new coL['BoxGeometry'](0x1,0x1,0x1);
            for (var coK = 0x0; coK < this['cubeTemplate']['faces']['length']; coK++)
                this['cubeTemplate']['faces'][coK]['materialIndex'] = 0x0;
            this['cubeTemplate']['faceVertexUvs'] = [[]],
            this['entities'] = [];
        }
        coX['staticMatrix'] = new coL['Matrix4'](),
        coX['prototype'] = Object['create'](coL['Object3D']['prototype']),
        Object['defineProperty'](coX, 'finished', function() {
            return 0x0 === this['entities']['length'];
        }),
        coX['prototype']['explodeAt'] = function(coI, coJ, coK, coL) {
            this['sizeMin'] = 0.35 * coL,
            this['sizeRange'] = 2.2 * coL,
            this['velocityMin'] = 0x1e * coL,
            this['velocityRange'] = 0x11 * coL,
            coO['set'](coI, coJ, coK);
            for (var coM = 0x0; coM < this['largeSpawnCount']; coM++)
                this['spawnEntity'](0.1 * Math['random']() + 0.9, coO, !0x1);
            for (coM = 0x0; coM < this['smallSpawnCount']; coM++)
                this['spawnEntity'](0.9 * Math['random'](), coO, !0x1);
        }
        ,
        coX['prototype']['spawnEntity'] = function(coI, coJ) {
            for (var coK = Math['pow'](coI, 2.5), coL = coK * this['sizeRange'] + this['sizeMin'], coM = (0x1 - coK) * this['velocityRange'] + this['velocityMin'], coN = this['_randomVector']()['normalize']()['multiplyScalar'](coM), coO = coK * this['lifeSpeedRange'] + this['lifeSpeedMin'], coP = 0x0; ; ) {
                for (var coQ = !0x0, cpf = 0x0; cpf < this['entities']['length']; cpf++)
                    if (this['entities'][cpf]['index'] === coP) {
                        coQ = !0x1;
                        break;
                    }
                if (coQ)
                    break;
                coP++;
            }
            0x8 * coP > this['mesh']['geometry']['vertices']['length'] - 0x1 && this['mesh']['geometry']['merge'](this['cubeTemplate'], coX['emptyMatrix']),
            this['entities']['push']({
                'index': coP,
                'rank': coK,
                'rankSeed': coI,
                'life': 0x0,
                'lifeSpeed': coO,
                'size': coL,
                'position': coJ['clone'](),
                'velocity': coN
            });
        }
        ,
        coX['prototype']['destroyEntity'] = function(coI) {
            this['entities']['splice'](this['entities']['indexOf'](coI), 0x1);
            for (var coJ = 0x8 * coI['index']; coJ < 0x8 * (coI['index'] + 0x1); coJ++)
                this['mesh']['geometry']['vertices'][coJ]['set'](0x0, 0x0, 0x0);
            this['mesh']['geometry']['verticesNeedUpdate'] = !0x0,
            this['mesh']['geometry']['elementsNeedUpdate'] = !0x0,
            this['_cleanGeometry']();
        }
        ,
        coX['prototype']['update'] = function(coI) {
            coI /= 0x3e8;
            for (var coJ, coK = 0x0; coK < this['entities']['length']; coK++) {
                (coJ = this['entities'][coK])['life'] += coI * coJ['lifeSpeed'],
                coJ['velocity']['multiplyScalar'](0x1 - this['velocityDamping'] * coI),
                coJ['position']['add'](coJ['velocity']['clone']()['multiplyScalar'](coI));
                var coL = 0x2 - Math['pow'](coJ['life'] / Math['sqrt'](0x2), 0x2);
                coL *= coJ['size'];
                for (var coM = 0x8 * coJ['index']; coM < 0x8 * (coJ['index'] + 0x1); coM++) {
                    var coN = this['mesh']['geometry']['vertices'][coM]
                      , coO = this['cubeTemplate']['vertices'][coM % 0x8];
                    coN['set'](coJ['position']['x'], coJ['position']['y'], coJ['position']['z'])['addScaledVector'](coO, coL);
                }
                0x0 >= coL && this['destroyEntity'](coJ);
            }
            this['mesh']['geometry']['verticesNeedUpdate'] = !0x0,
            this['mesh']['geometry']['elementsNeedUpdate'] = !0x0,
            this['mesh']['geometry']['computeBoundingSphere']();
        }
        ,
        coX['prototype']['_cleanGeometry'] = function() {
            for (var coI, coJ = this['mesh']['geometry']['vertices'], coK = this['mesh']['geometry']['faces'], coL = -0x1, coM = 0x0; coM < this['entities']['length']; coM++)
                (coI = this['entities'][coM])['index'] > coL && (coL = coI['index']);
            var coN = coL + 0x1;
            coJ['splice'](0x8 * coN, coJ['length'] - 0x8 * coN),
            coK['splice'](0xc * coN, coK['length'] - 0xc * coN);
        }
        ,
        coX['prototype']['_randomVector'] = function() {
            return new coL['Vector3'](Math['random']() - 0.5,Math['random']() - 0.5,Math['random']() - 0.5);
        }
        ;
        var cpv = [{
            'mat': coL['MeshBasicMaterial'],
            'snd': {
                'rng': 0x1a,
                'src': ['whizz_0', 'whizz_1'],
                'vol': 0.12
            },
            'spd': 1.7,
            'scale': 0x1,
            'length': 0xd,
            'color': 0xffffdb
        }, {
            'spd': [0.03, 0.031],
            'rand': !0x0,
            'carryV': !0x0,
            'grav': 0.0003,
            'spn': [0.04, 0.05],
            'scale': 0.15,
            'length': 0.5,
            'color': 0x9a7b3e
        }, {
            'spd': [0.03, 0.031],
            'rand': !0x0,
            'carryV': !0x0,
            'grav': 0.0003,
            'spn': [0.03, 0.05],
            'scale': 0.1,
            'length': 0.4,
            'color': 0x9a7b3e
        }]
          , cpw = function(coI) {
            this['mesh'] = new coL['Mesh'](coI['cubeGeo']),
            this['init'] = function(coJ, coK, coN, coO, coP, coQ, coX, cpv) {
                this['dst'] = coQ,
                this['scale'] = coX['scale'],
                this['spd'] = coX['spd'][0x1] ? coM['randFloat'](coX['spd'][0x0], coX['spd'][0x1]) : coX['spd'];
                var cpw = coX && coX['carryV'] && cpv;
                coO -= Math['PI'],
                this['xS'] = this['spd'] * Math['sin'](coO) * Math['cos'](coP) + (cpw ? cpv['xVel'] : 0x0),
                this['zS'] = this['spd'] * Math['cos'](coO) * Math['cos'](coP) + (cpw ? cpv['zVel'] : 0x0),
                this['yS'] = this['spd'] * Math['sin'](coP) + (cpw ? cpv['yVel'] : 0x0),
                this['grav'] = coX['grav'],
                this['spin'] = coX['spn'] ? coX['spn'][0x1] ? coM['randFloat'](coX['spn'][0x0], coX['spn'][0x1]) : coX['spn'] : 0x0,
                this['mesh']['receiveShadow'] = coX['mat'] != coL['MeshBasicMaterial'],
                this['mesh']['material'] = coI['getMat']('default', {
                    'fog': coX['mat'] != coL['MeshBasicMaterial'],
                    'color': coX['color'],
                    'emissive': coX['emis'],
                    'mat': coX['mat']
                }),
                this['layer'] = cpv && cpv['isYou'] ? 0x1 : 0x0,
                this['sound'] = cpv && cpv['isYou'] ? null : coX['snd'],
                this['soundPlayed'] = !0x1,
                this['mesh']['layers']['set'](this['layer']),
                coI['moveMesh'](this['mesh'], coJ, coK, coN),
                this['mesh']['lookAt'](coJ + this['xS'], coK + this['yS'], coN + this['zS']),
                coX && coX['rand'] && this['mesh']['rotateX'](coM['randFloat'](-Math['PI'], Math['PI'])),
                coI['scaleMesh'](this['mesh'], coX['scale'], coX['scale'], coX['length']);
            }
            ,
            this['checkSound'] = function() {
                if (this['sound'] && !this['soundPlayed']) {
                    var coI = Howler['pos']();
                    coM['getDistance3D'](coI[0x0], coI[0x1], coI[0x2], this['mesh']['position']['x'], this['mesh']['position']['y'], this['mesh']['position']['z']) <= this['sound']['rng'] && (SOUND['play'](this['sound']['src'][coM['randInt'](0x0, this['sound']['src']['length'] - 0x1)], this['sound']['vol'], !0x1, coM['randFloat'](0.8, 1.2)),
                    this['soundPlayed'] = !0x0);
                }
            }
            ,
            this['update'] = function(coI) {
                this['mesh']['visible'] && (this['mesh']['position']['x'] += this['xS'] * coI,
                this['mesh']['position']['z'] += this['zS'] * coI,
                this['mesh']['position']['y'] += this['yS'] * coI,
                this['spin'] && this['mesh']['rotateX'](this['spin'] * coI),
                this['yS'] -= (this['grav'] || 0x0) * coI,
                this['dst'] -= this['spd'] * coI,
                this['checkSound'](),
                0x0 >= this['dst'] && (this['mesh']['visible'] = !0x1));
            }
            ;
        };
        coL['Sprite']['prototype']['init'] = function(coI, coJ, coK, coL, coM, coN, coO, coP, coQ, coX) {
            this['position']['x'] = coI,
            this['position']['y'] = coJ,
            this['position']['z'] = coK,
            this['xVel'] = coL,
            this['yVel'] = coM,
            this['zVel'] = coN,
            this['scale']['x'] = this['scale']['y'] = coO,
            this['life'] = coP || 0x0,
            this['grav'] = coQ || 0x0,
            this['area'] = coX,
            this['updC'] = 0x0;
        }
        ,
        coL['Sprite']['prototype']['update'] = function(coI) {
            if (this['visible']) {
                if (this['position']['x'] += this['xVel'] * coI,
                this['position']['y'] += this['yVel'] * coI,
                this['yVel'] -= this['grav'] * coI,
                this['position']['z'] += this['zVel'] * coI,
                this['area']) {
                    var coJ = this['scale']['x'] / 0x2;
                    this['position']['x'] - coJ >= this['area']['x'] + this['area']['w'] ? this['position']['x'] = this['area']['x'] - this['area']['w'] - coJ : this['position']['x'] + coJ <= this['area']['x'] - this['area']['w'] && (this['position']['x'] = this['area']['x'] + this['area']['w'] + coJ),
                    this['position']['z'] - coJ >= this['area']['z'] + this['area']['l'] ? this['position']['z'] = this['area']['z'] - this['area']['l'] - coJ : this['position']['z'] + coJ <= this['area']['z'] - this['area']['l'] && (this['position']['z'] = this['area']['z'] + this['area']['l'] + coJ),
                    this['position']['y'] - coJ >= this['area']['y'] + this['area']['h'] ? this['position']['y'] = this['area']['y'] - coJ : this['position']['y'] + coJ <= this['area']['y'] && (this['position']['y'] = this['area']['y'] + this['area']['h'] + coJ);
                }
                0x0 < this['life'] ? (this['life'] -= coI,
                0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1),
                this['updC']++) : 0x0 >= this['life'] && this['updC'] && (this['visible'] = !0x1);
            }
        }
        ;
        var cpV = [Math['PI'] / 0x3, -Math['PI'] / 0x3]
          , cpW = [{
            'hole': !0x0,
            'count': 0x2,
            'grav': -0.00002,
            'scale': [0x5, 0x9],
            'speed': [0x0, 0.025],
            'spread': [-0.4, 0.4],
            'life': [0x12c, 0x1f4]
        }, {}, {
            'count': 0x1,
            'blending': 0x2,
            'scale': [0x5, 0x7],
            'speed': [0x0, 0x0],
            'spread': [0x0, 0x0],
            'life': [0x1e, 0x23]
        }, {
            'count': 0x1,
            'blending': 0x2,
            'scale': [0x7d0, 0x7d0],
            'speed': [0x0, 0x0],
            'spread': [0x0, 0x0]
        }, {
            'count': 0x4,
            'src': '0',
            'scale': [0x5, 0x6],
            'speed': [0x0, 0.01],
            'spread': [-0x1, 0x1],
            'life': [0x258, 0x320]
        }];
        coI['exports'] = function(coI) {
            var coJ, coK, coN;
            this['particles'] = [],
            this['trails'] = [],
            this['physObjs'] = [],
            this['areas'] = [],
            this['active'] = !0x0,
            this['ExplosionManager'] = new coX(),
            this['prefabs'] = [{
                'src': 'glow_0',
                'blending': 0x2,
                'spd': 0.008,
                'cnt': 2.2,
                'grav': [-0.015, -0.005],
                'scl': [0.7, 0x1],
                'dir': 0x0
            }, {
                'src': 'glow_1',
                'blending': 0x1,
                'spd': 0.003,
                'cnt': 0x8,
                'grav': [-0.2, -0.22],
                'scl': [0x1, 1.5],
                'dir': 0x0
            }, {
                'src': 'fog_0',
                'blending': 0x1,
                'spd': 0.002,
                'cnt': 0x6,
                'grav': [0x0, 0x0],
                'scl': [0x19, 0x1e],
                'dir': 0x0
            }],
            this['addTrail'] = function(coJ) {
                coN = null;
                for (var coK = 0x0; coK < this['trails']['length']; ++coK)
                    if (!this['trails'][coK]['mesh']['visible']) {
                        coN = this['trails'][coK];
                        break;
                    }
                coN || (coN = new coQ(coI),
                this['trails']['push'](coN),
                coI['scene']['add'](coN['mesh'])),
                coN['init'](coJ);
            }
            ,
            this['area'] = function(coI, coJ, coK, coL, coN, coO, coP, coQ) {
                coL /= 0x2,
                coO /= 0x2,
                this['areas']['push']({
                    'f': coQ,
                    'x': coI,
                    'y': coJ,
                    'z': coK,
                    'w': coL,
                    'h': coN,
                    'l': coO
                });
                for (var coX = 0x0; coX < coP['count']; ++coX)
                    this['add'](coP['src'], coI + coM['randInt'](-coL, coL), coJ + coM['randInt'](0x0, coN), coK + coM['randInt'](-coO, coO), coP['spd'] * Math['sin'](coP['dir']), coP['grav'] ? coM['randFloat'](coP['grav'][0x0], coP['grav'][0x1]) : 0x0, coP['spd'] * Math['cos'](coP['dir']), coM['randFloat'](coP['scl'][0x0], coP['scl'][0x1]), 0x0, 0x0, coP['blending'], this['areas'][this['areas']['length'] - 0x1]);
            }
            ,
            this['effect'] = function(coK, coN, coO, coP, coQ, coX) {
                if (this['active'] && (0x0 == coI['useDepthMap'] || '0' == coI['useDepthMap'])) {
                    coJ = cpW[coX];
                    for (var cpv = 0x0; cpv < coJ['count']; ++cpv) {
                        var cpw = coM['randFloat'](coJ['speed'][0x0], coJ['speed'][0x1])
                          , cpV = coP + coM['randFloat'](coJ['spread'][0x0], coJ['spread'][0x1])
                          , cql = coQ + coM['randFloat'](coJ['spread'][0x0], coJ['spread'][0x1]);
                        this['add'](coX, coK, coN, coO, cpw * Math['sin'](cpV) * Math['cos'](cql), cpw * Math['sin'](cql), cpw * Math['cos'](cpV) * Math['cos'](cql), coM['randFloat'](coJ['scale'][0x0], coJ['scale'][0x1]), coJ['life'] ? coM['randInt'](coJ['life'][0x0], coJ['life'][0x1]) : 0x0, coJ['grav'], coJ['blending'], null, coJ['src']);
                    }
                    coJ['hole'] && this['add'](0x1, coK, coN, coO, 0x0, 0x0, 0x0, coM['randFloat'](0.4, 0x1), 0x1388, 0x0, coL['SubtractiveBlending']);
                }
            }
            ,
            this['add'] = function(coJ, coM, coN, coO, coP, coQ, coX, cpv, cpw, cpV, cpW, cqx, cqy) {
                coK = null;
                for (var cqz = 0x0; cqz < this['particles']['length']; ++cqz)
                    if (!this['particles'][cqz]['visible'] && !this['particles'][cqz]['static']) {
                        coK = this['particles'][cqz];
                        break;
                    }
                coK || (coK = new coL['Sprite'](),
                this['particles']['push'](coK),
                coI['scene']['add'](coK)),
                this['setMaterial'](coK, cqy || coJ, cpW, !0x0),
                coK['visible'] = !0x0,
                coK['init'](coM, coN, coO, coP, coQ, coX, cpv, cpw, cpV, cqx);
            }
            ,
            this['setMaterial'] = function(coJ, coK, coN, coO) {
                coJ['material'] = coI['getMat']('particles/' + coK, {
                    'mat': coL['SpriteMaterial'],
                    'depthWrite': !0x1,
                    'blending': coN || coL['NormalBlending'],
                    'rotation': coO ? cpV[coM['randInt'](0x0, 0x2)] : 0x0
                });
            }
            ,
            this['physObj'] = function(coJ, coL, coM, coN, coO, coP, coQ, coX, cpV, cpW, cqO) {
                if (0x0 == coI['useDepthMap'] || '0' == coI['useDepthMap']) {
                    coK = null;
                    for (var cqP = 0x0; cqP < this['physObjs']['length']; ++cqP)
                        if (!this['physObjs'][cqP]['mesh']['visible']) {
                            coK = this['physObjs'][cqP];
                            break;
                        }
                    coK || (coK = new cpw(coI),
                    this['physObjs']['push'](coK),
                    coI['scene']['add'](coK['mesh'])),
                    coK['sid'] = null == cqO ? null : cqO,
                    coK['mesh']['visible'] = !0x0,
                    coK['init'](coJ, coL, coM, coN, coO, coP, cpW || cpv[coX], cpV),
                    coQ && this['showTrails'] && this['addTrail'](coK);
                }
            }
            ,
            this['disablePhys'] = function(coI) {
                for (var coJ = 0x0; coJ < this['physObjs']['length']; ++coJ)
                    this['physObjs'][coJ]['sid'] == coI && (this['physObjs'][coJ]['mesh']['visible'] = !0x1);
            }
            ,
            this['update'] = function(coI, coJ) {
                if (coJ && coJ['active'])
                    for (var coK = 0x0; coK < this['areas']['length']; ++coK)
                        this['areas'][coK]['f'] && (this['areas'][coK]['x'] = coJ['x'],
                        this['areas'][coK]['y'] = coJ['y'],
                        this['areas'][coK]['z'] = coJ['z']);
                for (coK = 0x0; coK < this['trails']['length']; ++coK)
                    this['trails'][coK]['update'](coI);
                for (coK = 0x0; coK < this['particles']['length']; ++coK)
                    this['particles'][coK]['update'](coI);
                for (coK = 0x0; coK < this['physObjs']['length']; ++coK)
                    this['physObjs'][coK]['update'](coI);
                this['ExplosionManager']['update'](coI);
            }
            ,
            this['reset'] = function() {
                this['particles']['length'] = 0x0,
                this['trails']['length'] = 0x0,
                this['physObjs']['length'] = 0x0,
                this['areas']['length'] = 0x0;
            }
            ;
        }
        ;
    }
    , function(cqV, cqW) {
        cqV['exports'] = [{
            'name': 'Red\x20Dot',
            'src': 'attach_0',
            'dotSrc': 'dot_0',
            'aimOffY': 0.16,
            'scale': 1.2
        }];
    }
    , function(cqX, cqY) {
        cqX['exports'] = [{
            'name': 'Nuke',
            'kills': 0x19,
            'activate': function(cqX, cqY) {
                return !cqX['nukeTimer'] && (cqX['incStat']('n', cqY),
                cqX['startNuke'](cqY),
                !0x0);
            }
        }];
    }
    , function(cr1, cr2) {
        cr1['exports'] = [{
            'name': 'Krunker',
            'opacity': 0.6
        }, {
            'name': 'Target',
            'opacity': 0.6
        }, {
            'name': 'GG',
            'opacity': 0.6
        }, {
            'name': 'Pumpkin',
            'opacity': 0.6
        }, {
            'name': 'Spooky',
            'opacity': 0.6
        }, {
            'name': 'Ded',
            'opacity': 0.6
        }, {
            'name': 'Sadface',
            'opacity': 0.6
        }, {
            'name': 'Laugh\x20Cry',
            'opacity': 0.7
        }, {
            'name': 'Sid',
            'opacity': 0.9
        }, {
            'name': 'Vince',
            'opacity': 0.9
        }, {
            'name': 'Kiki',
            'opacity': 0.6
        }, {
            'name': 'Ladder',
            'opacity': 0x1
        }, {
            'name': 'Dummy',
            'opacity': 0x1
        }, {
            'name': '8\x20Ball',
            'opacity': 0.6
        }, {
            'name': 'xD',
            'opacity': 0.6
        }, {
            'name': 'MMOK',
            'opacity': 0.7
        }, {
            'name': 'Madman',
            'opacity': 0.6
        }, {
            'name': 'Terminal',
            'opacity': 0.6
        }, {
            'name': 'YODO',
            'opacity': 0.6
        }, {
            'name': 'Crayon',
            'opacity': 0.6
        }, {
            'name': 'Myth',
            'opacity': 0.85
        }, {
            'name': 'SpikyJohn',
            'opacity': 0.85
        }, {
            'name': 'LevelGaming',
            'opacity': 0.9
        }, {
            'name': 'PolarAce',
            'opacity': 0.9
        }, {
            'name': 'MrsYiibby',
            'opacity': 0.85
        }, {
            'name': 'Vraxooo',
            'opacity': 0.85
        }, {
            'name': 'Jazzmittens',
            'opacity': 0.85
        }, {
            'name': 'Wolfmaan',
            'opacity': 0.85
        }, {
            'name': 'KPL',
            'opacity': 0.9
        }, {
            'name': 'BV\x20Hype',
            'opacity': 0.85
        }, {
            'name': 'LandPhil',
            'opacity': 0.85
        }, {
            'name': 'Deal\x20With\x20It',
            'opacity': 0.9
        }, {
            'name': 'Rice',
            'opacity': 0.9
        }, {
            'name': 'Lore',
            'opacity': 0.95
        }, {
            'name': 'Desu\x20Sid',
            'opacity': 0.85
        }, {
            'name': 'Anomaly',
            'opacity': 0.85
        }, {
            'name': 'FaZe',
            'opacity': 0.9
        }, {
            'name': 'Nudah',
            'opacity': 0.9
        }];
    }
    , function(cr3, cr4) {
        var cr5 = ['Double\x20Kill', 'Triple\x20Kill', 'Quad\x20Kill', 'Multi\x20Kill', 'Mega\x20Kill', 'Ultra\x20Kill', 'Super\x20Kill']
          , cr6 = [];
        cr3['exports']['reward'] = function(cr3, cr4, cr9, cra, crb) {
            cr6['length'] = 0x0;
            var crc = null == cra['weapon'] ? cr4['weapon'] : cra['weapon'];
            if (crb['mode']['weaponOrder'])
                crc['melee'] ? cr6['push']('Humiliation', null) : cr6['push']('Promotion', 0x1);
            else {
                0x1 >= crb['kills'] && cr6['push']('First\x20Blood', 0x19),
                crc['melee'] ? cr6['push']('Execution', 0x96) : (crc['kill'] ? cr6['push'](crc['kill'][0x0], crc['kill'][0x1]) : crc['scope'] && 0x1 == cr4['aimVal'] ? cr6['push']('No\x20Scope', 0x64) : !crc['scope'] || 0x0 == cr4['aimVal'] && 0xb4 < cr4['aimTime'] || 0x1 == cr4['aimDir'] ? cr6['push']('', 0x32) : cr6['push']('Quick\x20Scope', 0x4b),
                cr3['getSpin'](cr4),
                cra['headShot'] && cr6['push']('Headshot', 0x32),
                cra['wallbang'] && cr6['push']('Wallbang', 0x19),
                !crc['scope'] && 0xc8 < cra['dst'] * crc['range'] && cr6['push']('Longshot', 0x19)),
                cr9['flag'] && cr6['push']('Snatched', 0x32),
                cr4['health'] <= 0.2 * cr4['maxHealth'] && cr4['active'] && cr6['push']('Close\x20Call', 0x14),
                0x3 <= cr4['deathStreak'] && cr6['push']('Comeback', 0x19),
                0xa <= cr9['killStreak'] ? cr6['push']('Buzzkill', 0x19) : 0x5 <= cr9['killStreak'] && cr6['push']('Buzzkill', 0xa),
                0x0 < cr4['slideTimer'] && cr6['push']('Driftkill', 0x32),
                0x190 <= cr4['airTime'] && cr6['push']('Mid\x20Air', 0x19);
                for (var crd = cr5['length'] - 0x1; 0x0 <= crd; --crd)
                    if (cr4['streak'] > crd) {
                        cr6['push'](cr5[crd], 0x32 * (crd + 0x1));
                        break;
                    }
            }
            return cr6['length'] ? cr6 : null;
        }
        ,
        cr3['exports']['getScore'] = function(cr3) {
            var cr4 = null;
            if (cr3)
                for (var cr5 = 0x1; cr5 < cr3['length']; cr5 += 0x2)
                    cr3[cr5] && (cr4 += cr3[cr5]);
            return cr4;
        }
        ;
    }
    , function(crh, cri) {}
    , function(crj, crk, crl) {
        crl(0x8);
        crj['exports'] = function() {
            this['locale'] = 'en',
            this['defaultLocale'] = 'en',
            this['supported'] = ['en', 'es', 'de', 'kr'],
            this['translations'] = {};
            for (var crj = 0x0; crj < this['supported']['length']; crj++)
                this['translations'][this['supported'][crj]] = crl(0x52)('./' + this['supported'][crj] + '.js');
            this['saveLocale'] = function() {
                localStorage['setItem']('krk_lang', this['locale'] || this['defaultLocale']);
            }
            ,
            this['setLocale'] = function(crj) {
                -0x1 < this['supported']['indexOf'](crj) && (this['locale'] = crj),
                this['saveLocale']();
            }
            ,
            this['setLocaleFromStorage'] = function() {
                'undefined' != typeof Storage && this['setLocale'](localStorage['getItem']('krk_lang'));
            }
            ,
            this['setLocaleFromStorage'](),
            this['encode'] = function(crj) {
                for (var crk = [], crl = crj['length'] - 0x1; 0x0 <= crl; crl--)
                    crk['unshift'](['&#', crj[crl]['charCodeAt'](), ';']['join'](''));
                return crk['join']('');
            }
            ,
            this['get'] = function(crj) {
                let crk = this['translations'][this['locale']][crj] || this['translations'][this['defaultLocale']][crj] || 'UNLOCALIZED\x20STRING';
                for (var crl = 0x1; crl < arguments['length']; crl++)
                    crk = crk['replace']('{' + (crl - 0x1) + '}', arguments[crl]);
                return crk;
            }
            ,
            this['t'] = this['get'];
        }
        ;
    }
    , function(cru, crv, crw) {
        var crx = {
            './de.js': 0x53,
            './en.js': 0x54,
            './es.js': 0x55,
            './kr.js': 0x56
        };
        function cry(cru) {
            var crv = crB(cru);
            return crw(crv);
        }
        function crB(cru) {
            if (!crw['o'](crx, cru)) {
                var crv = new Error('Cannot\x20find\x20module\x20\x27' + cru + '\x27');
                throw crv['code'] = 'MODULE_NOT_FOUND',
                crv;
            }
            return crx[cru];
        }
        cry['keys'] = function() {
            return Object['keys'](crx);
        }
        ,
        cry['resolve'] = crB,
        cru['exports'] = cry,
        cry['id'] = 0x52;
    }
    , function(crE, crF) {
        crE['exports'] = {
            'menu.btn.profile': 'Profil',
            'menu.btn.shop': 'Shop',
            'menu.btn.social': 'Social',
            'menu.btn.maps': 'Karten',
            'menu.btn.mods': 'Mods',
            'menu.btn.settings': 'Einstellungen',
            'menu.btn.customize': 'Anpassen',
            'menu.btn.invite': 'Einladen',
            'menu.btn.invite.clicked': 'Kopiert',
            'menu.btn.join': 'Beitreten',
            'menu.btn.host': 'Gastgeber\x20Spiel',
            'menu.btn.browser': 'Server\x20Browser',
            'generic.wait': 'Bitte\x20warten...',
            'generic.loading': 'LÄDT...',
            'generic.connecting': 'VERBINDET...',
            'generic.none': 'Nichts',
            'generic.select': 'Auswählen',
            'generic.delete': 'Löschen',
            'generic.save': 'Speichern',
            'generic.load': 'Laden',
            'generic.search': 'Suchen',
            'generic.leave': 'Verlassen',
            'generic.default': 'Voreinstellung',
            'generic.submit': 'Senden',
            'generic.create': 'Erstellen',
            'generic.failed': 'Fehlgeschlagen',
            'generic.success': 'Erfolgt!',
            'generic.name': 'Name',
            'generic.level': 'Level',
            'generic.score': 'Spielstand',
            'generic.off': 'Aus',
            'generic.score': 'Score',
            'generic.victory': 'SIEG',
            'generic.defeat': 'NIEDERLAGE',
            'generic.follow': 'Folgen',
            'generic.unfollow': 'Nicht\x20mehr\x20folgen',
            'generic.followers': 'Followers',
            'generic.following': 'folgt',
            'generic.games': 'Spiele',
            'generic.wins': 'Siege',
            'generic.clan': 'Clan',
            'generic.kills': 'Abschüsse',
            'generic.deaths': 'Tode',
            'generic.kdr': 'KDR',
            'generic.games.played': 'gespielte\x20Spiele',
            'generic.games.won': 'gewonnene\x20Spiele',
            'generic.timep': 'Spielzeit',
            'generic.time': 'Zeit',
            'generic.logout': 'Abmelden',
            'generic.logout.sessions': 'Abmelden\x20aus\x20allen\x20Sitzungen',
            'generic.username': 'Benutzername\x20eingeben',
            'generic.password': 'Passwort\x20eingeben',
            'generic.register': 'Registrieren',
            'generic.login': 'Einloggen',
            'generic.accuracy': 'Genauigkeit',
            'player.waiting': 'Warten\x20auf\x20Spieler',
            'player.died': 'Du\x20bist\x20gestorben',
            'player.killed': 'getötet\x20von',
            'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Abschuss-Strähne',
            'player.inactive': 'Wegen\x20Inaktivität\x20entfernt',
            'player.disconnect': 'NICHT\x20VERBUNDEN',
            'timer.end': 'Nächste\x20Runde\x20in\x20{0}',
            'leaderboard.empty': 'Leerer\x20Warteraum',
            'popup.checkpoint': 'Kontrollpunkt!',
            'app.play': 'KLICKEN\x20UM\x20ZU\x20SPIELEN',
            'app.play.controller': 'START\x20DRÜCKEN',
            'purchase.error': 'Fehler\x20aufgetreten',
            'purchase.error.click': 'Hier\x20klicken</a>\x20und\x20nochmal\x20versuchen!',
            'purchase.error.limit': 'Du\x20hast\x20möglicherweise\x20dein\x20tägliches\x20Transaktionslimit\x20überschritten.',
            'settings.reset': 'Einstellungen\x20zurücksetzen',
            'settings.reset.confirm': 'Bist\x20Du\x20sicher,\x20dass\x20du\x20all\x20Deine\x20Einstellungen\x20zurücksetzen\x20willst?\x20Dadurch\x20wird\x20auch\x20die\x20Seite\x20neu\x20geladen',
            'settings.controls.change': 'Kontrollen\x20ändern',
            'settings.controls.press': 'Irgendeine\x20Taste\x20drücken',
            'settings.server.header': 'Server',
            'settings.server.region': 'Voreinstellung\x20Region',
            'settings.quality.header': 'Qualität',
            'settings.quality.res': 'Auflösung',
            'settings.quality.part': 'Partikel',
            'settings.quality.trails': 'Geschossspuren',
            'settings.quality.mflash': 'Mündungsfeuer',
            'settings.interface.header': 'Schnittstelle',
            'settings.interface.ui': 'Benutzeroberfläche\x20anzeigen',
            'settings.interface.hp': 'Dynamische\x20HP\x20Balken',
            'settings.interface.chat': 'Chat\x20Box\x20anzeigen',
            'settings.interface.kills': 'Abschuss-Liste\x20anzeigen',
            'settings.interface.messages': 'Spielernachrichten\x20anzeigen',
            'settings.interface.unboxings': 'Ausgepackte\x20Kisten\x20anzeigen',
            'settings.interface.ping': 'Ping\x20anzeigen',
            'settings.interface.fps': 'FPS-Rate\x20anzeigen',
            'settings.interface.deaths': 'Tode\x20anzeigen',
            'settings.crosshair.header': 'Fadenkreuz',
            'settings.crosshair.type': 'Typ',
            'settings.crosshair.type.2': 'Benutzerdefiniert',
            'settings.crosshair.type.3': 'Mehrschichtig',
            'settings.crosshair.type.4': 'Bild',
            'settings.crosshair.style': 'Stil',
            'settings.crosshair.style.0': 'Kreuz',
            'settings.crosshair.style.1': 'Hohler\x20Kreis',
            'settings.crosshair.style.2': 'Voller\x20Kreis',
            'settings.crosshair.style.3': 'Hohles\x20Quadrat',
            'settings.crosshair.style.4': 'Volles\x20Quadrat',
            'settings.crosshair.image': 'Bild',
            'settings.crosshair.image.paste': 'Fadenkreuz-Bild',
            'settings.crosshair.always': 'Immer\x20anzeigen',
            'settings.crosshair.color': 'Farbe',
            'settings.crosshair.shadow': 'Schatten',
            'settings.crosshair.size': 'Größe',
            'settings.crosshair.thickness': 'Dicke',
            'settings.onKillS.style.0': 'Voreinstellung',
            'settings.onKillS.style.1': 'Auflösung\x20reduzieren',
            'settings.onKillS.style.2': 'FOV\x20reduzieren',
            'settings.onKillS.style.3': 'FOV\x20erhöhen',
            'settings.gameplay.header': 'Spielverlauf',
            'settings.gameplay.sensitivity': 'Empfindlichkeit',
            'settings.gameplay.aimsens': 'Zielempfindlichkeit',
            'settings.gameplay.fov': 'Sichtfeld',
            'settings.gameplay.fps': 'FOV\x20für\x20Waffen',
            'settings.gameplay.streamer': 'Streamer\x20Modus',
            'settings.gameplay.challenge': 'Challenge\x20Modus',
            'settings.gameplay.invert': 'Y-Achse\x20umkehren',
            'settings.gameplay.onkillS': 'Beim\x20Abschuss',
            'settings.audio.header': 'Audio',
            'settings.audio.sound': 'Ton',
            'settings.audio.voice': 'Lautstärke\x20Stimmen',
            'settings.editing.header': 'Bearbeiten',
            'settings.editing.weapon': 'Waffe\x20anzeigen',
            'settings.editing.bobbing': 'Waffe\x20rotieren',
            'settings.editing.depth': 'Todeskarte',
            'settings.editing.green': 'Grüner\x20Bildschirm',
            'settings.shaders.header': 'Schatten',
            'settings.shaders.ambient': 'Umgebungsschatten',
            'settings.mods.header': 'Mods',
            'settings.mods.load': 'Mods\x20laden',
            'settings.mods.auto': 'Mods\x20automatisch\x20laden',
            'settings.mods.borders': 'Zielfernrohr-Begrenzung',
            'settings.mods.scope': 'Zielfernrohr-Bild',
            'settings.mods.scope.paste': 'Zielfernrohr-Bild\x20URL',
            'settings.mods.dot': 'Laserpunkt-Bild',
            'settings.mods.dot.paste': 'Laserpunkt-Bild\x20URL',
            'settings.mods.endmessage': 'Match\x20Endnachricht',
            'settings.mods.profile': 'Profil-Bild',
            'settings.mods.profile.paste': 'Profil-Bild\x20URL',
            'windows.settings.header': 'Spieleinstellungen',
            'windows.servers.header': 'Server\x20Browser',
            'windows.servers.none': 'Keine\x20Spiele\x20zum\x20Beitreten\x20gefunden...',
            'windows.servers.host': '+\x20Gastgeber-Spiel',
            'windows.servers.hide': 'Volle\x20ausblenden',
            'windows.servers.online': '{0}\x20gesamt\x20online',
            'windows.loadout.header': 'Auslastung\x20ändern',
            'windows.loadout.class': 'Klasse',
            'windows.loadout.primary': 'Primär',
            'windows.loadout.secondary': 'Sekundär',
            'windows.loadout.melee': 'Nahkampf',
            'windows.loadout.hat': 'Hut',
            'windows.loadout.body': 'Körper',
            'windows.loadout.spray': 'Sprühdose',
            'windows.mods.header': 'Mods\x20Manager',
            'windows.mods.guide': 'Mod\x20Guide',
            'windows.mods.list': 'Mods\x20Liste',
            'windows.mods.publish': 'Mods\x20Veröffentlichen',
            'windows.mods.viewer': 'Ansicht',
            'windows.mods.drop': 'Mods\x20hier\x20hinziehen\x20oder\x20klicken',
            'windows.mods.paste': 'Mod-Url\x20einfügen',
            'windows.mods.load': 'Mods\x20laden',
            'windows.account.header': 'Konto',
            'windows.account.recover': 'Kontaktiere\x20<a>krunker@yendis.ch</a>\x20zur\x20Wiederherstellung\x20eines\x20Kontos',
            'windows.class.header': 'Klasse\x20auswählen',
            'windows.controls.header': 'Kontrollen\x20bearbeiten',
            'windows.controls.forward': 'Vorwärts',
            'windows.controls.backward': 'Rückwärts',
            'windows.controls.left': 'Links',
            'windows.controls.right': 'Rechts',
            'windows.controls.reload': 'Neu\x20laden',
            'windows.controls.aim': 'Zielen',
            'windows.controls.inspect': 'Untersuchen',
            'windows.controls.spray': 'Sprühen',
            'windows.controls.jump': 'Springen',
            'windows.controls.crouch': 'Kriechen',
            'windows.controls.next': 'Nächste\x20Waffe',
            'windows.controls.previous': 'Vorherige\x20Waffe',
            'windows.controls.chat': 'Chat',
            'windows.controls.voice': 'Stimme',
            'windows.controls.list': 'Spieler\x20Liste',
            'windows.controls.interact': 'Interagieren',
            'windows.controls.drop': 'Fallenlassen',
            'windows.host.header': 'Individuelles\x20Gastgeber-Spiel',
            'windows.host.maps': 'Karten\x20auswählen',
            'windows.host.cmaps': 'Community\x20Karte',
            'windows.host.raw': 'Karten-Rohdaten',
            'windows.host.modes': 'Modi\x20auswählen',
            'windows.host.classes': 'Klassen\x20auswählen',
            'windows.host.settings': 'Server\x20Einstellungen',
            'windows.host.preset': 'Gastgeber\x20Voreinstellungen',
            'windows.host.preset.load': 'Voreinstellung\x20laden...',
            'windows.host.preset.name': 'Name\x20Voreinstellung',
            'windows.host.start': 'Spiel\x20starten',
            'windows.spray.header': 'Sprühdose\x20auswählen',
            'windows.spray.default': 'Voreingestellte\x20Sprühdose',
            'windows.maps.header': 'Benutzerdefinierte\x20Karten',
            'windows.maps.none': 'Keine\x20Karten\x20gefunden!',
            'windows.maps.name': 'Kartenname',
            'windows.maps.editor': 'Karteneditor',
            'windows.maps.publish': 'Karte\x20veröffentlichen',
            'windows.maps.community': 'Karten\x20Community',
            'windows.publish.map.header': 'Karte\x20veröffentlichen',
            'windows.publish.map.thumbnail': 'Keine\x20Vorschauansicht',
            'windows.publish.map.paste': 'Kartendaten\x20einfügen',
            'windows.publish.map.update': 'Veröffentlichen/Aktualisieren',
            'windows.publish.map.login': 'Anmelden</a>\x20um\x20Karten\x20zu\x20erstellen\x20und\x20hochzuladen!',
            'windows.theatre.header': 'Theater\x20Modus',
            'windows.theatre.record': 'Aufzeichnung\x20aktivieren',
            'windows.theatre.key': 'Aufzeichnungstaste',
            'windows.clans.header': 'Clans',
            'windows.clans.members': 'Mitglieder\x20({0})',
            'windows.clans.requests': 'Anfragen',
            'windows.clans.requests.none': 'Keine\x20Anfragen',
            'windows.clans.page': '[{0}]\x20Clan\x20Seite',
            'windows.clans.create': 'Clan\x20erstellen',
            'windows.clans.name': 'Clan\x20Name',
            'windows.clans.view': 'Clans\x20ansehen',
            'windows.clans.join': 'Clan\x20beitreten',
            'windows.clans.login': 'Anmelden</a>\x20um\x20Clan\x20zu\x20erstellen\x20oder\x20beizutreten!',
            'windows.store.header': 'Shop',
            'windows.store.spin': '{0}\x20Drehung(en)',
            'windows.store.agree': 'Mit\x20dem\x20Kauf\x20erklärst\x20Du\x20Dich\x20mit\x20den\x20{0}Geschäftsbedingungen\x20einverstanden.',
            'windows.store.purchase': 'KR\x20kaufen',
            'windows.store.market': 'Marktplatz',
            'windows.store.market2': 'Krunker\x20Markt',
            'windows.store.buy': 'Gegenstände\x20kaufen\x20und\x20verkaufen\x20auf\x20dem',
            'windows.store.wheels': 'Preisräder',
            'windows.store.unlock': 'Neue\x20Waffenoberflächen\x20und\x20Gegenstände\x20freischalten',
            'windows.store.amount': '{0}\x20KR\x20in\x20Konto',
            'windows.store.login': 'Anmelden</a>\x20um\x20Gegenstände\x20aus\x20dem\x20Shop\x20zu\x20kaufen\x20und\x20freizuschalten!',
            'windows.store.purchasing': 'Kauf\x20wird\x20durchgeführt...',
            'windows.store.unboxed': '{0}{1}\x20ausgepackt',
            'windows.skin.header': 'Oberfläche\x20auswählen',
            'windows.hat.header': 'Hut\x20auswählen',
            'windows.back.header': 'Rückseite\x20auswählen',
            'windows.mods.community.header': 'Community\x20Mods',
            'windows.mods.community.fav': 'Deine\x20Favoriten',
            'windows.mods.community.new': 'Neue\x20Mods',
            'windows.mods.community.hot': 'Heiß',
            'windows.mods.community.name': 'Mod-Name',
            'windows.mods.community.none': 'Keine\x20Mods\x20gefunden!',
            'windows.publish.mod.header': 'Mods\x20veröffentlichen',
            'windows.publish.mod.thumbnail': 'Keine\x20Vorschauansicht',
            'windows.publish.mod.name': 'Mods-Name',
            'windows.publish.mod.paste': 'Mods-Url',
            'windows.publish.mod.update': 'Veröffentlichen/Aktualisieren',
            'windows.publish.mod.login': '<a>Anmelden</a>\x20um\x20Mods\x20zu\x20erstellen\x20und\x20hochzuladen!',
            'windows.secondary.header': 'Sekundäre\x20auswählen',
            'windows.secondary.unlocked': 'Freigeschaltet\x20bei\x20Level\x20{0}',
            'windows.secondary.req': 'Erfordert\x20Level\x20{0}',
            'windows.advertise.header': 'Inserieren',
            'windows.players.header': 'Spieler\x20Liste',
            'windows.players.none': 'Keine\x20Spieler\x20im\x20Moment...',
            'windows.join.header': 'Beitreten',
            'windows.join.code': 'Spiel\x20URL/Code\x20eingeben',
            'windows.client.header': 'Client',
            'windows.client.windows': 'Windows\x20Installer',
            'windows.client.mac': 'macOS\x20Installer',
            'windows.client.linux': 'Linux\x20Installer',
            'thumbnail.upload.limit': 'Fehlgeschlagen.\x2040kb\x20Limit\x20für\x20Vorschauansicht',
            'thumbnail.upload.error': 'Fehler\x20Vorschauansicht',
            'mod.extracting': 'entpackt\x20{0}/{1}',
            'mod.disabled': 'Mods\x20deaktiviert',
            'mod.error': 'Mod\x20Fehler!',
            'mod.loading': 'Mod\x20Lädt...',
            'mod.invalid': 'Ungültige\x20Mod-Datei!',
            'matchmaker.full': 'VOLL',
            'matchmaker.full2': 'Das\x20Spiel\x20ist\x20voll.',
            'matchmaker.none': 'Spiel\x20nicht\x20gefunden.',
            'adblocker': 'Schalte\x20Deinen\x20AdBlocker\x20aus\x20um\x20gratis\x20Krunkies\x20zu\x20erhalten.',
            'streamers.views': '{0}\x20Betrachter',
            'streamers.none': 'Keine\x20aktiven\x20Streams!',
            'error.extentions': 'Schalte\x20Erweiterungen\x20aus,\x20falls\x20Du\x20welche\x20hast.',
            'error.seek': 'Klicke\x20und\x20versuche,\x20eine\x20neues\x20Spiel\x20zu\x20finden.',
            'custom.map.missing': 'Wähle\x20mindestens\x20eine\x20Karte\x20aus',
            'custom.mode.missing': 'Wähle\x20mindestens\x20einen\x20Modus\x20aus',
            'custom.class.missing': 'Wähle\x20mindestens\x20eine\x20Klasse\x20aus',
            'server.config.maxPlayers': 'Spieler',
            'server.config.minPlayers': 'Mindestanzahl\x20Spieler',
            'server.config.lives': 'Leben',
            'server.config.gameTime': 'Minuten',
            'server.config.gravMlt': 'Schwerkraft',
            'server.config.jumpMlt': 'Sprungkraft',
            'server.config.deltaMlt': 'Zeitskala',
            'server.config.strafeSpd': 'Strafe-Geschwindigkeit',
            'server.config.healthMlt': 'Leben-Multiplikator',
            'server.config.impulseMlt': 'Waffen-Impuls',
            'server.config.nameTeam1': 'Team\x201\x20Name',
            'server.config.nameTeam2': 'Team\x202\x20Name',
            'server.config.selTeam': 'Team\x20auswählen',
            'server.config.allowSpect': 'Zuschauen',
            'server.config.killRewards': 'Abschussprämien',
            'server.config.canSlide': 'Rutschen',
            'server.config.autoJump': 'Automatisch\x20Springen',
            'server.config.thirdPerson': 'Dritte\x20Person',
            'server.config.nameTags': 'Nametags\x20ausblenden',
            'server.config.private': 'Privat',
            'social.login': 'Anmelden/Registrieren',
            'social.login.failed': 'Anmeldung\x20fehlgeschlagen',
            'social.login.buy': 'Zum\x20Kaufen\x20anmelden',
            'social.login.sell': 'Zum\x20Verkaufen\x20anmelden',
            'social.login.proccessing': 'Anmeldung\x20läuft...',
            'social.since': 'Seit',
            'social.user.maps': 'Benutzerkarten',
            'social.user.mods': 'Benutzer\x20Mods',
            'social.maps.none': 'Keine\x20Karten\x20gefunden...',
            'social.market.head': 'Gegenstand\x20Kopf',
            'social.market.back': 'Gegenstand\x20Rücken',
            'social.market.none': 'Keine\x20Gegenstände\x20gefunden',
            'social.market.grace': 'bereit\x20in\x20{0}',
            'social.market.sort': 'Filtern/Sortieren',
            'social.market.filter': 'Suchen',
            'social.market.price.high': 'Höchster\x20Preis',
            'social.market.price.low': 'Niedrigster\x20Preis',
            'social.market.price.list': 'Preis\x20anzeigen\x20in',
            'social.market.searching': 'Suchen',
            'social.market.listed': 'angezeigt\x20vor\x20{0}',
            'social.market.list': 'Gegenstand\x20anzeigen',
            'social.market.unlist': 'Nicht\x20mehr\x20anzeigen',
            'social.market.unlisting': 'Gegenstand\x20wird\x20nicht\x20mehr\x20angezeigt...',
            'social.market.posting': 'Gegenstand\x20wird\x20gepostet...',
            'social.market.req': 'Level\x20{0}\x20erforderlich',
            'social.market.cant': 'Kannst\x20Du\x20Dir\x20nicht\x20leisten',
            'social.market.purchase': 'Kaufen',
            'social.market.fee': 'Keine\x20Gebühr\x20fürs\x20Listen',
            'social.market.failed': 'Fehlgeschlagen.\x20Versuche\x20es\x20erneut.'
        };
    }
    , function(crG, crH) {
        crG['exports'] = {
            'menu.btn.ranked': 'Ranked',
            'menu.btn.shop': 'Shop',
            'menu.btn.social': 'Social',
            'menu.btn.maps': 'Maps',
            'menu.btn.mods': 'Mods',
            'menu.btn.settings': 'Settings',
            'menu.btn.customize': 'Customize',
            'menu.btn.invite': 'Invite',
            'menu.btn.invite.clicked': 'Copied',
            'menu.btn.join': 'Join',
            'menu.btn.host': 'Host\x20Game',
            'menu.btn.browser': 'Server\x20Browser',
            'generic.wait': 'Please\x20wait...',
            'generic.loading': 'LOADING...',
            'generic.connecting': 'CONNECTING...',
            'generic.none': 'None',
            'generic.select': 'Select',
            'generic.delete': 'Delete',
            'generic.save': 'Save',
            'generic.load': 'Load',
            'generic.search': 'Search',
            'generic.leave': 'Leave',
            'generic.default': 'Default',
            'generic.random': 'Random',
            'generic.submit': 'Submit',
            'generic.create': 'Create',
            'generic.failed': 'Failed',
            'generic.success': 'Success!',
            'generic.name': 'Name',
            'generic.level': 'Level',
            'generic.score': 'Score',
            'generic.off': 'Off',
            'generic.score': 'Score',
            'generic.victory': 'VICTORY',
            'generic.defeat': 'DEFEAT',
            'generic.matchover': 'MATCH\x20OVER',
            'generic.follow': 'Follow',
            'generic.unfollow': 'Unfollow',
            'generic.followers': 'Followers',
            'generic.following': 'following',
            'generic.games': 'Games',
            'generic.wins': 'Wins',
            'generic.clan': 'Clan',
            'generic.kills': 'Kills',
            'generic.deaths': 'Deaths',
            'generic.kdr': 'KDR',
            'generic.games.played': 'Games\x20Played',
            'generic.games.won': 'Games\x20Won',
            'generic.timep': 'Time\x20Played',
            'generic.time': 'Time',
            'generic.logout': 'Logout',
            'generic.logout.sessions': 'Logout\x20of\x20all\x20Sessions',
            'generic.username': 'Enter\x20Username',
            'generic.password': 'Enter\x20Password',
            'generic.register': 'Register',
            'generic.login': 'Login',
            'generic.accuracy': 'Accuracy',
            'player.waiting': 'waiting\x20for\x20players',
            'player.died': 'You\x20died',
            'player.killed': 'Killed\x20By',
            'player.killstreak': '{0}\x20on\x20a\x20{1}\x20Kill\x20Streak',
            'player.inactive': 'Kicked\x20for\x20inactivity',
            'player.disconnect': 'DISCONNECTED',
            'timer.end': 'Next\x20Round\x20in\x20{0}',
            'leaderboard.empty': 'Empty\x20Lobby',
            'popup.checkpoint': 'Checkpoint!',
            'app.play': 'CLICK\x20TO\x20PLAY',
            'app.play.controller': 'PRESS\x20START',
            'purchase.error': 'Error\x20occurred',
            'purchase.error.click': 'click\x20here</a>\x20and\x20try\x20again!',
            'purchase.error.limit': 'You\x20may\x20have\x20exceeded\x20your\x20daily\x20transaction\x20limit',
            'settings.reset': 'Reset',
            'settings.reset.confirm': 'Are\x20you\x20sure\x20you\x20want\x20to\x20reset\x20all\x20your\x20settings?\x20This\x20will\x20also\x20refresh\x20the\x20page',
            'settings.import': 'Import',
            'settings.export': 'Export',
            'settings.controls.change': 'Change\x20Controls',
            'settings.controls.press': 'Press\x20any\x20Key',
            'settings.local.header': 'Localization',
            'settings.local.region': 'Default\x20Region',
            'settings.local.lang': 'Language',
            'settings.quality.header': 'Performance',
            'settings.quality.updRate': 'Frame\x20Cap',
            'settings.quality.res': 'Resolution',
            'settings.quality.part': 'Particles',
            'settings.quality.shadows': 'Shadows',
            'settings.quality.trails': 'Bullet\x20Trails',
            'settings.quality.mflash': 'Muzzle\x20Flash',
            'settings.quality.flap': 'Sniper\x20Flap',
            'settings.quality.lowSpec': 'Low\x20Spec',
            'settings.quality.ambient': 'Ambient\x20Shading',
            'settings.interface.header': 'Interface',
            'settings.interface.scale': 'UI\x20Scale',
            'settings.interface.ui': 'Show\x20UI',
            'settings.interface.hp': 'Dynamic\x20HP\x20Bars',
            'settings.interface.dmg': 'Show\x20Damage',
            'settings.interface.dmgCol': 'Damage\x20Color',
            'settings.interface.dmgScale': 'Damage\x20Scale',
            'settings.interface.chat': 'Show\x20Chat\x20Box',
            'settings.interface.kills': 'Show\x20Kill\x20Feed',
            'settings.interface.messages': 'Show\x20Player\x20Messages',
            'settings.interface.unboxings': 'Show\x20Unboxings',
            'settings.interface.ping': 'Show\x20Ping',
            'settings.interface.fps': 'Show\x20FPS',
            'settings.interface.deaths': 'Show\x20Deaths',
            'settings.interface.speed': 'Show\x20Movement\x20Speed',
            'settings.interface.medals': 'Show\x20Medals',
            'settings.crosshair.header': 'Crosshair',
            'settings.crosshair.type': 'Type',
            'settings.crosshair.type.2': 'Custom',
            'settings.crosshair.type.3': 'Layered',
            'settings.crosshair.type.4': 'Image',
            'settings.crosshair.style': 'Style',
            'settings.crosshair.style.0': 'Cross',
            'settings.crosshair.style.1': 'Hollow\x20Circle',
            'settings.crosshair.style.2': 'Solid\x20Circle',
            'settings.crosshair.style.3': 'Hollow\x20Square',
            'settings.crosshair.style.4': 'Solid\x20Square',
            'settings.crosshair.image': 'Image',
            'settings.crosshair.image.paste': 'Crosshair\x20Image',
            'settings.crosshair.always': 'Always\x20Show',
            'settings.crosshair.color': 'Color',
            'settings.crosshair.shadow': 'Shadow',
            'settings.crosshair.size': 'Size',
            'settings.crosshair.thickness': 'Thickness',
            'settings.onKillS.style.0': 'Default',
            'settings.onKillS.style.1': 'Reduce\x20Resolution',
            'settings.onKillS.style.2': 'Reduce\x20FOV',
            'settings.onKillS.style.3': 'Increase\x20FOV',
            'settings.gameplay.header': 'Gameplay',
            'settings.gameplay.sensitivity': 'Sensitivity',
            'settings.gameplay.aimsens': 'Aim\x20Sensitivity',
            'settings.gameplay.fov': 'Field\x20of\x20View',
            'settings.gameplay.lagComp': 'Lag\x20Compensation',
            'settings.gameplay.streamer': 'Streamer\x20Mode',
            'settings.gameplay.challenge': 'Challenge\x20Mode',
            'settings.gameplay.invert': 'Invert\x20Y-Axis',
            'settings.gameplay.onkillS': 'On\x20Kill',
            'settings.gameplay.scrollDir': 'Scroll\x20Direction',
            'settings.gameplay.hideNames': 'Nametags',
            'settings.gameplay.hideNames.team': 'Team\x20Only',
            'settings.gameplay.hideNames.enemy': 'Enemy\x20Only',
            'settings.gameplay.hideNames.all': 'Everyone',
            'settings.audio.header': 'Audio',
            'settings.audio.sound': 'Sound',
            'settings.audio.voice': 'Voice\x20Volume',
            'settings.viewmodel.header': 'View\x20Model',
            'settings.viewmodel.fps': 'Weapon\x20FOV',
            'settings.viewmodel.bobbing': 'Weapon\x20Bobbing',
            'settings.viewmodel.leaning': 'Weapon\x20Leaning',
            'settings.viewmodel.show.primary': 'Show\x20Primary',
            'settings.viewmodel.show.secondary': 'Show\x20Secondary',
            'settings.viewmodel.show.melee': 'Show\x20Melee',
            'settings.viewmodel.show.ads': 'Hide\x20Weapon\x20on\x20ADS',
            'settings.viewmodel.xOff': 'Weapon\x20X\x20Offset',
            'settings.viewmodel.yOff': 'Weapon\x20Y\x20Offset',
            'settings.viewmodel.zOff': 'Weapon\x20Z\x20Offset',
            'settings.editing.header': 'Editing',
            'settings.editing.health.high': 'HUD\x20Health\x20High',
            'settings.editing.health.low': 'HUD\x20Health\x20Low',
            'settings.editing.score.color': 'Popup\x20Score\x20Color',
            'settings.editing.score.scale': 'Popup\x20Score\x20Scale',
            'settings.editing.score.shadow': 'Popup\x20Score\x20Shadow',
            'settings.editing.saturation': 'Saturation',
            'settings.editing.hue': 'Color\x20Hue',
            'settings.editing.vignette': 'Vignette',
            'settings.editing.depth': 'Depth\x20Map',
            'settings.editing.green': 'Green\x20Screen',
            'settings.mods.header': 'Customization',
            'settings.mods.load': 'Load\x20Mods',
            'settings.mods.auto': 'Auto-Load\x20Mod',
            'settings.mods.borders': 'Scope\x20Borders',
            'settings.mods.scope': 'Scope\x20Image',
            'settings.mods.scope.paste': 'Scope\x20Image\x20URL',
            'settings.mods.hitmarker': 'Hitmarker\x20Image',
            'settings.mods.hitmarker.paste': 'Hitmarker\x20Image\x20URL',
            'settings.mods.dot': 'Red\x20Dot\x20Image',
            'settings.mods.dot.paste': 'Red\x20Dot\x20URL',
            'settings.mods.endmessage': 'Match\x20End\x20Message',
            'settings.mods.profile': 'Profile\x20Image',
            'settings.mods.profile.paste': 'Profile\x20Image\x20URL',
            'settings.mods.ammo': 'Ammo\x20Icon\x20Image',
            'settings.mods.ammo.paste': 'Ammo\x20Icon\x20Image\x20URL',
            'settings.mods.kills': 'Kills\x20Icon\x20Image',
            'settings.mods.kills.paste': 'Kills\x20Icon\x20Image\x20URL',
            'settings.mods.deaths': 'Deaths\x20Icon\x20Image',
            'settings.mods.deaths.paste': 'Deaths\x20Icon\x20Image\x20URL',
            'settings.mods.timer': 'Timer\x20Icon\x20Image',
            'settings.mods.timer.paste': 'Timer\x20Icon\x20Image\x20URL',
            'settings.mods.damage': 'Damage\x20Overlay\x20Image',
            'settings.mods.damage.paste': 'Damage\x20Overlay\x20Image\x20URL',
            'settings.mods.overlay': 'Game\x20Overlay\x20Image',
            'settings.mods.overlay.paste': 'Game\x20Overlay\x20Image\x20URL',
            'windows.settings.header': 'Game\x20Settings',
            'windows.servers.header': 'Server\x20Browser',
            'windows.servers.none': 'No\x20Joinable\x20Games\x20Found...',
            'windows.servers.host': '+\x20Host\x20Game',
            'windows.servers.hide': 'Hide\x20Full',
            'windows.servers.priority': 'Region\x20Priority',
            'windows.servers.online': '{0}\x20total\x20online',
            'windows.loadout.header': 'Change\x20Loadout',
            'windows.loadout.class': 'Class',
            'windows.loadout.primary': 'Primary',
            'windows.loadout.secondary': 'Secondary',
            'windows.loadout.melee': 'Melee',
            'windows.loadout.hat': 'Hat',
            'windows.loadout.body': 'Body',
            'windows.loadout.spray': 'Spray',
            'windows.loadout.color.skin': 'Skin\x20Color',
            'windows.mods.header': 'Mod\x20Manager',
            'windows.mods.guide': 'Mod\x20Guide',
            'windows.mods.list': 'Mods\x20List',
            'windows.mods.publish': 'Publish\x20Mod',
            'windows.mods.viewer': 'Viewer',
            'windows.mods.drop': 'drop\x20mod\x20file\x20here\x20or\x20click',
            'windows.mods.paste': 'Paste\x20Mod\x20Url',
            'windows.mods.load': 'Load\x20Mod',
            'windows.account.header': 'Account',
            'windows.account.recover': 'To\x20recover\x20an\x20account\x20contact\x20<a>krunker@yendis.ch</a>',
            'windows.class.header': 'Select\x20Class',
            'windows.controls.header': 'Change\x20Controls',
            'windows.controls.forward': 'Forward',
            'windows.controls.backward': 'Backward',
            'windows.controls.left': 'Left',
            'windows.controls.right': 'Right',
            'windows.controls.reload': 'Reload',
            'windows.controls.aim': 'Aim',
            'windows.controls.inspect': 'Inspect',
            'windows.controls.spray': 'Spray',
            'windows.controls.jump': 'Jump',
            'windows.controls.crouch': 'Crouch',
            'windows.controls.prim': 'Primary\x20Weapon',
            'windows.controls.swap': 'Secondary\x20Weapon',
            'windows.controls.melee': 'Melee\x20Weapon',
            'windows.controls.chat': 'Chat',
            'windows.controls.voice': 'Voice',
            'windows.controls.list': 'Player\x20List',
            'windows.controls.interact': 'Interact',
            'windows.controls.drop': 'Drop',
            'windows.controls.streak0': 'Streak\x201',
            'windows.controls.streak1': 'Streak\x202',
            'windows.controls.streak2': 'Streak\x203',
            'windows.controls.streak3': 'Streak\x204',
            'windows.host.header': 'Host\x20Custom\x20Game',
            'windows.host.maps': 'Select\x20Maps',
            'windows.host.cmaps': 'Community\x20Map',
            'windows.host.raw': 'Raw\x20Map\x20Data',
            'windows.host.modes': 'Select\x20Modes',
            'windows.host.classes': 'Select\x20Classes',
            'windows.host.settings': 'Server\x20Settings',
            'windows.host.preset': 'Host\x20Presets',
            'windows.host.preset.load': 'Loading\x20Preset...',
            'windows.host.preset.name': 'Preset\x20name',
            'windows.host.start': 'Start\x20Game',
            'windows.host.rehost': 'Start\x20Game\x20(Bring\x20Players)',
            'windows.spray.header': 'Select\x20Spray',
            'windows.spray.default': 'Default\x20Spray',
            'windows.maps.header': 'Custom\x20Maps',
            'windows.maps.none': 'No\x20maps\x20found!',
            'windows.maps.name': 'Map\x20Name',
            'windows.maps.editor': 'Map\x20Editor',
            'windows.maps.publish': 'Publish\x20Map',
            'windows.maps.community': 'Map\x20Community',
            'windows.publish.map.header': 'Publish\x20Map',
            'windows.publish.map.thumbnail': 'No\x20Thumbnail',
            'windows.publish.map.paste': 'Paste\x20Map\x20Data',
            'windows.publish.map.update': 'Publish/Update',
            'windows.publish.map.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20maps!',
            'windows.theatre.header': 'Theatre\x20Mode',
            'windows.theatre.record': 'Enable\x20Recording',
            'windows.theatre.key': 'Record\x20Key',
            'windows.clans.header': 'Clans',
            'windows.clans.members': 'Members\x20({0})',
            'windows.clans.requests': 'Requests',
            'windows.clans.requests.none': 'No\x20Requests',
            'windows.clans.page': '[{0}]\x20Clan\x20Page',
            'windows.clans.create': 'Create\x20Clan',
            'windows.clans.name': 'Clan\x20Name',
            'windows.clans.view': 'View\x20Clans',
            'windows.clans.join': 'Join\x20Clan',
            'windows.clans.login': 'Login</a>\x20to\x20create\x20and\x20join\x20a\x20clan!',
            'windows.store.header': 'Store',
            'windows.store.spin': '{0}\x20Spin',
            'windows.store.agree': 'By\x20purchasing\x20you\x20agree\x20to\x20the\x20{0}Terms',
            'windows.store.purchase': 'Purchase\x20KR',
            'windows.store.voucher': 'Redeem\x20Voucher',
            'windows.store.voucherinfo': 'Get\x20Vouchers\x20from\x20certain\x20Streamers\x20&\x20Events',
            'windows.store.market': 'Marketplace',
            'windows.store.market2': 'Krunker\x20Market',
            'windows.store.buy': 'Buy\x20and\x20Sell\x20Items\x20on\x20the',
            'windows.store.wheels': 'Prize\x20Wheels',
            'windows.store.unlock': 'Unlock\x20new\x20weapon\x20skins\x20and\x20items',
            'windows.store.amount': '{0}\x20KR\x20in\x20account',
            'windows.store.login': 'Login</a>\x20to\x20buy\x20and\x20unlock\x20items\x20from\x20the\x20store!',
            'windows.store.purchasing': 'Purchasing...',
            'windows.store.unboxed': '{0}{1}\x20unboxed',
            'windows.skin.header': 'Select\x20Skin',
            'windows.hat.header': 'Select\x20Hat',
            'windows.back.header': 'Select\x20Back',
            'windows.melee.header': 'Select\x20Melee',
            'windows.mods.community.header': 'Community\x20Mods',
            'windows.mods.community.fav': 'Your\x20Favorites',
            'windows.mods.community.new': 'New\x20Mods',
            'windows.mods.community.hot': 'Hot',
            'windows.mods.community.name': 'Mod\x20Name',
            'windows.mods.community.none': 'No\x20Mods\x20found!',
            'windows.publish.mod.header': 'Publish\x20Mod',
            'windows.publish.mod.thumbnail': 'No\x20Thumbnail',
            'windows.publish.mod.name': 'Mod\x20Name',
            'windows.publish.mod.paste': 'Mod\x20Url',
            'windows.publish.mod.update': 'Publish/Update',
            'windows.publish.mod.login': 'Login</a>\x20to\x20create\x20and\x20upload\x20mods!',
            'windows.secondary.header': 'Select\x20Secondary',
            'windows.secondary.unlocked': 'Unlocked\x20at\x20lvl\x20{0}',
            'windows.secondary.req': 'Req\x20lvl\x20{0}',
            'windows.advertise.header': 'Advertise',
            'windows.players.header': 'Player\x20List',
            'windows.players.none': 'No\x20players\x20currently...',
            'windows.join.header': 'Join',
            'windows.join.code': 'Enter\x20Game\x20URL/Code',
            'windows.client.header': 'Client',
            'windows.client.windows': 'Windows\x20Installer',
            'windows.client.mac': 'macOS\x20Installer',
            'windows.client.linux': 'Linux\x20Installer',
            'windows.ranked.header': 'Ranked',
            'windows.ranked.login': 'Login</a>\x20to\x20play\x20in\x20ranked\x20games!',
            'windows.ranked.level': 'You\x20must\x20be\x20at\x20least\x20<span\x20color=\x22black\x22>level\x20{0}</span>\x20to\x20play\x20in\x20ranked\x20games!\x20Right\x20now\x20you\x20are\x20at\x20<span\x20color=\x22black\x22>level\x20{1}</span>.',
            'windows.ranked.mode.r1v1': '1v1\x20Ranked',
            'windows.ranked.mode.r2v2': '2v2\x20Ranked',
            'windows.ranked.mode.r4v4': '4v4\x20Ranked',
            'thumbnail.upload.limit': 'Failed.\x2040kb\x20Thumbnail\x20Limit',
            'thumbnail.upload.error': 'Thumbnail\x20Error',
            'mod.extracting': 'extracting\x20{0}/{1}',
            'mod.disabled': 'mods\x20disabled',
            'mod.error': 'mod\x20error!',
            'mod.loading': 'loading\x20mod...',
            'mod.invalid': 'invalid\x20mod\x20file!',
            'matchmaker.full': 'FULL',
            'matchmaker.full2': 'Game\x20is\x20full.',
            'matchmaker.none': 'Game\x20not\x20found.',
            'adblocker': 'Disable\x20your\x20ad\x20blocker\x20to\x20receive\x20free\x20Krunkies.',
            'streamers.views': '{0}\x20viewers',
            'streamers.none': 'No\x20active\x20streams!',
            'error.extentions': 'If\x20you\x20have\x20any\x20extensions,\x20disable\x20them',
            'error.seek': 'Try\x20seeking\x20a\x20new\x20game\x20by\x20clicking',
            'custom.map.missing': 'Select\x20at\x20least\x20one\x20Map',
            'custom.mode.missing': 'Select\x20at\x20least\x20one\x20Mode',
            'custom.class.missing': 'Select\x20at\x20least\x20one\x20Class',
            'server.config.maxPlayers': 'Players',
            'server.config.minPlayers': 'Min\x20Players',
            'server.config.lives': 'Lives',
            'server.config.gameTime': 'Minutes',
            'server.config.gravMlt': 'Gravity',
            'server.config.jumpMlt': 'Jump\x20Force',
            'server.config.deltaMlt': 'Time\x20Scale',
            'server.config.strafeSpd': 'Strafe\x20Speed',
            'server.config.healthMlt': 'Health\x20Multiplier',
            'server.config.impulseMlt': 'Weapon\x20Impulse',
            'server.config.nameTeam1': 'Team\x201\x20Name',
            'server.config.nameTeam2': 'Team\x202\x20Name',
            'server.config.selTeam': 'Select\x20Team',
            'server.config.allowSpect': 'Spectating',
            'server.config.killRewards': 'Kill\x20Rewards',
            'server.config.headshotOnly': 'Headshots\x20Only',
            'server.config.noSecondary': 'Disable\x20Secondaries',
            'server.config.canSlide': 'Sliding',
            'server.config.autoJump': 'Auto\x20Jump',
            'server.config.thirdPerson': '3rd\x20Person',
            'server.config.nameTags': 'Hide\x20Nametags',
            'server.config.noReload': 'No\x20Reload',
            'server.config.private': 'Private',
            'server.config.warmupTime': 'Warmup\x20Time',
            'server.config.scoreLimit': 'Score\x20Limit',
            'server.config.hitBoxPad': 'Hitbox\x20Scale',
            'social.login': 'Login/Register',
            'social.login.failed': 'Login\x20Failed',
            'social.login.buy': 'Login\x20to\x20Buy',
            'social.login.sell': 'Login\x20to\x20Sell',
            'social.login.gift': 'Login\x20to\x20Gift',
            'social.login.proccessing': 'Logging\x20in...',
            'social.since': 'Since',
            'social.user.maps': 'User\x20Maps',
            'social.user.mods': 'User\x20Mods',
            'social.maps.none': 'No\x20Maps\x20found...',
            'social.market.head': 'Head\x20Item',
            'social.market.back': 'Back\x20Item',
            'social.market.melee': 'Melee\x20Item',
            'social.market.none': 'No\x20Items\x20Found',
            'social.market.grace': 'ready\x20in\x20{0}',
            'social.market.sort': 'Filter/Sort',
            'social.market.filter': 'Search',
            'social.market.price.high': 'Highest\x20Price',
            'social.market.price.low': 'Lowest\x20Price',
            'social.market.price.list': 'List\x20Price\x20in',
            'social.market.searching': 'Searching',
            'social.market.listed': 'listed\x20{0}\x20ago',
            'social.market.list': 'List\x20Item',
            'social.market.unlist': 'Unlist',
            'social.market.unlisting': 'Unlisting\x20Item...',
            'social.market.posting': 'Posting\x20Item...',
            'social.market.req': 'lvl\x20{0}\x20required',
            'social.market.cant': 'Can\x27t\x20Afford',
            'social.market.purchase': 'Purchase',
            'social.market.fee': 'No\x20List\x20Fee',
            'social.market.failed': 'Failed.\x20Try\x20Again',
            'queue.status.queuing': 'Queuing',
            'queue.status.queued': 'Finding\x20match\x20({0}\x20of\x20{1})',
            'queue.status.creating-game': 'Creating\x20game',
            'queue.status.host': 'Creating\x20game',
            'queue.status.join': 'Joining\x20game',
            'social.market.gift.amount': 'Gift\x20Amount\x20in',
            'social.market.fee.gift': 'No\x20Gift\x20Fee',
            'social.market.gift': 'Gift\x20KR'
        };
    }
    , function(crI, crJ) {
        crI['exports'] = {
            'adblocker': '&#68;&#101;&#115;&#97;&#99;&#116;&#105;&#118;&#97;&#32;&#116;&#117;&#32;&#97;&#100;&#32;&#98;&#108;&#111;&#99;&#107;&#101;&#114;&#32;&#112;&#97;&#114;&#97;&#32;&#114;&#101;&#99;&#105;&#98;&#105;&#114;&#32;&#75;&#114;&#117;&#110;&#107;&#105;&#101;&#115;&#32;&#103;&#114;&#97;&#116;&#105;&#115;&#46;',
            'app.play': '&#67;&#76;&#73;&#67;&#75;&#32;&#80;&#65;&#82;&#65;&#32;&#74;&#85;&#71;&#65;&#82;',
            'app.play.controller': '&#80;&#82;&#69;&#83;&#73;&#79;&#78;&#65;&#32;&#83;&#84;&#65;&#82;&#84;',
            'custom.class.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#97;&#32;&#67;&#108;&#97;&#115;&#101;',
            'custom.map.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#32;&#77;&#97;&#112;&#97;',
            'custom.mode.missing': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#32;&#97;&#108;&#32;&#109;&#101;&#110;&#111;&#115;&#32;&#117;&#110;&#32;&#77;&#111;&#100;&#111;',
            'error.extentions': '&#83;&#105;&#32;&#116;&#105;&#101;&#110;&#101;&#115;&#32;&#101;&#120;&#116;&#101;&#110;&#115;&#105;&#111;&#110;&#101;&#115;&#46;&#32;&#68;&#101;&#115;&#97;&#99;&#116;&#65533;&#118;&#97;&#108;&#97;&#115;',
            'error.seek': '&#73;&#110;&#116;&#101;&#110;&#116;&#97;&#32;&#98;&#117;&#115;&#99;&#97;&#114;&#32;&#117;&#110;&#32;&#110;&#117;&#101;&#118;&#111;&#32;&#106;&#117;&#101;&#103;&#111;&#32;&#104;&#97;&#99;&#105;&#101;&#110;&#100;&#111;&#32;&#99;&#108;&#105;&#99;&#107;',
            'generic.accuracy': '&#80;&#114;&#101;&#99;&#105;&#115;&#105;&#65533;&#110;',
            'generic.clan': '&#67;&#108;&#97;&#110;',
            'generic.connecting': '&#67;&#79;&#78;&#69;&#67;&#84;&#65;&#78;&#68;&#79;&#46;&#46;&#46;',
            'generic.create': '&#67;&#114;&#101;&#97;&#114;',
            'generic.deaths': '&#77;&#117;&#101;&#114;&#116;&#101;&#115;',
            'generic.default': '&#80;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
            'generic.defeat': '&#68;&#69;&#82;&#82;&#79;&#84;&#65;',
            'generic.delete': '&#69;&#108;&#105;&#109;&#105;&#110;&#97;&#114;',
            'generic.failed': '&#70;&#97;&#108;&#108;&#105;&#100;&#111;',
            'generic.follow': '&#83;&#101;&#103;&#117;&#105;&#114;',
            'generic.followers': '&#83;&#101;&#103;&#117;&#105;&#100;&#111;&#114;&#101;&#115;',
            'generic.following': '&#83;&#105;&#103;&#117;&#105;&#101;&#110;&#100;&#111;',
            'generic.games': '&#74;&#117;&#101;&#103;&#111;&#115;',
            'generic.games.played': '&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#74;&#117;&#103;&#97;&#100;&#97;&#115;',
            'generic.games.won': '&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#71;&#97;&#110;&#97;&#100;&#97;&#115;',
            'generic.kdr': '&#84;&#65;&#77;',
            'generic.kills': '&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
            'generic.leave': '&#83;&#97;&#108;&#105;&#114;',
            'generic.level': '&#78;&#105;&#118;&#101;&#108;',
            'generic.load': '&#67;&#97;&#114;&#103;&#97;&#114;',
            'generic.loading': '&#67;&#65;&#82;&#71;&#65;&#78;&#68;&#79;&#46;&#46;&#46;',
            'generic.login': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#83;&#101;&#115;&#105;&#65533;&#110;',
            'generic.logout': '&#67;&#101;&#114;&#114;&#97;&#114;&#32;&#83;&#101;&#115;&#105;&#65533;&#110;',
            'generic.logout.sessions': '&#67;&#101;&#114;&#114;&#97;&#114;&#32;&#84;&#111;&#100;&#97;&#115;&#32;&#108;&#97;&#115;&#32;&#83;&#101;&#115;&#105;&#111;&#110;&#101;&#115;',
            'generic.name': '&#78;&#111;&#109;&#98;&#114;&#101;',
            'generic.none': '&#78;&#105;&#110;&#103;&#117;&#110;&#111;',
            'generic.off': '&#79;&#102;&#102;',
            'generic.password': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#97;&#115;&#101;&#65533;&#97;',
            'generic.register': '&#82;&#101;&#103;&#105;&#115;&#116;&#114;&#97;&#114;&#115;&#101;',
            'generic.save': '&#71;&#117;&#97;&#114;&#100;&#97;&#114;',
            'generic.score': '&#80;&#117;&#110;&#116;&#117;&#97;&#99;&#105;&#65533;&#110;',
            'generic.search': '&#66;&#117;&#115;&#99;&#97;&#114;',
            'generic.select': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;',
            'generic.submit': '&#69;&#110;&#116;&#114;&#101;&#103;&#97;&#114;',
            'generic.success': '&#65533;&#65533;&#120;&#105;&#116;&#111;&#33;',
            'generic.time': '&#84;&#105;&#101;&#109;&#112;&#111;',
            'generic.timep': '&#84;&#105;&#101;&#109;&#112;&#111;&#32;&#100;&#101;&#32;&#74;&#117;&#101;&#103;&#111;',
            'generic.unfollow': '&#68;&#101;&#106;&#97;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#103;&#117;&#105;&#114;',
            'generic.username': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;',
            'generic.victory': '&#86;&#73;&#67;&#84;&#79;&#82;&#73;&#65;',
            'generic.wait': '&#70;&#97;&#118;&#111;&#114;&#32;&#101;&#115;&#112;&#101;&#114;&#97;&#114;&#46;&#46;&#46;',
            'generic.wins': '&#86;&#105;&#99;&#116;&#111;&#114;&#105;&#97;&#115;',
            'leaderboard.empty': '&#76;&#111;&#98;&#98;&#121;&#32;&#86;&#97;&#99;&#65533;&#111;',
            'matchmaker.full': '&#70;&#85;&#76;&#76;',
            'matchmaker.full2': '&#76;&#97;&#32;&#112;&#97;&#114;&#116;&#105;&#100;&#97;&#32;&#101;&#115;&#116;&#65533;&#32;&#102;&#117;&#108;&#108;&#46;',
            'matchmaker.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#65533;&#32;&#112;&#97;&#114;&#116;&#105;&#100;&#97;&#46;',
            'menu.btn.browser': '&#66;&#117;&#115;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
            'menu.btn.customize': '&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#114;',
            'menu.btn.host': '&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
            'menu.btn.invite': '&#73;&#110;&#118;&#105;&#116;&#97;&#114;',
            'menu.btn.invite.clicked': '&#67;&#111;&#112;&#105;&#97;&#100;&#111;',
            'menu.btn.join': '&#85;&#110;&#105;&#114;&#115;&#101;',
            'menu.btn.maps': '&#77;&#97;&#112;&#97;&#115;',
            'menu.btn.mods': '&#77;&#111;&#100;&#115;',
            'menu.btn.profile': '&#80;&#101;&#114;&#102;&#105;&#108;',
            'menu.btn.settings': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;',
            'menu.btn.shop': '&#84;&#105;&#101;&#110;&#100;&#97;',
            'menu.btn.social': '&#83;&#111;&#99;&#105;&#97;&#108;',
            'mod.disabled': '&#109;&#111;&#100;&#115;&#32;&#100;&#101;&#115;&#97;&#99;&#116;&#105;&#118;&#97;&#100;&#111;&#115;',
            'mod.error': '&#65533;&#101;&#114;&#114;&#111;&#114;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#33;',
            'mod.extracting': '&#101;&#120;&#116;&#114;&#97;&#121;&#101;&#110;&#100;&#111;&#32;{0}&#47;{1}',
            'mod.invalid': '&#65533;&#97;&#114;&#99;&#104;&#105;&#118;&#111;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#32;&#105;&#110;&#118;&#65533;&#108;&#105;&#100;&#111;&#33;',
            'mod.loading': '&#99;&#97;&#114;&#103;&#97;&#110;&#100;&#111;&#32;&#109;&#111;&#100;&#46;&#46;&#46;',
            'player.died': '&#72;&#97;&#115;&#32;&#109;&#117;&#101;&#114;&#116;&#111;',
            'player.disconnect': '&#68;&#69;&#83;&#67;&#79;&#78;&#69;&#67;&#84;&#65;&#68;&#79;',
            'player.inactive': '&#68;&#101;&#115;&#99;&#111;&#110;&#101;&#99;&#116;&#97;&#100;&#111;&#32;&#112;&#111;&#114;&#32;&#105;&#110;&#97;&#99;&#116;&#105;&#118;&#105;&#100;&#97;&#100;',
            'player.killed': '&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#100;&#111;&#32;&#80;&#111;&#114;',
            'player.killstreak': '{0}&#32;&#116;&#105;&#101;&#110;&#101;&#32;&#82;&#97;&#99;&#104;&#97;&#32;&#100;&#101;&#32;{1}&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
            'player.waiting': '&#101;&#115;&#112;&#101;&#114;&#97;&#110;&#100;&#111;&#32;&#106;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
            'popup.checkpoint': '&#65533;&#67;&#104;&#101;&#99;&#107;&#112;&#111;&#105;&#110;&#116;&#33;',
            'purchase.error': '&#79;&#99;&#117;&#114;&#114;&#105;&#65533;&#32;&#117;&#110;&#32;&#101;&#114;&#114;&#111;&#114;',
            'purchase.error.click': '&#65533;&#99;&#108;&#105;&#99;&#107;&#32;&#97;&#113;&#117;&#65533;&#60;&#47;&#97;&#62;&#32;&#101;&#32;&#105;&#110;&#116;&#65533;&#110;&#116;&#97;&#108;&#111;&#32;&#100;&#101;&#32;&#110;&#117;&#101;&#118;&#111;&#33;',
            'purchase.error.limit': '&#69;&#115;&#32;&#112;&#111;&#115;&#105;&#98;&#108;&#101;&#32;&#113;&#117;&#101;&#32;&#104;&#97;&#121;&#97;&#115;&#32;&#101;&#120;&#99;&#101;&#100;&#105;&#100;&#111;&#32;&#116;&#117;&#32;&#108;&#65533;&#109;&#105;&#116;&#101;&#32;&#100;&#105;&#97;&#114;&#105;&#111;&#32;&#100;&#101;&#32;&#116;&#114;&#97;&#110;&#115;&#97;&#99;&#99;&#105;&#111;&#110;&#101;&#115;',
            'server.config.allowSpect': '&#69;&#115;&#112;&#101;&#99;&#116;&#97;&#114;',
            'server.config.autoJump': '&#65;&#117;&#116;&#111;&#32;&#83;&#97;&#108;&#116;&#97;&#114;',
            'server.config.canSlide': '&#68;&#101;&#115;&#108;&#105;&#122;&#97;&#114;',
            'server.config.deltaMlt': '&#69;&#115;&#99;&#97;&#108;&#97;&#32;&#100;&#101;&#32;&#84;&#105;&#101;&#109;&#112;&#111;',
            'server.config.gameTime': '&#77;&#105;&#110;&#117;&#116;&#111;&#115;',
            'server.config.gravMlt': '&#71;&#114;&#97;&#118;&#101;&#100;&#97;&#100;',
            'server.config.healthMlt': '&#77;&#117;&#108;&#116;&#105;&#112;&#108;&#105;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#86;&#105;&#100;&#97;',
            'server.config.impulseMlt': '&#73;&#109;&#112;&#117;&#108;&#115;&#111;&#32;&#100;&#101;&#32;&#65;&#114;&#109;&#97;',
            'server.config.jumpMlt': '&#73;&#110;&#116;&#101;&#110;&#115;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#83;&#97;&#108;&#116;&#111;&#115;',
            'server.config.killRewards': '&#82;&#101;&#99;&#111;&#109;&#112;&#101;&#110;&#115;&#97;&#32;&#112;&#111;&#114;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
            'server.config.lives': '&#86;&#105;&#100;&#97;&#115;',
            'server.config.maxPlayers': '&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
            'server.config.minPlayers': '&#77;&#65533;&#110;&#105;&#109;&#111;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
            'server.config.nameTags': '&#69;&#115;&#99;&#111;&#110;&#100;&#101;&#114;&#32;&#83;&#101;&#65533;&#97;&#108;&#32;&#100;&#101;&#108;&#32;&#78;&#111;&#109;&#98;&#114;&#101;',
            'server.config.nameTeam1': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#69;&#113;&#117;&#105;&#112;&#111;&#32;&#49;',
            'server.config.nameTeam2': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#69;&#113;&#117;&#105;&#112;&#111;&#32;&#50;',
            'server.config.private': '&#80;&#114;&#105;&#118;&#97;&#100;&#111;',
            'server.config.selTeam': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#69;&#113;&#117;&#105;&#112;&#111;',
            'server.config.strafeSpd': '&#86;&#101;&#108;&#111;&#99;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#82;&#65533;&#102;&#97;&#103;&#97;',
            'server.config.thirdPerson': '&#51;&#114;&#97;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;',
            'settings.audio.header': '&#65;&#117;&#100;&#105;&#111;',
            'settings.audio.sound': '&#83;&#111;&#110;&#105;&#100;&#111;',
            'settings.audio.voice': '&#86;&#111;&#108;&#117;&#109;&#101;&#110;&#32;&#100;&#101;&#32;&#86;&#111;&#99;&#101;&#115;',
            'settings.controls.change': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#111;&#108;&#101;&#115;',
            'settings.controls.press': '&#80;&#114;&#101;&#115;&#105;&#111;&#110;&#97;&#32;&#99;&#117;&#97;&#108;&#113;&#117;&#105;&#101;&#114;&#32;&#84;&#101;&#99;&#108;&#97;',
            'settings.crosshair.always': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#83;&#105;&#101;&#109;&#112;&#114;&#101;',
            'settings.crosshair.color': '&#67;&#111;&#108;&#111;&#114;',
            'settings.crosshair.header': '&#82;&#101;&#116;&#65533;&#99;&#117;&#108;&#111;',
            'settings.crosshair.image': '&#73;&#109;&#97;&#103;&#101;&#110;',
            'settings.crosshair.image.paste': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#82;&#101;&#116;&#65533;&#99;&#117;&#108;&#111;',
            'settings.crosshair.shadow': '&#83;&#111;&#109;&#98;&#114;&#97;',
            'settings.crosshair.size': '&#84;&#97;&#109;&#97;&#65533;&#111;',
            'settings.crosshair.style': '&#69;&#115;&#116;&#105;&#108;&#111;',
            'settings.crosshair.style.0': '&#67;&#114;&#117;&#122;',
            'settings.crosshair.style.1': '&#67;&#65533;&#114;&#99;&#117;&#108;&#111;&#32;&#86;&#97;&#99;&#65533;&#111;',
            'settings.crosshair.style.2': '&#67;&#65533;&#114;&#99;&#117;&#108;&#111;&#32;&#77;&#97;&#99;&#105;&#122;&#111;',
            'settings.crosshair.style.3': '&#67;&#117;&#97;&#100;&#114;&#97;&#100;&#111;&#32;&#86;&#97;&#99;&#65533;&#111;',
            'settings.crosshair.style.4': '&#67;&#117;&#97;&#100;&#114;&#97;&#100;&#111;&#32;&#77;&#97;&#99;&#105;&#122;&#111;',
            'settings.crosshair.thickness': '&#71;&#114;&#111;&#115;&#111;&#114;',
            'settings.crosshair.type': '&#84;&#105;&#112;&#111;',
            'settings.crosshair.type.2': '&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#111;',
            'settings.crosshair.type.3': '&#80;&#111;&#114;&#32;&#67;&#97;&#112;&#97;&#115;',
            'settings.crosshair.type.4': '&#73;&#109;&#97;&#103;&#101;&#110;',
            'settings.editing.bobbing': '&#68;&#101;&#115;&#99;&#117;&#97;&#100;&#114;&#101;&#32;&#100;&#101;&#32;&#65;&#112;&#117;&#110;&#116;&#101;',
            'settings.editing.depth': '&#77;&#97;&#112;&#97;&#32;&#100;&#101;&#32;&#80;&#114;&#111;&#102;&#117;&#110;&#100;&#105;&#100;&#97;&#100;',
            'settings.editing.green': '&#80;&#97;&#110;&#116;&#97;&#108;&#108;&#97;&#32;&#86;&#101;&#114;&#100;&#101;',
            'settings.editing.header': '&#69;&#100;&#105;&#99;&#105;&#65533;&#110;',
            'settings.editing.weapon': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#65;&#114;&#109;&#97;',
            'settings.gameplay.aimsens': '&#83;&#101;&#110;&#115;&#105;&#98;&#105;&#108;&#105;&#100;&#97;&#100;&#32;&#97;&#108;&#32;&#65;&#112;&#117;&#110;&#116;&#97;&#114;',
            'settings.gameplay.challenge': '&#77;&#111;&#100;&#111;&#32;&#67;&#104;&#97;&#108;&#108;&#101;&#110;&#103;&#101;',
            'settings.gameplay.fov': '&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
            'settings.gameplay.fps': '&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;&#32;&#100;&#101;&#32;&#65;&#114;&#109;&#97;',
            'settings.gameplay.header': '&#74;&#117;&#103;&#97;&#98;&#105;&#108;&#105;&#100;&#97;&#100;',
            'settings.gameplay.invert': '&#73;&#110;&#118;&#101;&#114;&#116;&#105;&#114;&#32;&#69;&#106;&#101;&#32;&#89;',
            'settings.gameplay.onkillS': '&#65;&#108;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#114;',
            'settings.gameplay.sensitivity': '&#83;&#101;&#110;&#115;&#105;&#98;&#105;&#108;&#105;&#100;&#97;&#100;',
            'settings.gameplay.streamer': '&#77;&#111;&#100;&#111;&#32;&#83;&#116;&#114;&#101;&#97;&#109;&#101;&#114;',
            'settings.interface.chat': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#67;&#97;&#106;&#97;&#32;&#100;&#101;&#32;&#67;&#104;&#97;&#116;',
            'settings.interface.deaths': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#77;&#117;&#101;&#114;&#116;&#101;&#115;',
            'settings.interface.fps': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#70;&#80;&#83;',
            'settings.interface.header': '&#73;&#110;&#116;&#101;&#114;&#102;&#97;&#122;',
            'settings.interface.hp': '&#66;&#97;&#114;&#114;&#97;&#115;&#32;&#68;&#105;&#110;&#65533;&#109;&#105;&#99;&#97;&#115;&#32;&#100;&#101;&#32;&#72;&#80;',
            'settings.interface.kills': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#72;&#105;&#115;&#116;&#111;&#114;&#105;&#97;&#108;&#32;&#100;&#101;&#32;&#65;&#115;&#101;&#115;&#105;&#110;&#97;&#116;&#111;&#115;',
            'settings.interface.messages': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#65;&#112;&#101;&#114;&#116;&#117;&#114;&#97;&#115;&#32;&#100;&#101;&#32;&#67;&#97;&#106;&#97;&#115;',
            'settings.interface.ping': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#80;&#73;&#78;&#71;',
            'settings.interface.ui': '&#77;&#111;&#115;&#116;&#114;&#97;&#114;&#32;&#73;&#110;&#116;&#101;&#114;&#102;&#97;&#122;',
            'settings.mods.auto': '&#65;&#117;&#116;&#111;&#45;&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;',
            'settings.mods.borders': '&#66;&#111;&#114;&#100;&#101;&#115;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#77;&#105;&#114;&#105;&#108;&#108;&#97;',
            'settings.mods.dot': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#117;&#110;&#116;&#111;&#32;&#82;&#111;&#106;&#111;',
            'settings.mods.dot.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#117;&#110;&#116;&#111;&#32;&#82;&#111;&#106;&#111;',
            'settings.mods.endmessage': '&#77;&#101;&#110;&#115;&#97;&#106;&#101;&#32;&#70;&#105;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
            'settings.mods.header': '&#77;&#111;&#100;&#115;',
            'settings.mods.load': '&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;&#115;',
            'settings.mods.profile': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#101;&#114;&#102;&#105;&#108;',
            'settings.mods.profile.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#108;&#32;&#80;&#101;&#114;&#102;&#105;&#108;',
            'settings.mods.scope': '&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#32;&#77;&#105;&#114;&#105;&#108;&#108;&#97;',
            'settings.mods.scope.paste': '&#85;&#82;&#76;&#32;&#73;&#109;&#97;&#103;&#101;&#110;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#77;&#105;&#114;&#105;&#108;&#97;',
            'settings.onKillS.style.0': '&#80;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
            'settings.onKillS.style.1': '&#82;&#101;&#100;&#117;&#99;&#105;&#114;&#32;&#82;&#101;&#115;&#111;&#108;&#117;&#99;&#105;&#65533;&#110;',
            'settings.onKillS.style.2': '&#82;&#101;&#100;&#117;&#99;&#105;&#114;&#32;&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
            'settings.onKillS.style.3': '&#65;&#117;&#109;&#101;&#110;&#116;&#97;&#114;&#32;&#67;&#97;&#109;&#112;&#111;&#32;&#86;&#105;&#115;&#117;&#97;&#108;',
            'settings.quality.header': '&#67;&#97;&#108;&#105;&#100;&#97;&#100;',
            'settings.quality.mflash': '&#67;&#111;&#109;&#98;&#117;&#115;&#116;&#105;&#65533;&#110;',
            'settings.quality.part': '&#80;&#97;&#114;&#116;&#65533;&#99;&#117;&#108;&#97;&#115;',
            'settings.quality.res': '&#82;&#101;&#115;&#111;&#108;&#117;&#99;&#105;&#65533;&#110;',
            'settings.quality.trails': '&#82;&#97;&#115;&#116;&#114;&#111;&#115;&#32;&#100;&#101;&#32;&#66;&#97;&#108;&#97;',
            'settings.reset': '&#82;&#101;&#115;&#116;&#97;&#98;&#108;&#101;&#99;&#101;&#114;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;',
            'settings.reset.confirm': '&#65533;&#69;&#115;&#116;&#65533;&#115;&#32;&#115;&#101;&#103;&#117;&#114;&#111;&#32;&#100;&#101;&#32;&#113;&#117;&#101;&#114;&#101;&#114;&#32;&#114;&#101;&#115;&#116;&#97;&#98;&#108;&#101;&#99;&#101;&#114;&#32;&#116;&#111;&#100;&#97;&#115;&#32;&#116;&#117;&#115;&#32;&#99;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#63;&#32;&#69;&#115;&#116;&#111;&#32;&#116;&#97;&#109;&#98;&#105;&#65533;&#110;&#32;&#118;&#111;&#108;&#118;&#101;&#114;&#65533;&#32;&#97;&#32;&#99;&#97;&#114;&#103;&#97;&#114;&#32;&#108;&#97;&#32;&#112;&#65533;&#103;&#105;&#110;&#97;',
            'settings.server.header': '&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
            'settings.server.region': '&#82;&#101;&#103;&#105;&#65533;&#110;&#32;&#112;&#111;&#114;&#32;&#100;&#101;&#102;&#101;&#99;&#116;&#111;',
            'settings.shaders.ambient': '&#83;&#111;&#109;&#98;&#114;&#101;&#111;&#32;&#100;&#101;&#32;&#65;&#109;&#98;&#105;&#101;&#110;&#116;&#101;',
            'settings.shaders.header': '&#83;&#111;&#109;&#98;&#114;&#101;&#97;&#100;&#111;&#114;&#101;&#115;',
            'social.login': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#47;&#82;&#101;&#103;&#105;&#115;&#116;&#114;&#97;&#114;&#115;&#101;',
            'social.login.buy': '&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#112;&#97;&#114;&#97;&#32;&#67;&#111;&#109;&#112;&#114;&#97;&#114;',
            'social.login.failed': '&#73;&#110;&#105;&#99;&#105;&#111;&#32;&#100;&#101;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#102;&#97;&#108;&#108;&#105;&#100;&#111;',
            'social.login.proccessing': '&#73;&#110;&#105;&#99;&#105;&#97;&#110;&#100;&#111;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#46;&#46;&#46;',
            'social.login.sell': '&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#32;&#112;&#97;&#114;&#97;&#32;&#86;&#101;&#110;&#100;&#101;&#114;',
            'social.maps.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#77;&#97;&#112;&#97;&#115;&#46;&#46;&#46;',
            'social.market.back': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#69;&#115;&#112;&#97;&#108;&#100;&#97;',
            'social.market.cant': '&#83;&#97;&#108;&#100;&#111;&#32;&#73;&#110;&#115;&#117;&#102;&#105;&#99;&#105;&#101;&#110;&#116;&#101;',
            'social.market.failed': '&#70;&#97;&#108;&#108;&#105;&#100;&#111;&#46;&#32;&#73;&#110;&#116;&#101;&#110;&#116;&#97;&#32;&#100;&#101;&#32;&#110;&#117;&#101;&#118;&#111;',
            'social.market.fee': '&#83;&#105;&#110;&#32;&#67;&#111;&#115;&#116;&#111;&#32;&#100;&#101;&#32;&#73;&#110;&#99;&#108;&#117;&#105;&#114;',
            'social.market.filter': '&#66;&#117;&#115;&#99;&#97;',
            'social.market.grace': '&#108;&#105;&#115;&#116;&#111;&#32;&#101;&#110;&#32;{0}',
            'social.market.head': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#67;&#97;&#98;&#101;&#122;&#97;',
            'social.market.list': '&#73;&#116;&#101;&#109;&#32;&#100;&#101;&#32;&#76;&#105;&#115;&#116;&#97;',
            'social.market.listed': '&#105;&#110;&#99;&#108;&#117;&#105;&#100;&#111;&#32;&#104;&#97;&#99;&#101;&#32;{0}',
            'social.market.none': '&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#73;&#116;&#101;&#109;&#115;',
            'social.market.posting': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#110;&#100;&#111;&#32;&#73;&#116;&#101;&#109;&#46;&#46;&#46;',
            'social.market.price.high': '&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#109;&#65533;&#115;&#32;&#97;&#108;&#116;&#111;',
            'social.market.price.list': '&#76;&#105;&#115;&#116;&#97;&#114;&#32;&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#101;&#110;',
            'social.market.price.low': '&#80;&#114;&#101;&#99;&#105;&#111;&#32;&#109;&#65533;&#115;&#32;&#98;&#97;&#106;&#111;',
            'social.market.purchase': '&#67;&#111;&#109;&#112;&#114;&#97;&#114;',
            'social.market.req': '&#78;&#118;&#108;&#32;{0}&#32;&#114;&#101;&#113;&#117;&#101;&#114;&#105;&#100;&#111;',
            'social.market.searching': '&#66;&#117;&#115;&#99;&#97;&#110;&#100;&#111;',
            'social.market.sort': '&#70;&#105;&#108;&#116;&#114;&#97;&#114;&#47;&#79;&#114;&#103;&#97;&#110;&#105;&#122;&#97;&#114;',
            'social.market.unlist': '&#69;&#120;&#99;&#108;&#117;&#105;&#114;',
            'social.market.unlisting': '&#69;&#120;&#99;&#108;&#117;&#121;&#101;&#110;&#100;&#111;&#32;&#73;&#116;&#101;&#109;&#46;&#46;&#46;',
            'social.since': '&#68;&#101;&#115;&#100;&#101;',
            'social.user.maps': '&#77;&#97;&#112;&#97;&#115;&#32;&#100;&#101;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;&#115;',
            'social.user.mods': '&#77;&#111;&#100;&#115;&#32;&#100;&#101;&#32;&#85;&#115;&#117;&#97;&#114;&#105;&#111;&#115;',
            'streamers.none': '&#65533;&#78;&#111;&#32;&#104;&#97;&#121;&#32;&#115;&#116;&#114;&#101;&#97;&#109;&#115;&#32;&#97;&#99;&#116;&#105;&#118;&#111;&#115;&#33;',
            'streamers.views': '{0}&#32;&#118;&#101;&#115;&#112;&#101;&#99;&#116;&#97;&#100;&#111;&#114;&#101;&#115;',
            'thumbnail.upload.error': '&#69;&#114;&#114;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
            'thumbnail.upload.limit': '&#69;&#114;&#114;&#111;&#114;&#46;&#32;&#76;&#65533;&#109;&#105;&#116;&#101;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;&#32;&#100;&#101;&#32;&#52;&#48;&#107;&#98;',
            'timer.end': '&#80;&#114;&#65533;&#120;&#105;&#109;&#97;&#32;&#82;&#111;&#110;&#100;&#97;&#32;&#101;&#110;&#32;{0}',
            'windows.account.header': '&#67;&#117;&#101;&#110;&#116;&#97;',
            'windows.account.recover': '&#80;&#97;&#114;&#97;&#32;&#114;&#101;&#99;&#117;&#112;&#101;&#114;&#97;&#114;&#32;&#117;&#110;&#97;&#32;&#99;&#117;&#101;&#110;&#116;&#97;&#44;&#32;&#99;&#111;&#110;&#116;&#97;&#99;&#116;&#97;&#114;&#32;&#97;&#32;&#60;&#97;&#62;&#107;&#114;&#117;&#110;&#107;&#101;&#114;&#64;&#121;&#101;&#110;&#100;&#105;&#115;&#46;&#99;&#104;&#60;&#47;&#97;&#62;',
            'windows.advertise.header': '&#65;&#110;&#117;&#110;&#99;&#105;&#97;&#114;',
            'windows.back.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#69;&#115;&#112;&#97;&#108;&#100;&#97;',
            'windows.clans.create': '&#67;&#114;&#101;&#97;&#114;&#32;&#67;&#108;&#97;&#110;',
            'windows.clans.header': '&#67;&#108;&#97;&#110;&#101;&#115;',
            'windows.clans.join': '&#85;&#110;&#105;&#114;&#115;&#101;&#32;&#97;&#32;&#67;&#108;&#97;&#110;',
            'windows.clans.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#117;&#110;&#32;&#99;&#108;&#97;&#110;&#32;&#111;&#32;&#117;&#110;&#105;&#114;&#116;&#101;&#32;&#97;&#32;&#117;&#110;&#111;&#33;',
            'windows.clans.members': '&#77;&#105;&#101;&#109;&#98;&#114;&#111;&#115;&#32;&#40;{0}&#41;',
            'windows.clans.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#67;&#108;&#97;&#110;',
            'windows.clans.page': '&#91;{0}&#93;&#32;&#80;&#65533;&#103;&#105;&#110;&#97;&#32;&#100;&#101;&#108;&#32;&#67;&#108;&#97;&#110;',
            'windows.clans.requests': '&#83;&#111;&#108;&#105;&#99;&#105;&#116;&#117;&#100;&#101;&#115;',
            'windows.clans.requests.none': '&#78;&#111;&#32;&#72;&#97;&#121;&#32;&#83;&#111;&#108;&#105;&#99;&#105;&#116;&#117;&#100;&#101;&#115;',
            'windows.clans.view': '&#86;&#101;&#114;&#32;&#67;&#108;&#97;&#110;&#101;&#115;',
            'windows.class.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#108;&#97;&#115;&#101;',
            'windows.client.header': '&#67;&#108;&#105;&#101;&#110;&#116;&#101;',
            'windows.client.linux': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#76;&#105;&#110;&#117;&#120;',
            'windows.client.mac': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#109;&#97;&#99;&#79;&#83;',
            'windows.client.windows': '&#73;&#110;&#115;&#116;&#97;&#108;&#97;&#100;&#111;&#114;&#32;&#87;&#105;&#110;&#100;&#111;&#119;&#115;',
            'windows.controls.aim': '&#65;&#112;&#117;&#110;&#116;&#97;&#114;',
            'windows.controls.backward': '&#65;&#116;&#114;&#65533;&#115;',
            'windows.controls.chat': '&#67;&#104;&#97;&#116;',
            'windows.controls.crouch': '&#65;&#103;&#97;&#99;&#104;&#97;&#114;&#115;&#101;',
            'windows.controls.drop': '&#83;&#111;&#108;&#116;&#97;&#114;',
            'windows.controls.forward': '&#65;&#100;&#101;&#108;&#97;&#110;&#116;&#101;',
            'windows.controls.header': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#67;&#111;&#110;&#116;&#114;&#111;&#108;&#101;&#115;',
            'windows.controls.inspect': '&#73;&#110;&#115;&#112;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;',
            'windows.controls.interact': '&#73;&#110;&#116;&#101;&#114;&#97;&#99;&#116;&#117;&#97;&#114;',
            'windows.controls.jump': '&#83;&#97;&#108;&#116;&#97;&#114;',
            'windows.controls.left': '&#73;&#122;&#113;&#117;&#105;&#101;&#114;&#100;&#97;',
            'windows.controls.list': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
            'windows.controls.next': '&#65;&#114;&#109;&#97;&#32;&#83;&#105;&#103;&#117;&#105;&#101;&#110;&#116;&#101;',
            'windows.controls.previous': '&#65;&#114;&#109;&#97;&#32;&#65;&#110;&#116;&#101;&#114;&#105;&#111;&#114;',
            'windows.controls.reload': '&#82;&#101;&#99;&#97;&#114;&#103;&#97;&#114;',
            'windows.controls.right': '&#68;&#101;&#114;&#101;&#99;&#104;&#97;',
            'windows.controls.spray': '&#83;&#112;&#114;&#97;&#121;',
            'windows.controls.voice': '&#86;&#111;&#122;',
            'windows.hat.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#97;&#98;&#101;&#122;&#97;',
            'windows.host.classes': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#67;&#108;&#97;&#115;&#101;&#115;',
            'windows.host.cmaps': '&#77;&#97;&#112;&#97;&#32;&#67;&#111;&#109;&#117;&#110;&#105;&#116;&#97;&#114;&#105;&#111;',
            'windows.host.header': '&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#97;',
            'windows.host.maps': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#77;&#97;&#112;&#97;&#115;',
            'windows.host.modes': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#77;&#111;&#100;&#111;&#115;',
            'windows.host.preset': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;&#32;&#100;&#101;&#108;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;',
            'windows.host.preset.load': '&#67;&#97;&#114;&#103;&#97;&#110;&#100;&#111;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;&#46;&#46;&#46;',
            'windows.host.preset.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#32;&#108;&#97;&#115;&#32;&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#80;&#114;&#101;&#118;&#105;&#97;&#115;',
            'windows.host.raw': '&#68;&#97;&#116;&#111;&#115;&#32;&#110;&#111;&#32;&#112;&#114;&#111;&#99;&#101;&#115;&#97;&#100;&#111;&#115;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;',
            'windows.host.settings': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#65533;&#110;&#32;&#100;&#101;&#108;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;',
            'windows.host.start': '&#73;&#110;&#105;&#99;&#105;&#97;&#114;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
            'windows.join.code': '&#73;&#110;&#103;&#114;&#101;&#115;&#97;&#114;&#32;&#85;&#82;&#76;&#47;&#67;&#65533;&#100;&#105;&#103;&#111;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
            'windows.join.header': '&#85;&#110;&#105;&#114;&#115;&#101;',
            'windows.loadout.body': '&#67;&#117;&#101;&#114;&#112;&#111;',
            'windows.loadout.class': '&#67;&#108;&#97;&#115;&#101;',
            'windows.loadout.hat': '&#67;&#97;&#98;&#101;&#122;&#97;',
            'windows.loadout.header': '&#67;&#97;&#109;&#98;&#105;&#97;&#114;&#32;&#76;&#111;&#97;&#100;&#111;&#117;&#116;',
            'windows.loadout.melee': '&#77;&#101;&#108;&#101;&#101;',
            'windows.loadout.primary': '&#80;&#114;&#105;&#109;&#97;&#114;&#105;&#97;',
            'windows.loadout.secondary': '&#83;&#101;&#99;&#117;&#110;&#100;&#97;&#114;&#105;&#97;',
            'windows.loadout.spray': '&#83;&#112;&#114;&#97;&#121;',
            'windows.maps.community': '&#67;&#111;&#109;&#117;&#110;&#105;&#100;&#97;&#100;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;&#115;',
            'windows.maps.editor': '&#69;&#100;&#105;&#116;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;&#115;',
            'windows.maps.header': '&#77;&#97;&#112;&#97;&#115;&#32;&#80;&#101;&#114;&#115;&#111;&#110;&#97;&#108;&#105;&#122;&#97;&#100;&#111;&#115;',
            'windows.maps.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#97;&#112;&#97;',
            'windows.maps.none': '&#65533;&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#109;&#97;&#112;&#97;&#115;&#33;',
            'windows.maps.publish': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#97;&#112;&#97;',
            'windows.mods.community.fav': '&#84;&#117;&#115;&#32;&#70;&#97;&#118;&#111;&#114;&#105;&#116;&#111;&#115;',
            'windows.mods.community.header': '&#77;&#111;&#100;&#115;&#32;&#67;&#111;&#109;&#117;&#110;&#105;&#116;&#97;&#114;&#105;&#111;&#115;',
            'windows.mods.community.hot': '&#72;&#111;&#116;',
            'windows.mods.community.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
            'windows.mods.community.new': '&#77;&#111;&#100;&#115;&#32;&#78;&#117;&#101;&#118;&#111;&#115;',
            'windows.mods.community.none': '&#65533;&#78;&#111;&#32;&#115;&#101;&#32;&#101;&#110;&#99;&#111;&#110;&#116;&#114;&#97;&#114;&#111;&#110;&#32;&#77;&#111;&#100;&#115;&#33;',
            'windows.mods.drop': '&#97;&#114;&#114;&#97;&#115;&#116;&#97;&#114;&#32;&#97;&#114;&#99;&#104;&#105;&#118;&#111;&#32;&#100;&#101;&#32;&#109;&#111;&#100;&#32;&#97;&#113;&#117;&#65533;&#32;&#111;&#32;&#99;&#108;&#105;&#99;&#107;',
            'windows.mods.guide': '&#71;&#117;&#65533;&#97;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
            'windows.mods.header': '&#71;&#101;&#115;&#116;&#111;&#114;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
            'windows.mods.list': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#77;&#111;&#100;&#115;',
            'windows.mods.load': '&#67;&#97;&#114;&#103;&#97;&#114;&#32;&#77;&#111;&#100;',
            'windows.mods.paste': '&#80;&#101;&#103;&#97;&#114;&#32;&#85;&#114;&#108;&#32;&#100;&#101;&#32;&#77;&#111;&#100;',
            'windows.mods.publish': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#111;&#100;',
            'windows.mods.viewer': '&#86;&#105;&#115;&#116;&#97;',
            'windows.players.header': '&#76;&#105;&#115;&#116;&#97;&#32;&#100;&#101;&#32;&#74;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;',
            'windows.players.none': '&#78;&#111;&#32;&#104;&#97;&#121;&#32;&#106;&#117;&#103;&#97;&#100;&#111;&#114;&#101;&#115;&#32;&#97;&#99;&#116;&#117;&#97;&#108;&#109;&#101;&#110;&#116;&#101;&#46;&#46;&#46;',
            'windows.publish.map.header': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#97;&#112;&#97;',
            'windows.publish.map.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#121;&#32;&#115;&#117;&#98;&#105;&#114;&#32;&#109;&#97;&#112;&#97;&#115;&#33;',
            'windows.publish.map.paste': '&#80;&#101;&#103;&#97;&#114;&#32;&#68;&#97;&#116;&#111;&#115;&#32;&#100;&#101;&#32;&#77;&#97;&#112;&#97;',
            'windows.publish.map.thumbnail': '&#83;&#105;&#110;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
            'windows.publish.map.update': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#47;&#65;&#99;&#116;&#117;&#97;&#108;&#105;&#122;&#97;&#114;',
            'windows.publish.mod.header': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#32;&#77;&#111;&#100;',
            'windows.publish.mod.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#114;&#101;&#97;&#114;&#32;&#121;&#32;&#115;&#117;&#98;&#105;&#114;&#32;&#109;&#111;&#100;&#115;&#33;',
            'windows.publish.mod.name': '&#78;&#111;&#109;&#98;&#114;&#101;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
            'windows.publish.mod.paste': '&#85;&#114;&#108;&#32;&#100;&#101;&#108;&#32;&#77;&#111;&#100;',
            'windows.publish.mod.thumbnail': '&#83;&#105;&#110;&#32;&#77;&#105;&#110;&#105;&#97;&#116;&#117;&#114;&#97;',
            'windows.publish.mod.update': '&#80;&#117;&#98;&#108;&#105;&#99;&#97;&#114;&#47;&#65;&#99;&#116;&#117;&#97;&#108;&#105;&#122;&#97;&#114;',
            'windows.secondary.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#83;&#101;&#99;&#117;&#110;&#100;&#97;&#114;&#105;&#111;',
            'windows.secondary.req': '&#78;&#118;&#108;&#32;&#82;&#101;&#113;&#32;{0}',
            'windows.secondary.unlocked': '&#68;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#100;&#111;&#32;&#101;&#110;&#32;&#101;&#108;&#32;&#78;&#118;&#108;&#32;{0}',
            'windows.servers.header': '&#66;&#117;&#115;&#99;&#97;&#100;&#111;&#114;&#32;&#100;&#101;&#32;&#83;&#101;&#114;&#118;&#105;&#100;&#111;&#114;&#101;&#115;',
            'windows.servers.hide': '&#72;&#105;&#100;&#101;&#32;&#70;&#117;&#108;&#108;',
            'windows.servers.host': '&#43;&#32;&#83;&#101;&#114;&#32;&#65;&#110;&#102;&#105;&#116;&#114;&#105;&#65533;&#110;&#32;&#100;&#101;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;',
            'windows.servers.none': '&#78;&#111;&#32;&#72;&#97;&#121;&#32;&#80;&#97;&#114;&#116;&#105;&#100;&#97;&#115;&#32;&#112;&#97;&#114;&#97;&#32;&#85;&#110;&#105;&#114;&#115;&#101;&#46;&#46;&#46;',
            'windows.servers.online': '{0}&#32;&#116;&#111;&#116;&#97;&#108;&#101;&#115;&#32;&#101;&#110;&#32;&#108;&#65533;&#110;&#101;&#97;',
            'windows.settings.header': '&#67;&#111;&#110;&#102;&#105;&#103;&#117;&#114;&#97;&#99;&#105;&#111;&#110;&#101;&#115;&#32;&#100;&#101;&#108;&#32;&#74;&#117;&#101;&#103;&#111;',
            'windows.skin.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#65;&#115;&#112;&#101;&#99;&#116;&#111;',
            'windows.spray.default': '&#83;&#112;&#114;&#97;&#121;&#32;&#112;&#111;&#114;&#32;&#68;&#101;&#102;&#101;&#99;&#116;&#111;',
            'windows.spray.header': '&#83;&#101;&#108;&#101;&#99;&#99;&#105;&#111;&#110;&#97;&#114;&#32;&#83;&#112;&#114;&#97;&#121;',
            'windows.store.agree': '&#65;&#108;&#32;&#99;&#111;&#109;&#112;&#114;&#97;&#114;&#44;&#32;&#97;&#99;&#101;&#112;&#116;&#97;&#115;&#32;&#108;&#111;&#115;&#32;{0}&#84;&#65533;&#114;&#109;&#105;&#110;&#111;&#115;',
            'windows.store.amount': '{0}&#32;&#75;&#82;&#32;&#101;&#110;&#32;&#108;&#97;&#32;&#99;&#117;&#101;&#110;&#116;&#97;',
            'windows.store.buy': '&#67;&#111;&#109;&#112;&#114;&#97;&#32;&#121;&#32;&#86;&#101;&#110;&#100;&#101;&#32;&#105;&#116;&#101;&#109;&#115;&#32;&#101;&#110;&#32;&#101;&#108;&#32;',
            'windows.store.header': '&#84;&#105;&#101;&#110;&#100;&#97;',
            'windows.store.login': '&#65533;&#73;&#110;&#105;&#99;&#105;&#97;&#32;&#115;&#101;&#115;&#105;&#65533;&#110;&#60;&#47;&#97;&#62;&#32;&#112;&#97;&#114;&#97;&#32;&#99;&#111;&#109;&#112;&#114;&#97;&#114;&#32;&#121;&#32;&#100;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#114;&#32;&#105;&#116;&#101;&#109;&#115;&#32;&#100;&#101;&#32;&#108;&#97;&#32;&#116;&#105;&#101;&#110;&#100;&#97;&#33;',
            'windows.store.market': '&#77;&#101;&#114;&#99;&#97;&#100;&#111;',
            'windows.store.market2': '&#75;&#114;&#117;&#110;&#107;&#101;&#114;&#32;&#77;&#97;&#114;&#107;&#101;&#116;',
            'windows.store.purchase': '&#67;&#111;&#109;&#112;&#114;&#97;&#114;&#32;&#75;&#82;',
            'windows.store.purchasing': '&#67;&#111;&#109;&#112;&#114;&#97;&#110;&#100;&#111;&#46;&#46;&#46;',
            'windows.store.spin': '{0}&#32;&#71;&#105;&#114;&#97;&#114;',
            'windows.store.unboxed': '{0}{1}&#32;&#97;&#98;&#114;&#105;&#65533;',
            'windows.store.unlock': '&#68;&#101;&#115;&#98;&#108;&#111;&#113;&#117;&#101;&#97;&#32;&#110;&#117;&#101;&#118;&#111;&#115;&#32;&#97;&#115;&#112;&#101;&#99;&#116;&#111;&#115;&#32;&#112;&#97;&#114;&#97;&#32;&#97;&#114;&#109;&#97;&#115;&#32;&#101;&#32;&#105;&#116;&#101;&#109;&#115;',
            'windows.store.wheels': '&#82;&#117;&#101;&#100;&#97;&#115;&#32;&#100;&#101;&#32;&#80;&#114;&#101;&#109;&#105;&#111;&#115;',
            'windows.theatre.header': '&#77;&#111;&#100;&#111;&#32;&#84;&#101;&#97;&#116;&#114;&#111;',
            'windows.theatre.key': '&#84;&#101;&#99;&#108;&#97;&#32;&#100;&#101;&#32;&#71;&#114;&#97;&#98;&#97;&#114;',
            'windows.theatre.record': '&#80;&#101;&#114;&#109;&#105;&#116;&#105;&#114;&#32;&#71;&#114;&#97;&#98;&#97;&#114;'
        };
    }
    , function(crK, crL) {
        crK['exports'] = {
            'adblocker': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#75;&#114;&#117;&#110;&#107;&#105;&#101;&#115;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'app.play': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'app.play.controller': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53948;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;',
            'custom.class.missing': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'custom.map.missing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'custom.mode.missing': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'error.extentions': '&#21344;&#49910;&#50137;&#50713;&#21344;&#49941;&#49661;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#45796;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'error.seek': '&#21344;&#50137;&#50713;&#21344;&#50025;&#47484;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#49891;&#48669;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;',
            'generic.accuracy': '&#21344;&#50137;&#50713;&#54869;&#21344;&#50137;&#50713;',
            'generic.clan': '&#53364;&#21344;&#50137;&#50713;',
            'generic.connecting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'generic.create': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.deaths': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.default': '&#21344;&#50025;&#48376;&#21344;&#50137;&#50713;',
            'generic.defeat': '&#21344;&#49915;&#48196;&#50713;',
            'generic.delete': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.failed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.follow': '&#21344;&#49899;&#47196;&#50872;&#50713;',
            'generic.followers': '&#21344;&#49899;&#47196;&#50872;&#50713;',
            'generic.following': '&#21344;&#49899;&#47364;&#50713;&#21344;&#50137;&#50713;',
            'generic.games': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.games.played': '&#52824;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.games.won': '&#21344;&#49849;&#47756;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.kdr': '&#75;&#68;&#82;',
            'generic.kills': '&#52376;&#52824;',
            'generic.leave': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.level': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.load': '&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.loading': '&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'generic.login': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;',
            'generic.logout': '&#21344;&#49912;&#44536;&#50500;&#50872;&#50713;',
            'generic.logout.sessions': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49892;&#50872;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44536;&#50500;&#50872;&#50713;',
            'generic.name': '&#21344;&#49905;&#47756;&#50713;',
            'generic.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.off': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.password': '&#21344;&#50137;&#50713;&#21344;&#49915;&#48196;&#50713;&#54840;&#32;&#21344;&#49929;&#47364;&#50713;',
            'generic.register': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.save': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.score': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.search': '&#21344;&#49903;&#49340;&#50713;',
            'generic.select': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.submit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.success': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
            'generic.time': '&#21344;&#49884;&#44260;&#50713;',
            'generic.timep': '&#21344;&#49884;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49884;&#44260;&#50713;',
            'generic.unfollow': '&#21344;&#49899;&#47196;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'generic.username': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49944;&#47756;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
            'generic.victory': '&#21344;&#49849;&#47756;&#50713;',
            'generic.wait': '&#21344;&#50137;&#50713;&#21344;&#49884;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49941;&#47364;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'generic.wins': '&#21344;&#49849;&#47756;&#50713;',
            'leaderboard.empty': '&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#48669;&#50713;',
            'matchmaker.full': '&#21344;&#49912;&#50872;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#52284;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'matchmaker.full2': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#52284;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'matchmaker.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'menu.btn.browser': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.customize': '&#52964;&#21344;&#50137;&#50713;&#21344;&#49910;&#47756;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.host': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.invite': '&#21344;&#49901;&#45840;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'menu.btn.invite.clicked': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49913;&#47364;&#50713;',
            'menu.btn.join': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'menu.btn.maps': '&#21344;&#50137;&#50713;',
            'menu.btn.mods': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.profile': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.settings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.shop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'menu.btn.social': '&#21344;&#49920;&#49661;&#50713;',
            'mod.disabled': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54876;&#21344;&#50137;&#50713;&#54868;',
            'mod.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
            'mod.extracting': '{0}&#47;{1}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'mod.invalid': '&#21344;&#50137;&#50713;&#54952;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
            'mod.loading': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'player.died': '&#89;&#111;&#117;&#32;&#100;&#105;&#101;&#100;',
            'player.disconnect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'player.inactive': '&#54876;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49961;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'player.killed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'player.killstreak': '{0}&#21344;&#50137;&#50713;&#40;&#21344;&#50137;&#50713;&#41;&#32;{1}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52376;&#52824;',
            'player.waiting': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50612;&#47484;&#32;&#21344;&#50137;&#50713;&#21344;&#49941;&#47756;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'popup.checkpoint': '&#52404;&#53356;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;&#33;',
            'purchase.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49961;&#49340;&#50713;&#21344;&#49961;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'purchase.error.click': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#60;&#47;&#97;&#62;&#21344;&#50137;&#50713;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49941;&#50137;&#50713;&#32;&#21344;&#49884;&#46328;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#33;',
            'purchase.error.limit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#47364;&#50713;&#32;&#21344;&#49916;&#46328;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44260;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'server.config.allowSpect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'server.config.autoJump': '&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.canSlide': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
            'server.config.deltaMlt': '&#53440;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.gameTime': '&#21344;&#49884;&#44260;&#50713;&#40;&#21344;&#50137;&#50713;&#41;',
            'server.config.gravMlt': '&#21344;&#49961;&#47364;&#50713;',
            'server.config.healthMlt': '&#52404;&#21344;&#50137;&#50713;&#32;&#21344;&#49849;&#49661;&#50713;',
            'server.config.impulseMlt': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#47364;&#50713;',
            'server.config.jumpMlt': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.killRewards': '&#52376;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.lives': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.maxPlayers': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;',
            'server.config.minPlayers': '&#21344;&#49933;&#49661;&#50713;&#32;&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;',
            'server.config.nameTags': '&#21344;&#49905;&#47756;&#50713;&#54364;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.nameTeam1': '&#49;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'server.config.nameTeam2': '&#50;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'server.config.private': '&#21344;&#50137;&#50713;&#21344;&#49915;&#48196;&#50713;',
            'server.config.selTeam': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'server.config.strafeSpd': '&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49928;&#46328;&#50713;',
            'server.config.thirdPerson': '&#51;&#21344;&#50137;&#50713;&#52845;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.audio.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.audio.sound': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.audio.voice': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.controls.change': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.controls.press': '&#21344;&#49891;&#48196;&#50713;&#32;&#53412;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'settings.crosshair.always': '&#21344;&#49939;&#49340;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.crosshair.color': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.image': '&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.image.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.shadow': '&#21344;&#49939;&#47756;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.size': '&#53356;&#21344;&#50137;&#50713;',
            'settings.crosshair.style': '&#21344;&#50137;&#50713;&#53440;&#21344;&#50137;&#50713;',
            'settings.crosshair.style.0': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.style.1': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.style.2': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.style.3': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50041;&#44033;&#21344;&#50137;&#50713;',
            'settings.crosshair.style.4': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50041;&#44033;&#21344;&#50137;&#50713;',
            'settings.crosshair.thickness': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.type': '&#53440;&#21344;&#50137;&#50713;',
            'settings.crosshair.type.2': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.type.3': '&#21344;&#50137;&#50713;&#21344;&#49905;&#50613;&#50713;&#21344;&#50137;&#50713;',
            'settings.crosshair.type.4': '&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
            'settings.editing.bobbing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50045;&#47548;',
            'settings.editing.depth': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'settings.editing.green': '&#21344;&#49939;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#53356;&#21344;&#50137;&#50713;',
            'settings.editing.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.editing.weapon': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.gameplay.aimsens': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44260;&#50713;&#21344;&#50137;&#50713;',
            'settings.gameplay.challenge': '&#52300;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.gameplay.fov': '&#21344;&#49884;&#50556;&#44260;&#50713;',
            'settings.gameplay.fps': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#70;&#79;&#86;',
            'settings.gameplay.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49884;&#47364;&#50713;&#21344;&#50137;&#50713;',
            'settings.gameplay.invert': '&#89;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.gameplay.onkillS': '&#52376;&#52824;&#32;&#21344;&#50137;&#50713;',
            'settings.gameplay.sensitivity': '&#21344;&#49912;&#44260;&#50713;&#21344;&#50137;&#50713;',
            'settings.gameplay.streamer': '&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.interface.chat': '&#52292;&#21344;&#50137;&#50713;&#52285;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.deaths': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.fps': '&#70;&#80;&#83;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49905;&#50137;&#50713;',
            'settings.interface.hp': '&#21344;&#50137;&#50713;&#21344;&#49905;&#45442;&#50713;&#21344;&#50137;&#50713;&#32;&#72;&#80;&#32;&#21344;&#50137;&#50713;',
            'settings.interface.kills': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#52285;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.messages': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#49960;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.ping': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.ui': '&#85;&#73;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.interface.unboxings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'settings.mods.auto': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.borders': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#54868;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.dot': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.dot.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#32;&#85;&#82;&#76;',
            'settings.mods.endmessage': '&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49960;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.profile': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.profile.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
            'settings.mods.scope': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;',
            'settings.mods.scope.paste': '&#21344;&#50137;&#50713;&#21344;&#49940;&#44260;&#50713;&#32;&#21344;&#49905;&#48196;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
            'settings.onKillS.style.0': '&#21344;&#50025;&#48376;&#21344;&#50137;&#50713;',
            'settings.onKillS.style.1': '&#21344;&#49940;&#49340;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.onKillS.style.2': '&#70;&#79;&#86;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.onKillS.style.3': '&#70;&#79;&#86;&#32;&#54869;&#21344;&#50137;&#50713;',
            'settings.quality.header': '&#54408;&#21344;&#50137;&#50713;',
            'settings.quality.mflash': '&#21344;&#49916;&#44621;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.quality.part': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#54952;&#21344;&#50137;&#50713;',
            'settings.quality.res': '&#21344;&#49940;&#49340;&#50713;&#21344;&#50137;&#50713;',
            'settings.quality.trails': '&#21344;&#49916;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.reset': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44621;&#50713;&#54868;',
            'settings.reset.confirm': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#44621;&#50713;&#54868;&#21344;&#49913;&#49884;&#44192;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;&#63;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52840;&#32;&#21344;&#49932;&#45768;&#45840;&#50713;&#46;',
            'settings.server.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.server.region': '&#21344;&#50025;&#48376;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'settings.shaders.ambient': '&#21344;&#49944;&#48669;&#50713;&#21344;&#50137;&#50713;&#53944;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
            'settings.shaders.header': '&#21344;&#50137;&#50713;&#21344;&#49905;&#45840;&#50713;',
            'social.login': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.login.buy': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'social.login.failed': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.login.proccessing': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'social.login.sell': '&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49940;&#49661;&#50713;&#32;&#21344;&#49892;&#47756;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'social.maps.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
            'social.market.back': '&#21344;&#49885;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.cant': '&#21344;&#49944;&#44621;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.failed': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;&#32;&#21344;&#49941;&#50137;&#50713;&#32;&#21344;&#49884;&#46328;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'social.market.fee': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.filter': '&#21344;&#49903;&#49340;&#50713;',
            'social.market.grace': '{0}&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.head': '&#21344;&#49928;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.listed': '{0}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;',
            'social.market.posting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'social.market.price.high': '&#21344;&#49933;&#44260;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#49661;&#50713;',
            'social.market.price.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
            'social.market.price.low': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49957;&#49661;&#50713;',
            'social.market.purchase': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.req': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#49661;&#50713;',
            'social.market.searching': '&#21344;&#49903;&#49340;&#50713;&#32;&#21344;&#50137;&#50713;',
            'social.market.sort': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.unlist': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.market.unlisting': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'social.since': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'social.user.maps': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'social.user.mods': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'streamers.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53944;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
            'streamers.views': '{0}&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52397;&#32;&#21344;&#50137;&#50713;',
            'thumbnail.upload.error': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'thumbnail.upload.limit': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#46;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52;&#48;&#107;&#98;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#53356;&#21344;&#50025;&#47564;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49903;&#45768;&#45840;&#50713;&#46;',
            'timer.end': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49948;&#44621;&#50713;&#21344;&#50137;&#50713;&#32;{0}',
            'windows.account.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.account.recover': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52397;&#21344;&#50137;&#50713;&#32;&#60;&#97;&#62;&#107;&#114;&#117;&#110;&#107;&#101;&#114;&#64;&#121;&#101;&#110;&#100;&#105;&#115;&#46;&#99;&#104;&#60;&#47;&#97;&#62;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'windows.advertise.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.back.header': '&#21344;&#49885;&#47756;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.clans.create': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.clans.header': '&#53364;&#21344;&#50137;&#50713;',
            'windows.clans.join': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.clans.login': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
            'windows.clans.members': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#40;{0}&#41;',
            'windows.clans.name': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'windows.clans.page': '&#91;{0}&#93;&#32;&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.clans.requests': '&#21344;&#50137;&#50713;&#52397;',
            'windows.clans.requests.none': '&#21344;&#50137;&#50713;&#52397;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.clans.view': '&#53364;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.class.header': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.client.header': '&#53364;&#21344;&#50137;&#50713;&#21344;&#49905;&#50613;&#50713;&#53944;',
            'windows.client.linux': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.client.mac': '&#21344;&#50137;&#50713;&#79;&#83;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.client.windows': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#52824;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.aim': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.backward': '&#21344;&#49944;&#47364;&#50713;',
            'windows.controls.chat': '&#52292;&#21344;&#50137;&#50713;',
            'windows.controls.crouch': '&#21344;&#50137;&#50713;&#53356;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.drop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.forward': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.inspect': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.interact': '&#21344;&#50137;&#50713;&#54840;&#32;&#21344;&#49948;&#50872;&#50713;',
            'windows.controls.jump': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.left': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.list': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.next': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.previous': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.reload': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.right': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.spray': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.controls.voice': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.hat.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.classes': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.cmaps': '&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;&#32;&#21344;&#50137;&#50713;',
            'windows.host.header': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.maps': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.modes': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.preset': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'windows.host.preset.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'windows.host.preset.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'windows.host.raw': '&#21344;&#49905;&#44260;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.settings': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.host.start': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.join.code': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;&#47;&#21344;&#49944;&#46328;&#50713;&#32;&#21344;&#49929;&#47364;&#50713;',
            'windows.join.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44621;&#50713;',
            'windows.loadout.body': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.class': '&#53364;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.hat': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.header': '&#21344;&#49912;&#46328;&#50713;&#21344;&#49891;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.melee': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.primary': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.secondary': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.loadout.spray': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.maps.community': '&#21344;&#50137;&#50713;&#32;&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;',
            'windows.maps.editor': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.maps.header': '&#52964;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'windows.maps.name': '&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'windows.maps.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
            'windows.maps.publish': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
            'windows.mods.community.fav': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#52286;&#21344;&#50137;&#50713;',
            'windows.mods.community.header': '&#52964;&#21344;&#49849;&#45840;&#50713;&#54000;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.mods.community.hot': '&#21344;&#49912;&#44621;&#50713;',
            'windows.mods.community.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'windows.mods.community.new': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.mods.community.none': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#52286;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#33;',
            'windows.mods.drop': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50025;&#50640;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#44144;&#45442;&#50713;&#32;&#53364;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'windows.mods.guide': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#46328;&#50713;',
            'windows.mods.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#45840;&#50713;&#21344;&#50137;&#50713;',
            'windows.mods.list': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.mods.load': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49920;&#47364;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.mods.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'windows.mods.publish': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
            'windows.mods.viewer': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.players.header': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50613;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.players.none': '&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50612;&#44032;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
            'windows.publish.map.header': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
            'windows.publish.map.login': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'windows.publish.map.paste': '&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49905;&#44621;&#50713;',
            'windows.publish.map.thumbnail': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.publish.map.update': '&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;',
            'windows.publish.mod.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;',
            'windows.publish.mod.login': '&#21344;&#50137;&#50713;&#21344;&#50034;&#47484;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49888;&#45442;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
            'windows.publish.mod.name': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49905;&#47756;&#50713;',
            'windows.publish.mod.paste': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#85;&#82;&#76;',
            'windows.publish.mod.thumbnail': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.publish.mod.update': '&#21344;&#50137;&#50713;&#21344;&#49912;&#46328;&#50713;&#47;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#53944;',
            'windows.secondary.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#54364;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.secondary.req': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49901;&#49661;&#50713;',
            'windows.secondary.unlocked': '{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.servers.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.servers.hide': '&#54400;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.servers.host': '&#43;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.servers.none': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;&#21344;&#49933;&#45840;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#46;&#46;&#46;',
            'windows.servers.online': '&#21344;&#50137;&#50713;&#32;{0}&#21344;&#50137;&#50713;&#32;&#21344;&#49849;&#46960;&#50713;&#21344;&#50137;&#50713;',
            'windows.settings.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.skin.header': '&#21344;&#50137;&#50713;&#53416;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.spray.default': '&#21344;&#50025;&#48376;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.spray.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.store.agree': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#32;{0}&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#45840;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#49933;&#46121;&#45768;&#45840;&#50713;&#46;',
            'windows.store.amount': '{0}&#32;&#75;&#82;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;',
            'windows.store.buy': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49888;&#47756;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'windows.store.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.store.login': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#44;&#32;&#21344;&#49929;&#49661;&#50713;&#21344;&#49913;&#47364;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49912;&#44621;&#50713;&#21344;&#50137;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#33;',
            'windows.store.market': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#49884;&#47364;&#50713;&#21344;&#49905;&#50137;&#50713;',
            'windows.store.market2': '&#75;&#114;&#117;&#110;&#107;&#101;&#114;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.store.purchase': '&#75;&#82;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.store.purchasing': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#46;&#46;&#46;',
            'windows.store.spin': '{0}&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.store.unlock': '&#21344;&#50137;&#50713;&#21344;&#49912;&#50872;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#53416;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#49929;&#49661;&#50713;&#21344;&#49913;&#49661;&#50713;&#21344;&#50137;&#50713;&#46;',
            'windows.store.wheels': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50052;&#47131;',
            'windows.theatre.header': '&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;&#32;&#21344;&#50137;&#50713;&#21344;&#50137;&#50713;',
            'windows.theatre.key': '&#82;&#101;&#99;&#111;&#114;&#100;&#32;&#75;&#101;&#121;',
            'windows.theatre.record': '&#21344;&#50137;&#50713;&#54868;&#32;&#54876;&#21344;&#50137;&#50713;&#54868;'
        };
    }
    , function(crM, crN, crO) {
        'use strict';
        (function(crN) {
            var crQ = crO(0x24)
              , crR = crO(0x75)
              , crS = {
                'Content-Type': 'application/x-www-form-urlencoded'
            };
            function crT(crM, crN) {
                !crQ['isUndefined'](crM) && crQ['isUndefined'](crM['Content-Type']) && (crM['Content-Type'] = crN);
            }
            var crW, crX = {
                'adapter': ('undefined' == typeof XMLHttpRequest ? void 0x0 !== crN && (crW = crO(0x5f)) : crW = crO(0x5f),
                crW),
                'transformRequest': [function(crM, crN) {
                    return crR(crN, 'Content-Type'),
                    crQ['isFormData'](crM) || crQ['isArrayBuffer'](crM) || crQ['isBuffer'](crM) || crQ['isStream'](crM) || crQ['isFile'](crM) || crQ['isBlob'](crM) ? crM : crQ['isArrayBufferView'](crM) ? crM['buffer'] : crQ['isURLSearchParams'](crM) ? (crT(crN, 'application/x-www-form-urlencoded;charset=utf-8'),
                    crM['toString']()) : crQ['isObject'](crM) ? (crT(crN, 'application/json;charset=utf-8'),
                    JSON['stringify'](crM)) : crM;
                }
                ],
                'transformResponse': [function(crM) {
                    if ('string' == typeof crM)
                        try {
                            crM = JSON['parse'](crM);
                        } catch (cs1) {}
                    return crM;
                }
                ],
                'timeout': 0x0,
                'xsrfCookieName': 'XSRF-TOKEN',
                'xsrfHeaderName': 'X-XSRF-TOKEN',
                'maxContentLength': -0x1,
                'validateStatus': function(crM) {
                    return 0xc8 <= crM && 0x12c > crM;
                }
            };
            crX['headers'] = {
                'common': {
                    'Accept': 'application/json,\x20text/plain,\x20*/*'
                }
            },
            crQ['forEach'](['delete', 'get', 'head'], function(crM) {
                crX['headers'][crM] = {};
            }),
            crQ['forEach'](['post', 'put', 'patch'], function(crM) {
                crX['headers'][crM] = crQ['merge'](crS);
            }),
            crM['exports'] = crX;
        }
        ['call'](this, crO(0xe)));
    }
    , function(cs5, cs6, cs7) {
        var cs8 = cs7(0x7)
          , cs9 = cs7(0x8)
          , csa = cs7(0x59);
        cs5['exports'] = {
            'ahNum': 0x0,
            'socket': null,
            'connected': !0x1,
            'socketId': -0x1,
            'sendQueue': [],
            'connect': function(cs5, cs6, cs7) {
                if (!this['HrUGGfNEAu']) {
                    var csa = cs8['enableHttps'] ? 'wss:' : 'ws:'
                      , csf = this;
                    try {
                        var csg = !0x1;
                        this['HrUGGfNEAu'] = new WebSocket(csa + cs5),
                        this['HrUGGfNEAu']['binaryType'] = 'arraybuffer',
                        this['HrUGGfNEAu']['onmessage'] = function(cs5) {
                            var cs6 = cs9['MqhgxSS'](cs5['data'])[0x0]
                              , cs8 = cs6[0x0]
                              , csa = cs6[0x1];
                            'io-init' == cs8 ? csf['socketId'] = csa[0x0] : cs7[cs8] ? cs7[cs8]['apply'](void 0x0, csa) : console['error']('Received\x20unregistered\x20event', cs8);
                        }
                        ,
                        this['HrUGGfNEAu']['onopen'] = function() {
                            csf['connected'] = !0x0,
                            cs6();
                            for (let cs5 of csf['sendQueue'])
                                csf['send'](cs5[0x0], ...cs5[0x1]);
                        }
                        ,
                        this['HrUGGfNEAu']['onclose'] = function() {
                            csf['connected'] = !0x1,
                            csg || cs6('Disconnected.\x20Try\x20connecting\x20to\x20another\x20server.');
                        }
                        ,
                        this['HrUGGfNEAu']['onerror'] = function() {
                            this['HrUGGfNEAu']['readyState'] != WebSocket['OPEN'] && (csg = !0x0,
                            console['error']('Socket\x20error', arguments),
                            cs6('Socket\x20error'));
                        }
                        ;
                    } catch (csm) {
                        console['error']('Socket\x20connection\x20error:', csm),
                        cs6(csm);
                    }
                }
            },
            'send': function(cs5, ...cs6) {
                if (!this['HrUGGfNEAu'] || this['HrUGGfNEAu']['readyState'] !== WebSocket['OPEN'])
                    return console['warn']('Socket\x20not\x20open\x20yet', cs5, cs6),
                    void this['sendQueue']['push']([cs5, cs6]);
                this['ahNum'] = cs9['xBFN'](this['ahNum'], csa);
                var cs7 = cs9['UTIK']([cs5, cs6], this['ahNum']);
                this['HrUGGfNEAu']['send'](cs7);
            },
            'socketReady': function() {
                return this['HrUGGfNEAu'] && this['connected'];
            }
        };
    }
    , function(csq) {
        csq['exports'] = 0x72e3;
    }
    , function(csr, css, cst) {
        (function(css) {
            var csv = cst(0x27)
              , csw = cst(0x8)
              , csx = cst(0x7)
              , csy = cst(0x29)
              , csz = cst(0x23)
              , csA = 0x0;
            csr['exports']['validConfig'] = function(csr) {
                if (csr['modes'])
                    for (var css = 0x0; css < csr['modes']['length']; ++css)
                        if (!csv['modes'][csr['modes'][css]])
                            return 'Invalid\x20Mode\x20in\x20Config.';
                if (csr['classes'])
                    for (css = 0x0; css < csr['classes']['length']; ++css)
                        if (!csy[csr['classes'][css]])
                            return 'Invalid\x20Class\x20in\x20Config.';
                if (csr['settings']) {
                    var cst = 0x0;
                    for (var csz in csr['settings'])
                        if (csr['settings']['hasOwnProperty'](csz)) {
                            var csA = csr['settings'][csz]
                              , csG = -0x1;
                            for (css = 0x0; css < csx['serverConfig']['length']; ++css)
                                if (csx['serverConfig'][css]['varN'] == csz) {
                                    csG = css;
                                    break;
                                }
                            if (0x0 > csG)
                                return 'Invalid\x20Setting\x20in\x20Config.';
                            var csH = csx['serverConfig'][csG];
                            if (!csH['input'] && !csH['bool']) {
                                if (!csw['isNumber'](csA))
                                    return 'Invalid\x20Config\x20Value.';
                                if (csA > (csH['maxF'] || csH['max']) || csA < csH['min'])
                                    return 'Config\x20Value\x20out\x20of\x20Range.';
                            }
                            if (++cst > csx['serverConfig']['length'] + 0x1)
                                return 'Settings\x20Mismatch.';
                        }
                }
                return null;
            }
            ,
            csr['exports']['validMap'] = function(csr, css) {
                if (!csw['isString'](csr['name']) || !csr['name']['replace'](/\s/g, '')['length'])
                    return 'Missing\x20map\x20name.';
                if (-0x1 !== csr['name']['indexOf']('<') || -0x1 !== csr['name']['indexOf']('>'))
                    return 'Illegal\x20characters\x20in\x20map\x20name.';
                if (0x10 < csr['name']['length'])
                    return 'Map\x20name\x20too\x20long.';
                if (!csw['isArray'](csr['spawns']) || !csr['spawns']['length'])
                    return 'Missing\x20spawn\x20points.';
                if (csr['spawns']['length'] > csx['spawnLimit'])
                    return 'Too\x20many\x20spawn\x20points.';
                for (var cst, csv = 0x0; csv < csr['spawns']['length']; ++csv) {
                    if (cst = csr['spawns'][csv],
                    !csw['isArray'](cst) || !cst['length'] || 0x3 > cst['length'] || 0x6 < cst['length'])
                        return 'Spawn\x20point\x20error.';
                    for (var csy = 0x0; csy < cst['length']; ++csy) {
                        if (0x3 > csy && !csw['isNumber'](cst[csy]))
                            return 'Spawn\x20point\x20error.';
                        if (0x3 == csy && null == cst[csy] && 0x1 == cst[csy] && 0x2 == cst[csy])
                            return 'Spawn\x20team\x20error.';
                    }
                }
                if (!csw['isArray'](csr['objects']) || !csr['objects']['length'])
                    return 'Missing\x20objects.';
                if (csr['objects']['length'] > (css ? csx['objectLimitF'] : csx['objectLimit']))
                    return 'Map\x20exceeds\x20object\x20limit.';
                var csz, csA = 0x0;
                for (csv = 0x0; csv < csr['objects']['length']; ++csv) {
                    if (0x1e == (csz = csr['objects'][csv])['i']) {
                        if (csA++,
                        null != csz['st'] && 'string' != typeof csz['st'])
                            return 'Object\x20sign\x20text\x20error.';
                        if ((csz['st'] || '')['length'] > csx['signTextLimit'])
                            return 'Object\x20sign\x20text\x20to\x20long.';
                        if (csA > csx['signLimit'])
                            return 'Too\x20many\x20signs.';
                        if (csz['sf'] && csz['sf'] > csx['signFontMax'] || csz['sf'] && csz['sf'] < csx['signFontMin'])
                            return 'Object\x20sign\x20font\x20error.';
                    }
                    if (!csw['isArray'](csz['s']) || 0x3 != csz['s']['length'] || !csw['arrayInts'](csz['s']))
                        return 'Object\x20scale\x20error.';
                    if (!csw['isArray'](csz['p']) || 0x3 != csz['p']['length'] || !csw['arrayInts'](csz['p']))
                        return 'Object\x20position\x20error.';
                    if (csw['isArray'](csz['r'])) {
                        if (0x3 != csz['r']['length'] || !csw['arrayInts'](csz['r']))
                            return 'Object\x20rotation\x20value\x20error.';
                    } else if (null != csz['r'])
                        return 'Object\x20rotation\x20error.';
                    if (null != csz['d'] && !csw['isNumber'](csz['d']))
                        return 'Object\x20direction\x20error.';
                    csz['col'] = !!csz['col'];
                }
                return null;
            }
            ,
            csr['exports']['obj'] = function(csP, csQ, csR, csS, csT, csU, csV, csW, csX) {
                this['isCustom'] = csP,
                this['isPrimary'] = 0x0 == csQ,
                this['sid'] = csA++,
                this['gameInstance'] = null,
                this['connectedClients'] = 0x0,
                this['password'] = void 0x0,
                this['pendingGameId'] = null,
                this['gameClosed'] = !0x1,
                this['map'] = new csv['manager'](csS,csU,csw,csx),
                this['store'] = cst(0x46),
                this['attach'] = cst(0x4c),
                this['weapons'] = cst(0x16),
                this['classes'] = csy,
                this['streaks'] = cst(0x4d),
                this['maxStreak'] = this['streaks']['sort']((csr,css)=>csr['kills'] < css['kills'] ? 0x1 : css['kills'] < csr['kills'] ? -0x1 : 0x0)[0x0]['kills'],
                this['sprays'] = cst(0x4e),
                this['triggers'] = cst(0x28),
                this['projectiles'] = new (cst(0x5b))(this,csV),
                this['controls'] = null,
                this['players'] = new (cst(0x47))['manager'](this,csS,csT,csU,csw,csx,csV),
                this['endData'] = {
                    'ed': [],
                    'vo': null
                },
                this['endTimer'] = 0x0,
                this['banList'] = [],
                this['destObjs'] = [],
                this['hideWeapon'] = [!0x1, !0x1, !0x1];
                var ct0, ct1, ct2, ct3 = this;
                this['applyConfig'] = function(csr, css, cst, csv) {
                    csr = csr || {},
                    this['config'] = {};
                    for (var csy, csz = 0x0; csz < csx['serverConfig']['length']; ++csz)
                        if ((csy = csx['serverConfig'][csz])['bool'])
                            this['config'][csy['varN']] = null == csr[csy['varN']] ? csy['def'] : !!csr[csy['varN']];
                        else if (csy['input']) {
                            var csA = csr[csy['varN']];
                            csw['isString'](csA) || (csA = csy['def']),
                            this['config'][csy['varN']] = csw['sanitizeStr'](csA),
                            0x10 < csA['length'] && (csA = csA['substring'](0x0, 0x10));
                        } else {
                            csA = csr[csy['varN']];
                            csw['isNumber'](csA) || (csA = csy['def']),
                            this['config'][csy['varN']] = csw['limitMM'](csA, csy['min'], css && csy['maxF'] || csy['max']);
                        }
                    if (this['config']['maps'] = csr['maps'],
                    !csw['isArray'](this['config']['maps']) || !this['config']['maps']['length'] || this['config']['maps']['length'] > this['map']['maps']['length']) {
                        this['config']['maps'] = [];
                        for (csz = 0x0; csz < this['map']['maps']['length']; csz++)
                            this['config']['maps']['push'](csz);
                    } else
                        for (csz = 0x0; csz < this['config']['maps']['length']; csz++)
                            if (!this['map']['maps'][this['config']['maps'][csz]]) {
                                this['config']['maps'] = [0x0];
                                break;
                            }
                    if (this['config']['modes'] = csr['modes'],
                    !csw['isArray'](this['config']['modes']) || !this['config']['modes']['length'] || this['config']['modes']['length'] > this['map']['modes']['length'])
                        this['config']['modes'] = null;
                    else
                        for (csz = 0x0; csz < this['config']['modes']['length']; csz++)
                            if (!this['map']['modes'][this['config']['modes'][csz]]) {
                                this['config']['modes'] = null;
                                break;
                            }
                    var csP = !0x1;
                    if (this['config']['classes'] = csr['classes'],
                    !csw['isArray'](this['config']['classes']) || !this['config']['classes']['length'] || this['config']['classes']['length'] > this['classes']['length'])
                        csP = !0x0;
                    else
                        for (csz = 0x0; csz < this['config']['classes']['length']; csz++)
                            if (!this['classes'][this['config']['classes'][csz]]) {
                                csP = !0x0;
                                break;
                            }
                    if (csP) {
                        this['config']['classes'] = [];
                        for (csz = 0x0; csz < this['classes']['length']; csz++)
                            this['config']['classes']['push'](csz);
                    }
                    this['config']['isFromQueue'] = csv;
                }
                ,
                this['applyConfig'](),
                this['getInfo'] = function() {
                    return this['mode']['alias'] + '_' + this['map']['maps'][this['mapIndex']]['name'];
                }
                ,
                this['customMap'] = function(css, cst, csv, csw, csy) {
                    if (css)
                        try {
                            var csz = JSON['parse'](css);
                            if (csV && (this['customMapData'] = {
                                'data': css,
                                'id': cst,
                                'featured': csw,
                                'creator': csv
                            }),
                            !csy) {
                                var csA = csr['exports']['validMap'](csz, csw);
                                if (csA)
                                    return csA;
                            }
                            for (var csP = 0x0; csP < csz['objects']['length']; ++csP) {
                                if (csz['objects'][csP]['i'] = csx['prefabIDS'][csz['objects'][csP]['i'] || csz['objects'][csP]['id'] || 0x0],
                                !csz['objects'][csP]['i'])
                                    return 'Object\x20ID\x20error.';
                                if (csz['objects'][csP]['t'] = csx['textureIDS'][csz['objects'][csP]['t'] || 0x0],
                                !csz['objects'][csP]['t'])
                                    return 'Object\x20Texture\x20error.';
                            }
                            csz['creator'] = csv,
                            this['map']['setMaps']([csz]),
                            this['config']['maps'] = [0x0];
                        } catch (ctk) {
                            return 'Map\x20error\x20occured.';
                        }
                }
                ,
                this['playSound'] = function(csr, css, cst, csv, csw) {
                    if (css)
                        if (csT)
                            csT['play'](csr, css, !0x1, csw);
                        else
                            for (var csx = 0x0; csx < this['players']['list']['length']; ++csx)
                                ((ct0 = this['players']['list'][csx])['active'] || ct0['spectating']) && (cst != ct0 || csv) && csV['send'](ct0['id'], 's', csr, cst['sid'], css);
                }
                ,
                this['playerSound'] = function(csr, css, cst, csv, csx, csy) {
                    ct0 = csv || this['players']['findBySid'](css);
                    var csz = Howler['pos']();
                    ct0 && !(csy && csy < csw['getDistance3D'](ct0['x'], ct0['y'], ct0['z'], csz[0x0], csz[0x1], csz[0x2])) && csT['play3D'](csr, ct0['x'], ct0['y'], ct0['z'], cst || 0x1, csx);
                }
                ,
                this['moveObj'] = function(csr, css, cst, csv) {
                    csr['x'] = css,
                    csr['y'] = cst,
                    csr['z'] = csv,
                    csr['meshRef'] && csr['meshRef']['position']['set'](css, cst, csv);
                }
                ,
                this['explosion'] = function(csr, css, cst, csv, csx, csy, csz) {
                    for (var csA = 0x0; csA < this['players']['list']['length']; ++csA)
                        if (((ct0 = this['players']['list'][csA])['active'] || ct0['spectating']) && (csV['send'](ct0['id'], 'ex', Math['round'](csr), Math['round'](css), Math['round'](cst), Math['round'](csv)),
                        ct0['active'])) {
                            var csP = csw['getDistance3D'](csr, css, cst, ct0['x'], ct0['y'], ct0['z'])
                              , csQ = 0x1 - csP / csv;
                            0x0 < csQ && this['players']['changeHealth'](ct0, csy, csx * csQ, csy == ct0) && this['players']['kill'](ct0, csy, {
                                'dst': csP,
                                'weaponId': csz['weaponId'],
                                'weapon': csz['weapon']
                            });
                        }
                }
                ;
                var ctM = [];
                this['getSpawnPoint'] = function(csr, css, cst) {
                    if (cst)
                        return this['map']['spawns'][0x0];
                    ctM['length'] = 0x0;
                    for (var csv, csy = 0x0; csy < this['map']['spawns']['length']; ++csy) {
                        this['map']['spawns'][csy]['dst'] = 0x0;
                        for (var csz = 0x0; csz < this['players']['list']['length']; ++csz)
                            (ct0 = this['players']['list'][csz]) && ct0['active'] && ct0 != css && (!csr || ct0['team'] != csr) && !this['canSee'](ct0, this['map']['spawns'][csy]['x'], this['map']['spawns'][csy]['y'] + csx['playerHeight'], this['map']['spawns'][csy]['z']) && (this['map']['spawns'][csy]['dst']++,
                            0x0);
                    }
                    this['map']['spawns']['sort'](csw['orderByDst']),
                    csv = this['map']['spawns'][0x0]['dst'];
                    for (csy = 0x0; csy < this['map']['spawns']['length']; ++csy)
                        if (this['map']['spawns'][csy]['dst'] == csv) {
                            this['map']['spawns'][csy]['dst'] = 0x0;
                            for (csz = 0x0; csz < this['players']['list']['length']; ++csz)
                                (ct0 = this['players']['list'][csz])['active'] && ct0 != css && (!csr || ct0['team'] != csr) && (this['map']['spawns'][csy]['dst'] += csw['getDistance3D'](this['map']['spawns'][csy]['x'], this['map']['spawns'][csy]['y'], this['map']['spawns'][csy]['z'], ct0['x'], ct0['y'], ct0['z']));
                            (csr && this['map']['spawns'][csy]['team'] == csr || !this['map']['spawns'][csy]['team']) && ctM['push'](this['map']['spawns'][csy]);
                        }
                    return ctM['sort'](csw['orderByDst']),
                    ctM['reverse'](),
                    ctM[0x0] || this['map']['spawns'][0x0];
                }
                ,
                this['canSee'] = function(csr, css, cst, csv, csy) {
                    if (!csr)
                        return !0x1;
                    csy = csy || 0x0;
                    for (var csz, csA = csw['getDistance3D'](csr['x'], csr['y'], csr['z'], css, cst, csv), csP = csw['getDirection'](csr['z'], csr['x'], csv, css), csQ = csw['getDirection'](csw['getDistance'](csr['x'], csr['z'], css, csv), cst, 0x0, csr['y']), csR = 0x1 / (csA * Math['sin'](csP - Math['PI']) * Math['cos'](csQ)), csS = 0x1 / (csA * Math['cos'](csP - Math['PI']) * Math['cos'](csQ)), csT = 0x1 / (csA * Math['sin'](csQ)), csU = csr['y'] + csr['height'] - csx['cameraHeight'], csV = 0x0; csV < this['map']['manager']['objects']['length']; ++csV)
                        if (!(csz = this['map']['manager']['objects'][csV])['noShoot'] && csz['active'] && !csz['transparent']) {
                            var csW = csw['lineInRect'](csr['x'], csr['z'], csU, csR, csS, csT, csz['x'] - Math['max'](0x0, csz['width'] - csy), csz['z'] - Math['max'](0x0, csz['length'] - csy), csz['y'] - Math['max'](0x0, csz['height'] - csy), csz['x'] + Math['max'](0x0, csz['width'] - csy), csz['z'] + Math['max'](0x0, csz['length'] - csy), csz['y'] + Math['max'](0x0, csz['height'] - csy));
                            if (csW && 0x1 > csW)
                                return csW;
                        }
                    var csX = this['map']['terrain'];
                    if (csX) {
                        var ct0 = csX['raycast'](csr['x'], -csr['z'], csU, 0x1 / csR, -0x1 / csS, 0x1 / csT);
                        if (ct0)
                            return csw['getDistance3D'](csr['x'], csr['y'], csr['z'], ct0['x'], ct0['z'], -ct0['y']);
                    }
                    return null;
                }
                ,
                this['updateAccounts'] = function() {
                    for (var csr = [], css = 0x0; css < this['players']['list']['length']; ++css)
                        (ct0 = this['players']['list'][css])['account'] && !ct0['account']['hack'] && ct0['logTime'] >= ct0['playTime'] / 0x3 && (ct0['account']['timePlayed'] += ct0['playTime'] || 0x0,
                        null == this['host'] && (ct0['account']['games']++,
                        ct0['account']['kills'] += ct0['kills'],
                        ct0['account']['deaths'] += ct0['deaths'],
                        ct0['account']['score'] += ct0['score'],
                        ct0['didWin'] && ct0['account']['wins']++),
                        csV['send'](ct0['id'], 'ua', ct0['account']['getData']()),
                        csr['push'](ct0));
                    csr['length'] && this['saveRewards'](csr);
                }
                ,
                this['saveRewards'] = function(csr) {
                    for (var css = '', cst = 0x0; cst < csr['length']; ++cst)
                        csr[cst] && csr[cst]['account'] && csr[cst]['reward'] && (css += (css['length'] ? ',' : '') + csr[cst]['account']['id'] + ',' + csr[cst]['reward']);
                    css['length'] && csR['call'](0x14, [css], function(css, cst) {
                        if (cst && cst[0x0] && cst[0x0][0x0] && (cst = cst[0x0][0x0]['result']))
                            try {
                                cst = cst['split'](',');
                                for (var csv, csw = 0x0; csw < cst['length']; ++csw)
                                    (csv = parseInt(cst[csw])) && csr[csw] && (csr[csw]['account']['funds'] = csv,
                                    csV['send'](csr[csw]['id'], 'uf', csv));
                            } catch (cuj) {}
                    });
                }
                ,
                this['incStat'] = function(csr, css) {
                    css && css['account'] && null == this['host'] && (!css['account']['stats'][csr] && (css['account']['stats'][csr] = 0x0),
                    css['account']['stats'][csr]++);
                }
                ,
                this['savePlayerData'] = function(csr) {
                    if (csR && csr['account']) {
                        var css = csr['account'];
                        css && csR['call'](0x2, [css['id'], css['kills'], css['wins'], css['games'], css['deaths'], css['score'], css['clan'], css['timePlayed'], JSON['stringify'](css['stats'])]);
                    }
                }
                ,
                this['lockPlayer'] = function(csr, css) {
                    csr['locked'] = css,
                    csV['send'](csr['id'], 'lock', css);
                }
                ,
                this['updateTeam'] = function(csr, css) {
                    csr['team'] = css;
                    for (var cst = 0x0; cst < csr['sentTo']['length']; ++cst)
                        csV['send'](csr['sentTo'][cst], 'tm', csr['sid'], css);
                    this['players']['syncLeaders']();
                }
                ,
                this['startNuke'] = function(csr) {
                    this['nukeTimer'] = 0x2710,
                    this['nukePlayer'] = csr,
                    csV['broadcast']('game' + this['sid'], 'n', 0x0);
                }
                ;
                var cuu = [];
                this['infectRandom'] = function() {
                    cuu['length'] = 0x0;
                    for (var csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        this['players']['list'][csr]['active'] && cuu['push'](csr);
                    var css = 0x1;
                    0xe <= cuu['length'] ? css = 0x3 : 0x8 <= cuu['length'] && (css = 0x2);
                    var cst;
                    for (csr = 0x0; csr < css; ++csr)
                        cst = csw['randInt'](0x0, cuu['length'] - 0x1),
                        (ct0 = this['players']['list'][cuu[cst]]) && (this['updateTeam'](ct0, 'inf'),
                        this['players']['kill'](ct0, null, null, !0x0),
                        csV['broadcast']('game' + this['sid'], 'ac', ct0['sid'], null, 'got\x20infected')),
                        cuu['splice'](cst, 0x1);
                }
                ,
                this['pickSimon'] = function() {
                    cuu['length'] = 0x0;
                    for (var csr = null, css = 0x0; css < this['players']['list']['length']; ++css)
                        if (this['players']['list'][css]['active']) {
                            if (this['host'] == this['players']['list'][css]['id']) {
                                csr = this['players']['list'][css];
                                break;
                            }
                            cuu['push'](css);
                        }
                    csr || (csr = this['players']['list'][cuu[csw['randInt'](0x0, cuu['length'] - 0x1)]]),
                    csr && (this['updateTeam'](csr, 'simon'),
                    csr['maxHealth'] = 0x1388,
                    csr['health'] = csr['maxHealth'],
                    csV['send'](csr['id'], 'h', csr['health']));
                }
                ,
                this['pickBoss'] = function() {
                    cuu['length'] = 0x0;
                    for (var csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        this['players']['list'][csr]['active'] && cuu['push'](csr);
                    (ct0 = this['players']['list'][cuu[csw['randInt'](0x0, cuu['length'] - 0x1)]]) && (this['updateTeam'](ct0, 'boss'),
                    ct0['maxHealth'] = 0x2710,
                    ct0['health'] = ct0['maxHealth'],
                    ct0['regen'] = 0x0,
                    csV['send'](ct0['id'], 'h', ct0['health']));
                }
                ,
                this['lockSeekers'] = function() {
                    for (var csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        this['players']['list'][csr]['active'] && 'seek' == this['players']['list'][csr]['team'] && this['lockPlayer'](this['players']['list'][csr], !0x0);
                }
                ,
                this['pickSeeker'] = function() {
                    cuu['length'] = 0x0;
                    for (var csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        this['players']['list'][csr]['active'] && cuu['push'](csr);
                    (ct0 = this['players']['list'][cuu[csw['randInt'](0x0, cuu['length'] - 0x1)]]) && (this['updateTeam'](ct0, 'seek'),
                    this['lockPlayer'](ct0, !0x0));
                }
                ,
                this['releaseSeeker'] = function() {
                    for (var csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        'seek' == (ct0 = this['players']['list'][csr])['team'] && this['lockPlayer'](ct0, !0x1);
                }
                ,
                this['destroyObj'] = function(csr) {
                    for (var css = 0x0; css < ct3['map']['manager']['objects']['length']; ++css)
                        if ((ct0 = ct3['map']['manager']['objects'][css])['uid'] == csr) {
                            ct0['active'] = !0x1,
                            ct0['meshRef'] && (ct0['meshRef']['visible'] = !0x1),
                            csS && csS['updateShadowMap']();
                            break;
                        }
                }
                ,
                this['respawnObj'] = function(csr) {
                    for (var css = 0x0; css < ct3['map']['manager']['objects']['length']; ++css)
                        if ((ct0 = ct3['map']['manager']['objects'][css])['uid'] == csr) {
                            ct3['destObjs']['splice'](ct3['destObjs']['indexOf'](ct0['uid']), 0x1),
                            ct0['active'] = !0x0,
                            null != ct0['health'] && (ct0['health'] = ct0['startHealth']),
                            ct0['meshRef'] && (ct0['meshRef']['visible'] = !0x0),
                            csS && csS['updateShadowMap']();
                            break;
                        }
                }
                ,
                this['capFlag'] = function(csr, css) {
                    csV && (csr['caps']++,
                    csr['flag'] = null,
                    this['teams'][csr['team']] ? this['teams'][csr['team']]++ : this['teams'][csr['team']] = 0x1,
                    csV['broadcast']('game' + this['sid'], 'ts', csr['team'], this['teams'][csr['team']]),
                    csV['broadcast']('game' + ct3['sid'], 'ac', csr['sid'], null, 'captured\x20the\x20Flag'),
                    csV['send'](csr['id'], 'am', ['Capture', 0x96]),
                    this['players']['score'](csr, 0x96),
                    this['resetFlag'](css));
                }
                ,
                this['updateFlagCol'] = function(csr, css) {
                    css && css['team'] && csr['teamCol'] != css['team'] && csr['meshRef'] && (csr['teamCol'] = css['team'],
                    csr['meshRef']['material'] = csS['getMat']('crystal_0', ct3['map']['manager']['getFlagDat'](csr['team'], css)),
                    csr['meshRef']['zoneMesh']['material'] = csS['getMat']('zone_r', ct3['map']['manager']['getZoneDat'](csr['team'], css)));
                }
                ,
                this['updateFlags'] = function(csr, css) {
                    if (ct3['mode'] && ct3['mode']['flags']) {
                        for (var cst = !0x1, csv = !0x1, csw = 0x0; csw < ct3['map']['manager']['flags']['length']; ++csw)
                            (ct0 = ct3['map']['manager']['flags'][csw])['meshRef'] && (csr && ct3['updateFlagCol'](ct0, csr),
                            ct0['carrier'] ? (csr && ct0['team'] == csr['team'] && (csv = !0x0),
                            csr && ct0['carrier'] == csr['sid'] && (cst = !0x0),
                            (ct1 = ct3['players']['findBySid'](ct0['carrier'])) && csS['moveMesh'](ct0['meshRef'], ct1['x'], ct1['y'] + csx['flagHOff'], ct1['z'])) : csS['moveMesh'](ct0['meshRef'], ct0['x'], ct0['y'], ct0['z']),
                            ct0['bobAnimY'] = (ct0['bobAnimY'] || 0x0) + 0.003 * css,
                            ct0['meshRef']['position']['y'] += Math['cos'](ct0['bobAnimY']),
                            ct0['meshRef']['rotation']['y'] += 0.002 * css);
                        csv && cst ? gameMessage['innerHTML'] != csx['flagMsgRC'] && (gameMessage['innerHTML'] = csx['flagMsgRC']) : csv ? gameMessage['innerHTML'] != csx['flagMsgE'] && (gameMessage['innerHTML'] = csx['flagMsgE']) : cst ? gameMessage['innerHTML'] != csx['flagMsg'] && (gameMessage['innerHTML'] = csx['flagMsg']) : '' != gameMessage['innerHTML'] && (gameMessage['innerHTML'] = ''),
                        specGameMessage['innerHTML'] = gameMessage['innerHTML'];
                    }
                }
                ,
                this['updateFlag'] = function(csr, css, cst, csv, csw) {
                    for (var csx = 0x0; csx < ct3['map']['manager']['flags']['length']; ++csx)
                        if ((ct0 = ct3['map']['manager']['flags'][csx])['uid'] == csr) {
                            ct0['carrier'] = csw,
                            ct3['moveObj'](ct0, css, cst, csv);
                            break;
                        }
                }
                ,
                this['dropFlag'] = function(csr) {
                    if (csV && csr && csr['carrier']) {
                        var css = this['players']['findBySid'](csr['carrier']);
                        this['updateCarrier'](csr),
                        css ? (csV['broadcast']('game' + ct3['sid'], 'ac', css['sid'], null, 'dropped\x20the\x20Flag'),
                        css['flag'] = null,
                        this['updateObjPos'](csr, css['x'], css['y'] + csx['flagOff'], css['z'])) : this['updateObjPos'](csr, csr['orgX'], csr['orgY'], csr['orgZ']);
                    }
                }
                ,
                this['pickupFlag'] = function(csr, css) {
                    csV && ct3['mode'] && ct3['mode']['flags'] && !css['carrier'] && (csr['team'] == css['team'] ? (css['x'] != css['orgX'] || css['y'] != css['orgY'] || css['z'] != css['orgZ']) && (csV['broadcast']('game' + ct3['sid'], 'ac', csr['sid'], null, 'returned\x20the\x20Flag'),
                    csV['send'](csr['id'], 'am', ['Return', 0x32]),
                    this['players']['score'](csr, 0x32),
                    this['resetFlag'](css)) : !csr['flag'] && (csV['send'](csr['id'], 'am', ['Pickup', 0x14]),
                    this['players']['score'](csr, 0x14),
                    this['updateCarrier'](css, csr),
                    csV['broadcast']('game' + ct3['sid'], 'ac', csr['sid'], null, 'got\x20the\x20Flag')));
                }
                ,
                this['syncFlag'] = function(csr) {
                    csV['broadcast']('game' + ct3['sid'], 'ufl', csr['uid'], csr['x']['round'](0x1), csr['y']['round'](0x1), csr['z']['round'](0x1), csr['carrier'] || 0x0);
                }
                ,
                this['updateCarrier'] = function(csr, css) {
                    csr['carrier'] = css ? css['sid'] : 0x0,
                    css && (css['flag'] = csr),
                    this['syncFlag'](csr);
                }
                ,
                this['resetFlags'] = function() {
                    for (var csr = 0x0; csr < ct3['map']['manager']['flags']['length']; ++csr)
                        if ((ct0 = ct3['map']['manager']['flags'][csr])['carrier'] = 0x0,
                        ct0['x'] = ct0['orgX'],
                        ct0['y'] = ct0['orgY'],
                        ct0['z'] = ct0['orgZ'],
                        ct0['meshRef']) {
                            var css = !(!ct3['mode'] || !ct3['mode']['flags']);
                            ct0['meshRef']['visible'] = css,
                            ct0['meshRef']['zoneMesh']['visible'] = css;
                        }
                }
                ,
                this['resetFlag'] = function(csr) {
                    this['updateObjPos'](csr, csr['orgX'], csr['orgY'], csr['orgZ']),
                    this['updateCarrier'](csr);
                }
                ,
                this['updatePickup'] = function(csr, css, cst, csv) {
                    if (ct0 = this['map']['manager']['findByUid'](csr, this['map']['manager']['pickups'])) {
                        if (csS) {
                            ct1 = ct0['meshRef'];
                            var csw = csv || [ct1['position']['x'], ct1['position']['y'], ct1['position']['z']];
                            csS['scene']['remove'](ct0['meshRef']),
                            ct0['meshRef'] = csS['loadMesh']({
                                'src': 'weapons/' + this['weapons'][css || 0x0]['src'],
                                'texSrc': 'weapons/' + this['weapons'][css || 0x0]['src'],
                                'noGroup': !0x0,
                                'noShadow': !0x0,
                                'transparent': !0x0,
                                'noFog': !0x0
                            }, ...csw, 0x0, this['weapons'][css || 0x0]['scale'], csS['scene']),
                            ct0['meshRef']['rotation']['copy'](ct1['rotation']['clone']()),
                            ct0['meshRef']['visible'] = null != css;
                        }
                        ct0['x'] = csv ? csv[0x0] : ct0['orgX'],
                        ct0['y'] = csv ? csv[0x1] : ct0['orgY'],
                        ct0['z'] = csv ? csv[0x2] : ct0['orgZ'],
                        cst && (ct0['orgPickup'] = cst),
                        ct0['pickup'] = css;
                    }
                }
                ,
                this['resetPickups'] = function() {
                    for (var csr = 0x0; csr < ct3['map']['manager']['pickups']['length']; ++csr)
                        (ct0 = ct3['map']['manager']['pickups'][csr])['pickup'] = ct0['orgPickup'],
                        ct0['x'] = ct0['orgX'],
                        ct0['y'] = ct0['orgY'],
                        ct0['z'] = ct0['orgZ'],
                        csS && (ct1 = ct0['meshRef'],
                        csS['scene']['remove'](ct0['meshRef']),
                        ct0['meshRef'] = csS['loadMesh']({
                            'src': 'weapons/' + ct3['weapons'][ct0['pickup']]['src'],
                            'texSrc': 'weapons/' + ct3['weapons'][ct0['pickup']]['src'],
                            'noGroup': !0x0,
                            'noShadow': !0x0,
                            'transparent': !0x0,
                            'noFog': !0x0
                        }, ct0['x'], ct0['y'] - csx['pickupZoneH'] / 0x2 + csx['pickupOff'], ct0['z'], 0x0, ct3['weapons'][ct0['pickup']]['scale'], csS['scene']),
                        ct0['meshRef']['rotation']['copy'](ct1['rotation']['clone']()),
                        ct0['meshRef']['visible'] = !0x0);
                }
                ,
                this['increaseWeapon'] = function(csr, css) {
                    (ct0 = null == css['weaponId'] ? [css['weaponId']] : [...csr['loadout']])['length'] = 0x1,
                    csr['weaponTier']++,
                    ct0[0x0] = csr['weaponTier'] >= this['mode']['weaponOrder']['length'] ? this['mode']['weaponOrder'][this['mode']['weaponOrder']['length'] - 0x1] : this['mode']['weaponOrder'][csr['weaponTier']],
                    csV['broadcast']('game' + this['sid'], 'inat', csr['sid'], ct0, 0x0, void 0x0, void 0x0, !0x1),
                    csr['updateLoadout'](this, 0x0, !0x0, ...ct0);
                }
                ,
                this['decreaseWeapon'] = function(csr) {
                    (ct0 = [...csr['loadout']])['length'] = 0x1,
                    csr['weaponTier']--,
                    0x0 > csr['weaponTier'] ? csr['weaponTier'] = 0x0 : csr['setbacks']++,
                    ct0[0x0] = this['mode']['weaponOrder'][csr['weaponTier']],
                    csV['broadcast']('game' + this['sid'], 'inat', csr['sid'], ct0, 0x0, void 0x0, void 0x0, !0x1),
                    csr['updateLoadout'](this, 0x0, !0x0, ...ct0);
                }
                ,
                this['updateGate'] = function(csr, css) {
                    for (var cst = 0x0; cst < ct3['map']['manager']['gates']['length']; ++cst)
                        if ((ct0 = ct3['map']['manager']['gates'][cst])['uid'] == csr) {
                            ct0['active'] = css,
                            ct0['meshRef'] && (ct0['meshRef']['visible'] = css),
                            csS && csS['updateShadowMap']();
                            break;
                        }
                }
                ,
                this['resetGates'] = function() {
                    for (var csr = 0x0; csr < ct3['map']['manager']['gates']['length']; ++csr)
                        (ct0 = ct3['map']['manager']['gates'][csr])['active'] = !0x0,
                        ct0['meshRef'] && (ct0['meshRef']['visible'] = !0x0);
                }
                ,
                this['updateObjPos'] = function(csr, css, cst, csv) {
                    csr['x'] = css,
                    csr['y'] = cst,
                    csr['z'] = csv,
                    this['syncFlag'](csr);
                }
                ,
                this['updateZone'] = function(csr) {
                    ct3['map']['zone']['update'](csr);
                }
                ,
                this['resetZone'] = function() {
                    ct3['map']['zone'] && ct3['map']['zone']['reset']();
                }
                ,
                this['setObjective'] = function(csr) {
                    try {
                        ct3['activeObjective'] = csr;
                        for (var css = 0x0; css < ct3['map']['manager']['objectives']['length']; ++css)
                            ct3['map']['manager']['objectives'][css]['mesh']['visible'] = csr == css;
                    } catch (cvr) {}
                }
                ,
                this['nextObjective'] = function(csr, css) {
                    if (this['activeObjective']++,
                    this['activeObjective'] >= this['map']['manager']['objectives']['length'] && (this['activeObjective'] = 0x0),
                    csV['broadcast']('game' + this['sid'], 'obj', this['activeObjective']),
                    0x1 < this['map']['manager']['objectives']['length']) {
                        var cst = {
                            'time': 0xea60 - (csr || 0x0),
                            'contTime': !0x0,
                            'canDMG': !0x0,
                            'msg': 'next\x20objective\x20',
                            'trigger': function(csr, css) {
                                csr['nextObjective'](css);
                            }
                        };
                        css && this['waitTimers'] ? this['waitTimers']['push'](cst) : this['waitTimers'] = [cst];
                    }
                }
                ,
                this['setCheckPoint'] = function(csr, css) {
                    if (ct0 = {
                        'x': css['x'],
                        'y': css['y'],
                        'z': css['z'],
                        'dir': css['dir']
                    },
                    ct1 = Object['values'](ct0)['join'](','),
                    !csr['checkPoint'] || Object['entries'](csr['checkPoint'])['toString']() !== Object['entries'](ct0)['toString']()) {
                        if (css['singleUse']) {
                            if (csr['checkPointList']['includes'](ct1))
                                return;
                            csr['checkPointList']['push'](ct1);
                        }
                        csr['checkPoint'] = ct0,
                        csV && csV['send'](csr['id'], 'chp');
                    }
                }
                ,
                this['checkTeleport'] = function(csr, css) {
                    if (!(0x1 == css['node'] || 0x0 < css['telCooldown'])) {
                        for (var cst = [], csv = 0x0; csv < this['map']['manager']['teleporters']['length']; ++csv)
                            (ct0 = this['map']['manager']['teleporters'][csv])['channel'] == css['channel'] && 0x0 < ct0['node'] && css['uid'] != ct0['uid'] && cst['push'](ct0);
                        if (cst['length']) {
                            var csw = cst[0x0];
                            csw && (0x2 == csw['node'] && (csw['telCooldown'] = 0x7d0),
                            ct3['players']['changePosition'](csr, csw['x'], csw['y'] - csw['height'], csw['z'], csw['telStopMo']));
                        }
                    }
                }
                ,
                this['updateTeleporters'] = function(csr) {
                    if (ct3['map']['manager']['teleporters']['length'])
                        for (var css = 0x0; css < ct3['map']['manager']['teleporters']['length']; ++css)
                            (ct0 = ct3['map']['manager']['teleporters'][css])['telCooldown'] -= csr,
                            0x0 >= ct0['telCooldown'] && (ct0['telCooldown'] = 0x0);
                }
                ,
                this['updateDetructables'] = function(csr) {
                    if (csV && this['destObjs']['length'])
                        for (var css = 0x0; css < this['map']['manager']['objects']['length']; ++css)
                            ct0 = this['map']['manager']['objects'][css],
                            -0x1 < (ct1 = ct3['destObjs']['indexOf'](ct0['uid'])) && ct0['canRespawn'] && (!ct0['respawnT'] && ct0['respawnR'] && (ct0['respawnT'] = csw['randInt'](0x1, 0x1388)),
                            ct0['respawnT'] -= csr,
                            0x0 >= ct0['respawnT'] && (this['destObjs']['splice'](ct1, 0x1),
                            ct0['active'] = !0x0,
                            ct0['respawnT'] = ct0['respawnR'] ? 0x0 : ct0['respawnTStart'],
                            null != ct0['health'] && (ct0['health'] = ct0['startHealth']),
                            csV['broadcast']('game' + this['sid'], 'ro', ct0['uid']),
                            ct0 && ct0['onRespawn'] && ct0['destroyedBy'] && this['onTrigger'](ct0['destroyedBy'], ct0),
                            ct0['destroyedBy'] = null));
                }
                ,
                this['updateUI'] = function() {
                    killCount['style']['display'] = this['mode']['friendly'] ? 'none' : 'inline-block';
                }
                ,
                this['instanceConfig'] = function() {}
                ,
                this['voteMatch'] = function(csr, css) {
                    this['endData']['vo'] && (this['endData']['vo'][csr] = this['endData']['vo'][csr] == css ? null : css,
                    csV['broadcast']('game' + this['sid'], 'mv', this['endData']['vo'], this['endData']['mts']));
                }
                ;
                var cvK = [];
                this['init'] = function(csr, csy, csA) {
                    this['players']['clear'](),
                    this['teams'] = {},
                    cvK['length'] = 0x0;
                    var csP = null;
                    if (this['endData']['mts']) {
                        for (var csQ = 0x0; csQ < this['endData']['mts']['length']; ++csQ)
                            if (0x0,
                            cvK[csQ] = 0x0,
                            this['endData']['vo'])
                                for (var csR in this['endData']['vo'])
                                    this['endData']['vo']['hasOwnProperty'](csR) && this['endData']['mts'][csQ] == this['endData']['vo'][csR] && cvK[csQ]++;
                        var csS = 0x0;
                        for (csQ = 0x0; csQ < cvK['length']; ++csQ)
                            cvK[csQ] > csS && (csS = cvK[csQ],
                            csP = this['endData']['mts'][csQ]);
                        0x0 == csS && (csP = this['endData']['mts'][0x0] || null);
                    }
                    if (null != csP) {
                        var csU = csP['split'](',');
                        this['modeIndex'] = parseInt(csU[0x0]),
                        this['mapIndex'] = parseInt(csU[0x1]);
                    } else
                        this['modeIndex'] = null == csy ? this['config']['modes'] ? this['config']['modes'][csw['randInt'](0x0, this['config']['modes']['length'] - 0x1)] : csw['randInt'](0x0, 0x3) : csy,
                        this['mapIndex'] = null == csr ? this['config']['maps'][csw['randInt'](0x0, this['config']['maps']['length'] - 0x1)] : csr;
                    if (this['destObjs']['length'] = 0x0,
                    this['mode'] = csv['modes'][this['modeIndex']],
                    this['map']['generate'](this['mapIndex'], this['mode'], csA),
                    this['resetFlags'](),
                    this['resetPickups'](),
                    this['resetGates'](),
                    this['resetZone'](),
                    this['minPlayers'] = this['config']['minPlayers'] || this['mode']['minPlayers'],
                    !this['minPlayers'] && (this['config']['lives'] || this['mode']['lives'] || 0x0) && (this['minPlayers'] = 0x2),
                    this['zoneTimer'] = 0x0,
                    this['nukeTimer'] = 0x0,
                    this['objectiveTimer'] = 0x0,
                    this['activeObjective'] = null,
                    this['gameTimer'] = null == this['mode']['gameTime'] ? 0xea60 * this['config']['gameTime'] : this['mode']['gameTime'],
                    this['lastTimer'] = 0x0,
                    this['lastTimerW'] = 0x0,
                    this['waitTimers'] = null,
                    this['mode']['waitTimers']) {
                        this['waitTimers'] = [];
                        for (csQ = 0x0; csQ < this['mode']['waitTimers']['length']; ++csQ)
                            this['waitTimers']['push']({
                                'time': this['mode']['waitTimers'][csQ]['time'],
                                'trigger': this['mode']['waitTimers'][csQ]['trigger'],
                                'noJoin': this['mode']['waitTimers'][csQ]['noJoin'],
                                'msg': this['mode']['waitTimers'][csQ]['msg']
                            });
                    } else
                        (this['config']['lives'] || this['mode']['lives']) && (this['waitTimers'] = [{
                            'time': 0x4e20,
                            'msg': 'match\x20starts\x20in\x20',
                            'trigger': function(csr) {
                                for (var css = 0x0; css < csr['players']['list']['length']; ++css)
                                    csr['players']['list'][css]['spectating'] && (csr['players']['list'][css]['lives'] = 0x0);
                            }
                        }]);
                    if (this['config']['warmupTime'] && (!this['waitTimers'] && (this['waitTimers'] = []),
                    this['waitTimers']['unshift']({
                        'time': 0xea60 * this['config']['warmupTime'],
                        'msg': 'warmup\x20ends\x20',
                        'trigger': function() {}
                    })),
                    this['condition'] = this['mode']['condition'],
                    (this['config']['lives'] || this['mode']['lives']) && (!this['condition'] && (this['condition'] = [],
                    this['mode']['teams'] ? this['condition']['push'](function(csr) {
                        for (var css = 0x0, cst = 0x0, csv = 0x0; csv < csr['players']['list']['length']; ++csv)
                            0x0 < csr['players']['list'][csv]['lives'] && (0x1 == csr['players']['list'][csv]['team'] ? css++ : cst++);
                        return 0x1 <= css && 0x1 <= cst;
                    }) : this['condition']['push'](function(csr) {
                        for (var css = 0x0, cst = 0x0; cst < csr['players']['list']['length']; ++cst)
                            0x0 < csr['players']['list'][cst]['lives'] && css++;
                        return 0x1 < css;
                    })),
                    !this['winCondition'] && (this['mode']['teams'] ? this['winCondition'] = function(csr) {
                        for (var css = 0x0; css < csr['players']['list']['length']; ++css)
                            if (csr['players']['list'][css]['team'] && 0x0 < csr['players']['list'][css]['lives'])
                                return csr['players']['list'][css]['team'];
                        return 0x1;
                    }
                    : this['winCondition'] = function(csr) {
                        for (var css = 0x0; css < csr['players']['list']['length']; ++css)
                            if (0x0 < csr['players']['list'][css]['lives'])
                                return csr['players']['list'][css];
                        return null;
                    }
                    )),
                    this['scoreLimit'] = this['config']['scoreLimit'] || this['mode']['scoreLimit'] || 0x0,
                    this['scoreLimit'] && (!this['condition'] && (this['condition'] = []),
                    this['mode']['teams'] ? this['condition']['push'](function(csr) {
                        for (var css = 0x0; css < csr['teams']; ++css)
                            if (csr['teams'][css] >= csr['scoreLimit'])
                                return 0x0;
                        return 0x1;
                    }) : this['condition']['push'](function(csr) {
                        for (var css = 0x0; css < csr['players']['list']['length']; ++css)
                            if (csr['players']['list'][css]['score'] >= csr['scoreLimit'])
                                return 0x0;
                        return 0x1;
                    })),
                    this['kills'] = 0x0,
                    csV && this['mode']['gameStart'] && this['mode']['gameStart'](this),
                    csT) {
                        var ct0 = this['map']['maps'][this['mapIndex']]['ambInd'] || 0x1;
                        ct0 = parseInt(ct0);
                        for (csQ = 0x1; 0x4 > csQ; ++csQ)
                            csT['stop']('ambient_' + csQ);
                        csT['play']('ambient_' + ct0, 0.12, !0x0, 0x1);
                    }
                    if (csW) {
                        let csr = {
                            'mC': this['maxPlayers'],
                            'pv': this['private'],
                            'sk': !this['isCustom'],
                            'pgi': this['pendingGameId'],
                            'data': {
                                'cs': this['isCustom'],
                                'i': this['getInfo'](),
                                'version': csz
                            }
                        };
                        if (this['gameInstance'])
                            this['gameInstance']['update'](csr);
                        else if (this['gameInstance'] = csW['createGame'](csX, csr),
                        csV && !csx['isProd']) {
                            var ct1 = cst(0x50)
                              , ct2 = cst(0x50)
                              , ct3 = ct1['join'](css['cwd'](), 'version.json');
                            ct2['watchFile'](ct3, {
                                'interval': 0x64
                            }, ()=>{
                                csr['data']['version'] = csz = JSON['parse'](ct2['readFileSync'](ct3, 'utf8')),
                                this['gameInstance']['update'](csr);
                            }
                            );
                        }
                    }
                }
                ,
                this['startQueuedGame'] = function() {
                    this['config']['isFromQueue'];
                }
                ,
                this['getTeamScores'] = function() {
                    var csr = null;
                    return this['mode'] && this['mode']['teams'] && this['teams'] && (csr = [[0x1, this['teams'][0x1] || 0x0], [0x2, this['teams'][0x2] || 0x0]]),
                    csr;
                }
                ,
                this['getSyncData'] = function() {
                    for (var csr = [], css = [], cst = [], csv = 0x0; csv < this['map']['manager']['flags']['length']; ++csv)
                        ct0 = this['map']['manager']['flags'][csv],
                        csr['push']([ct0['uid'], ct0['x']['round'](0x1), ct0['y']['round'](0x1), ct0['z']['round'](0x1), ct0['carrier'] || 0x0]);
                    for (csv = 0x0; csv < this['map']['manager']['pickups']['length']; ++csv)
                        ct0 = this['map']['manager']['pickups'][csv],
                        css['push']([ct0['uid'], ct0['pickup'], ct0['orgPickup'] || 0x0, [ct0['x'], ct0['y'], ct0['z']]]);
                    for (csv = 0x0; csv < this['map']['manager']['gates']['length']; ++csv)
                        ct0 = this['map']['manager']['gates'][csv],
                        cst['push']([ct0['uid'], ct0['active']]);
                    return {
                        'dest': this['destObjs']['length'] ? this['destObjs'] : 0x0,
                        'flg': csr['length'] ? csr : 0x0,
                        'pkups': css['length'] ? css : 0x0,
                        'gates': cst['length'] ? cst : 0x0,
                        'zone': this['map']['zone'] ? this['map']['zone']['scale'] : 0x0
                    };
                }
                ,
                this['onTrigger'] = function(csr, css) {
                    if (csV)
                        if ('Give\x20Score' == this['triggers']['actions'][css['triggerAction']])
                            this['players']['score'](csr, css['triggerConstant'] || 0x1);
                        else if ('Kill' == this['triggers']['actions'][css['triggerAction']])
                            this['players']['kill'](csr);
                        else if ('Respawn' == this['triggers']['actions'][css['triggerAction']]) {
                            var cst = this['getSpawnPoint'](csr['team'], csr);
                            csr['x'] = cst['x'],
                            csr['y'] = cst['y'],
                            csr['z'] = cst['z'];
                        } else
                            'Change\x20Health' == this['triggers']['actions'][css['triggerAction']] && this['players']['changeHealth'](csr, null, -(css['triggerConstant'] || 0x0), !0x0) && this['players']['kill'](csr, null, {});
                }
                ,
                this['endGame'] = function() {
                    if (this['endTimer'] = this['mode']['infEndTimer'] ? 'inf' : csx['endTimer'],
                    this['waitTimers'] = null,
                    this['mode']['endSort'] ? this['players']['list']['sort'](this['mode']['endSort']) : this['players']['list']['sort'](csw['orderByScore']),
                    null == this['host'] || this['earnKR'])
                        for (var csr = 0x0; csr < this['players']['list']['length']; ++csr)
                            if ((ct0 = this['players']['list'][csr])['reward'] = 0x0,
                            ct0['account'] && !ct0['account']['hack']) {
                                var css = ct0['score'] * (this['mode']['rewardMlt'] || 0x1);
                                ct0['reward'] = this['earnKR'] ? Math['min'](0xa, Math['floor'](css / 0x64)) : Math['min'](0x1e, Math['floor'](css / 0x64)),
                                ct0['challMode'] && (ct0['reward'] = Math['floor'](1.5 * ct0['reward']));
                            }
                    this['endData']['ed']['length'] = 0x0;
                    var cst = this['mode']['endStats'] || csx['endStats'];
                    for (csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        for (var csv = 0x0; csv < cst['length']; ++csv)
                            this['endData']['ed']['push'](csx['endForm'][cst[csv]] ? csx['endForm'][cst[csv]](this['players']['list'][csr][cst[csv]], this, this['players']['list'][csr]) : this['players']['list'][csr][cst[csv]]);
                    if (this['mode']['winCondition'])
                        this['winner'] = this['mode']['winCondition'](this);
                    else if (this['mode']['teams'] && this['teams']) {
                        var csy = 0x0
                          , csz = null;
                        for (var csA in this['teams'])
                            this['teams']['hasOwnProperty'](csA) && this['teams'][csA] >= csy && (csy = this['teams'][csA],
                            csz = csA);
                        this['winner'] = csz;
                    } else
                        this['winner'] = this['players']['list'][0x0];
                    this['endData']['vo'] = {},
                    this['endData']['tms'] = this['getTeamScores']();
                    let csP = this['config'] ? this['config']['modes'] || this['map']['rotationModes'] : null;
                    this['endData']['mts'] = [];
                    for (var csQ = 0x0, csR = -0x1 < csP['indexOf'](0x0); 0x4 > this['endData']['mts']['length']; ) {
                        let csr = 0x0 == csQ && csR ? 0x0 : csP ? csP[csw['randInt'](0x0, csP['length'] - 0x1)] : csw['randInt'](0x0, 0x3)
                          , css = this['config']['maps'][csw['randInt'](0x0, this['config']['maps']['length'] - 0x1)];
                        if (0x0 > this['endData']['mts']['indexOf'](csr + ',' + css) && this['endData']['mts']['push'](csr + ',' + css),
                        0x14 < ++csQ)
                            break;
                    }
                    for (csr = 0x0; csr < this['players']['list']['length']; ++csr)
                        (ct0 = this['players']['list'][csr])['didWin'] = ct0['team'] && ct0['team'] == this['winner'] || ct0 == this['winner'],
                        ct0['reset'](),
                        csV['send'](ct0['id'], 'end', !0x1, ct0['didWin'], this['endData']);
                    this['updateAccounts'](),
                    this['players']['clear']();
                }
                ,
                this['update'] = function(csr, css, cst) {
                    if (this['now'] = css,
                    csV) {
                        var csv = !0x0;
                        if (0x0 < this['endTimer'] ? (csv = !0x1,
                        this['endTimer'] -= csr,
                        0x0 >= this['endTimer'] ? (this['init'](),
                        this['endTimer'] = 0x0,
                        csV['broadcast']('game' + this['sid'], 'init', this['mapIndex'], this['modeIndex'], this['getTeamScores'](), this['activeObjective'], this['host'], this['config'], 0x0, this['customMapData'] ? 0x1 : null, this['getSyncData']()),
                        this['isPrimary'] && csw['restartIfNeeded'](csV)) : (ct2 = csw['getTime'](this['endTimer'])) != this['lastTimer'] && (this['lastTimer'] = ct2,
                        csV['broadcast']('game' + this['sid'], 't', ct2, 0x1))) : 'inf' == this['endTimer'] ? this['endTimer'] != this['lastTimer'] && (this['lastTimer'] = this['endTimer'],
                        csV['broadcast']('game' + this['sid'], 't', 'inf', 0x2)) : this['waitTimers'] && (csv = !0x1,
                        this['minPlayers'] && this['players']['activeCount']() < this['minPlayers'] ? csV['broadcast']('game' + this['sid'], 'gmsg', 'wt') : (this['waitTimers'][0x0]['time'] -= csr,
                        0x0 >= this['waitTimers'][0x0]['time'] ? (this['waitTimers'][0x0]['trigger'] && this['waitTimers'][0x0]['trigger'](this, -this['waitTimers'][0x0]['time']),
                        0x0 >= this['waitTimers'][0x0]['time'] && (this['waitTimers']['splice'](0x0, 0x1),
                        !this['waitTimers']['length'] && (this['waitTimers'] = null,
                        csV['broadcast']('game' + this['sid'], 'gmsg')))) : (ct2 = csw['getTime'](this['waitTimers'][0x0]['time'])) != this['lastTimerW'] && (this['lastTimerW'] = ct2,
                        csV['broadcast']('game' + this['sid'], 'gmsg', this['waitTimers'][0x0]['msg'] + ct2)))),
                        0x0 >= this['endTimer'] && (csv || this['waitTimers'] && this['waitTimers'][0x0]['contTime'])) {
                            if (this['condition'])
                                for (var csx = 0x0; csx < this['condition']['length']; csx++)
                                    if (!this['condition'][csx](this)) {
                                        this['gameTimer'] = 'skip';
                                        break;
                                    }
                            'skip' != this['gameTimer'] && this['mode']['timed'] ? (this['gameTimer'] += csr,
                            (ct2 = csw['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = ct2,
                            csV['broadcast']('game' + this['sid'], 't', ct2))) : (0x0 < this['gameTimer'] || 'skip' == this['gameTimer']) && ('skip' != this['gameTimer'] && (this['gameTimer'] -= csr),
                            'skip' == this['gameTimer'] || 0x0 >= this['gameTimer'] ? (this['gameTimer'] = 0x0,
                            this['endGame']()) : (ct2 = csw['getTime'](this['gameTimer'], this['mode']['showMS'])) != this['lastTimer'] && (this['lastTimer'] = ct2,
                            csV['broadcast']('game' + this['sid'], 't', ct2)));
                        }
                        if (0x0 >= this['endTimer'] && this['nukeTimer'] && (this['nukeTimer'] -= csr,
                        0x0 >= this['nukeTimer'] && (this['nukeTimer'] = 0x0,
                        csV['broadcast']('game' + this['sid'], 'n', 0x1),
                        this['nukePlayer']))) {
                            var csy = 0x0;
                            for (csx = 0x0; csx < this['players']['list']['length']; ++csx)
                                (ct0 = this['players']['list'][csx])['active'] && ct0 != this['nukePlayer'] && (!ct0['team'] || this['nukePlayer']['team'] != ct0['team']) && (csy += 0x32,
                                this['players']['kill'](ct0, this['nukePlayer'], {
                                    'streak': 0x0
                                }, !0x1, !0x0));
                            csy && (csV['send'](this['nukePlayer']['id'], '6', ['Nuke', csy], 0x0, this['nukePlayer']['kills']),
                            csV['send'](this['nukePlayer']['id'], '4'),
                            this['players']['score'](this['nukePlayer'], csy));
                        }
                    }
                    if (this['players']['update'](csr * this['config']['deltaMlt']),
                    this['updateTeleporters'](csr),
                    this['updateDetructables'](csr),
                    csV && this['mode']['objective'] && this['map']['manager']['objectives']['length'] && this['waitTimers'] && this['waitTimers'][0x0]['contTime'] && (this['objectiveTimer'] -= csr,
                    0x0 >= this['objectiveTimer'])) {
                        this['objectiveTimer'] = 0x5dc;
                        for (csx = 0x0; csx < this['map']['manager']['objectives']['length']; ++csx)
                            if (ct0 = this['map']['manager']['objectives'][csx],
                            csx == this['activeObjective'])
                                for (var csz = 0x0; csz < this['players']['list']['length']; ++csz)
                                    (ct1 = this['players']['list'][csz])['active'] && ct1['collides'](ct0) && this['players']['score'](ct1, 0xa);
                    }
                    if (this['map']['zone'])
                        if (!csV || this['waitTimers'])
                            this['map']['zone']['animate'](csr);
                        else if (this['zoneTimer'] -= csr,
                        0x0 >= this['zoneTimer']) {
                            this['zoneTimer'] = 0x3e8,
                            this['map']['zone']['shrink'](),
                            csV['broadcast']('game' + this['sid'], 'zn', this['map']['zone']['scale']);
                            for (csz = 0x0; csz < this['players']['list']['length']; ++csz)
                                (ct1 = this['players']['list'][csz])['active'] && 'inf' != ct1['team'] && this['map']['zone']['isOutside'](ct1) && this['players']['changeHealth'](ct1, null, 0xa) && this['players']['kill'](ct1, null, {});
                        }
                    this['projectiles']['update'](csr * this['config']['deltaMlt']),
                    csU && csU['update'](csr * this['config']['deltaMlt'], cst),
                    csS && csS['render'](csr * this['config']['deltaMlt']);
                }
                ;
            }
            ;
        }
        ['call'](this, cst(0xe)));
    }
    , function(cwG, cwH, cwI) {
        var cwJ = cwI(0x8)
          , cwK = cwI(0x7)
          , cwL = function() {
            this['init'] = function(cwG, cwH, cwI, cwJ, cwK, cwL, cwS, cwT) {
                this['x'] = cwG,
                this['y'] = cwH,
                this['z'] = cwI,
                cwJ -= Math['PI'],
                this['xD'] = cwJ,
                this['yD'] = cwK,
                this['spd'] = cwL['spd'],
                this['range'] = cwL['range'],
                this['dmg'] = cwL['dmg'],
                this['owner'] = cwS,
                this['weaponId'] = cwT['weaponId'],
                this['weapon'] = cwT['weapon'],
                this['skipMove'] = !0x0,
                this['expl'] = cwL['explode'],
                this['xS'] = this['spd'] * Math['sin'](cwJ) * Math['cos'](cwK),
                this['zS'] = this['spd'] * Math['cos'](cwJ) * Math['cos'](cwK),
                this['yS'] = this['spd'] * Math['sin'](cwK),
                this['active'] = !0x0;
            }
            ,
            this['update'] = function(cwG) {
                this['active'] && (this['skipMove'] ? this['skipMove'] = !0x1 : (this['x'] += this['xS'] * cwG,
                this['z'] += this['zS'] * cwG,
                this['y'] += this['yS'] * cwG,
                this['range'] -= this['spd'] * cwG,
                0x0 >= this['range'] && (this['active'] = !0x1)));
            }
            ;
        };
        cwG['exports'] = function(cwG, cwH) {
            var cwX, cwY, cwZ = cwH ? {} : cwI(0x4), cx0 = [];
            this['projectiles'] = [],
            this['types'] = [{
                'mat': cwZ['MeshBasicMaterial'],
                'color': 0xffffdb,
                'explode': 0x32,
                'dmg': 0x7d,
                'spd': 0.5,
                'scale': 1.4,
                'length': 0xa,
                'range': 0x258
            }, {
                'mat': cwZ['MeshBasicMaterial'],
                'color': 0xffffdb,
                'dmg': 0xc8,
                'spd': 0.68,
                'scale': 0.7,
                'length': 0xa,
                'range': 0x3e8
            }],
            this['update'] = function(cwI) {
                for (var cwL = 0x0; cwL < this['projectiles']['length']; ++cwL)
                    if ((cwX = this['projectiles'][cwL])['active']) {
                        if (cwX['update'](cwI),
                        cwX['active']) {
                            cx0['length'] = 0x0;
                            for (var cwZ = 0x1 / (cwX['spd'] * cwI * Math['sin'](cwX['xD']) * Math['cos'](cwX['yD'])), cx4 = 0x1 / (cwX['spd'] * cwI * Math['cos'](cwX['xD']) * Math['cos'](cwX['yD'])), cx5 = 0x1 / (cwX['spd'] * cwI * Math['sin'](cwX['yD'])), cx6 = 0x0; cx6 < cwG['map']['manager']['objects']['length']; ++cx6)
                                !(cwY = cwG['map']['manager']['objects'][cx6])['noShoot'] && cwY['active'] && (tmpDst = cwJ['lineInRect'](cwX['x'], cwX['z'], cwX['y'], cwZ, cx4, cx5, cwY['x'] - cwY['width'], cwY['z'] - cwY['length'], cwY['y'] - cwY['height'], cwY['x'] + cwY['width'], cwY['z'] + cwY['length'], cwY['y'] + cwY['height']),
                                tmpDst && 0x1 >= tmpDst && cx0['push']({
                                    'obj': cwY,
                                    'dst': tmpDst
                                }));
                            for (cx6 = 0x0; cx6 < cwG['players']['list']['length']; ++cx6)
                                (cwY = cwG['players']['list'][cx6])['active'] && cwY != cwX['owner'] && (tmpDst = cwJ['lineInRect'](cwX['x'], cwX['z'], cwX['y'], cwZ, cx4, cx5, cwY['x'] - cwY['scale'] - cwK['hitBoxPad'], cwY['z'] - cwY['scale'] - cwK['hitBoxPad'], cwY['y'], cwY['x'] + cwY['scale'] + cwK['hitBoxPad'], cwY['z'] + cwY['scale'] + cwK['hitBoxPad'], cwY['y'] + cwY['height'] + cwK['hitBoxPad']),
                                tmpDst && 0x1 >= tmpDst && cx0['push']({
                                    'plr': !0x0,
                                    'obj': cwY,
                                    'dst': tmpDst
                                }));
                            var cx7 = cwG['map']['terrain'];
                            if (cx7) {
                                var cx8 = cx7['raycast'](cwX['x'], -cwX['z'], cwX['y'], 0x1 / cwZ, -0x1 / cx4, 0x1 / cx5);
                                if (cx8) {
                                    let cwG = cwJ['getDistance3D'](cwX['x'], cwX['y'], cwX['z'], cx8['x'], cx8['z'], -cx8['y']);
                                    cx0['push']({
                                        'dst': cwG / cwX['range']
                                    });
                                }
                            }
                            cx0['length'] && (cx0['sort'](cwJ['orderByNum']),
                            cx0[0x0] && (cx0[0x0]['obj'] && cx0[0x0]['plr'] && cwG['players']['changeHealth'](cx0[0x0]['obj'], cwX['owner'], cwX['dmg']) && cwG['players']['kill'](cx0[0x0]['obj'], cwX['owner'], {
                                'weaponId': cwX['weaponId'],
                                'weapon': cwX['weapon']
                            }),
                            cwX['x'] += cx0[0x0]['dst'] * (cwX['xS'] * cwI),
                            cwX['y'] += cx0[0x0]['dst'] * (cwX['yS'] * cwI),
                            cwX['z'] += cx0[0x0]['dst'] * (cwX['zS'] * cwI)),
                            cwX['active'] = !0x1);
                        }
                        if (!cwX['active']) {
                            cwX['expl'] && cwG['explosion'](cwX['x'], cwX['y'], cwX['z'], cwX['expl'], cwX['dmg'], cwX['owner'], {
                                'weaponId': cwX['weaponId'],
                                'weapon': cwX['weapon']
                            });
                            for (cx6 = 0x0; cx6 < cwG['players']['list']['length']; ++cx6)
                                cwH['send'](cwG['players']['list'][cx6]['id'], 'pre', cwX['sid']);
                        }
                    }
            }
            ,
            this['init'] = function(cwI, cwJ, cwK, cwY, cwZ, cx0, cxg, cxh) {
                cwI = cwI['round'](0x1),
                cwJ = cwJ['round'](0x1),
                cwK = cwK['round'](0x1),
                cwY = cwY['round'](0x3),
                cwZ = cwZ['round'](0x3),
                cwX = null;
                for (var cxi = 0x0; cxi < this['projectiles']['length']; ++cxi)
                    if (!this['projectiles'][cxi]['active']) {
                        cwX = this['projectiles'][cxi];
                        break;
                    }
                if (cwX || ((cwX = new cwL())['sid'] = this['projectiles']['length'],
                this['projectiles']['push'](cwX)),
                cwX['init'](cwI, cwJ, cwK, cwY, cwZ, this['types'][cx0], cxg, cxh),
                cwH)
                    for (cxi = 0x0; cxi < cwG['players']['list']['length']; ++cxi)
                        (cwG['players']['list'][cxi]['active'] || cwG['players']['list'][cxi]['spectating']) && cwH['send'](cwG['players']['list'][cxi]['id'], 'pr', cwI, cwJ, cwK, cwY, cwZ, cx0, cwX['sid']);
            }
            ;
        }
        ;
    }
    , function(cxj, cxk) {
        cxj['exports'] = function(cxj, cxk, cxn, cxo) {
            cxn = cxn || {},
            this['id'] = cxj,
            this['name'] = cxk,
            this['score'] = cxn['player_score'] || 0x0,
            this['kills'] = cxn['player_kills'] || 0x0,
            this['deaths'] = cxn['player_deaths'] || 0x0,
            this['wins'] = cxn['player_wins'] || 0x0,
            this['hack'] = cxn['player_hack'] || 0x0,
            this['games'] = cxn['player_games_played'] || 0x0,
            this['clan'] = cxn['player_clanid'],
            this['funds'] = cxn['player_funds'] || 0x0,
            this['featured'] = cxn['player_featured'] || 0x0,
            this['clan'] = cxn['player_clan'] || null,
            this['timePlayed'] = cxn['player_timeplayed'] || 0x0,
            this['skins'] = cxn['skins'] || [],
            this['lastReward'] = cxn['player_lastreward'] || 0x0,
            this['developer'] = cxn['player_developer'] || 0x0,
            this['following'] = cxn['player_follow'] || 0x0,
            this['followers'] = cxn['player_followed'] || 0x0,
            this['isFollowing'] = cxn['player_following'] || 0x0,
            this['stats'] = cxn['player_stats'] ? JSON['parse'](cxn['player_stats']) : {},
            this['partnerName'] = cxn['partner_name'] || null,
            this['partnerApp'] = cxn['partner_approved'] || 0x0,
            this['setData'] = function(cxj) {
                this['kills'] = cxj[0x1],
                this['wins'] = cxj[0x2],
                this['games'] = cxj[0x3],
                this['deaths'] = cxj[0x4],
                this['funds'] = cxj[0x5],
                this['score'] = cxj[0x6],
                this['updateLevel'](),
                this['clan'] = cxj[0x7],
                this['timePlayed'] = cxj[0x8],
                this['featured'] = cxj[0x9],
                this['skins'] = cxj[0xa],
                this['lastReward'] = cxj[0xb],
                this['developer'] = cxj[0xc],
                this['following'] = cxj[0xd],
                this['followers'] = cxj[0xe],
                this['isFollowing'] = cxj[0xf],
                this['stats'] = cxj[0x10],
                this['hack'] = cxj[0x11],
                this['partnerName'] = cxj[0x12],
                this['partnerApp'] = cxj[0x13];
            }
            ,
            this['updateLevel'] = function() {
                var cxj = cxo['rankVar'] * Math['sqrt'](this['score']);
                this['level'] = Math['floor'](cxj),
                this['levelProg'] = Math['round'](0x64 * (cxj - this['level'])),
                this['level'] = Math['max'](0x1, this['level']);
            }
            ,
            this['updateLevel'](),
            this['getData'] = function() {
                return [this['id'], this['kills'], this['wins'], this['games'], this['deaths'], this['funds'], this['score'], this['clan'], this['timePlayed'], this['featured'], this['skins'], this['lastReward'], this['developer'], this['following'], this['followers'], this['isFollowing'], this['stats'], this['hack'], this['partnerName'], this['partnerApp']];
            }
            ;
        }
        ;
    }
    , , function(cxr, cxs, cxt) {
        'use strict';
        cxr['exports'] = function(cxr, cxs) {
            return function() {
                for (var cxt = Array(arguments['length']), cxx = 0x0; cxx < cxt['length']; cxx++)
                    cxt[cxx] = arguments[cxx];
                return cxr['apply'](cxs, cxt);
            }
            ;
        }
        ;
    }
    , function(cxy, cxz, cxA) {
        'use strict';
        var cxB = cxA(0x24)
          , cxC = cxA(0x76)
          , cxD = cxA(0x78)
          , cxE = cxA(0x79)
          , cxF = cxA(0x7a)
          , cxG = cxA(0x60)
          , cxH = 'undefined' != typeof window && window['btoa'] && window['btoa']['bind'](window) || cxA(0x7b);
        cxy['exports'] = function(cxy) {
            return new Promise(function(cxz, cxK) {
                var cxL = cxy['data']
                  , cxM = cxy['headers'];
                cxB['isFormData'](cxL) && delete cxM['Content-Type'];
                var cxN = new XMLHttpRequest()
                  , cxO = 'onreadystatechange'
                  , cxP = !0x1;
                if ('undefined' == typeof window || !window['XDomainRequest'] || 'withCredentials'in cxN || cxF(cxy['url']) || (cxN = new window['XDomainRequest'](),
                cxO = 'onload',
                cxP = !0x0,
                cxN['onprogress'] = function() {}
                ,
                cxN['ontimeout'] = function() {}
                ),
                cxy['auth']) {
                    var cxQ = cxy['auth']['username'] || ''
                      , cxR = cxy['auth']['password'] || '';
                    cxM['Authorization'] = 'Basic\x20' + cxH(cxQ + ':' + cxR);
                }
                if (cxN['open'](cxy['method']['toUpperCase'](), cxD(cxy['url'], cxy['params'], cxy['paramsSerializer']), !0x0),
                cxN['timeout'] = cxy['timeout'],
                cxN[cxO] = function() {
                    if (cxN && (0x4 === cxN['readyState'] || cxP) && (0x0 !== cxN['status'] || cxN['responseURL'] && 0x0 === cxN['responseURL']['indexOf']('file:'))) {
                        var cxA = 'getAllResponseHeaders'in cxN ? cxE(cxN['getAllResponseHeaders']()) : null
                          , cxB = {
                            'data': cxy['responseType'] && 'text' !== cxy['responseType'] ? cxN['response'] : cxN['responseText'],
                            'status': 0x4c7 === cxN['status'] ? 0xcc : cxN['status'],
                            'statusText': 0x4c7 === cxN['status'] ? 'No\x20Content' : cxN['statusText'],
                            'headers': cxA,
                            'config': cxy,
                            'request': cxN
                        };
                        cxC(cxz, cxK, cxB),
                        cxN = null;
                    }
                }
                ,
                cxN['onerror'] = function() {
                    cxK(cxG('Network\x20Error', cxy, null, cxN)),
                    cxN = null;
                }
                ,
                cxN['ontimeout'] = function() {
                    cxK(cxG('timeout\x20of\x20' + cxy['timeout'] + 'ms\x20exceeded', cxy, 'ECONNABORTED', cxN)),
                    cxN = null;
                }
                ,
                cxB['isStandardBrowserEnv']()) {
                    var cxU = cxA(0x7c)
                      , cxV = (cxy['withCredentials'] || cxF(cxy['url'])) && cxy['xsrfCookieName'] ? cxU['read'](cxy['xsrfCookieName']) : void 0x0;
                    cxV && (cxM[cxy['xsrfHeaderName']] = cxV);
                }
                if ('setRequestHeader'in cxN && cxB['forEach'](cxM, function(cxy, cxz) {
                    void 0x0 === cxL && 'content-type' === cxz['toLowerCase']() ? delete cxM[cxz] : cxN['setRequestHeader'](cxz, cxy);
                }),
                cxy['withCredentials'] && (cxN['withCredentials'] = !0x0),
                cxy['responseType'])
                    try {
                        cxN['responseType'] = cxy['responseType'];
                    } catch (cxY) {
                        if ('json' !== cxy['responseType'])
                            throw cxY;
                    }
                'function' == typeof cxy['onDownloadProgress'] && cxN['addEventListener']('progress', cxy['onDownloadProgress']),
                'function' == typeof cxy['onUploadProgress'] && cxN['upload'] && cxN['upload']['addEventListener']('progress', cxy['onUploadProgress']),
                cxy['cancelToken'] && cxy['cancelToken']['promise']['then'](function(cxy) {
                    cxN && (cxN['abort'](),
                    cxK(cxy),
                    cxN = null);
                }),
                void 0x0 === cxL && (cxL = null),
                cxN['send'](cxL);
            }
            );
        }
        ;
    }
    , function(cy0, cy1, cy2) {
        'use strict';
        var cy3 = cy2(0x77);
        cy0['exports'] = function(cy0, cy1, cy2, cy7, cy8) {
            var cy9 = new Error(cy0);
            return cy3(cy9, cy1, cy2, cy7, cy8);
        }
        ;
    }
    , function(cya, cyb, cyc) {
        'use strict';
        cya['exports'] = function(cya) {
            return !(!cya || !cya['__CANCEL__']);
        }
        ;
    }
    , function(cye, cyf, cyg) {
        'use strict';
        function cyh(cye) {
            this['message'] = cye;
        }
        cyh['prototype']['toString'] = function() {
            return 'Cancel' + (this['message'] ? ':\x20' + this['message'] : '');
        }
        ,
        cyh['prototype']['__CANCEL__'] = !0x0,
        cye['exports'] = cyh;
    }
    , function(cyj, cyk, cyl) {
        let cym = cyl(0x7)
          , cyn = cyl(0x8)
          , cyo = cyl(0x4)
          , cyp = {}
          , cyq = cyp['canvas'] = document['getElementById']('game-overlay');
        function cyr() {
            cyq['width'] = window['innerWidth'],
            cyq['height'] = window['innerHeight'];
        }
        window['addEventListener']('resize', cyr),
        cyr();
        let cys = new Image()
          , cyt = !0x1;
        cys['onload'] = ()=>cyt = !0x0,
        cys['src'] = './img/muzflash.png';
        let cyu = new Image()
          , cyv = !0x1;
        cyu['onload'] = ()=>cyv = !0x0,
        cyu['src'] = './textures/objective_1.png';
        var cyw = null;
        cyp['showDMG'] = !0x0,
        cyp['dmgNums'] = [],
        cyp['showFlash'] = !0x1,
        cyp['flashX'] = 0x0,
        cyp['flashY'] = 0x0,
        cyp['crosshairType'] = 0x1,
        cyp['dmgColor'] = 'white',
        cyp['crosshairColor'] = 'white',
        cyp['crosshairShadow'] = 'black',
        cyp['crosshairOpacity'] = 0x0,
        cyp['crosshairScale'] = 0x0,
        cyp['crosshairAlways'] = !0x1,
        cyp['dynamicHP'] = !0x0,
        cyp['dmgScale'] = 0x1e,
        cyp['crosshairStyle'] = 0x1,
        cyp['crosshairThick'] = 0x2,
        cyp['crosshairLen'] = 0x10,
        cyp['crosshairImage'] = new Image(),
        cyp['dmgVal'] = function(cyj, cyk, cyl, cym) {
            if (cyp['showDMG']) {
                cyw = null;
                for (var cyo = 0x0; cyo < cyp['dmgNums']['length']; ++cyo)
                    if (!cyp['dmgNums'][cyo]['life']) {
                        cyw = cyp['dmgNums'][cyo];
                        break;
                    }
                cyw || (cyw = {},
                cyp['dmgNums']['push'](cyw)),
                cyw['life'] = 0x3e8,
                cyw['x'] = cyj,
                cyw['y'] = cyk + 0x7,
                cyw['z'] = cyl,
                cyw['dir'] = cyn['randFloat'](-Math['PI'], Math['PI']),
                cyw['val'] = cym;
            }
        }
        ;
        var cyC = new cyo['Vector3']();
        function cyD(cyj, cyk, cyl, cym, cyn, cyo=0x1, cyq=!0x1, cyr=!0x0, cys=!0x0) {
            cyr && (cyj['save'](),
            cys ? cyj['fillStyle'] = cyp['crosshairShadow'] : cyj['strokeStyle'] = cyp['crosshairShadow'],
            cyj['lineWidth'] = cyo,
            cyj['globalAlpha'] *= 0.5,
            cyj['beginPath'](),
            cyq ? cyj['ellipse'](cyk + cym / 0x2, cyl + cyn / 0x2, cym / 0x2 + 0x2, cyn / 0x2 + 0x2, 0x0, 0x0, 0x2 * Math['PI']) : cyj['rect'](cyk - 0x2, cyl - 0x2, cym + 0x4, cyn + 0x4),
            cys ? cyj['fill']() : cyj['stroke'](),
            cyj['restore']()),
            cys ? cyj['fillStyle'] = cyp['crosshairColor'] : cyj['strokeStyle'] = cyp['crosshairColor'],
            cyj['lineWidth'] = cyo,
            cyj['beginPath'](),
            cyq ? cyj['ellipse'](cyk + cym / 0x2, cyl + cyn / 0x2, cym / 0x2, cyn / 0x2, 0x0, 0x0, 0x2 * Math['PI']) : cyj['rect'](cyk, cyl, cym, cyn),
            cys ? cyj['fill']() : cyj['stroke']();
        }
        cyp['render'] = function(cyj, cyk, cyl, cyo, cyr) {
            let cyw = cyq['getContext']('2d')
              , cyT = cyp
              , cyU = cyq['width'] / cyj
              , cyV = cyq['height'] / cyj
              , cyW = 'none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'] && 'none' == killCardHolder['style']['display']
              , cyX = cyl['camera']['getWorldPosition']();
            if (cyw['save'](),
            cyw['scale'](cyj, cyj),
            cyw['clearRect'](0x0, 0x0, cyU, cyV),
            cyp['showDMG'])
                for (var cyY = 0x0; cyY < cyp['dmgNums']['length']; ++cyY)
                    if (tmpObj = cyp['dmgNums'][cyY],
                    tmpObj['life'])
                        if (tmpObj['life'] -= cyr,
                        0x0 >= tmpObj['life'])
                            tmpObj['life'] = 0x0;
                        else {
                            if (tmpObj['y'] += 0.022 * cyr,
                            tmpObj['x'] += 0.013 * cyr * Math['cos'](tmpObj['dir']),
                            tmpObj['z'] += 0.013 * cyr * Math['sin'](tmpObj['dir']),
                            cyC['set'](tmpObj['x'], tmpObj['y'], tmpObj['z']),
                            !cyl['frustum']['containsPoint'](cyC))
                                continue;
                            cyw['save'](),
                            cyC['project'](cyl['camera']),
                            cyC['x'] = (cyC['x'] + 0x1) / 0x2,
                            cyC['y'] = (cyC['y'] + 0x1) / 0x2,
                            cyw['translate'](Math['round'](cyU * cyC['x']), Math['round'](cyV * (0x1 - cyC['y']))),
                            cyw['fillStyle'] = cyp['dmgColor'],
                            cyw['strokeStyle'] = '#2e2e2e',
                            cyw['lineWidth'] = 0x5,
                            cyw['font'] = cyp['dmgScale'] + 'px\x20GameFont';
                            var cyZ = -Math['round'](cyw['measureText'](tmpObj['val'])['width'] / 0x2);
                            cyw['strokeText'](tmpObj['val'], cyZ + 0x1, 0x0),
                            cyw['fillText'](tmpObj['val'], cyZ, 0x0),
                            cyw['restore']();
                        }
            if ('none' == menuHolder['style']['display'] && 'none' == endUI['style']['display'])
                for (cyY = 0x0; cyY < cyk['players']['list']['length']; ++cyY) {
                    if (tmpObj = cyk['players']['list'][cyY],
                    !tmpObj['active'])
                        continue;
                    if (tmpObj['isYou'] || !tmpObj['objInstances'])
                        continue;
                    //if (!tmpObj['inView'])
                        //continue;
                    if ((cz8 = tmpObj['objInstances']['position']['clone']())['y'] += cym['playerHeight'] + cym['nameOffset'] - tmpObj['crouchVal'] * cym['crouchDst'],
                    0x0 <= tmpObj['hatIndex'] && (cz8['y'] += cym['nameOffsetHat']),
                    !(0x1 <= 0x14 * (cz9 = Math['max'](0.3, 0x1 - cyn['getDistance3D'](cyX['x'], cyX['y'], cyX['z'], cz8['x'], cz8['y'], cz8['z']) / 0x258)) && cyl['frustum']['containsPoint'](cz8)))
                        continue;
                    cyw['save'](),
                    cz8['project'](cyl['camera']),
                    cz8['x'] = (cz8['x'] + 0x1) / 0x2,
                    cz8['y'] = (cz8['y'] + 0x1) / 0x2,
                    cyw['translate'](cyU * cz8['x'], cyV * (0x1 - cz8['y'])),
                    cyw['scale'](cz9, cz9),
                    cyw['fillStyle'] = 'rgba(0,\x200,\x200,\x200.4)',
                    cyw['fillRect'](-0x3c, -0x10, 0x78, 0x10),
                    cyT['dynamicHP'] && tmpObj['hpChase'] > tmpObj['health'] / tmpObj['maxHealth'] && (cyw['fillStyle'] = '#FFFFFF',
                    cyw['fillRect'](-0x3c, -0x10, 0x78 * tmpObj['hpChase'], 0x10));
                    var cz0 = cyo && cyo['team'] ? cyo['team'] : window['spectating'] ? 0x1 : 0x0;
                    cyw['fillStyle'] = cz0 == tmpObj['team'] ? '#9eeb56' : '#eb5656',
                    cyw['fillRect'](-0x3c, -0x10, tmpObj['health'] / tmpObj['maxHealth'] * 0x78, 0x10);
                    let cyj = tmpObj['name']
                      , cyp = tmpObj['clan'] ? '[' + tmpObj['clan'] + ']' : null
                      , cyq = tmpObj['level'];
                    cyw['font'] = '30px\x20GameFont';
                    let cyr = cyq ? cyw['measureText'](cyq)['width'] + 0xa : 0x0;
                    cyw['font'] = '20px\x20GameFont';
                    let cys = cyw['measureText'](cyj)['width'] + (cyp ? 0x5 : 0x0)
                      , cyt = cyr + cys + (cyp ? cyw['measureText'](cyp)['width'] : 0x0);
                    cyw['translate'](0x0, -0x1a),
                    cyw['fillStyle'] = 'white',
                    cyw['font'] = '30px\x20GameFont',
                    cyq && cyw['fillText'](cyq, -cyt / 0x2, 0x0),
                    cyw['font'] = '20px\x20GameFont',
                    cyw['globalAlpha'] = 0x1,
                    cyw['fillText'](cyj, -cyt / 0x2 + cyr, 0x0),
                    cyw['globalAlpha'] = 0x0 <= cym['verClans']['indexOf'](tmpObj['clan']) ? 0x1 : 0.4,
                    cyw['fillStyle'] = 0x0 <= cym['verClans']['indexOf'](tmpObj['clan']) ? '#fbc02d' : 'white',
                    cyp && cyw['fillText'](cyp, -cyt / 0x2 + cyr + cys, 0x0),
                    cyw['restore']();
                }
            if (cyk['mode'] && cyk['mode']['objective'] && cyW && 0x0 < cyk['map']['manager']['objectives']['length']) {
                var cz7 = !0x0
                  , cz8 = cyk['map']['manager']['objectives'][cyk['activeObjective']];
                for (cyY = 0x0; cyY < cyk['map']['manager']['objectives']['length']; ++cyY)
                    if (tmpObj = cyk['map']['manager']['objectives'][cyY],
                    cyY == cyk['activeObjective'] && cyn['pointInBox3D'](cyX['x'], cyX['y'], cyX['z'], tmpObj)) {
                        cz7 = !0x1;
                        break;
                    }
                if (cz8 && cz7) {
                    cyC['set'](cz8['x'], cz8['y'] + 0x7, cz8['z']);
                    var cz9, cza = 0x46 * (cz9 = Math['max'](0.3, 0x1 - cyn['getDistance3D'](cyX['x'], cyX['y'], cyX['z'], cyC['x'], cyC['y'], cyC['z']) / 0x258));
                    if (0x1 <= cza && cyl['frustum']['containsPoint'](cyC) && cyv) {
                        cyC['project'](cyl['camera']),
                        cyC['x'] = (cyC['x'] + 0x1) / 0x2,
                        cyC['y'] = (cyC['y'] + 0x1) / 0x2;
                        let cyj = cza / cyu['width'];
                        cyw['save'](),
                        cyw['translate'](cyC['x'] * cyU, (0x1 - cyC['y']) * cyV),
                        cyw['scale'](cyj, cyj),
                        cyw['drawImage'](cyu, -cyu['width'] / 0x2, -cyu['height'] / 0x2),
                        cyw['restore']();
                    }
                }
            }
            if (cyT['showFlash'] && cyt) {
                let cyj = 1.6 * cyU;
                cyw['drawImage'](cys, cyU * cyT['flashX'] - cyj / 0x2, cyV * cyT['flashY'] - cyj / 0x2, cyj, cyj);
            }
            if (cyW && 0x0 < cyT['crosshairType'] && !window['spectating']) {
                let cyj = cyT['crosshairScale']
                  , cyk = cyU / 0x2
                  , cyl = cyV / 0x2
                  , cym = cyk - cyj / 0x2
                  , cyn = cyl - cyj / 0x2
                  , cyo = 0x4
                  , cyp = 0x15
                  , cyq = cyT['crosshairThick']
                  , cyr = cyT['crosshairLen']
                  , cys = cyT['crosshairAlways'];
                cyw['save'](),
                cyw['globalAlpha'] = 0x1 < cyT['crosshairType'] && cys ? 0x1 : cyT['crosshairOpacity'],
                0x4 == cyT['crosshairType'] && (cyw['translate'](0x0, 0x0),
                cyw['beginPath'](),
                cyw['drawImage'](cyT['crosshairImage'], cyk - cyT['crosshairImage']['width'] / 0x2, cyl - cyT['crosshairImage']['height'] / 0x2)),
                (0x2 == cyT['crosshairType'] || 0x3 == cyT['crosshairType']) && (0x0 == cyT['crosshairStyle'] ? (cyD(cyw, cyk - 0.5 * cyq, cyl - cyr, cyq, 0x2 * cyr),
                cyD(cyw, cyk - cyr, cyl - cyq / 0x2, 0x2 * cyr, cyq),
                cyD(cyw, cyk - 0.5 * cyq, cyl - cyr, cyq, 0x2 * cyr, 0x1, !0x1, !0x1)) : 0x0 < cyT['crosshairStyle'] && cyD(cyw, cyk - 0x2 * cyr / 0x2, cyl - 0x2 * cyr / 0x2, 0x2 * cyr, 0x2 * cyr, cyq / 0x2, 0x1 == cyT['crosshairStyle'] || 0x2 == cyT['crosshairStyle'], !0x0, 0x2 == cyT['crosshairStyle'] || 0x4 == cyT['crosshairStyle'])),
                cyw['globalAlpha'] = cyT['crosshairOpacity'],
                (0x1 == cyT['crosshairType'] || 0x3 == cyT['crosshairType']) && (cyD(cyw, cym, cyn + cyj / 0x2 - cyo / 0x2, cyp, cyo),
                cyD(cyw, cym + cyj - cyp, cyn + cyj / 0x2 - cyo / 0x2, cyp, cyo),
                cyD(cyw, cym + cyj / 0x2 - cyo / 0x2, cyn, cyo, cyp),
                cyD(cyw, cym + cyj / 0x2 - cyo / 0x2, cyn + cyj - cyp, cyo, cyp)),
                cyw['restore']();
            }
            cyw['restore']();
        }
        ,
        cyj['exports'] = cyp;
    }
    , function(czn, czo, czp) {
        'use strict';
        czn['exports'] = function(czn, czo) {
            return function() {
                for (var czp = Array(arguments['length']), czt = 0x0; czt < czp['length']; czt++)
                    czp[czt] = arguments[czt];
                return czn['apply'](czo, czp);
            }
            ;
        }
        ;
    }
    , function(czu, czv, czw) {
        'use strict';
        var czx = czw(0x22);
        function czy(czu) {
            return encodeURIComponent(czu)['replace'](/%40/gi, '@')['replace'](/%3A/gi, ':')['replace'](/%24/g, '$')['replace'](/%2C/gi, ',')['replace'](/%20/g, '+')['replace'](/%5B/gi, '[')['replace'](/%5D/gi, ']');
        }
        czu['exports'] = function(czu, czv, czw) {
            if (!czv)
                return czu;
            var czD;
            if (czw)
                czD = czw(czv);
            else if (czx['isURLSearchParams'](czv))
                czD = czv['toString']();
            else {
                var czE = [];
                czx['forEach'](czv, function(czu, czv) {
                    null == czu || (czx['isArray'](czu) ? czv += '[]' : czu = [czu],
                    czx['forEach'](czu, function(czu) {
                        czx['isDate'](czu) ? czu = czu['toISOString']() : czx['isObject'](czu) && (czu = JSON['stringify'](czu)),
                        czE['push'](czy(czv) + '=' + czy(czu));
                    }));
                }),
                czD = czE['join']('&');
            }
            if (czD) {
                var czI = czu['indexOf']('#');
                -0x1 !== czI && (czu = czu['slice'](0x0, czI)),
                czu += (-0x1 === czu['indexOf']('?') ? '?' : '&') + czD;
            }
            return czu;
        }
        ;
    }
    , function(czJ, czK, czL) {
        'use strict';
        czJ['exports'] = function(czJ) {
            return !(!czJ || !czJ['__CANCEL__']);
        }
        ;
    }
    , function(czN, czO, czP) {
        'use strict';
        (function(czO) {
            var czR = czP(0x22)
              , czS = czP(0x8e)
              , czT = {
                'Content-Type': 'application/x-www-form-urlencoded'
            };
            function czU(czN, czO) {
                !czR['isUndefined'](czN) && czR['isUndefined'](czN['Content-Type']) && (czN['Content-Type'] = czO);
            }
            var czX, czY = {
                'adapter': (void 0x0 !== czO && '[object\x20process]' === Object['prototype']['toString']['call'](czO) ? czX = czP(0x68) : 'undefined' != typeof XMLHttpRequest && (czX = czP(0x68)),
                czX),
                'transformRequest': [function(czN, czO) {
                    return czS(czO, 'Accept'),
                    czS(czO, 'Content-Type'),
                    czR['isFormData'](czN) || czR['isArrayBuffer'](czN) || czR['isBuffer'](czN) || czR['isStream'](czN) || czR['isFile'](czN) || czR['isBlob'](czN) ? czN : czR['isArrayBufferView'](czN) ? czN['buffer'] : czR['isURLSearchParams'](czN) ? (czU(czO, 'application/x-www-form-urlencoded;charset=utf-8'),
                    czN['toString']()) : czR['isObject'](czN) ? (czU(czO, 'application/json;charset=utf-8'),
                    JSON['stringify'](czN)) : czN;
                }
                ],
                'transformResponse': [function(czN) {
                    if ('string' == typeof czN)
                        try {
                            czN = JSON['parse'](czN);
                        } catch (cA2) {}
                    return czN;
                }
                ],
                'timeout': 0x0,
                'xsrfCookieName': 'XSRF-TOKEN',
                'xsrfHeaderName': 'X-XSRF-TOKEN',
                'maxContentLength': -0x1,
                'validateStatus': function(czN) {
                    return 0xc8 <= czN && 0x12c > czN;
                }
            };
            czY['headers'] = {
                'common': {
                    'Accept': 'application/json,\x20text/plain,\x20*/*'
                }
            },
            czR['forEach'](['delete', 'get', 'head'], function(czN) {
                czY['headers'][czN] = {};
            }),
            czR['forEach'](['post', 'put', 'patch'], function(czN) {
                czY['headers'][czN] = czR['merge'](czT);
            }),
            czN['exports'] = czY;
        }
        ['call'](this, czP(0xe)));
    }
    , function(cA6, cA7, cA8) {
        'use strict';
        var cA9 = cA8(0x22)
          , cAa = cA8(0x8f)
          , cAb = cA8(0x65)
          , cAc = cA8(0x91)
          , cAd = cA8(0x92)
          , cAe = cA8(0x69);
        cA6['exports'] = function(cA6) {
            return new Promise(function(cA7, cAh) {
                var cAi = cA6['data']
                  , cAj = cA6['headers'];
                cA9['isFormData'](cAi) && delete cAj['Content-Type'];
                var cAk = new XMLHttpRequest();
                if (cA6['auth']) {
                    var cAl = cA6['auth']['username'] || ''
                      , cAm = cA6['auth']['password'] || '';
                    cAj['Authorization'] = 'Basic\x20' + btoa(cAl + ':' + cAm);
                }
                if (cAk['open'](cA6['method']['toUpperCase'](), cAb(cA6['url'], cA6['params'], cA6['paramsSerializer']), !0x0),
                cAk['timeout'] = cA6['timeout'],
                cAk['onreadystatechange'] = function() {
                    if (cAk && 0x4 === cAk['readyState'] && (0x0 !== cAk['status'] || cAk['responseURL'] && 0x0 === cAk['responseURL']['indexOf']('file:'))) {
                        var cA8 = 'getAllResponseHeaders'in cAk ? cAc(cAk['getAllResponseHeaders']()) : null
                          , cA9 = {
                            'data': cA6['responseType'] && 'text' !== cA6['responseType'] ? cAk['response'] : cAk['responseText'],
                            'status': cAk['status'],
                            'statusText': cAk['statusText'],
                            'headers': cA8,
                            'config': cA6,
                            'request': cAk
                        };
                        cAa(cA7, cAh, cA9),
                        cAk = null;
                    }
                }
                ,
                cAk['onabort'] = function() {
                    cAk && (cAh(cAe('Request\x20aborted', cA6, 'ECONNABORTED', cAk)),
                    cAk = null);
                }
                ,
                cAk['onerror'] = function() {
                    cAh(cAe('Network\x20Error', cA6, null, cAk)),
                    cAk = null;
                }
                ,
                cAk['ontimeout'] = function() {
                    cAh(cAe('timeout\x20of\x20' + cA6['timeout'] + 'ms\x20exceeded', cA6, 'ECONNABORTED', cAk)),
                    cAk = null;
                }
                ,
                cA9['isStandardBrowserEnv']()) {
                    var cAp = cA8(0x93)
                      , cAq = (cA6['withCredentials'] || cAd(cA6['url'])) && cA6['xsrfCookieName'] ? cAp['read'](cA6['xsrfCookieName']) : void 0x0;
                    cAq && (cAj[cA6['xsrfHeaderName']] = cAq);
                }
                if ('setRequestHeader'in cAk && cA9['forEach'](cAj, function(cA6, cA7) {
                    void 0x0 === cAi && 'content-type' === cA7['toLowerCase']() ? delete cAj[cA7] : cAk['setRequestHeader'](cA7, cA6);
                }),
                cA6['withCredentials'] && (cAk['withCredentials'] = !0x0),
                cA6['responseType'])
                    try {
                        cAk['responseType'] = cA6['responseType'];
                    } catch (cAt) {
                        if ('json' !== cA6['responseType'])
                            throw cAt;
                    }
                'function' == typeof cA6['onDownloadProgress'] && cAk['addEventListener']('progress', cA6['onDownloadProgress']),
                'function' == typeof cA6['onUploadProgress'] && cAk['upload'] && cAk['upload']['addEventListener']('progress', cA6['onUploadProgress']),
                cA6['cancelToken'] && cA6['cancelToken']['promise']['then'](function(cA6) {
                    cAk && (cAk['abort'](),
                    cAh(cA6),
                    cAk = null);
                }),
                void 0x0 === cAi && (cAi = null),
                cAk['send'](cAi);
            }
            );
        }
        ;
    }
    , function(cAv, cAw, cAx) {
        'use strict';
        var cAy = cAx(0x90);
        cAv['exports'] = function(cAv, cAw, cAx, cAC, cAD) {
            var cAE = new Error(cAv);
            return cAy(cAE, cAw, cAx, cAC, cAD);
        }
        ;
    }
    , function(cAF, cAG, cAH) {
        'use strict';
        var cAI = cAH(0x22);
        cAF['exports'] = function(cAF, cAG) {
            cAG = cAG || {};
            var cAH = {};
            return cAI['forEach'](['url', 'method', 'params', 'data'], function(cAF) {
                void 0x0 !== cAG[cAF] && (cAH[cAF] = cAG[cAF]);
            }),
            cAI['forEach'](['headers', 'auth', 'proxy'], function(cAN) {
                cAI['isObject'](cAG[cAN]) ? cAH[cAN] = cAI['deepMerge'](cAF[cAN], cAG[cAN]) : void 0x0 === cAG[cAN] ? cAI['isObject'](cAF[cAN]) ? cAH[cAN] = cAI['deepMerge'](cAF[cAN]) : void 0x0 !== cAF[cAN] && (cAH[cAN] = cAF[cAN]) : cAH[cAN] = cAG[cAN];
            }),
            cAI['forEach'](['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath'], function(cAI) {
                void 0x0 === cAG[cAI] ? void 0x0 !== cAF[cAI] && (cAH[cAI] = cAF[cAI]) : cAH[cAI] = cAG[cAI];
            }),
            cAH;
        }
        ;
    }
    , function(cAP, cAQ, cAR) {
        'use strict';
        function cAS(cAP) {
            this['message'] = cAP;
        }
        cAS['prototype']['toString'] = function() {
            return 'Cancel' + (this['message'] ? ':\x20' + this['message'] : '');
        }
        ,
        cAS['prototype']['__CANCEL__'] = !0x0,
        cAP['exports'] = cAS;
    }
    , function(cAU, cAV, cAW) {
        cAW(0x3f),
        'localhost' == location['hostname'] && (location['hostname'] = '127.0.0.1');
        var cAX = cAW(0x7);
        var cAY = (0x0,
        eval)('typeof\x20require\x20==\x20\x22function\x22') && cAX['isProd']
          , cAZ = 'undefined' != typeof Storage;
        function cB0(cAU) {
            cAZ && localStorage['removeItem'](cAU);
        }
        window['saveVal'] = function(cAU, cAV) {
            cAZ && localStorage['setItem'](cAU, cAV);
        }
        ,
        window['getSavedVal'] = function(cAU) {
            return cAZ ? localStorage['getItem'](cAU) : null;
        }
        ;
        var cB5 = new (cAW(0x51))();
        function cB6() {
            for (var cAU = ['Ranked', 'Shop', 'Social', 'Maps', 'Mods', 'Settings', 'Host', 'Browser', 'Join'], cAV = 0x0; cAV < cAU['length']; cAV++)
                document['getElementById']('menuBtn' + cAU[cAV])['innerHTML'] = cB5['t']('menu.btn.' + cAU[cAV]['toLowerCase']());
            customizeButton['innerHTML'] = cB5['t']('menu.btn.customize'),
            inviteButton['innerHTML'] = cB5['t']('menu.btn.invite');
        }
        cB6(),
        window['openURL'] = function(cAU) {
            window['open'](cAU, '_blank');
        }
        ;
        var cBa = new URLSearchParams(window['location']['search'])['has']('autoQueue')
          , cBb = cAW(0x6d)['default'];
        cBb['PING_REGION_CACHE_KEY'] = 'pingRegion4';
        var cBc = new cBb(cAX['matchmakerURL'])
          , cBd = null
          , cBe = null;
        function cBf(cAU) {
            cBc['switchGame'](cAU);
        }
        async function cBh() {
            if (cBV && (!cBc['queueManager'] || 'Queued' == cBc['queueManager']['status'])) {
                await cBc['unqueue']();
                var cAU, cAV = Array['from'](document['getElementsByClassName']('queueCheckboxOption'));
                cAV['length'] ? (cAU = cAV['filter'](cAU=>cAU['checked'])['map'](cAU=>cAU['dataset']['queueId']),
                localStorage['lastQueues'] = JSON['stringify'](cAU)) : cAU = localStorage['lastQueues'] ? JSON['parse'](localStorage['lastQueues']) : [cAX['queues'][0x0]],
                cFY('Queuing');
                var cAW = 'undefined' == typeof queueRegionSelect ? localStorage[cBb['PING_REGION_CACHE_KEY']] : queueRegionSelect['value'];
                cBR['send']('queue', cAU, cBc['hostname'], cAW),
                showWindow();
            }
        }
        function cBn(cAU, cAV) {
            hostGameMsg && (hostGameMsg['innerHTML'] = cAU),
            cAV && function(cAU) {
                var cAV = cBc['generateHref'](cAU);
                window['history']['replaceState']({}, 'Krunker', cAV),
                windows[0x1]['lastLoadTime'] = 0x0,
                cBd = cAU;
            }(cAV),
            cK7 = null,
            cK8 = null;
        }
        async function cBs(cAU) {
            return cAU ? void cBc['queue']({
                'clientId': cAU,
                'statusCallback': function(cAU, cAV) {
                    cFY(cAU, cAV);
                },
                'hostCallback': function(cAU) {
                    setTimeout(function() {
                        cBR['send']('pgi', cAU),
                        cFY(null);
                    }, 0x3e8 * cFW);
                }
            }) : void cFY(null);
        }
        window['switchServer'] = cBf,
        window['checkedSwitchServer'] = function(cAU, cAV) {
            cAV['innerText'] = '...',
            cBc['fetchGameInfo'](cAU)['then'](cAW=>{
                cAW['clients'] >= cAW['maxClients'] ? (cAV['innerHTML'] = cB5['t']('matchmaker.full'),
                setTimeout(()=>{
                    cAV['innerText'] = Math['min'](cAW['clients'], cAW['maxClients']) + '/' + cAW['maxClients'];
                }
                , 0x3e8)) : cBf(cAU);
            }
            );
        }
        ,
        window['joinQueue'] = cBh,
        window['leaveQueue'] = function() {
            cBR['send']('unqueue'),
            cFY(null),
            cBc['unqueue']();
        }
        ,
        Object['defineProperty'](window, 'createPrivateRoom', {
            'writeable': !0x1,
            'value': function() {
                for (var cAU, cAV = [], cAW = document['getElementById']('rawMapData'), cAY = 0x0; cAY < cC0['length']; cAY++)
                    (cAU = document['getElementById']('gameMap' + cAY)) && cAU['checked'] && cAV['push'](cAY);
                if (0x0 != cAV['length'] || cK7 || '' != rawMapData['value']) {
                    var cAZ = [];
                    for (cAY = 0x0; cAY < cC1['length']; cAY++)
                        document['getElementById']('gameMode' + cAY)['checked'] && cAZ['push'](cAY);
                    if (0x0 != cAZ['length']) {
                        var cB0 = [];
                        for (cAY = 0x0; cAY < cBS['classes']['length']; cAY++)
                            document['getElementById']('gameClass' + cAY)['checked'] && cB0['push'](cAY);
                        if (0x0 != cB0['length']) {
                            var cB6, cBa = {
                                'customMap': cK7,
                                'rawMapData': cAW ? cAW['value'] : null,
                                'private': makePrivate['checked'],
                                'maps': cAV,
                                'modes': cAZ,
                                'classes': cB0
                            };
                            for (cAY = 0x0; cAY < cAX['serverConfig']['length']; cAY++)
                                cB6 = document['getElementById']('customS' + cAX['serverConfig'][cAY]['varN']),
                                tmpV = cAX['serverConfig'][cAY]['bool'] ? cB6 ? cB6['checked'] : 0x0 : cAX['serverConfig'][cAY]['input'] ? cB6 ? cBJ['sanitizeStr'](cB6['value']) : 0x0 : cB6 ? parseFloat(cB6['value']) : 0x0,
                                cBa[cAX['serverConfig'][cAY]['varN']] = tmpV;
                            cBR['send']('custom', cBa),
                            hostGameMsg['innerHTML'] = cB5['t']('generic.wait');
                        } else
                            hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cB5['t']('custom.class.missing') + '</span>';
                    } else
                        hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cB5['t']('custom.mode.missing') + '</span>';
                } else
                    hostGameMsg['innerHTML'] = '<span\x20class=\x27error\x27>' + cB5['t']('custom.map.missing') + '</span>';
            }
        }),
        Object['defineProperty'](console, '_commandLineAPI', {
            'get': function() {
                throw '';
            }
        });
        var cBI = cAW(0x4);
        cBI['OBJLoader'] = cAW(0x41)(cBI),
        cBI['Shaders'] = cAW(0x42)(cBI);
        var cBJ = cAW(0x8)
          , cBK = cAW(0x63)
          , cBL = new (cAW(0x3a))(cBI,cBJ,cAX,cBK)
          , cBM = window['SOUND'] = new (cAW(0x4a))(cBJ,cAX)
          , cBN = new (cAW(0x4b))(cBL,cAX)
          , cBO = cAW(0x84)
          , cBP = new (cAW(0x85))(cBL,cAX)
          , cBQ = cAW(0x86)
          , cBR = cAW(0x58)
          , cBS = cAW(0x5a)['obj'];
        cBS = new cBS(!0x1,0x0,null,cBL,cBM,cBN);
        var cBT = new (cAW(0x98))(cBL,cBI,cBO,cBJ,cBS,cAX,cBR);
        cBS['controls'] = cBT;
        var cBU, cBV, cBW, cBX, cBY, cBZ, cC0 = cAW(0x27)['maps'], cC1 = cAW(0x27)['modes'], cC2 = cAW(0x5c), cC3 = cAW(0x47)['Player'], cC4 = new (cAW(0x9a))(), cC5 = cAW(0x23), cC6 = (new cBI['Vector3'](),
        !0x1), cC7 = null, cC8 = !0x1;
        window['locked'] = !0x1;
        var cC9 = []
          , cCa = []
          , cCb = null
          , cCc = !0x0
          , cCd = 0x0
          , cCe = 0x0
          , cCf = 0x0
          , cCg = 0x1e
          , cCh = 0x0
          , cCi = 0x1
          , cCj = 0x1
          , cCk = -0x1;
        window['idleTimer'] = 0x0;
        var cCl, cCm, cCn, cCo, cCp = 0x0, cCq = !0x0, cCr = !0x0, cCs = !0x0, cCt = '', cCu = '', cCv = !0x1, cCw = 0x0, cCx = 0x1, cCy = !0x0, cCz = getSavedVal('krk_lastMod') || '';
        function cCA(cAU) {
            cCz = cAU,
            saveVal('krk_lastMod', cAU);
        }
        cCA(cCz);
        var cCC = 0x1
          , cCD = 0x1
          , cCE = 0x6a4
          , cCF = 0x384;
        function cCG() {
            var cAU = window['innerWidth']
              , cAV = window['innerHeight']
              , cAW = cCE * cCD
              , cAX = cCF * cCD
              , cAY = cAU / cAW
              , cAZ = cAV / cAX;
            cAZ < cAY ? (cCC = cAZ,
            uiBase['style']['transform'] = 'scale(' + cAZ['toFixed'](0x3) + ')',
            uiBase['style']['width'] = (cAU / cAZ)['toFixed'](0x3) + 'px',
            uiBase['style']['height'] = cAX + 'px') : (cCC = cAY,
            uiBase['style']['transform'] = 'scale(' + cAY['toFixed'](0x3) + ')',
            uiBase['style']['width'] = cAW + 'px',
            uiBase['style']['height'] = (cAV / cAY)['toFixed'](0x3) + 'px');
        }
        window['addEventListener']('resize', cCG),
        cCG(),
        window['checkTerms'] = function(cAU) {
            cAU ? (consentBlock['style']['display'] = 'none',
            saveVal('consent', 0x1)) : $('#consentShake')['effect']('shake');
        }
        ;
        var cCO = ['/img/button/button-normal.png', '/img/button/button-hover.png', '/img/button/button-pressed.png', '/img/social-buttons/discord-normal.png', '/img/social-buttons/discord-hover.png', '/img/social-buttons/discord-pressed.png', '/img/social-buttons/reddit-normal.png', '/img/social-buttons/reddit-hover.png', '/img/social-buttons/reddit-pressed.png', '/img/social-buttons/twitter-normal.png', '/img/social-buttons/twitter-hover.png', '/img/social-buttons/twitter-pressed.png', '/img/social-buttons/kr-normal.png', '/img/social-buttons/kr-hover.png', '/img/social-buttons/kr-pressed.png']
          , cCP = [];
        window['addEventListener']('load', function() {
            for (var cAU of cCO) {
                var cAV = new Image();
                cAV['src'] = cAU,
                cCP['push'](cAV);
            }
        }),
        Math['PI2'] = 0x2 * Math['PI'],
        Math['lerpAngle'] = function(cAU, cAV, cAW) {
            Math['abs'](cAV - cAU) > Math['PI'] && (cAU > cAV ? cAV += Math['PI2'] : cAU += Math['PI2']);
            var cAX = cAV + (cAU - cAV) * cAW;
            return 0x0 <= cAX && cAX <= Math['PI2'] ? cAX : cAX % Math['PI2'];
        }
        ,
        console['warn'] = function() {}
        ,
        console['info'] = function() {}
        ;
        var cCW = !0x1;
        window['toggleStrm'] = function(cAU, cAV=!0x1) {
            cCW = cAU,
            cAV || (cAU ? window['history']['pushState'](document['title'], document['title'], '/') : window['history']['pushState'](document['title'], document['title'], cBc['generateHref'](cBd))),
            cOC(cOA, cOB);
        }
        ;
        var cCZ = !0x1;
        window['loading'] = !0x1;
        var cD0 = !0x1;
        window['spectTarget'] = null,
        window['spectating'] = !0x1,
        window['toggleSpect'] = function(cAU) {
            cD0 = cAU;
        }
        ;
        var cD2, cD3, cD4 = !0x1;
        function cD5() {
            window['innerWidth'],
            cD2 = window['innerHeight'],
            cD3 = cD2 / cCC / 0x2b5,
            cBL['resize']();
        }
        function cD6(cAU) {
            return cAX['apiURL'] + cAU;
        }
        window['toggleChal'] = function(cAU) {
            cD4 = cAU;
        }
        ,
        window['spectMode'] = function(cAU) {
            if (cBS && cBS['players']) {
                if (cAU) {
                    for (var cAV = Math['max'](0x0, window['spectTarget'] ? cBS['players']['list']['indexOf'](window['spectTarget']) : 0x0), cAW = null, cAX = 0x0; cAX < cBS['players']['list']['length']; ++cAX)
                        if ((cAV += cAU) >= cBS['players']['list']['length'] ? cAV = 0x0 : 0x0 > cAV && (cAV = cBS['players']['list']['length'] - 0x1),
                        (cBW = cBS['players']['list'][cAV]) && cBW['active']) {
                            cAW = cBW;
                            break;
                        }
                    window['spectTarget'] = cAW;
                } else
                    window['spectTarget'] = null,
                    cBT['setCamPosOff']();
                window['spectTarget'];
            }
        }
        ,
        window['specStatUpdate'] = function(cAU) {
            if (cAU = window['spectTarget']) {
                specStats['style']['display'] = 'inline-block';
                for (var cAV = cAU['name'] + (cAU['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAX['verClans']['indexOf'](cAU['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cAU['clan'] + ']</span>' : ''), cAW = cBS['mode']['endStats'] || cAX['endStats'], cAY = 'font-size:11px;color:rgb(255,255,255,0.5)', cAZ = 0x2; cAZ < cAW['length']; ++cAZ)
                    cAV += '<div\x20style=\x27' + cAY + '\x27>' + cBJ['capFirst'](cAW[cAZ]) + '<span\x20style=\x27float:right;' + cAY + '\x27>' + (cAX['endForm'][cAW[cAZ]] ? cAX['endForm'][cAW[cAZ]](cAU[cAW[cAZ]], cBS, cAU[cJK]) : cAU[cAW[cAZ]]) + '</span></div>';
                specStats['innerHTML'] = cAV;
            } else
                specStats['style']['display'] = 'none',
                specStats['innerHTML'] = '';
        }
        ,
        Object['defineProperty'](window, 'enterGame', {
            'writeable': !0x1,
            'value': function() {
                if (cBS['singlePlayer'] && !cCZ) {
                    cLV('0:00');
                    var cAU = cBS['getSpawnPoint'](null, !0x0)
                      , cAV = cBS['classes'][parseInt(cCw)];
                    cNz([cBR['socketId'], 0x1, cAU['x'], cAU['y'], cAU['z'], 'TEST', cCw, cAV['health'], cAV['health'], null, 0x64, null, [null == cGE[cAV['loadout'][0x0]] ? -0x1 : cGE[cAV['loadout'][0x0]], null == cGE[cAV['loadout'][0x1]] ? -0x1 : cGE[cAV['loadout'][0x1]]], null, null, cAV['secondary'] ? parseInt(cGF) : null, !0x1, null, -((cAU['dir'] || 0x0) + 0x1) * Math['PI'] / 0x2]),
                    cCZ = !0x0,
                    cOC([0x1, 'TEST', 0x0, 0x0, 0x0, 0x0]),
                    cBO['toggleMenu'](!0x1);
                } else if (cBR['connected'] && (!cCZ || window['spectating'] && !cD0)) {
                    bloodDisplay['style']['display'] = 'none',
                    cCZ = !0x0,
                    window['idleTimer'] = 0x0,
                    cBO['toggleMenu'](!0x1),
                    instructions['innerHTML'] = cB5['t']('generic.loading'),
                    window['loading'] = !0x0;
                    cAV = parseInt(cCw);
                    var cAW = cBS['classes'][cAV]['loadout']
                      , cAX = [null == cGE[cAW[0x0]] ? -0x1 : -0x2 == cGE[cAW[0x0]] ? cGH(cAW[0x0] + 0x1) : cGE[cAW[0x0]], null == cGE[cAW[0x1]] ? -0x1 : cGE[cAW[0x1]]];
                    cBR['send']('etrg', [cAV, parseInt(cNl), cAX, parseInt(cGC), parseInt(cGB), parseInt(cGF), cD0 ? 0x1 : 0x0, cD4 ? 0x1 : 0x0, cGy, parseInt(cGA), parseInt(cGz), parseFloat(cCj)]);
                }
            }
        }),
        window['addEventListener']('resize', cD5),
        cD5(),
        window['toggleAd'] = function() {}
        ;
        var cDm = 0x0;
        function cDn(cAU) {
            cBV && (cBV['funds'] = cAU),
            cFR();
        }
        function cDp(cAU, cAV) {
            window['idleTimer'] = 0x0,
            cAU ? purchaseError() : (cBV && (cBV['funds'] = cAV),
            cFR(),
            updateWindow(null, !0x0),
            cBO['toggleMenuHider'](!0x0),
            purchaseLoad['style']['display'] = 'none');
        }
        window['cancelPurchase'] = function() {
            window['idleTimer'] = 0x0,
            purchaseResponse['style']['display'] = 'none',
            cDm = 0x0,
            purchaseLoad['style']['display'] = 'none';
        }
        ,
        window['showPurchase'] = function(cAU) {
            window['idleTimer'] = 0x0,
            cDm = cAU,
            purchaseHolder['style']['display'] = 'block';
            var cAV = document['getElementById']('paypal-button')
              , cAW = document['getElementById']('creatorCodeI') || {};
            cAV && (cAV['innerHTML'] = ''),
            cBV && paypal['Button']['render']({
                'style': {
                    'size': 'large'
                },
                'env': 'production',
                'commit': !0x0,
                'payment': function(cAU, cAV) {
                    return purchaseHolder['style']['display'] = 'none',
                    cAV['request']['post'](cD6('/my-api/create-payment/'), {
                        'pIndex': cDm,
                        'acID': cBV['id'],
                        'creID': cAW['value'] || null
                    })['then'](function(cAU) {
                        return cAU['id'];
                    });
                },
                'onAuthorize': function(cAU, cAV) {
                    return cAV['request']['post'](cD6('/my-api/execute-payment/'), {
                        'pIndex': cDm,
                        'acID': cBV['id'],
                        'creID': cAW['value'] || null,
                        'paymentID': cAU['paymentID'],
                        'payerID': cAU['payerID']
                    })['then'](function(cAU) {
                        cAU && null != cAU['funds'] && null != cAU['funds'] ? (cBV && (cBV['funds'] = cAU['funds']),
                        cFR(),
                        updateWindow(null, !0x0),
                        cBO['toggleMenuHider'](!0x0),
                        purchaseLoad['style']['display'] = 'none') : purchaseError(cAU);
                    });
                },
                'onError': function(cAU) {
                    purchaseError(cAU);
                }
            }, '#paypal-button');
        }
        ,
        purchaseHolder['onclick'] = function() {
            purchaseHolder['style']['display'] = 'none';
        }
        ,
        window['purchaseError'] = function(cAU) {
            var cAV = 'Purchase\x20Error';
            cAU && cAU['err'] && (cAV = cAU['err']),
            purchaseResponse['style']['display'] = 'block',
            purchaseRespH['innerHTML'] = cAV + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27cancelPurchase()\x27>' + cB5['t']('purchase.error.click') + '</a>';
        }
        ,
        purchaseResponse['onclick'] = function() {
            purchaseResponse['style']['display'] = 'none';
        }
        ;
        const cDE = new FileReader();
        var cDF, cDG, cDH = !0x1, cDI = 0x0, cDJ = {};
        function cDK() {
            cCZ = !0x1,
            window['idleTimer'] = 0x0,
            cBO['toggleMenu'](!0x0),
            cBT['toggle'](!0x1),
            cL5 = {
                'states': []
            };
        }
        function cDL() {
            menuMiniProfilePic['src'] = hudClassImg['src'] = cCu['length'] ? cCu : '/textures/classes/icon_' + cCw + '.png';
        }
        function cDM() {
            var cAU = [];
            0x1 != cEo['saturation']['val'] && cAU['push']('saturate(' + 0x64 * cEo['saturation']['val'] + '%)'),
            0x0 != cEo['hue']['val'] && cAU['push']('hue-rotate(' + 3.6 * cEo['hue']['val'] + 'deg)'),
            cAU['length'] ? document['body']['style']['filter'] = cAU['join']('\x20') : document['body']['style']['removeProperty']('filter');
        }
        window['voiceChat'] = function(cAU, cAV) {
            if (cDI) {
                cCW && cC4 && (cAV = cBJ['scrambleS'](cAV));
                try {
                    var cAW = new Howl({
                        'src': [cAU],
                        'volume': cDI
                    });
                    cAW['on']('load', function() {
                        cAW['duration']() <= cAX['voiceChatMaxLength'] && (cAW['on']('end', function() {
                            if (cDJ[cAV]--,
                            0x0 >= cDJ[cAV]) {
                                var cAU = document['getElementById']('speaker' + cAV);
                                cAU && cAU['parentElement']['removeChild'](cAU),
                                delete cDJ[cAV];
                            }
                        }),
                        !cDJ[cAV] && (cDJ[cAV] = 0x0,
                        speakerDisplay['innerHTML'] += '<div\x20id=\x27speaker' + cAV + '\x27\x20class=\x27voiceSpeaker\x27>' + cAV + '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;vertical-align:middle\x27>volume_down</i></div>'),
                        cDJ[cAV]++,
                        cAW['play']());
                    });
                } catch (cDS) {}
            }
        }
        ,
        cDE['addEventListener']('loadend', function() {
            var cAU = cDE['result'];
            cBR['send']('vc', cAU);
        }),
        window['toggleRecord'] = function(cAU) {
            'INPUT' == document['activeElement']['tagName'] || (cBU || window['spectating']) && (cAU && !cDH ? (voiceDisplay['style']['opacity'] = 0.9,
            cDH = !0x0,
            navigator['mediaDevices']['getUserMedia']({
                'audio': !0x0,
                'video': !0x1
            })['then'](function(cAU) {
                (cDF = new MediaRecorder(cAU,{
                    'mimetype': 'audio/ogg',
                    'bitsPerSecond': 0x1770
                }))['start']();
                const cAV = [];
                cDF['addEventListener']('dataavailable', function(cAU) {
                    cAV['push'](cAU['data']);
                }),
                cDF['addEventListener']('stop', function() {
                    recTimer['style']['display'] = 'none',
                    voiceDisplay['style']['opacity'] = 0.5;
                    var cAU = new Blob(cAV,{
                        'type': 'audio/ogg;\x20codecs=opus'
                    });
                    cDE['readAsDataURL'](cAU);
                }),
                recTimer['style']['display'] = 'inline-block',
                recTimer['innerHTML'] = cAX['voiceChatMaxLength'];
                var cAW = cAX['voiceChatMaxLength'];
                cDG = setInterval(function() {
                    cAW--,
                    recTimer['innerHTML'] = cAW,
                    0x0 >= cAW && (cDH = !0x1,
                    cDF['stop'](),
                    clearInterval(cDG));
                }, 0x3e8);
            })['catch'](function() {
                cDH = !0x1,
                cDG && clearInterval(cDG),
                voiceDisplay['style']['opacity'] = 0.5;
            })) : !cAU && cDH && cDF && (cDH = !0x1,
            cDF['stop'](),
            clearInterval(cDG)));
        }
        ,
        window['updateSliderLabel'] = function(cAU, cAV) {
            var cAW = document['getElementById']('customSet' + cAU);
            cAW && (cAW['innerHTML'] = cAV);
        }
        ,
        Object['defineProperty'](window, 'setSetting', {
            'writeable': !0x1,
            'value': function(cAU, cAV) {
                (cEo[cAU]['min'] || cEo[cAU]['max']) && (cAV = Math['min'](cEo[cAU]['max'], Math['max'](cEo[cAU]['min'], cAV))),
                document['getElementById']('slid_' + cAU) && (document['getElementById']('slid_' + cAU)['value'] = cAV),
                document['getElementById']('slid_input_' + cAU) && (document['getElementById']('slid_input_' + cAU)['value'] = cAV),
                cEo[cAU]['val'] = cAV,
                cEo[cAU]['set'](cAV),
                saveVal('kro_setngss_' + cAU, cAV);
            }
        }),
        window['resetSettings'] = function() {
            confirm(cB5['t']('settings.reset.confirm')) && (Object['keys'](localStorage)['filter'](cAU=>cAU['includes']('kro_setngss_') || cAU['includes']('cont_'))['forEach'](cAU=>localStorage['removeItem'](cAU)),
            location['reload']());
        }
        ,
        window['exportSettings'] = function() {
            var cAU = {};
            for (var cAV in cEo)
                cAU[cAV] = cEo[cAV]['val'];
            downloadFile('settings.txt', cAU);
        }
        ,
        window['importSettings'] = function() {
            var cAU = prompt('Copy\x20Paste\x20Settings\x20Text\x20Here');
            if (cAU && '' != cAU)
                try {
                    let cAW = JSON['parse'](cAU);
                    for (var cAV in cAW)
                        setSetting(cAV, cAW[cAV]);
                    showWindow(0x1);
                } catch (cEc) {
                    console['log'](cEc),
                    alert('Failed\x20to\x20import\x20settings\x20with\x20error:\x0a' + cEc['toString']());
                }
        }
        ;
        var cEd = {};
        function cEe(cAU, cAV, cAW, cAX) {
            if ('checkbox' == cAU)
                return '<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20onclick=\x27setSetting(\x22' + cAV + '\x22,\x20this.checked)\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + (cAW['val'] ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
            if ('slider' == cAU)
                return '<input\x20type=\x27number\x27\x20class=\x27sliderVal\x27\x20id=\x27slid_input_' + cAV + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20min=\x27' + cAW['min'] + '\x27\x20max=\x27' + cAW['max'] + '\x27\x20value=\x27' + cAW['val'] + '\x27\x20onkeypress=\x27return\x20delayExecute(\x22' + cAV + '\x22,\x20this)\x27\x20style=\x27border-width:0px\x27/>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27slidecontainer\x27>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<input\x20type=\x27range\x27\x20id=\x27slid_' + cAV + '\x27\x20min=\x27' + cAW['min'] + '\x27\x20max=\x27' + cAW['max'] + '\x27\x20step=\x27' + cAW['step'] + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cAW['val'] + '\x27\x20class=\x27sliderM\x27\x20oninput=\x27setSetting(\x22' + cAV + '\x22,\x20this.value)\x27></div>';
            if ('select' == cAU) {
                var cAY = '<select\x20onchange=\x27setSetting(\x22' + cAV + '\x22,\x20this.value)\x27\x20class=\x27inputGrey2\x27>';
                for (var cAZ in cAX)
                    cAY += '<option\x20value=\x27' + cAZ + '\x27\x20' + (cAZ == cAW['val'] ? 'selected' : '') + '>' + cAX[cAZ] + '</option>';
                return cAY += '</select>';
            }
            return '<input\x20type=\x27' + cAU + '\x27\x20name=\x27' + cAU + '\x27\x0a\x20\x20\x20\x20\x20\x20\x20\x20' + ('color' == cAU ? 'style=\x27float:right;margin-top:5px\x27' : 'class=\x27inputGrey2\x27\x20placeholder=\x27' + cAX + '\x27') + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20value=\x27' + cAW['val'] + '\x27\x20oninput=\x27setSetting(\x22' + cAV + '\x22,\x20this.value)\x27/>';
        }
        window['delayExecute'] = function(cAU, cAV, cAW=0x258) {
            return clearTimeout(cEd[cAU]),
            cEd[cAU] = setTimeout(function() {
                setSetting(cAU, cAV['value']);
            }, cAW),
            !0x0;
        }
        ;
        var cEo = {
            'changeControls': {
                'noi18n': !0x0,
                'name': '<div\x20style=\x27width:100%\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(7);\x27\x20class=\x27menuLink\x27>' + cB5['t']('settings.controls.change') + '</a>\x20|\x20<a\x20onclick=\x27importSettings()\x27\x20class=\x27+\x27>' + cB5['t']('settings.import') + '</a>\x20|\x20<a\x20onclick=\x27exportSettings()\x27\x20class=\x27+\x27>' + cB5['t']('settings.export') + '</a>\x20|\x20<a\x20onclick=\x27resetSettings()\x27\x20class=\x27+\x27>' + cB5['t']('settings.reset') + '</a></div>',
                'html': function() {
                    return '';
                }
            },
            'defaultRegion': {
                'name': 'settings.local.region',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.local.header') + '</div>',
                get 'val'() {
                    return localStorage[cBb['PING_REGION_CACHE_KEY']];
                },
                set 'val'(cAU) {},
                'html': function() {
                    var cAU = {};
                    for (var cAV of cQI)
                        cAU[cAV] = cAX['regionNames'][cAV];
                    return cEe('select', 'defaultRegion', this, cAU);
                },
                'set': function(cAU) {
                    cAU && cAX['isProd'] && localStorage['setItem'](cBb['PING_REGION_CACHE_KEY'], cAU);
                }
            },
            'lang': {
                'name': 'settings.local.lang',
                'val': cB5['locale'],
                'html': function() {
                    var cAU = {};
                    for (var cAV of cB5['supported'])
                        cAU[cAV] = cAX['langNames'][cAV];
                    return cEe('select', 'lang', this, cAU);
                },
                'set': function(cAU) {
                    cAU && (cB5['setLocale'](cAU),
                    cB6(),
                    'block' == windowHolder['style']['display'] && cBO['toggleWindow'](!0x1, cBT['gamepad']['_connected']));
                }
            },
            'resolution': {
                'name': 'settings.quality.res',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.quality.header') + '</div>',
                'val': 0.6,
                'min': 0.1,
                'max': 0x2,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'resolution', this);
                },
                'set': function(cAU) {
                    cBL['setResMlt'](cAU);
                }
            },
            'updateRate': {
                'name': 'settings.quality.updRate',
                'val': 0x0,
                'min': 0x0,
                'max': 0x4b0,
                'step': 0xa,
                'html': function() {
                    return cEe('slider', 'updateRate', this);
                },
                'set': function(cAU) {
                    cCf = cAU;
                }
            },
            'lowSpec': {
                'name': 'settings.quality.lowSpec',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'lowSpec', this);
                },
                'set': function(cAU) {
                    cBL['lowSpec'] = cAU;
                }
            },
            'particles': {
                'name': 'settings.quality.part',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'particles', this);
                },
                'set': function(cAU) {
                    cBN['active'] = cAU;
                }
            },
            'shadows': {
                'name': 'settings.quality.shadows',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'shadows', this);
                },
                'set': function(cAU) {
                    cBL['toggleShadowMap'](cAU);
                }
            },
            'ambientShading': {
                'name': 'settings.quality.ambient',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'ambientShading', this);
                },
                'set': function(cAU) {
                    cBL['toggleMeshGroup']('ambient_0', cAU),
                    cBL['toggleMeshGroup']('ambient_1', cAU);
                }
            },
            'showTrails': {
                'name': 'settings.quality.trails',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showTrails', this);
                },
                'set': function(cAU) {
                    cBN['showTrails'] = cAU;
                }
            },
            'muzzleFlash': {
                'name': 'settings.quality.mflash',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'muzzleFlash', this);
                },
                'set': function(cAU) {
                    cBN['showMuzzle'] = cAU;
                }
            },
            'sniperFlap': {
                'name': 'settings.quality.flap',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'sniperFlap', this);
                },
                'set': function(cAU) {
                    cBL['sniperFlap'] = cAU;
                }
            },
            'scaleUI': {
                'name': 'settings.interface.scale',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.interface.header') + '</div>',
                'val': 0x1,
                'min': 0.1,
                'max': 0x1,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'scaleUI', this);
                },
                'set': function(cAU) {
                    cCD = 0x1 - cAU + 0x1,
                    cCG();
                }
            },
            'showUI': {
                'name': 'settings.interface.ui',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showUI', this);
                },
                'set': function(cAU) {
                    for (cBO['hideGameUI'] = !cAU,
                    chatUI['style']['display'] = cAU ? 'block' : 'none'; 0xfa <= chatList['scrollHeight']; )
                        chatList['removeChild'](chatList['childNodes'][0x0]);
                }
            },
            'dynamicHP': {
                'name': 'settings.interface.hp',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'dynamicHP', this);
                },
                'set': function(cAU) {
                    cBK['dynamicHP'] = cAU;
                }
            },
            'showDMG': {
                'name': 'settings.interface.dmg',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showDMG', this);
                },
                'set': function(cAU) {
                    cBK['showDMG'] = cAU;
                }
            },
            'dmgColor': {
                'name': 'settings.interface.dmgCol',
                'val': '#de292f',
                'html': function() {
                    return cEe('color', 'dmgColor', this);
                },
                'set': function(cAU) {
                    cBK['dmgColor'] = cAU;
                }
            },
            'dmgScale': {
                'name': 'settings.interface.dmgScale',
                'val': 0x1,
                'min': 0.1,
                'max': 0x2,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'dmgScale', this);
                },
                'set': function(cAU) {
                    cBK['dmgScale'] = 0x1e * cAU;
                }
            },
            'showChat': {
                'name': 'settings.interface.chat',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showChat', this);
                },
                'set': function(cAU) {
                    chatHolder['style']['display'] = cAU ? 'block' : 'none';
                }
            },
            'showKills': {
                'name': 'settings.interface.kills',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showKills', this);
                },
                'set': function(cAU) {
                    cCq = cAU;
                }
            },
            'showDeaths': {
                'name': 'settings.interface.deaths',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'showDeaths', this);
                },
                'set': function(cAU) {
                    deathCount['style']['display'] = cAU ? 'inline-block' : 'none';
                }
            },
            'showMessages': {
                'name': 'settings.interface.messages',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showMessages', this);
                },
                'set': function(cAU) {
                    cCr = cAU;
                }
            },
            'showUnboxings': {
                'name': 'settings.interface.unboxings',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showUnboxings', this);
                },
                'set': function(cAU) {
                    cCs = cAU;
                }
            },
            'showPing': {
                'name': 'settings.interface.ping',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showPing', this);
                },
                'set': function(cAU) {
                    pingDisplay['style']['display'] = cAU ? 'block' : 'none';
                }
            },
            'showFPS': {
                'name': 'settings.interface.fps',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'showFPS', this);
                },
                'set': function(cAU) {
                    fpsDisplay['style']['display'] = menuFPSDisplay['style']['display'] = cAU ? 'block' : 'none';
                }
            },
            'showSpeed': {
                'name': 'settings.interface.speed',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'showSpeed', this);
                },
                'set': function(cAU) {
                    speedDisplay['style']['display'] = cAU ? 'block' : 'none';
                }
            },
            'showMedals': {
                'name': 'settings.interface.medals',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showMedals', this);
                },
                'set': function(cAU) {
                    cCy = cAU;
                }
            },
            'crosshairSho': {
                'name': 'settings.crosshair.type',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.crosshair.header') + '</div>',
                'val': 0x1,
                'html': function() {
                    return cEe('select', 'crosshairSho', this, {
                        0: cB5['t']('generic.off'),
                        1: cB5['t']('generic.default'),
                        2: cB5['t']('settings.crosshair.type.2'),
                        3: cB5['t']('settings.crosshair.type.3'),
                        4: cB5['t']('settings.crosshair.type.4')
                    });
                },
                'set': function(cAU) {
                    cBK['crosshairType'] = cAU;
                    let cAV = ['crosshairStyle', 'crosshairAlways', 'crosshairLen', 'crosshairThick'];
                    for (let cAW of cAV) {
                        cEo[cAW]['hide'] = 'crosshairAlways' == cAW ? 0x2 > cAU : 0x4 == cAU || 0x2 > cAU;
                        let cAV = document['getElementById'](cAW + '_div');
                        cAV && (cAV['style']['display'] = cEo[cAW]['hide'] ? 'none' : 'block');
                    }
                    cEo['crosshairImage']['hide'] = 0x4 != cAU;
                    let cAW = document['getElementById']('crosshairImage_div');
                    cAW && (cAW['style']['display'] = 0x4 == cAU ? 'block' : 'none');
                }
            },
            'crosshairStyle': {
                'name': 'settings.crosshair.style',
                'val': 0x0,
                'hide': !0x0,
                'html': function() {
                    return cEe('select', 'crosshairStyle', this, {
                        0: cB5['t']('settings.crosshair.style.0'),
                        1: cB5['t']('settings.crosshair.style.1'),
                        2: cB5['t']('settings.crosshair.style.2'),
                        3: cB5['t']('settings.crosshair.style.3'),
                        4: cB5['t']('settings.crosshair.style.4')
                    });
                },
                'set': function(cAU) {
                    cBK['crosshairStyle'] = cAU;
                }
            },
            'crosshairImage': {
                'name': 'settings.crosshair.image',
                'val': '',
                'hide': !0x0,
                'html': function() {
                    return cEe('url', 'crosshairImage', this, cB5['t']('settings.crosshair.image.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    cBK['crosshairImage']['src'] != cAU && cAU['length'] && (cBK['crosshairImage']['src'] = cAU);
                }
            },
            'crosshairAlways': {
                'name': 'settings.crosshair.always',
                'val': !0x1,
                'hide': !0x0,
                'html': function() {
                    return cEe('checkbox', 'crosshairAlways', this);
                },
                'set': function(cAU) {
                    cBK['crosshairAlways'] = cAU;
                }
            },
            'crosshairColor': {
                'name': 'settings.crosshair.color',
                'val': '#ffffff',
                'html': function() {
                    return cEe('color', 'crosshairColor', this);
                },
                'set': function(cAU) {
                    cBK['crosshairColor'] = cAU;
                }
            },
            'crosshairShadow': {
                'name': 'settings.crosshair.shadow',
                'val': '#000000',
                'html': function() {
                    return cEe('color', 'crosshairShadow', this);
                },
                'set': function(cAU) {
                    cBK['crosshairShadow'] = cAU;
                }
            },
            'crosshairLen': {
                'name': 'settings.crosshair.size',
                'val': 0x10,
                'min': 0x2,
                'max': 0x32,
                'step': 0x1,
                'hide': !0x0,
                'html': function() {
                    return cEe('slider', 'crosshairLen', this);
                },
                'set': function(cAU) {
                    cBK['crosshairLen'] = cAU;
                }
            },
            'crosshairThick': {
                'name': 'settings.crosshair.thickness',
                'val': 0x2,
                'min': 0x2,
                'max': 0x14,
                'step': 0x1,
                'hide': !0x0,
                'html': function() {
                    return cEe('slider', 'crosshairThick', this);
                },
                'set': function(cAU) {
                    cBK['crosshairThick'] = cAU;
                }
            },
            'sensitivity': {
                'name': 'settings.gameplay.sensitivity',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.gameplay.header') + '</div>',
                'val': 0x1,
                'min': 0.1,
                'max': 0xf,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'sensitivity', this);
                },
                'set': function(cAU) {
                    cBT['sensMlt'] = cAU;
                }
            },
            'aimSensitivity': {
                'name': 'settings.gameplay.aimsens',
                'val': 0x1,
                'min': 0.1,
                'max': 0xf,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'aimSensitivity', this);
                },
                'set': function(cAU) {
                    cBT['sensAimMlt'] = cAU;
                }
            },
            'fov': {
                'name': 'settings.gameplay.fov',
                'val': cAX['fov'],
                'min': 0x3c,
                'max': 0x78,
                'step': 0x5,
                'html': function() {
                    return cEe('slider', 'fov', this);
                },
                'set': function(cAU) {
                    cBL['setFov'](cAU);
                }
            },
            'lagComp': {
                'name': 'settings.gameplay.lagComp',
                'val': 0x1,
                'min': 0x1,
                'max': 1.5,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'lagComp', this);
                },
                'set': function(cAU) {
                    cCj = cAU;
                }
            },
            'scrollDir': {
                'name': 'settings.gameplay.scrollDir',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'scrollDir', this);
                },
                'set': function(cAU) {
                    cCi = cAU ? 0x1 : -0x1;
                }
            },
            'streamMode': {
                'name': 'settings.gameplay.streamer',
                'val': !0x1,
                'dontInit': !0x0,
                'html': function() {
                    return cEe('checkbox', 'streamMode', this);
                },
                'set': function(cAU) {
                    toggleStrm(cAU);
                }
            },
            'challMode': {
                'name': 'settings.gameplay.challenge',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'challMode', this);
                },
                'set': function(cAU) {
                    toggleChal(cAU);
                }
            },
            'invertY': {
                'name': 'settings.gameplay.invert',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'invertY', this);
                },
                'set': function(cAU) {
                    cBT['invertY'] = cAU;
                }
            },
            'hideNames': {
                'name': 'settings.gameplay.hideNames',
                'val': 0x0,
                'html': function() {
                    return cEe('select', 'hideNames', this, {
                        0: cB5['t']('settings.gameplay.hideNames.all'),
                        1: cB5['t']('settings.gameplay.hideNames.team'),
                        2: cB5['t']('settings.gameplay.hideNames.enemy'),
                        3: cB5['t']('generic.off')
                    });
                },
                'set': function() {}
            },
            'sound': {
                'name': 'settings.audio.sound',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.audio.header') + '</div>',
                'val': 0x1,
                'min': 0x0,
                'max': 0x1,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'sound', this);
                },
                'set': function(cAU) {
                    cBM['setVolume'](cAU);
                }
            },
            'voiceVolume': {
                'name': 'settings.audio.voice',
                'val': 0x1,
                'min': 0x0,
                'max': 0x1,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'voiceVolume', this);
                },
                'set': function(cAU) {
                    cDI = cAU;
                }
            },
            'fpsFOV': {
                'name': 'settings.viewmodel.fps',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.viewmodel.header') + '</div>',
                'val': cAX['fov'],
                'min': 0x3c,
                'max': 0x78,
                'step': 0x5,
                'html': function() {
                    return cEe('slider', 'fpsFOV', this);
                },
                'set': function(cAU) {
                    cBL['setFPSFov'](cAU);
                }
            },
            'weaponBob': {
                'name': 'settings.viewmodel.bobbing',
                'val': 0x1,
                'min': 0x0,
                'max': 0x3,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'weaponBob', this);
                },
                'set': function(cAU) {
                    cBL['weaponBob'] = cAU;
                }
            },
            'weaponLean': {
                'name': 'settings.viewmodel.leaning',
                'val': 0x1,
                'min': 0x0,
                'max': 0x6,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'weaponLean', this);
                },
                'set': function(cAU) {
                    cBL['weaponLean'] = cAU;
                }
            },
            'weaponOffX': {
                'name': 'settings.viewmodel.xOff',
                'val': 0x1,
                'min': 0x0,
                'max': 0x2,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'weaponOffX', this);
                },
                'set': function(cAU) {
                    cBL['weaponOffX'] = cAU;
                }
            },
            'weaponOffY': {
                'name': 'settings.viewmodel.yOff',
                'val': 0x1,
                'min': 0x0,
                'max': 0x2,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'weaponOffY', this);
                },
                'set': function(cAU) {
                    cBL['weaponOffY'] = cAU;
                }
            },
            'weaponOffZ': {
                'name': 'settings.viewmodel.zOff',
                'val': 0x1,
                'min': 0x0,
                'max': 0x2,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'weaponOffZ', this);
                },
                'set': function(cAU) {
                    cBL['weaponOffZ'] = cAU;
                }
            },
            'hideADS': {
                'name': 'settings.viewmodel.show.ads',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'hideADS', this);
                },
                'set': function(cAU) {
                    cBL['hideADS'] = cAU;
                }
            },
            'showWeapon': {
                'name': 'settings.viewmodel.show.primary',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showWeapon', this);
                },
                'set': function(cAU) {
                    if (cBS['hideWeapon'][0x0] = !cAU,
                    cBU)
                        for (var cAV, cAW = 0x0; cAW < cBU['loadout']['length']; cAW++)
                            !(cAV = cBS['weapons'][cBU['loadout'][cAW]])['secondary'] && !cAV['melee'] && cBU['weaponMeshes'][cAW] && cBU['weaponIndex'] == cAW && (cBU['weaponMeshes'][cAW]['visible'] = cAU);
                }
            },
            'showWeaponSec': {
                'name': 'settings.viewmodel.show.secondary',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showWeaponSec', this);
                },
                'set': function(cAU) {
                    if (cBS['hideWeapon'][0x1] = !cAU,
                    cBU)
                        for (var cAV = 0x0; cAV < cBU['loadout']['length']; cAV++)
                            cBS['weapons'][cBU['loadout'][cAV]]['secondary'] && cBU['weaponMeshes'][cAV] && cBU['weaponIndex'] == cAV && (cBU['weaponMeshes'][cAV]['visible'] = cAU);
                }
            },
            'showWeaponMel': {
                'name': 'settings.viewmodel.show.melee',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'showWeaponMel', this);
                },
                'set': function(cAU) {
                    if (cBS['hideWeapon'][0x2] = !cAU,
                    cBU)
                        for (var cAV = 0x0; cAV < cBU['loadout']['length']; cAV++)
                            cBS['weapons'][cBU['loadout'][cAV]]['melee'] && cBU['weaponMeshes'][cAV] && cBU['weaponIndex'] == cAV && (cBU['weaponMeshes'][cAV]['visible'] = cAU);
                }
            },
            'hudHealthHigh': {
                'name': 'settings.editing.health.high',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.editing.header') + '</div>',
                'val': '#9eeb56',
                'html': function() {
                    return cEe('color', 'hudHealthHigh', this);
                },
                'set': function() {}
            },
            'hudHealthLow': {
                'name': 'settings.editing.health.low',
                'val': '#eb5656',
                'html': function() {
                    return cEe('color', 'hudHealthLow', this);
                },
                'set': function() {}
            },
            'scoreColor': {
                'name': 'settings.editing.score.color',
                'val': '#ffea78',
                'html': function() {
                    return cEe('color', 'scoreColor', this);
                },
                'set': function(cAU) {
                    scoreText['style']['color'] = cAU;
                }
            },
            'scoreShadow': {
                'name': 'settings.editing.score.shadow',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'scoreShadow', this);
                },
                'set': function(cAU) {
                    scoreText['classList']['remove']('blackShad'),
                    cAU && scoreText['classList']['add']('blackShad');
                }
            },
            'scoreScale': {
                'name': 'settings.editing.score.scale',
                'val': 0x1,
                'min': 0.1,
                'max': 0x2,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'scoreScale', this);
                },
                'set': function(cAU) {
                    cCx = cAU || 0x1;
                }
            },
            'saturation': {
                'name': 'settings.editing.saturation',
                'val': 0x1,
                'min': 0x0,
                'max': 0x3,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'saturation', this);
                },
                'set': function() {
                    cDM();
                }
            },
            'hue': {
                'name': 'settings.editing.hue',
                'val': 0x0,
                'min': 0x0,
                'max': 0x64,
                'step': 0x5,
                'html': function() {
                    return cEe('slider', 'hue', this);
                },
                'set': function() {
                    cDM();
                }
            },
            'vignette': {
                'name': 'settings.editing.vignette',
                'val': 0x0,
                'min': 0x0,
                'max': 0x1,
                'step': 0.1,
                'html': function() {
                    return cEe('slider', 'vignette', this);
                },
                'set': function(cAU) {
                    0x1 == cAU ? vignette['style']['removeProperty']('opacity') : vignette['style']['opacity'] = cAU;
                }
            },
            'depthMap': {
                'name': 'settings.editing.depth',
                'val': 0x0,
                'min': 0x0,
                'max': 0x1f4,
                'step': 0x5,
                'html': function() {
                    return cEe('slider', 'depthMap', this);
                },
                'set': function(cAU) {
                    cBL['toggleDepthMap'](cAU);
                }
            },
            'greenScreen': {
                'name': 'settings.editing.green',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'greenScreen', this);
                },
                'set': function(cAU) {
                    cBL['toggleGreenscreen'](cAU);
                }
            },
            'canLoadMods': {
                'name': 'settings.mods.load',
                'pre': '<div\x20class=\x27setHed\x27>' + cB5['t']('settings.mods.header') + '</div>',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'canLoadMods', this);
                },
                'set': function(cAU) {
                    cCc = cAU;
                }
            },
            'autoLoadLast': {
                'name': 'settings.mods.auto',
                'val': !0x1,
                'html': function() {
                    return cEe('checkbox', 'autoLoadLast', this);
                },
                'set': function() {}
            },
            'scopeBorders': {
                'name': 'settings.mods.borders',
                'val': !0x0,
                'html': function() {
                    return cEe('checkbox', 'scopeBorders', this);
                },
                'set': function(cAU) {
                    Array['from'](document['querySelectorAll']('.black'))['forEach'](cAV=>cAV['style']['display'] = cAU ? 'block' : 'none');
                }
            },
            'customScope': {
                'name': 'settings.mods.scope',
                'val': '',
                'html': function() {
                    return cEe('url', 'customScope', this, cB5['t']('settings.mods.scope.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    recticleImg['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/textures/recticle.png';
                }
            },
            'customHitmarker': {
                'name': 'settings.mods.hitmarker',
                'val': '',
                'html': function() {
                    return cEe('url', 'customHitmarker', this, cB5['t']('settings.mods.hitmarker.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    hitmarker['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/textures/hitmarker_3.png';
                }
            },
            'customADSDot': {
                'name': 'settings.mods.dot',
                'val': '',
                'html': function() {
                    return cEe('url', 'customADSDot', this, cB5['t']('settings.mods.dot.paste'));
                },
                'set': function(cAU) {
                    (cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '')['length'] && (cCt = cAU);
                }
            },
            'endMessage': {
                'name': 'settings.mods.endmessage',
                'val': '',
                'html': function() {
                    return cEe('text', 'endMessage', this, cB5['t']('settings.mods.endmessage'));
                },
                'set': function() {}
            },
            'customProfile': {
                'name': 'settings.mods.profile',
                'val': '',
                'html': function() {
                    return cEe('url', 'customProfile', this, cB5['t']('settings.mods.profile.paste'));
                },
                'set': function(cAU) {
                    cCu = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    cDL();
                }
            },
            'customAmmo': {
                'name': 'settings.mods.ammo',
                'val': '',
                'html': function() {
                    return cEe('url', 'customAmmo', this, cB5['t']('settings.mods.ammo.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    ammoIcon['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/textures/ammo_0.png';
                }
            },
            'customKills': {
                'name': 'settings.mods.kills',
                'val': '',
                'html': function() {
                    return cEe('url', 'customKills', this, cB5['t']('settings.mods.kills.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    killsIcon['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/img/skull_0.png';
                }
            },
            'customDeaths': {
                'name': 'settings.mods.deaths',
                'val': '',
                'html': function() {
                    return cEe('url', 'customDeaths', this, cB5['t']('settings.mods.deaths.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    deathsIcon['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/img/skull_1.png';
                }
            },
            'customDamage': {
                'name': 'settings.mods.damage',
                'val': '',
                'html': function() {
                    return cEe('url', 'customDamage', this, cB5['t']('settings.mods.damage.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    bloodDisplay['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/img/blood.png';
                }
            },
            'customTimer': {
                'name': 'settings.mods.timer',
                'val': '',
                'html': function() {
                    return cEe('url', 'customTimer', this, cB5['t']('settings.mods.timer.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    timerIcon['src'] = 0x1 < cAU['length'] ? cAU : location['origin'] + '/img/timer.png';
                }
            },
            'customGameOverlay': {
                'name': 'settings.mods.overlay',
                'val': '',
                'html': function() {
                    return cEe('url', 'customGameOverlay', this, cB5['t']('settings.mods.overlay.paste'));
                },
                'set': function(cAU) {
                    cAU = cBJ['isURL'](cAU) && !/\.svg/['test'](cAU) ? cAU : '',
                    overlay['style']['backgroundImage'] = 0x1 < cAU['length'] ? 'url(\x27' + cAU + '\x27)' : '';
                }
            }
        };
        for (var cFN in cEo)
            if (cEo[cFN]['set'] && !cEo[cFN]['dontInit']) {
                var cFO = getSavedVal('kro_setngss_' + cFN);
                cEo[cFN]['val'] = null === cFO ? cEo[cFN]['val'] : cFO,
                'false' == cEo[cFN]['val'] && (cEo[cFN]['val'] = !0x1),
                (cEo[cFN]['min'] || cEo[cFN]['max']) && (cEo[cFN]['val'] = Math['min'](cEo[cFN]['max'], Math['max'](cEo[cFN]['min'], cEo[cFN]['val']))),
                cEo[cFN]['set'](cEo[cFN]['val'], !0x0);
            }
        function cFP(cAU) {
            cBV && cBV['setData'](cAU),
            updateWindow(0x5),
            cFR();
        }
        function cFR() {
            if (cBV) {
                signedOutHeaderBar['style']['display'] = 'none',
                signedInHeaderBar['style']['display'] = null,
                cBV['level'] >= cAX['rewardMinLvl'] ? (claimHolder['style']['display'] = 'block',
                merchHolder['style']['top'] = '205px',
                cGo()) : merchHolder['style']['top'] = '110px',
                menuAccountUsername['innerText'] = cBV['name'],
                menuKRCount['innerText'] = cBV['funds'],
                menuLevelText['innerText'] = 'LVL\x20' + cBV['level'],
                menuLevelBar['style']['width'] = cBV['levelProg'] + '%';
                var cAU = cBJ['levelIconId'](cBV['level']);
                menuLevelIcon['style']['backgroundImage'] = 'url(\x27/img/levels/' + cAU + '.png\x27)';
            } else
                signedOutHeaderBar['style']['display'] = null,
                signedInHeaderBar['style']['display'] = 'none',
                claimHolder['style']['display'] = 'none',
                merchHolder['style']['top'] = '110px';
        }
        new MutationObserver(cAU=>{
            0x1 < cCt['length'] && cCt != cAU[0x0]['target']['src'] && (cAU[0x0]['target']['src'] = cCt);
        }
        )['observe'](aimDot, {
            'attributes': !0x0,
            'attributeFilter': ['src']
        }),
        window['changeCont'] = function(cAU, cAV) {
            cAV || showWindow(0x7, !0x0),
            0x3 >= cAU || 0x12 <= cAU && 0x15 >= cAU ? cBT['inputChanger'] = cAU : 0x4 == cAU ? cBT['inputChanger'] = 'jumpKey' : 0x5 == cAU ? cBT['inputChanger'] = 'crouchKey' : 0x6 == cAU ? cBT['inputChanger'] = 'meleeKey' : 0x7 == cAU ? cBT['inputChanger'] = 'swapKey' : 0x8 == cAU ? cBT['inputChanger'] = 'reloadKey' : 0x9 == cAU ? cBT['inputChanger'] = 'sprayKey' : 0xa == cAU ? cBT['inputChanger'] = 'aimKey' : 0xb == cAU ? cBT['inputChanger'] = 'chatKey' : 0xc == cAU ? cBT['inputChanger'] = 'voiceKey' : 0xd == cAU ? cBT['inputChanger'] = 'primKey' : 0xe == cAU ? cBT['inputChanger'] = 'inspKey' : 0xf == cAU ? cBT['inputChanger'] = 'listKey' : 0x10 == cAU ? cBT['inputChanger'] = 'interactKey' : 0x11 == cAU && (cBT['inputChanger'] = 'dropKey'),
            document['getElementById']('cont' + cAU)['innerHTML'] = cB5['t']('settings.controls.press');
        }
        ;
        var cFW = 0x5
          , cFX = 0x0;
        function cFY(cAU, cAV) {
            if (cAU) {
                if (0x0 == cFX && ('CreatingGame' == cAU || 'Host' == cAU || 'Join' == cAU)) {
                    cBR['send']('unqueue'),
                    playTick(),
                    cFX = cFW;
                    var cAW = setInterval(function() {
                        playTick(),
                        cFX--,
                        cFY('Countdown'),
                        0x1 >= cFX && clearInterval(cAW);
                    }, 0x3e8);
                }
                var cAX, cAY;
                queueStatus['style']['display'] = '',
                0x0 < cFX ? (cAX = 'Joining\x20in\x20' + cFX + '...',
                cAY = !0x1) : 'Queuing' === cAU ? (cAX = cB5['t']('queue.status.queuing'),
                cAY = !0x1) : 'Queued' === cAU ? (cAX = cB5['t']('queue.status.queued', cAV['queueSize'] - cAV['queueIndex'], cAV['queueSize']),
                cAY = !0x0) : 'CreatingGame' === cAU ? (cAX = cB5['t']('queue.status.creating-game'),
                cAY = !0x1) : 'Host' === cAU ? (cAX = cB5['t']('queue.status.host'),
                cAY = !0x1) : 'Join' === cAU ? (cAX = cB5['t']('queue.status.join'),
                cAY = !0x1) : (console['warn']('Unknown\x20status', cAU),
                cAX = '?'),
                queueStatusText['innerText'] = cAX,
                queueStatusButton['style']['display'] = cAY ? '' : 'none',
                uiBase['classList']['toggle']('isQueued', !0x0);
            } else
                cFX = 0x0,
                queueStatus['style']['display'] = 'none',
                uiBase['classList']['toggle']('isQueued', !0x1);
        }
        const cG4 = [];
        let cG5, cG6 = 0x0;
        function cG7(cAU) {
            try {
                accResp['innerHTML'] = cAU || '',
                accResp['style']['display'] = cAU ? 'block' : 'none';
            } catch (cG9) {}
        }
        function cGa(cAU, cAV) {
            0x0 <= cAU && cG7(cB5['t']('generic.wait')),
            cBR['send']('a', cAU, cAV);
        }
        function cGd(cAU, cAV, cAW, cAY, cAZ) {
            cAU ? cG7(cAU) : (cBV = new cC2(cAV,cAW,null,cAX),
            saveVal('krunker_id', cAV),
            saveVal('krunker_username', cAW),
            cFP(cAY),
            cBV['hack'] && (window['activeHacker'] = !0x0),
            cAZ && (saveVal('krunker_token', cAZ),
            loginToken = cAZ),
            updateWindow(null, !0x0),
            cBa && (cBa = !0x1,
            cBh()));
        }
        window['registerAcc'] = function() {
            cGa(0x0, [accName['value'], accPass['value']]);
        }
        ,
        window['loginAcc'] = function() {
            cGa(0x1, [accName['value'], accPass['value'], null]);
        }
        ,
        window['logoutAcc'] = function() {
            cGa(-0x1),
            cG7(),
            cB0('krunker_id'),
            cB0('krunker_username'),
            cB0('krunker_token'),
            cB0('skins'),
            cB0('hatIndex'),
            cB0('backIndex'),
            cB0('meleeIndex'),
            cB0('skinColIndex'),
            cGC = -0x1,
            cGB = -0x1,
            cGA = -0x1,
            cGz = -0x1,
            cGE = {},
            selectSecondary(0x2),
            windows[0xc]['clanData'] = null,
            loginToken = null,
            cBV = null,
            cFP(),
            showWindow(0x5),
            cH0();
        }
        ;
        var cGj = !0x1;
        window['newTok'] = function(cAU) {
            cAU && (saveVal('krunker_token', cAU),
            loginToken = cAU);
        }
        ,
        window['logoutSessions'] = function(cAU) {
            cAU && (cAU['style']['display'] = 'none'),
            cGj = !0x0,
            cBR['send']('las');
        }
        ;
        var cGm, cGn = 0x0;
        function cGo() {
            if ('block' == claimHolder['style']['display']) {
                cGn = cAX['rewardTime'] - ((cCl || Date['now']()) - cBV['lastReward']);
                var cAU = cBJ['getTimeH'](Math['max'](0x0, cGn));
                cGm != cAU && (cGm = cAU,
                claimTimer['innerHTML'] = '00:00:00' == cAU ? '' : cAU,
                merchHolder['style']['top'] = '00:00:00' == cAU ? '205px' : '237px');
                var cAV = 0x0 >= cGn ? './img/claim_0.png' : './img/claim_1.png';
                claimImg['getAttribute']('src') != cAV && (claimImg['src'] = cAV);
            }
        }
        function cGr(cAU, cAV) {
            cDn(cAV),
            cBV && (cBV['lastReward'] = cAU),
            cGo();
        }
        window['claimReward'] = function() {
            0x0 < cGn || function() {
                if (cQL)
                    return void console['warn']('Attempting\x20to\x20show\x20pre\x20ad\x20when\x20already\x20showing');
                cQL = !0x0;
                var cAU = document['createElement']('script');
                cAU['src'] = '//cdn.playwire.com/bolt/js/zeus/embed.js',
                cAU['type'] = 'text/javascript',
                cAU['setAttribute']('charset', 'utf-8'),
                cAU['setAttribute']('data-config', '//config.playwire.com/1020124/v2/pre_content.json'),
                cAU['setAttribute']('data-width', '640px'),
                cAU['setAttribute']('data-height', '360px'),
                cAU['setAttribute']('data-id', 'pre-content-player'),
                cAU['setAttribute']('data-hidden-container', 'my-content'),
                cAU['setAttribute']('data-onready', 'window.boltEventHandlers');
                var cAV = document['getElementById']('pre-content-container');
                cAV['style']['display'] = 'block',
                cAV['appendChild'](cAU),
                cQJ = setTimeout(function() {
                    let cAU = 'none' != document['getElementById']('my-content')['style']['display'];
                    cAU ? (console['log']('Ad\x20blocked'),
                    cQM(!0x1)) : console['log']('Ad\x20not\x20blocked');
                }, 0x3a98),
                cQK = setTimeout(function() {
                    console['log']('Ad\x20failed\x20to\x20load'),
                    cQM(!0x1);
                }, 0xea60);
            }();
        }
        ,
        Object['defineProperty'](window, 'setClassIndex', {
            'writeable': !0x1,
            'value': function(cAU) {
                cCw = cAU;
            }
        });
        var cGy = 0x1
          , cGz = getSavedVal('skinColIndex') || -0x1
          , cGA = getSavedVal('meleeIndex') || -0x1
          , cGB = getSavedVal('backIndex') || -0x1
          , cGC = getSavedVal('hatIndex') || -0x1
          , cGD = getSavedVal('skins')
          , cGE = cGD ? JSON['parse'](cGD) : {};
        setClassIndex(getSavedVal('classindex') || 0x0);
        var cGF = getSavedVal('secondaryInd') || 0x2
          , cGG = 0x0;
        function cGH(cAU) {
            if (!cBV)
                return -0x1;
            var cAV = cBV['skins']['filter'](cAV=>cBS['store']['skins'][cAV['ind']] && !cBS['store']['skins'][cAV['ind']]['type'] && cBS['store']['skins'][cAV['ind']]['weapon'] == cAU);
            return cAV['length'] && cBJ['getRandom'](cAV)['ind'] || -0x1;
        }
        Object['defineProperty'](window, 'selectHat', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('hatIndex', cAU),
                cGC = cAU,
                cH0(),
                showWindow(0x3);
            }
        }),
        Object['defineProperty'](window, 'selectBack', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('backIndex', cAU),
                cGB = cAU,
                cH0(),
                showWindow(0x3);
            }
        }),
        Object['defineProperty'](window, 'selectMelee', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('meleeIndex', cAU),
                cGA = cAU,
                cH0(),
                showWindow(0x3);
            }
        }),
        Object['defineProperty'](window, 'selectSecondary', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('secondaryInd', cAU),
                cGF = cAU,
                cH0(),
                showWindow(0x3);
            }
        }),
        Object['defineProperty'](window, 'selectSkinColor', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('skinColIndex', cAU),
                cGz = cAU,
                cH0(),
                updateWindow(0x3);
            }
        }),
        Object['defineProperty'](window, 'selectClass', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('classindex', cAU),
                cBS['classes'][cAU]['txts'] ? cQi(cBS['classes'][cAU]['txts'][cBJ['randInt'](0x0, cBS['classes'][cAU]['txts']['length'] - 0x1)]) : !cBJ['randInt'](0x0, 0x2) && cQi(['Let\x27s\x20Go!', 'Alright!', 'I\x27m\x20Ready!'][cBJ['randInt'](0x0, 0x2)]),
                setClassIndex(cAU),
                cH0(),
                showWindow(0x3);
            }
        }),
        Object['defineProperty'](window, 'skinSelector', {
            'writeable': !0x1,
            'value': function(cAU) {
                cGG = cAU,
                cH0(),
                showWindow(0xf);
            }
        }),
        Object['defineProperty'](window, 'selectSkin', {
            'writeable': !0x1,
            'value': function(cAU, cAV) {
                cBW = cBS['store']['skins'][cAU],
                cGE[cAV] = cBW || -0x2 == cAU ? cAU : void 0x0,
                saveVal('skins', JSON['stringify'](cGE)),
                cH0(),
                showWindow(0x3);
            }
        });
        var cGU, cGV, cGW = 0x294, cGX = 0x15e, cGY = new cBI['PerspectiveCamera'](0xf,0x1,0.1,0x64), cGZ = new cBI['WebGLRenderer']({
            'canvas': classPreviewCanvas,
            'precision': 'mediump',
            'antialias': !0x1,
            'alpha': !0x0
        });
        function cH0() {
            function cAU(cAU, cAV=!0x0) {
                cAW && (cAW += '\x20-\x20');
                var cAX = 'inherit'
                  , cAY = cBS['weapons'][cAU]['name'];
                if (null != cGE[cAU]) {
                    var cAZ = cBS['store']['skins'][cGE[cAU]];
                    cAZ && (cAX = cBS['store']['rarities'][cAZ['rarity']]['color'],
                    cAY = cAZ['name']);
                }
                cAW += '<span\x20style=\x27color:' + (cAV ? cAX : 'inherit') + '\x27>' + cAY + '</span>';
            }
            var cAV = cBS['classes'][cCw];
            menuClassName['innerText'] = cAV['name'];
            var cAW = '';
            for (var cAY of cAV['loadout'])
                cAU(cAY);
            menuClassSubtext['innerHTML'] = cAW,
            (cGU = new cBI['Scene']())['add'](new cBI['AmbientLight'](0x97a0a8));
            var cAZ = new cBI['DirectionalLight'](0xf2f8fc,0.5);
            cAZ['position']['set'](0xa, 0x11, -0xa),
            cGU['add'](cAZ);
            var cB0 = [null != cGE[cAV['loadout'][0x0]] || -0x2 != cGE[cAV['loadout'][0x0]] ? cGE[cAV['loadout'][0x0]] : -0x1, null == cGE[cAV['loadout'][0x1]] ? -0x1 : cGE[cAV['loadout'][0x1]]];
            (cGV = new cC3(-0x1,this,cBJ,cAX,cBS))['sid'] = -0x1,
            cGV['init'](0x0, 0x0, 0x0, 'preview', !0x1),
            cGV['skins'] = cB0,
            cGV['hatIndex'] = cGC,
            cGV['backIndex'] = cGB,
            cGV['meleeIndex'] = cGA,
            cGV['skinColIndex'] = cGz,
            cGV['secIndex'] = cGF,
            cGV['setClass'](cBS, cCw, cGF, !0x0),
            cBS['players']['swapWeapon'](cGV, 0x0, !0x0),
            cGU['add'](cBS['players']['generateMeshes'](cGV, !0x1)),
            cGV['swapTime'] = 0x0,
            cGV['weaponMeshes'][0x0]['visible'] = !0x0,
            cGY['lookAt'](new cBI['Vector3'](0x0,0.8 * cAX['playerHeight'],0x0));
        }
        cGY['position']['x'] = -0xa,
        cGY['position']['y'] = 0x11,
        cGY['position']['z'] = -0x1d,
        cH0();
        var cHc = !('true' != getSavedVal('krk_hideFull'));
        window['toggleHF'] = function(cAU) {
            cHc = cAU,
            saveVal('krk_hideFull', cAU);
        }
        ,
        toggleHF(cHc);
        var cHe = !('true' != getSavedVal('krk_regionPriority'));
        window['toggleRP'] = function(cAU) {
            cHe = cAU,
            saveVal('krk_regionPriority', cAU);
        }
        ,
        toggleRP(cHe),
        setInterval(()=>{
            window['kiH'](cBR);
        }
        , 0x2ee0),
        window['openViewer'] = function(cAU) {
            var cAV = cBS['store']['skins'][cAU];
            if (cAV)
                if (0x1 == cAV['type'])
                    window['open']('/viewer.html?class=9&hat=' + cAU, '_blank');
                else if (0x2 == cAV['type'])
                    window['open']('/viewer.html?class=9&back=' + cAU, '_blank');
                else if (0x3 == cAV['type'])
                    window['open']('/viewer.html?class=9&hidePlayer&melee=' + cAU, '_blank');
                else if (null != cAV['weapon']) {
                    for (var cAW = null, cAX = 0x0; cAX < cBS['classes']['length']; cAX++)
                        if (cBS['classes'][cAX]['loadout'][0x0] == cAV['weapon'] - 0x1) {
                            cAW = cAX;
                            break;
                        }
                    null != cAW && window['open']('/viewer.html?class=' + cAW + '&hidePlayer&nosup&skinIdP=' + cAU, '_blank');
                }
        }
        ;
        var cHk = 0x1c;
        function cHl(cAU, cAV) {
            for (var cAW = '', cAX = 'map' == cAV ? 'selectHostMap' : 'loadUserMod', cAY = 0x0; cAY < cAU['length']; ++cAY)
                cAW += '<div\x20class=\x27mapListItem\x27><img\x20class=\x27mapListThumb\x27\x20src=\x27' + (cAU[cAY][cAV + '_image'] ? cAU[cAY][cAV + '_image'] : './img/noimg.png') + '\x27\x20onclick=\x27' + cAX + '(&quot;' + cAU[cAY][cAV + '_name'] + '&quot;,&quot;' + cAU[cAY]['mod_url'] + '&quot;,&quot;' + cAU[cAY]['mod_id'] + '&quot;)\x27/><div\x20style=\x27margin-top:-3px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27' + cAX + '(&quot;' + cAU[cAY][cAV + '_name'] + '&quot;,&quot;' + cAU[cAY]['mod_url'] + '&quot;,&quot;' + cAU[cAY]['mod_id'] + '&quot;)\x27/>' + cAU[cAY][cAV + '_name'] + '</a></div><div\x20style=\x27display:\x20flex\x27><span\x20style=\x27color:rgba(0,0,0,0.2);font-size:15px\x27>\x20by\x20<a\x20target=\x27_blank\x27\x20class=\x27grey\x27\x20href=\x27/social.html?p=profile&q=' + cAU[cAY]['creatorname'] + '\x27>' + cAU[cAY]['creatorname'] + '</a></span><div\x20style=\x27font-size:15px;text-align:right;flex-grow:1\x27>' + cAU[cAY][cAV + '_votes'] + '</div></div></div>';
            return cAW;
        }
        function cHr(cAU, cAV) {
            var cAW = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + (0x3 == cAV ? 'Combat\x20Knife' : cB5['t']('generic.none')) + '<div\x20class=\x27itemOwn\x27>' + cB5['t']('generic.default') + '</div><img\x20class=\x27skinImgC\x27\x20src=\x27.' + cBJ['versionifyUrl']('/textures/previews/cosmetics/' + cAV + '_default.png') + '\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27\x20onclick=\x27' + cAU + '(-1)\x27>' + cB5['t']('generic.select') + '</div></div>';
            if (cBV || cBS['singlePlayer'])
                for (var cAX = (cBS['singlePlayer'] ? Object['keys'](cBS['store']['skins'])['map'](cAU=>cAU = {
                    'ind': parseInt(cAU),
                    'cnt': 0x1
                }) : cBV['skins'])['slice']()['sort'](function(cAU, cAV) {
                    return (null != cAV['ind'] && cBS['store']['skins'][cAV['ind']] ? cBS['store']['skins'][cAV['ind']]['rarity'] : 0x0) - (null != cAU['ind'] && cBS['store']['skins'][cAU['ind']] ? cBS['store']['skins'][cAU['ind']]['rarity'] : 0x0);
                }), cAY = 0x0; cAY < cAX['length']; ++cAY)
                    (cBW = cBS['store']['skins'][cAX[cAY]['ind']]) && cBW['type'] == cAV && (cAW += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cBS['store']['rarities'][cBW['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cAX[cAY]['cnt'] + '\x27></div>' + cBW['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cBW['creator'] || 'Krunker.io') + '</div><img\x20class=\x27skinImg' + (cBW['type'] ? 'C' : '') + '\x27\x20src=\x27.' + cBJ['getPreview'](cBW, cBS['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27' + cAU + '(' + cAX[cAY]['ind'] + ')\x27>' + cB5['t']('generic.select') + '</div><div\x20class=\x27selctInfoBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27openViewer(' + cAX[cAY]['ind'] + ')\x27>?</div></div>');
            return cAW += '</div>';
        }
        window['windows'] = [{
            'header': cB5['t']('windows.settings.header'),
            'gen': function() {
                var cAU = '';
                for (var cAV in cEo)
                    cEo[cAV]['pre'] && (cAU += cEo[cAV]['pre']),
                    cAU += '<div\x20class=\x27settName\x27\x20' + (null == cEo[cAV]['hide'] ? '' : 'id=\x27' + cAV + '_div\x27\x20style=\x27display:' + (cEo[cAV]['hide'] ? 'none' : 'block') + '\x27') + '>' + (cEo[cAV]['noi18n'] ? cEo[cAV]['name'] : cB5['t'](cEo[cAV]['name'])) + '\x20' + cEo[cAV]['html']() + '</div>';
                return cAU;
            }
        }, {
            'header': cB5['t']('windows.servers.header'),
            'lastLoadTime': 0x0,
            'serverListData': [],
            'gen': function() {
                return Date['now']() - this['lastLoadTime'] < cAX['serverBrowserRate'] ? this['genList']() : (this['lastLoadTime'] = Date['now'](),
                this['loadData']());
            },
            'loadData': function() {
                return cBc['fetchGameList']()['then'](cAU=>{
                    this['serverListData'] = cAU;
                    var cAV = !0x1;
                    for (var cAW of cAU)
                        if (cAW['id'] === cBd) {
                            cAV = !0x0;
                            break;
                        }
                    cAV ? window['showWindow'](0x2, !0x0) : cBc['fetchGameInfo'](cBd)['then'](cAU=>{
                        this['privateServerData'] = cAU,
                        window['showWindow'](0x2, !0x0);
                    }
                    );
                }
                ),
                cB5['t']('generic.loading');
            },
            'expandedRegion': -0x1,
            'totalPlayerCount': 0x0,
            'serverSearch': null,
            'searchList': function() {
                var cAU = document['getElementById']('serverSearch');
                this['serverSearch'] = cAU && '' != cAU['value'] ? cAU['value'] : null,
                (cAU = document['getElementById']('serverHolder')) && (cAU['innerHTML'] = this['getServers']());
            },
            'getServers': function() {
                var cAU = !!localStorage['debugServerList']
                  , cAV = '';
                this['totalPlayerCount'] = 0x0;
                for (var cAW, cAY = {
                    'custom': {
                        'order': 0x1,
                        'name': 'Custom\x20Games',
                        'players': 0x0,
                        'games': []
                    }
                }, cAZ = cEo['defaultRegion']['val'], cB0 = !0x1, cB6 = 0x0; cB6 < this['serverListData']['length']; cB6++)
                    if ((cAW = this['serverListData'][cB6])['data']) {
                        cAY[cAW['region']] || (cAY[cAW['region']] = {
                            'name': cAX['regionNames'][cAW['region']],
                            'players': 0x0,
                            'games': []
                        },
                        cAZ == cAW['region'] && (cAY[cAW['region']]['order'] = 0x1));
                        var cBa = cAW['data']['cs'] ? 'custom' : cAW['region'];
                        cAW['clients'] = Math['min'](cAW['clients'], cAW['maxClients']),
                        cBd === cAW['id'] && (cB0 = !0x0),
                        (!this['serverSearch'] || this['searchMatches'](cAW)) && (cAY[cBa]['players'] += cAW['clients']),
                        this['totalPlayerCount'] += cAW['clients'],
                        cAY[cBa]['games']['push'](cAW);
                    } else
                        console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.');
                cB0 || (this['privateServerData'] ? this['privateServerData']['data'] ? cAY['custom']['games']['push'](this['privateServerData']) : console['warn']('Server\x20doesn\x27t\x20have\x20data\x20yet.') : console['warn']('Missing\x20private\x20server\x20data.'));
                var cBb = [];
                for (var cBc in cAY)
                    cAY['hasOwnProperty'](cBc) && cBb['push'](cAY[cBc]);
                for (var cBc of cBb = cBb['sort']((cAU,cAV)=>(cAV['order'] || -0x1) - (cAU['order'] || -0x1)))
                    cBc['games']['sort']((cAU,cAV)=>cAV['clients'] - cAU['clients']),
                    'Custom\x20Games' == cBc['name'] && cHe && cBc['games']['sort']((cAU,cAV)=>cAZ == cAU['region'] && cAZ != cAV['region'] ? -0x1 : cAZ == cAV['region'] && cAZ != cAU['region'] ? 0x1 : 0x0);
                cBV && cBV['level'];
                for (var cBe = 0x0; cBe < cBb['length']; cBe++) {
                    (cBc = cBb[cBe])['games'] = cBc['games']['filter'](cAU=>!cHc || cAU['clients'] != cAU['maxClients']);
                    var cBf = cBc['name'] + '\x20-\x20' + cBc['players'] + '\x20online'
                      , cBh = this['expandedRegion'] == cBe;
                    if (cAV += '<div\x20class=\x27menuSelectorHeader\x27\x20onclick=\x27setExpandedRegion(' + (cBh ? -0x1 : cBe) + ')\x27\x20style=\x27cursor:\x20pointer;\x27>' + (cBh ? '&#x25BC;' : '&#x25B6;') + '\x20' + cBf + '</div>',
                    cBh) {
                        cAV += '<div\x20class=\x27menuSelectorHolder\x27>';
                        for (var cBn = 0x0, cBs = 0x0; cBs < cBc['games']['length']; cBs++) {
                            var cBI = cBc['games'][cBs]
                              , cBJ = cBd && cBd == cBI['id'];
                            if (!this['serverSearch'] || this['searchMatches'](cBI)) {
                                cBn++;
                                var cBK = (cAU ? cBI['id'] : cBI['data']['i']) + (cBI['data']['earnKR'] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#2196F3;font-size:33px;vertical-align:bottom;\x27>check_circle</i>' : '') + '<div\x20class=\x27serverPCount\x27>' + cBI['clients'] + '/' + cBI['maxClients'] + '</div>' + (cBI['data']['cs'] ? '<div\x20class=\x27serverRegion\x27>' + cBI['id']['split'](':')[0x0] + '\x20-&nbsp;</div>' : '');
                                cAV += '<div\x20class=\x27' + ('menuSelector' + (cBJ ? '\x20selectedMenuSelector' : '')) + '\x27\x20onclick=\x27' + ('checkedSwitchServer(\x22' + cBI['id'] + '\x22,\x20this.querySelector(\x22.serverPCount\x22))') + '\x27>' + cBK + '</div>';
                            }
                        }
                        cBc['games']['length'] && cBn || (cAV += '<div\x20style=\x27margin-left:30px;margin-top:5px\x27>' + cB5['t']('windows.servers.none') + '</div>'),
                        cAV += '</div>';
                    }
                }
                return cAV;
            },
            'genList': function() {
                var cAU = this;
                window['setExpandedRegion'] = function(cAV) {
                    cAU['expandedRegion'] = cAV,
                    cAU['lastLoadTime'] = Date['now'](),
                    showWindow(0x2, !0x0);
                }
                ;
                var cAV = '<div\x20style=\x27font-size:20px\x27>';
                return cAV += '<a\x20class=\x27menuLink\x27\x20onclick=\x27openHostWindow()\x27>' + cB5['t']('windows.servers.host') + '</a><div\x20style=\x27float:right;display:inline-block\x27><input\x20id=\x27serverSearch\x27' + (this['serverSearch'] ? 'value=\x27' + this['serverSearch'] + '\x27' : '') + '\x20type=\x27text\x27\x20placeholder=\x27' + cB5['t']('generic.search') + '\x27\x20oninput=\x27windows[1].searchList()\x27></input></div></div><div\x20id=\x22serverFilters\x22><div\x20id=\x22hideFull\x22\x20style=\x22float:right;align-items:center;display:flex\x22><span\x20class=\x22grey\x22>' + cB5['t']('windows.servers.hide') + '</span><label\x20class=\x22switchsml\x22><input\x20type=\x22checkbox\x22\x20onclick=\x22toggleHF(this.checked);windows[1].searchList()\x22' + (cHc ? '\x20checked' : '') + '><span\x20class=\x22sliderSml\x22></span></label></div><div\x20style=\x22margin-left:10px;margin-right:10px;float:right;align-items:center;display:flex\x22>|</div><div\x20id=\x22regionPriority\x22\x20style=\x22float:right;align-items:center;display:flex\x22><span\x20class=\x22grey\x22>' + cB5['t']('windows.servers.priority') + '</span><label\x20class=\x22switchsml\x22><input\x20type=\x22checkbox\x22\x20onclick=\x22toggleRP(this.checked);windows[1].searchList()\x22' + (cHe ? '\x20checked' : '') + '><span\x20class=\x22sliderSml\x22></span></label></div></div><div\x20style=\x27height:10px\x27></div>',
                cAV += '<div\x20style=\x27font-size:20px\x27>',
                cAV += '<div\x20id=\x27serverHolder\x27>' + this['getServers']() + '</div>',
                cAV += '<div\x20style=\x27height:10px\x27></div><b\x20style=\x27color:rgba(0,0,0,0.6)\x27>' + cB5['t']('windows.servers.online', this['totalPlayerCount']) + '</b>',
                cAV += '</div>';
            },
            'searchMatches'(cAU) {
                return !!cAU['data'] && 0x0 <= (cAU['data']['i'] || '')['toLowerCase']()['indexOf']((this['serverSearch'] || '')['toLowerCase']());
            }
        }, {
            'header': cB5['t']('windows.loadout.header'),
            'gen': function() {
                var cAU = cBS['classes'][cCw];
                0x0 > cBS['config']['classes']['indexOf'](parseInt(cCw)) && (cCw = cBS['config']['classes'][0x0],
                cAU = cBS['classes'][cCw]);
                var cAV = cBS['weapons'][cAU['loadout'][0x0]]['name']
                  , cAW = '#2196F3'
                  , cAY = cAU['secondary'] ? cBS['weapons'][cGF]['name'] : cB5['t']('generic.none')
                  , cAZ = cAU['secondary'] ? '#2196F3' : 'rgba(0,0,0,0.3)'
                  , cB0 = 'rgba(0,0,0,0.3)'
                  , cB6 = cB0
                  , cBa = 'rgba(0,0,0,0.3)';
                cBV && (null != cGE[cAU['loadout'][0x0]] && ((cAV = cBS['store']['skins'][cGE[cAU['loadout'][0x0]]]) ? (cAW = cBS['store']['rarities'][cAV['rarity']]['color'],
                cAV = cAV['name']) : -0x2 == cGE[cAU['loadout'][0x0]] && (cAV = 'Random')),
                cAU['loadout'][0x1] && null != cGE[cAU['loadout'][0x1]] && ((cAY = cBS['store']['skins'][cGE[cAU['loadout'][0x1]]]) && (cAZ = cBS['store']['rarities'][cAY['rarity']]['color'],
                cAY = cAY['name'])),
                0x0 <= cGC && cBS['store']['skins'][cGC] && (cB0 = cBS['store']['rarities'][cBS['store']['skins'][cGC]['rarity']]['color']),
                0x0 <= cGB && cBS['store']['skins'][cGB] && (cB6 = cBS['store']['rarities'][cBS['store']['skins'][cGB]['rarity']]['color']),
                0x0 <= cGA && cBS['store']['skins'][cGA] && (cBa = cBS['store']['rarities'][cBS['store']['skins'][cGA]['rarity']]['color']));
                for (var cBb = cB5['t']('windows.loadout.color.skin'), cBc = cAX['skinColors']['length'] - 0x1; 0x0 <= cBc; cBc--)
                    cBb += '<div\x20class=\x27skinColorItem' + (cGz == cBc ? '\x20activeSkin' : '') + '\x27\x20style=\x27background-color:#' + cAX['skinColors'][cBc]['toString'](0x10) + '\x27\x20onclick=\x27selectSkinColor(' + cBc + ')\x27></div>';
                return '<div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.class') + '<span\x20class=\x27settText\x20floatR\x27\x20onclick=\x27showWindow(6)\x27>' + cAU['name'] + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.primary') + '<span\x20class=\x27settLabel\x20wepLink\x27\x20style=\x27color:' + cAW + '\x27\x20onclick=\x27skinSelector(' + cAU['loadout'][0x0] + ')\x27>' + cAV + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.secondary') + '<span\x20class=\x27settLabel' + (cAU['secondary'] ? '\x20wepLink' : '') + '\x27\x20' + (cAU['secondary'] ? 'onclick=\x27showWindow(20)\x27' : '') + '\x20style=\x27color:' + cAZ + '\x27>' + cAY + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.melee') + '<span\x20onclick=\x27showWindow(26)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cBa + '\x27>' + (cBS['store']['skins'][cGA] ? cBS['store']['skins'][cGA]['name'] : 'Combat\x20Knife') + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.hat') + '<span\x20onclick=\x27showWindow(16)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cB0 + '\x27>' + (cBS['store']['skins'][cGC] ? cBS['store']['skins'][cGC]['name'] : cB5['t']('generic.none')) + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.body') + '<span\x20onclick=\x27showWindow(17)\x27\x20class=\x27settText\x20floatR\x27\x20style=\x27color:' + cB6 + '\x27>' + (cBS['store']['skins'][cGB] ? cBS['store']['skins'][cGB]['name'] : cB5['t']('generic.none')) + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('windows.loadout.spray') + '<span\x20onclick=\x27showWindow(9)\x27\x20class=\x27settText\x20floatR\x27>' + cBS['sprays'][cNl]['name'] + '</span></div><div\x20class=\x27settName\x27>' + cBb + '</div>';
            }
        }, {
            'header': cB5['t']('windows.mods.header'),
            'openList': function() {
                cC8 = !0x1,
                showWindow(0x12);
            },
            'gen': function() {
                return '<div\x20id=\x27modLinks\x27><a\x20href=\x27https://goo.gl/dPAxfr\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.mods.guide') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27windows[3].openList()\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.mods.list') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(19)\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.mods.publish') + '</a>\x20|\x20<a\x20href=\x27/viewer.html\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.mods.viewer') + '</a></div><form\x20id=\x27modDropper\x27><input\x20onchange=\x27loadMod()\x27\x20id=\x27modInput\x27type=\x27file\x27><p\x20id=\x27modLInfo\x27>' + cB5['t']('windows.mods.drop') + '</p></form><input\x20type=\x27text\x27\x20id=\x27modURL\x27\x20class=\x27accountInput\x27\x20style=\x27width:78%\x27\x20placeholder=\x27' + cB5['t']('windows.mods.paste') + '\x27><a\x20class=\x27menuLink\x27\x20style=\x27display:inline-block;margin-left:10px\x27\x20onclick=\x27loadModURL()\x27>' + cB5['t']('windows.mods.load') + '</a>';
            }
        }, {
            'header': cB5['t']('windows.account.header'),
            'getScore': function(cAU) {
                var cAV = 0x1 < cAU['level'] ? Math['pow'](cAU['level'] / cAX['rankVar'], 0x2) : 0x0;
                return parseInt(cAU['score'] - cAV) + '\x20/\x20' + parseInt(Math['pow']((cAU['level'] + 0x1) / cAX['rankVar'], 0x2) - cAV);
            },
            'gen': function() {
                return cBV ? '<div\x20style=\x27font-size:26px;margin-top:0px:font-weight:bold\x27>Profile</div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cB5['t']('generic.name') + '<a\x20href=\x27/social.html?p=profile&q=' + cBV['name'] + '\x27\x20class=\x27floatR\x27>' + cBV['name'] + '</a></div><div\x20class=\x27settName\x27\x20style=\x27width:100%\x27>' + cB5['t']('generic.clan') + '<a\x20class=\x27floatR\x27\x20class=\x27menuLink\x27\x20onclick=\x27showWindow(13)\x27>' + (cBV['clan'] ? '[' + cBV['clan'] + ']' : 'None') + '</a></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.level') + '<span\x20class=\x27floatR\x27>' + cBV['level'] + '</span></div><div\x20class=\x27xpBar\x27><div\x20class=\x27xpBarB\x27\x20style=\x27width:' + cBV['levelProg'] + '%\x27></div><span\x20class=\x27xpBarV\x27>' + this['getScore'](cBV) + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.score') + '<span\x20class=\x27floatR\x27>' + cBV['score'] + '</span></div><div\x20class=\x27settName\x27>World\x20Rank<span\x20class=\x27floatR\x27>??</span></div><div\x20class=\x27settName\x27>KR<span\x20class=\x27floatR\x27>' + cBV['funds'] + 'KR</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.kills') + '<span\x20class=\x27floatR\x27>' + cBV['kills'] + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.deaths') + '<span\x20class=\x27floatR\x27>' + cBV['deaths'] + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.kdr') + '<span\x20class=\x27floatR\x27>' + (cBV['kills'] / Math['max'](cBV['deaths'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>KPG<span\x20class=\x27floatR\x27>' + (cBV['kills'] / Math['max'](cBV['games'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>Nukes<span\x20class=\x27floatR\x27>' + (cBV['stats']['n'] || 0x0) + '</span></div><div\x20class=\x27settName\x27>Melee<span\x20class=\x27floatR\x27>' + (cBV['stats']['mk'] || 0x0) + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.games.played') + '<span\x20class=\x27floatR\x27>' + cBV['games'] + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.games.won') + '<span\x20class=\x27floatR\x27>' + cBV['wins'] + '</span></div><div\x20class=\x27settName\x27>W/L<span\x20class=\x27floatR\x27>' + (cBV['wins'] / Math['max'](cBV['games'], 0x1))['toFixed'](0x2) + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.timep') + '<span\x20class=\x27floatR\x27>' + cBJ['getReadableTime'](cBV['timePlayed']) + '</span></div><div\x20style=\x27height:10px\x27></div>' + (cBV['partnerName'] ? cBV['partnerApp'] ? '<div\x20style=\x27font-size:26px;margin-top:20px;font-weight:bold\x27>Creator\x20Code</div><a\x20class=\x27menuLink\x27\x20onclick=\x27showWindow(28)\x27>Creator\x20Dashboard</a>' : '<div\x20style=\x27font-size:26px;margin-top:20px;font-weight:bold\x27>Creator\x20Code\x20Application</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>Your\x20application\x20is\x20waiting\x20for\x20approval...</div>' : '<div\x20style=\x27font-size:26px;margin-top:20px;font-weight:bold\x27>Creator\x20Code\x20Application</div><div\x20style=\x27font-size:17px;color:rgba(0,0,0,0.4)\x27>By\x20submitting\x20an\x20Application\x20you\x20agree\x20to\x20the\x20<a\x20href=\x27./docs/partner.txt\x27>Partner\x20Terms</a></div><input\x20type=\x27text\x27\x20id=\x27crtrCode\x27\x20class=\x27smlInput\x27\x20style=\x27width:100%;margin-bottom:8px\x27\x20placeholder=\x27Creator\x20Code\x20Name\x27\x20/><input\x20type=\x27text\x27\x20id=\x27crtrEmail\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%;margin-bottom:8px\x27\x20placeholder=\x27PayPal\x20Email\x20for\x20Payouts\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px;vertical-align:middle\x27\x20onclick=\x27submitCrtrCod()\x27>' + cB5['t']('generic.submit') + '</a><div\x20id=\x27ctrtRes\x27\x20style=\x27color:rgba(0,0,0,0.5)\x27></div>') + '<div\x20style=\x27height:25px\x27></div><a\x20class=\x27menuLink\x27\x20onclick=\x27logoutAcc()\x27>' + cB5['t']('generic.logout') + '</a>' + (cGj ? '' : '<a\x20style=\x27float:right\x27\x20class=\x27menuLink\x27\x20onclick=\x27logoutSessions(this)\x27>' + cB5['t']('generic.logout.sessions') + '</a>') : '<input\x20id=\x27accName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cB5['t']('generic.username') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27' + (getSavedVal('krunker_username') || '') + '\x27></input><input\x20id=\x27accPass\x27\x20type=\x27password\x27\x20placeholder=\x27' + cB5['t']('generic.password') + '\x27\x20class=\x27accountInput\x27></input><div\x20id=\x27accResp\x27\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.5);display:none\x27></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.3)\x27>' + cB5['t']('windows.account.recover') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27registerAcc()\x27>' + cB5['t']('generic.register') + '</div><div\x20class=\x27accountButton\x27\x20onclick=\x27loginAcc()\x27\x20style=\x27margin-left:\x2020px\x27>' + cB5['t']('generic.login') + '</div>';
            }
        }, {
            'header': cB5['t']('windows.class.header'),
            'gen': function() {
                for (var cAU = '<div\x20id=\x27skinList\x27>', cAV = 0x0; cAV < cBS['classes']['length']; ++cAV)
                    0x0 <= cBS['config']['classes']['indexOf'](cAV) && !cBS['classes'][cAV]['hide'] && (cAU += '<div\x20class=\x27skinCard\x27>' + cBS['classes'][cAV]['name'] + '<div\x20class=\x27itemOwn\x27>' + cBS['weapons'][cBS['classes'][cAV]['loadout'][0x0]]['name'] + '</div><img\x20style=\x27margin-top:6px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cBJ['versionifyUrl']('/textures/classes/icon_' + cAV + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27onclick=\x27selectClass(' + cAV + ')\x27>' + cB5['t']('generic.select') + '</div></div>');
                return cAU += '</div>';
            }
        }, {
            'header': cB5['t']('windows.controls.header'),
            'gen': function() {
                var cAU = '';
                return cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.forward') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont0\x27\x20onclick=\x27changeCont(0)\x27>' + cBJ['getKeyName'](cBT['moveKeys'][0x0]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.backward') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont1\x27\x20onclick=\x27changeCont(1)\x27>' + cBJ['getKeyName'](cBT['moveKeys'][0x1]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.left') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont2\x27\x20onclick=\x27changeCont(2)\x27>' + cBJ['getKeyName'](cBT['moveKeys'][0x2]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.right') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont3\x27\x20onclick=\x27changeCont(3)\x27>' + cBJ['getKeyName'](cBT['moveKeys'][0x3]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.reload') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont8\x27\x20onclick=\x27changeCont(8)\x27>' + cBJ['getKeyName'](cBT['reloadKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.aim') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont10\x27\x20onclick=\x27changeCont(10)\x27>' + cBJ['getKeyName'](cBT['aimKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.inspect') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont14\x27\x20onclick=\x27changeCont(14)\x27>' + cBJ['getKeyName'](cBT['inspKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.spray') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont9\x27\x20onclick=\x27changeCont(9)\x27>' + cBJ['getKeyName'](cBT['sprayKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.jump') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont4\x27\x20onclick=\x27changeCont(4)\x27>' + cBJ['getKeyName'](cBT['jumpKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.crouch') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont5\x27\x20onclick=\x27changeCont(5)\x27>' + cBJ['getKeyName'](cBT['crouchKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.prim') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont13\x27\x20onclick=\x27changeCont(13)\x27>' + cBJ['getKeyName'](cBT['primKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.melee') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont6\x27\x20onclick=\x27changeCont(6)\x27>' + cBJ['getKeyName'](cBT['meleeKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.swap') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont7\x27\x20onclick=\x27changeCont(7)\x27>' + cBJ['getKeyName'](cBT['swapKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.chat') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont11\x27\x20onclick=\x27changeCont(11)\x27>' + cBJ['getKeyName'](cBT['chatKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.voice') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont12\x27\x20onclick=\x27changeCont(12)\x27>' + cBJ['getKeyName'](cBT['voiceKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.list') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont15\x27\x20onclick=\x27changeCont(15)\x27>' + cBJ['getKeyName'](cBT['listKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.interact') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont16\x27\x20onclick=\x27changeCont(16)\x27>' + cBJ['getKeyName'](cBT['interactKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.drop') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont17\x27\x20onclick=\x27changeCont(17)\x27>' + cBJ['getKeyName'](cBT['dropKey']) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.streak0') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont18\x27\x20onclick=\x27changeCont(18)\x27>' + cBJ['getKeyName'](cBT['streakKeys'][0x0]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.streak1') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont19\x27\x20onclick=\x27changeCont(19)\x27>' + cBJ['getKeyName'](cBT['streakKeys'][0x1]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.streak2') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont20\x27\x20onclick=\x27changeCont(20)\x27>' + cBJ['getKeyName'](cBT['streakKeys'][0x2]) + '</span></div>',
                cAU += '<div\x20class=\x27settName\x27>' + cB5['t']('windows.controls.streak3') + '<span\x20class=\x27settText\x20floatR\x27\x20id=\x27cont21\x27\x20onclick=\x27changeCont(21)\x27>' + cBJ['getKeyName'](cBT['streakKeys'][0x3]) + '</span></div>';
            }
        }, {
            'header': cB5['t']('windows.host.header'),
            'presets': {},
            'presetLoaded': function(cAU, cAV) {
                try {
                    windows[0x7]['presets'][cAU]['data'] = cAU && windows[0x7]['presets'][cAU] && cAV ? JSON['parse'](cAV) : 'DEFAULT';
                } catch (cIs) {
                    windows[0x7]['presets'][cAU]['data'] = 'DEFAULT';
                }
                updateWindow(0x8);
            },
            'gen': function() {
                var cAU = '';
                if (cC8 = !0x0,
                cAU += '<div\x20class=\x27settName\x20b\x27>' + cB5['t']('windows.host.maps') + '</div>',
                cAU += '<div\x20style=\x27margin-top:10px\x27>',
                cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:10px\x27>' + cB5['t']('windows.host.cmaps') + '\x20<div\x20style=\x27float:right\x27>' + (cK7 ? '<span><i\x20style=\x27color:#eb5656;font-size:30px;vertical-align:-3px;cursor:pointer\x27\x20onclick=\x27openHostWindow(true)\x27class=\x27material-icons\x27>delete</i>\x20</span>' : '') + '<a\x20id=\x27commMap\x27\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(10);\x27\x20class=\x27menuLink\x27\x20style=\x27font-size:18px\x27>' + (cK7 || cB5['t']('generic.select')) + '</a></div></div><br/>',
                cK7 || (cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-top:-24px;\x27>' + cB5['t']('windows.host.raw') + '<input\x20id=\x27rawMapData\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20' + (cK8 ? 'value=\x27' + cK8 + '\x27' : 'placeholder=\x27' + cB5['t']('windows.host.raw') + '\x27') + '\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div><br/>'),
                cAU += '</div>',
                cAU += '<div\x20style=\x27margin-top:-15px;margin-bottom:20px;\x27>',
                !cK7)
                    for (var cAV, cAW = 0x0; cAW < cC0['length']; cAW++)
                        cAV = cC0[cAW],
                        cAU += '<label\x20class=\x27hostMap\x27><div\x20class=\x27hostMapName\x20blackShad\x27>' + cBJ['capFirst'](cAV['name']) + '</div><div\x20class=\x27hostMapLore\x27\x20title=\x27Coming\x20Soon\x27>?</div><input\x20id=\x27gameMap' + cAW + '\x27\x20type=\x27checkbox\x27\x20checked=\x27\x27><img\x20class=\x27hostMapImg\x27\x20src=\x27.' + cBJ['versionifyUrl']('/img/maps/map_' + cAW + '.png') + '\x27></label>';
                cAU += '</div>';
                var cAY = windows[0x7]['presets'][cK7]
                  , cAZ = !cK7 || cAY && cAY['data'];
                if (cAZ) {
                    cAY && (cAY = cAY['data']),
                    'DEFAULT' == cAY && (cAY = null),
                    cAU += '<div\x20class=\x27settName\x20b\x27>' + cB5['t']('windows.host.modes') + '</div>',
                    cAU += '<div\x20style=\x27margin-top:5px\x27>';
                    for (cAW = 0x0; cAW < cC1['length']; cAW++) {
                        var cB0 = cC1[cAW]
                          , cB6 = '<label\x20class=\x27switch\x27><input\x20id=\x27gameMode' + cAW + '\x27\x20type=\x27checkbox\x27\x20' + ((cBc = cAY ? cAY['modes'] && 0x0 <= cAY['modes']['indexOf'](cAW) : 0x0 == cAW) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
                        cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cBJ['capFirst'](cB0['name']) + cB6 + '</div>';
                    }
                    cAU += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:20px\x27>' + cB5['t']('windows.host.classes') + '</div>',
                    cAU += '<div\x20style=\x27margin-top:5px\x27>';
                    for (cAW = 0x0; cAW < cBS['classes']['length']; cAW++) {
                        var cBa = cBS['classes'][cAW];
                        cB6 = '<label\x20class=\x27switch\x27><input\x20id=\x27gameClass' + cAW + '\x27\x20type=\x27checkbox\x27\x20' + ((cBc = !cAY || !cAY['classes'] || 0x0 <= cAY['classes']['indexOf'](cAW)) ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label>';
                        cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cBa['name'] + cB6 + '</div>';
                    }
                    cAU += '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cB5['t']('windows.host.settings') + '</div>';
                    for (cAW = 0x0; cAW < cAX['serverConfig']['length']; cAW++) {
                        cBW = cAX['serverConfig'][cAW];
                        var cBb = cB5['t']('server.config.' + cBW['varN']);
                        if (cBW['bool']) {
                            var cBc = cBW['def'];
                            cAY && cAY['settings'] && null != cAY['settings'][cBW['varN']] && (cBc = !!cAY['settings'][cBW['varN']]),
                            cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cBb + '\x20<label\x20class=\x27switch\x27><input\x20type=\x27checkbox\x27\x20id=\x27customS' + cBW['varN'] + '\x27\x20' + (cBc ? 'checked' : '') + '><span\x20class=\x27slider\x27></span></label></div>';
                        } else if (cBW['input'])
                            cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27>' + cBb + '<input\x20id=\x27customS' + cBW['varN'] + '\x27\x20value=\x27' + cBW['def'] + '\x27\x20type=\x27text\x27style=\x27border-radius:12px;border:none;background:#eee;padding:6px;padding-bottom:6px;float:right;margin-top:5px;margin-bottom:5px;\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27></div>';
                        else {
                            var cBd = cBW['def']
                              , cBe = cBV && cBV['featured'] && cBW['maxF'] || cBW['max'];
                            cAY && cAY['settings'] && null != cAY['settings'][cBW['varN']] && ((cBd = cAY['settings'][cBW['varN']]) > cBe && (cBd = cBe)),
                            cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin-left:0\x27>' + cBb + '<span\x20class=\x27sliderVal\x27\x20id=\x27customSet' + cAW + '\x27>' + cBd + '</span><div\x20class=\x27slidecontainer\x27><input\x20type=\x27range\x27\x20min=\x27' + cBW['min'] + '\x27\x20max=\x27' + cBe + '\x27\x20step=\x27' + cBW['step'] + '\x27\x20id=\x27customS' + cBW['varN'] + '\x27\x20value=\x27' + cBd + '\x27\x20oninput=\x27updateSliderLabel(' + cAW + ',this.value)\x27\x20class=\x27sliderM\x27></div></div>';
                        }
                    }
                    cAU += '<div\x20class=\x27settNameSmall\x27\x20style=\x27margin:0\x27>' + cB5['t']('server.config.private') + '\x20<label\x20class=\x27switch\x27><input\x20id=\x27makePrivate\x27\x20type=\x27checkbox\x27><span\x20class=\x27slider\x27></span></label></div>',
                    cAU += '<div\x20id=\x27hostGamePreset\x27\x20style=\x27text-align:left;margin-top:30px\x27>' + windows[0x7]['genPresets'](!0x0) + '</div>';
                } else
                    windows[0x7]['presets'][cK7] || (windows[0x7]['presets'][cK7] = {},
                    cBQ['getMapPreset'](cK7, this['presetLoaded'])),
                    cAU += '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>' + cB5['t']('windows.host.preset.load') + '</div>';
                return cAZ && (cAU += '<div\x20style=\x27text-align:left;margin-top:30px\x27>',
                cAU += '<div\x20style=\x27color:#919191;margin-bottom:5px\x27\x20id=\x27hostGameMsg\x27></div>',
                cAU += '<a\x20class=\x27menuLink\x27\x20onclick=\x27createPrivateRoom()\x27>' + cB5['t']('windows.host.start') + '</a>',
                cAU += '</div>'),
                cAU;
            },
            'presetAction': function(cAU) {
                if (0x0 == cAU && 'Select' == presetSelect['value'])
                    return;
                if (0x2 == cAU && 'Select' == presetSelect['value'])
                    return;
                let cAV = getSavedVal('krk_hostPresets');
                cAV = cAV ? JSON['parse'](cAV) : {};
                var cAW = presetName['value']['length'] ? presetName['value'] : 'Select' == presetSelect['value'] ? 'Preset1' : presetSelect['value'];
                if (0x2 == cAU)
                    cAV[presetSelect['value']] && delete cAV[presetSelect['value']],
                    saveVal('krk_hostPresets', JSON['stringify'](cAV));
                else {
                    let cB0 = 0x1 == cAU ? {} : cAV[presetSelect['value']];
                    for (var cAY, cAZ = 0x0; cAZ < cC0['length']; cAZ++)
                        cC0[cAZ],
                        cAY = document['getElementById']('gameMap' + cAZ),
                        0x1 == cAU ? 0x1 != cAY['checked'] && (cB0['gameMap' + cAZ] = cAY['checked']) : 'gameMap' + cAZ in cB0 && (cAY['checked'] = cB0['gameMap' + cAZ]);
                    for (cAZ = 0x0; cAZ < cC1['length']; cAZ++)
                        cAY = document['getElementById']('gameMode' + cAZ),
                        0x1 == cAU ? cAY['checked'] != !cAZ && (cB0['gameMode' + cAZ] = cAY['checked']) : 'gameMode' + cAZ in cB0 && (cAY['checked'] = cB0['gameMode' + cAZ]);
                    for (cAZ = 0x0; cAZ < cBS['classes']['length']; cAZ++)
                        cBS['classes'][cAZ],
                        cAY = document['getElementById']('gameClass' + cAZ),
                        0x1 == cAU ? 0x1 != cAY['checked'] && (cB0['gameClass' + cAZ] = cAY['checked']) : 'gameClass' + cAZ in cB0 && (cAY['checked'] = cB0['gameClass' + cAZ]);
                    for (cAZ = 0x0; cAZ < cAX['serverConfig']['length']; cAZ++)
                        cBW = cAX['serverConfig'][cAZ],
                        cAY = document['getElementById']('customS' + cBW['varN']),
                        0x1 == cAU ? cAY[cBW['bool'] ? 'checked' : 'value'] != cBW['def'] && (cB0[cBW['varN']] = cAY[cBW['bool'] ? 'checked' : 'value']) : cBW['varN']in cB0 && (!cBW['bool'] && !cBW['input'] && (document['getElementById']('customSet' + cAZ)['innerText'] = cB0[cBW['varN']]),
                        cAY[cBW['bool'] ? 'checked' : 'value'] = cB0[cBW['varN']]);
                    0x1 == cAU ? (cK7 && (cB0['commMap'] = cK7),
                    cK9 && (cB0['hostModURL'] = cK9),
                    '' != (cAY = document['getElementById']('rawMapData'))['value'] && (cB0['rawMapData'] = cAY['value']),
                    0x0 != (cAY = document['getElementById']('makePrivate'))['checked'] && (cB0['makePrivate'] = cAY['checked']),
                    cAV[cAW] = cB0,
                    saveVal('krk_hostPresets', JSON['stringify'](cAV))) : ('commMap'in cB0 && (document['getElementById']('commMap')['innerText'] = cK7 = cB0['commMap']),
                    'rawMapData'in cB0 && (document['getElementById']('rawMapData')['value'] = cB0['rawMapData']),
                    'makePrivate'in cB0 && (document['getElementById']('makePrivate')['checked'] = cB0['makePrivate']));
                }
                windows[0x7]['genPresets']();
            },
            'genPresets': function(cAU=!0x1) {
                let cAV = getSavedVal('krk_hostPresets');
                cAV = cAV ? JSON['parse'](cAV) : {};
                var cAW = '<div\x20class=\x27settName\x20b\x27\x20style=\x27margin-top:25px\x27>' + cB5['t']('windows.host.preset') + '</div>';
                for (let cAU in cAW += '<span\x20class=\x27settNameSmall\x27\x20style=\x27margin:0;margin-bottom:5px;\x27><input\x20id=\x27presetName\x27\x20type=\x27text\x27\x20class=\x27formInput\x27\x20placeholder=\x27' + cB5['t']('windows.host.preset.name') + '\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27\x20style=\x27border:none;background:#eee;padding:6px;padding-bottom:6px;float:left;margin-top:5px;margin-bottom:5px;\x27><select\x20id=\x27presetSelect\x27\x20style=\x27border-radius:12px;margin-left:10px;border:none;background:#eee;padding:6px;padding-bottom:6px;margin-top:5px;margin-bottom:5px;\x27><option\x20selected>Select</option>',
                cAV)
                    cAV[cAU],
                    cAW += '<option>' + cAU + '</option>';
                return cAW += '</select>',
                cAW += '<div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(2)\x27>' + cB5['t']('generic.delete') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(1)\x27>' + cB5['t']('generic.save') + '</div><div\x20class=\x27hostPresetBtn\x27\x20onclick=\x27windows[7].presetAction(0)\x27>' + cB5['t']('generic.load') + '</div></span>',
                cAU ? cAW : void (hostGamePreset['innerHTML'] = cAW);
            }
        }, {
            'header': cB5['t']('windows.spray.header'),
            'gen': function() {
                for (var cAU = '<div\x20id=\x27skinList\x27>', cAV = 0x0; cAV < cBS['sprays']['length']; ++cAV)
                    cAU += '<div\x20class=\x27skinCard\x27>' + cBS['sprays'][cAV]['name'] + '<div\x20class=\x27itemOwn\x27>' + cB5['t']('windows.spray.default') + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cBJ['versionifyUrl']('/textures/sprays/' + cAV + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27onclick=\x27selectSpray(' + cAV + ')\x27>' + cB5['t']('generic.select') + '</div></div>';
                return cAU += '</div>';
            }
        }, {
            'header': cB5['t']('windows.maps.header'),
            'searchMaps': function() {
                searchResults['innerHTML'] = cB5['t']('generic.loading'),
                cBQ['searchMap'](mpSrch['value'], cKS);
            },
            'searchResp': function(cAU) {
                var cAV = '';
                cAU['length'] ? (cAV += '<div\x20style=\x27height:10px\x27></div>',
                cAV += cHl(cAU, 'map')) : cAV = cB5['t']('windows.maps.none'),
                document['getElementById']('searchResults') && (document['getElementById']('searchResults')['innerHTML'] = cAV);
            },
            'mapsLoaded': function(cAU, cAV, cAW) {
                mapList && (cAU && cAU['length'] ? cAW ? (mapList['innerHTML'] = cAW,
                this['listData'][cAV] = null) : (this['listData'][cAV]['dat'] = cHl(cAU, 'map'),
                updateWindow(0xa)) : (mapList['innerHTML'] = cB5['t']('windows.maps.none'),
                this['listData'][cAV] = null));
            },
            'tabIndex': 0x0,
            'listData': {},
            'switchTab': function(cAU) {
                this['tabIndex'] != cAU && (this['tabIndex'] = cAU,
                updateWindow(0xa));
            },
            'gen': function() {
                for (var cAU = cAX['mapTabs'][this['tabIndex']], cAV = '', cAW = 0x0; cAW < cAX['mapTabs']['length']; ++cAW)
                    cAV += '<div\x20class=\x27menuTab' + (this['tabIndex'] == cAW ? '\x20tabA' : '') + '\x27\x20onclick=\x27windows[9].switchTab(' + cAW + ')\x27>' + cAX['mapTabs'][cAW]['n'] + '</div>';
                var cAY = '';
                return cAU['search'] ? cAY = '<input\x20style=\x27margin-top:10px\x27\x20type=\x27text\x27\x20id=\x27mpSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cB5['t']('windows.maps.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[9].searchMaps()\x27>' + cB5['t']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:5px\x27\x20id=\x27searchResults\x27></div>' : this['listData'][this['tabIndex']] ? cAY = this['listData'][this['tabIndex']]['dat'] || cB5['t']('generic.loading') : (cAY = cB5['t']('generic.loading'),
                this['listData'][this['tabIndex']] = {},
                cBQ['listMaps'](this['tabIndex'], cBV ? cBV['id'] : null, cKP)),
                '<a\x20href=\x27./editor.html\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.maps.editor') + '</a>\x20|\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(11)\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.maps.publish') + '</a><a\x20href=\x27https://discord.gg/Kfypyp5\x27\x20class=\x27menuLink\x27\x20style=\x27float:right\x27>' + cB5['t']('windows.maps.community') + '</a><br/><div\x20style=\x27margin-top:25px;margin-bottom:15px\x27>' + cAV + '</div><div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27mapList\x27>' + cAY + '</div>';
            }
        }, {
            'header': cB5['t']('windows.publish.map.header'),
            'gen': function() {
                return cBV ? '<div\x20style=\x27margin-top:-8px;margin-bottom:10px\x27\x20class=\x27setHed\x27>' + cB5['t']('windows.publish.map.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectMapThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27mapThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateMapThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27mapThumbName\x27>' + cB5['t']('windows.publish.map.thumbnail') + '</span></div><input\x20id=\x27mapDataNew\x27\x20type=\x27text\x27\x20placeholder=\x27' + cB5['t']('windows.publish.map.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27mapUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px;margin-bottom:5px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMap()\x27>' + cB5['t']('windows.publish.map.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.publish.map.login') + '</div>';
            }
        }, {
            'header': cB5['t']('windows.theatre.header'),
            'gen': function() {
                return '';
            }
        }, {
            'header': cB5['t']('windows.clans.header'),
            'clanData': null,
            'kickReq': function(cAU) {
                if (cBR['send']('cln', 0x5, cAU),
                this['clanData'] && this['clanData']['members']) {
                    for (var cAV = this['clanData']['members']['length'] - 0x1; 0x0 <= cAV; --cAV)
                        this['clanData']['members'][cAV]['player_id'] == cAU && this['clanData']['members']['splice'](cAV, 0x1);
                    updateWindow(0xd);
                }
            },
            'sendReq': function(cAU, cAV) {
                var cAW = document['getElementById']('clanErr');
                cAW && (cAW['style']['color'] = 'rgba(0,0,0,0.6)',
                cAW['innerHTML'] = cB5['t']('generic.loading'));
                var cAX = (cAW = document['getElementById']('clanInp' + cAU)) ? cAW['value'] : null;
                cBR['send']('cln', cAU, cAV || cAX || 0x1);
            },
            'updReq': function(cAU, cAV, cAW) {
                cBR['send']('clnR', cAV, cAW),
                this['clanData']['members'] && 0x1 == cAW && this['clanData']['members']['push']({
                    'player_name': this['clanData']['requests'][cAU]['player_name']
                }),
                this['clanData']['requests']['splice'](cAU, 0x1),
                updateWindow(0xd);
            },
            'delReq': function() {
                this['clanData'] = null,
                cBV && (cBV['clan'] = null),
                cBR['send']('cln', 0x4, 0x1),
                showWindow(0x5);
            },
            'resp': function(cAU, cAV, cAW) {
                var cAX = document['getElementById']('clanErr');
                cAU && cAX ? (cAX['style']['color'] = cAW ? 'rgba(0,0,0,0.6)' : 'rgba(255,0,0,0.6)',
                cAX['innerHTML'] = cAU) : cAV && (cBV && (cBV['clan'] = cAV['clan_name']),
                this['clanData'] = cAV,
                updateWindow(0xd));
            },
            'gen': function() {
                var cAU = ''
                  , cAV = '';
                if (this['clanData'] && this['clanData']['members']) {
                    var cAW = cBV && this['clanData']['clan_playerid'] == cBV['id'];
                    cAU = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cB5['t']('windows.clans.members', this['clanData']['members']['length']) + '</div>';
                    for (var cAY = 0x0; cAY < this['clanData']['members']['length']; ++cAY)
                        cAU += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27href=\x27/social.html?p=profile&q=' + this['clanData']['members'][cAY]['player_name'] + '\x27>' + this['clanData']['members'][cAY]['player_name'] + '</a>' + (cAW && this['clanData']['clan_playerid'] != this['clanData']['members'][cAY]['player_id'] ? '<i\x20style=\x27font-size:40px;float:right;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].kickReq(' + this['clanData']['members'][cAY]['player_id'] + ')\x27>clear</i>' : '') + '</div>';
                }
                if (this['clanData'] && this['clanData']['requests']) {
                    cAV = '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:10px\x27>' + cB5['t']('windows.clans.requests') + '</div>';
                    for (cAY = 0x0; cAY < this['clanData']['requests']['length']; ++cAY)
                        cAV += '<div\x20class=\x27settName\x27><a\x20target=\x27_blank\x27\x20href=\x27/social.html?p=profile&q=' + this['clanData']['requests'][cAY]['player_name'] + '\x27>' + this['clanData']['requests'][cAY]['player_name'] + '</a><span\x20style=\x27float:right\x27><i\x20style=\x27font-size:40px;color:rgba(255,0,0,0.6)\x27\x20\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cAY + ',' + this['clanData']['requests'][cAY]['cr_playerid'] + ',\x200)\x27>clear</i><i\x20style=\x27font-size:40px;color:rgba(0,255,0,0.6);margin-left:10px\x27\x20class=\x27material-icons\x20h\x27\x20onclick=\x27windows[12].updReq(' + cAY + ',' + this['clanData']['requests'][cAY]['cr_playerid'] + ',\x201)\x27>done</i></span></div>';
                    this['clanData']['requests']['length'] || (cAV += '<div\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cB5['t']('windows.clans.requests.none') + '</div>');
                }
                var cAZ = cBV ? cBV['clan'] ? '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0px\x27>' + cB5['t']('windows.clans.page', cBV['clan']) + '<a\x20style=\x27float:right\x27\x20href=\x27javascript:;\x27\x20onclick=\x27windows[12].delReq()\x27\x20class=\x27menuLink\x27>' + (this['clanData'] ? cBV && this['clanData']['clan_playerid'] == cBV['id'] ? cB5['t']('generic.delete') : cB5['t']('generic.leave') : '') + '</a></div><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:0px;color:rgba(0,0,0,0.5)\x27>' + (this['clanData'] ? '<div\x20class=\x27settName\x27>' + cB5['t']('generic.level') + '<span\x20class=\x27floatR\x27>' + Math['max'](0x1, Math['floor'](cAX['rankVar'] * Math['sqrt'](this['clanData']['clan_score'] || 0x0))) + '</span></div><div\x20class=\x27settName\x27>' + cB5['t']('generic.score') + '<span\x20class=\x27floatR\x27>' + (this['clanData']['clan_score'] || 0x0) + '</span></div>' + cAU + cAV : cB5['t']('generic.loading')) + '</div>' : '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:-5px\x27>' + cB5['t']('windows.clans.create') + '</div><input\x20id=\x27clanInp1\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x274\x27\x20placeholder=\x27' + cB5['t']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(1)\x27>' + cB5['t']('generic.create') + '</a><div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cB5['t']('windows.clans.join') + '\x20<a\x20href=\x27./social.html?q=clan\x27\x20class=\x27menuLink\x27\x20style=\x27margin-top:10px;display:inline-block\x27>' + cB5['t']('windows.clans.view') + '</a></div><input\x20id=\x27clanInp2\x27\x20type=\x27text\x27\x20class=\x27smlInput\x27\x20maxlength=\x275\x27\x20placeholder=\x27' + cB5['t']('windows.clans.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[12].sendReq(2)\x27>' + cB5['t']('generic.submit') + '</a><div\x20id=\x27clanErr\x27\x20style=\x27margin-top:10px\x27></div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);margin-top:20px\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.clans.login') + '</div>';
                return cBV && cBV['clan'] && !this['clanData'] && this['sendReq'](0x3),
                cAZ;
            }
        }, {
            'header': cB5['t']('windows.store.header'),
            'gen': function() {
                cBM['play']('store', 0.4);
                for (var cAU = '', cAV = 0x0; cAV < cBS['store']['wheels']['length']; ++cAV)
                    cBW = cBS['store']['wheels'][cAV],
                    (cBV && 0x0 == cBV['following'] && cBW['free'] && cBV['level'] >= cBW['minLvl'] || !cBW['free']) && (cAU += '<div><a\x20href=\x27javascript:;\x27\x20class=\x27menuLink\x27\x20onclick=\x27prizeWheel(' + cAV + ')\x27>' + cB5['t']('windows.store.spin', cBW['name']) + '</a>\x20' + (cBW['lab'] ? '<span\x20style=\x27color:#fff;margin-left:5px;background-color:' + cBW['lab']['col'] + ';font-size:15px;padding:3px;padding-left:8px;padding-right:8px\x27>\x20' + cBW['lab']['nm'] + '\x20</span>' : '') + '<span\x20style=\x27float:right;color:rgba(0,0,0,0.3)\x27>' + (cBW['priceT'] || cBW['price']) + '<span\x20style=\x27color:rgba(0,0,0,0.6)\x27>\x20' + (cBW['priceT'] ? '' : 'KR') + '</span></span></div>');
                var cAW = '<div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:-3px\x27>' + cB5['t']('windows.store.agree', '<a\x20href=\x27./docs/terms.txt\x27>') + '</a>.\x20Support\x20your\x20favorite\x20Content\x20Creator\x20by\x20using\x20a\x20Creator\x20Code</div><input\x20type=\x27text\x27\x20id=\x27creatorCodeI\x27\x20class=\x27smlInput\x27\x20style=\x27width:100%;margin-bottom:8px\x27\x20placeholder=\x27Enter\x20Creator\x20Code\x27\x20/>';
                cAW += '<div\x20id=\x27skinList\x27>';
                for (cAV = 0x0; cAV < cBS['store']['purchases']['length']; ++cAV)
                    cAW += '<div\x20class=\x27shopCard\x27\x20onmouseenter=\x27playTick()\x27\x20onclick=\x27showPurchase(' + cAV + ')\x27\x20style=\x27background-image:\x20url(&quot;./img/shop/' + cAV + '.png&quot;)\x27>' + ((cBW = cBS['store']['purchases'][cAV])['tag'] ? '<div\x20class=\x27shopSale\x27\x20style=\x27background-color:' + cBW['tagCol'] + '\x27>' + cBW['tag'] + '</div>' : '') + cBW['val'] + '\x20<span\x20style=\x27color:#fff\x27>KR</span><div\x20class=\x27purBtn\x27\x20onmouseenter=\x27playTick()\x27\x20onclick=\x27showPurchase(' + cAV + ')\x27>$' + cBW['price'] + '\x20USD</div></div>';
                cAW += '</div>';
                var cAX = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cB5['t']('windows.store.purchase') + '</b>' + cAW
                  , cAY = '<div\x20style=\x27height:10px;\x27></div><b\x20style=\x27font-size:26px;margin-bottom:10px\x27>' + cB5['t']('windows.store.voucher') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);font-size:19px;margin-bottom:6px\x27>' + cB5['t']('windows.store.voucherinfo') + '</div><input\x20type=\x27text\x27\x20id=\x27redVouch\x27\x20class=\x27smlInput\x27\x20style=\x27width:80%\x27\x20placeholder=\x27Enter\x20KR\x20Code\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27redeemVoucher()\x27>Redeem</a><div\x20id=\x27vouchRes\x27></div>';
                return cBV ? '<b\x20style=\x27font-size:26px\x27>' + cB5['t']('windows.store.market') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cB5['t']('windows.store.buy') + '\x20<a\x20href=\x27javascript:;\x27\x20onclick=\x27window.open(`/social.html?p=market`)\x27>' + cB5['t']('windows.store.market2') + '</a></div><b\x20style=\x27font-size:26px\x27>' + cB5['t']('windows.store.wheels') + '</b><div\x20style=\x27color:rgba(0,0,0,0.3);margin-bottom:10px\x27>' + cB5['t']('windows.store.unlock') + '</div>' + cAU + cAX + cAY + '<div\x20style=\x27float:right;margin-top:20px\x27>' + cB5['t']('windows.store.amount', cBV['funds']) + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5);\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.store.login') + '</div>';
            }
        }, {
            'header': cB5['t']('windows.skin.header'),
            'gen': function() {
                var cAU = '<div\x20id=\x27skinList\x27><div\x20class=\x27skinCard\x27>' + cB5['t']('generic.default') + '<div\x20class=\x27itemOwn\x27>by\x20Krunker.io</div><img\x20class=\x27skinImg\x27\x20src=\x27.' + cBJ['versionifyUrl']('/textures/previews/weapons/' + cBS['weapons'][cGG]['src'] + '.png') + '\x27\x20style=\x27margin-top:-10px\x27><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;margin-top:-40px\x27\x20onclick=\x27selectSkin(-1,' + cGG + ')\x27>' + cB5['t']('generic.select') + '</div></div><div\x20class=\x27skinCard\x27>' + cB5['t']('generic.random') + '<div\x20class=\x27itemOwn\x27\x20style=\x27opacity:0;\x27\x27>by\x20???</div><img\x20class=\x27skinImgSil\x27\x20src=\x27.' + cBJ['versionifyUrl']('/textures/previews/weapons/' + cBS['weapons'][cGG]['src'] + '.png') + '\x27\x20style=\x27margin-top:-10px\x27><div\x20class=\x27skinRandom\x20blackShad\x27>?</div><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;margin-top:-40px\x27\x20onclick=\x27selectSkin(-2,' + cGG + ')\x27>' + cB5['t']('generic.select') + '</div></div>';
                if (cBV || cBS['singlePlayer'])
                    for (var cAV = (cBS['singlePlayer'] ? Object['keys'](cBS['store']['skins'])['map'](cAU=>cAU = {
                        'ind': parseInt(cAU),
                        'cnt': 0x1
                    }) : cBV['skins'])['slice']()['sort'](function(cAU, cAV) {
                        return (null != cAV['ind'] && cBS['store']['skins'][cAV['ind']] ? cBS['store']['skins'][cAV['ind']]['rarity'] : 0x0) - (null != cAU['ind'] && cBS['store']['skins'][cAU['ind']] ? cBS['store']['skins'][cAU['ind']]['rarity'] : 0x0);
                    }), cAW = 0x0; cAW < cAV['length']; ++cAW)
                        (cBW = cBS['store']['skins'][cAV[cAW]['ind']]) && !cBW['type'] && cBW['weapon'] == cGG + 0x1 && (cAU += '<div\x20class=\x27skinCard\x27\x20style=\x27color:' + cBS['store']['rarities'][cBW['rarity']]['color'] + '\x27><div\x20class=\x27itemCnt\x27\x20data-badge=\x27x' + cAV[cAW]['cnt'] + '\x27></div>' + cBW['name'] + '<div\x20class=\x27itemOwn\x27>by\x20' + (cBW['creator'] || 'Krunker.io') + '</div><img\x20style=\x27margin-top:-10px\x27\x20class=\x27skinImg' + (cBW['type'] ? 'C' : '') + '\x27\x20src=\x27.' + cBJ['getPreview'](cBW, cBS['store']) + '\x27/><div\x20class=\x27selctBtn\x27\x20style=\x27margin-top:-40px\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27selectSkin(' + cAV[cAW]['ind'] + ',' + (cBW['weapon'] - 0x1) + ')\x27>' + cB5['t']('generic.select') + '</div><div\x20class=\x27selctInfoBtn\x27\x20onmouseenter=\x27playTick()\x27onclick=\x27openViewer(' + cAV[cAW]['ind'] + ')\x27>?</div></div>');
                return cAU += '</div>';
            }
        }, {
            'header': cB5['t']('windows.hat.header'),
            'gen': function() {
                return cHr('selectHat', 0x1);
            }
        }, {
            'header': cB5['t']('windows.back.header'),
            'gen': function() {
                return cHr('selectBack', 0x2);
            }
        }, {
            'header': cB5['t']('windows.mods.community.header'),
            'modData': null,
            'searchMods': function() {
                searchResults['innerHTML'] = cB5['t']('generic.loading'),
                cBQ['searchMod'](moSrch['value'], cKS);
            },
            'searchResp': function(cAU) {
                var cAV = '';
                cAU['length'] ? (cAV += '<div\x20style=\x27height:10px\x27></div>',
                cAV += cHl(cAU, 'mod')) : cAV = cB5['t']('windows.mods.community.none'),
                document['getElementById']('searchResults') && (document['getElementById']('searchResults')['innerHTML'] = cAV);
            },
            'resp': function(cAU) {
                if (cAU && cAU['length'])
                    this['modData'] = cAU,
                    this['modData']['loaded'] = !0x0,
                    updateWindow(0x12);
                else {
                    this['modData'] = null;
                    var cAV = document['getElementById']('modsList');
                    cAV && (cAV['innerHTML'] = cB5['t']('windows.mods.community.none'));
                }
            },
            'gen': function() {
                var cAU = '';
                if (this['modData'] && this['modData']['loaded']) {
                    cAU = '<div\x20style=\x27margin-bottom:-5px;margin-top:-5px;\x27>' + cB5['t']('generic.search') + '</div><input\x20type=\x27text\x27\x20id=\x27moSrch\x27\x20class=\x27smlInput\x27\x20placeholder=\x27' + cB5['t']('windows.mods.community.name') + '\x27\x20/><a\x20class=\x27menuLink\x27\x20style=\x27margin-left:20px\x27\x20onclick=\x27windows[17].searchMods()\x27>' + cB5['t']('generic.search') + '</a><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:5px\x27\x20id=\x27searchResults\x27></div>';
                    for (var cAV = ['<div\x20style=\x27margin-bottom:5px;margin-top:15px\x27>' + cB5['t']('windows.mods.community.hot') + '</div>', '<div\x20style=\x27margin-top:20px;margin-bottom:5px\x27>' + cB5['t']('windows.mods.community.new') + '</div>', '<div\x20style=\x27margin-top:20px;margin-bottom:5px\x27>' + cB5['t']('windows.mods.community.fav') + '</div>'], cAW = 0x0; cAW < this['modData']['length']; ++cAW)
                        this['modData'][cAW] && (this['modData'][cAW]['length'] && (cAU += cAV[cAW]),
                        cAU += cHl(this['modData'][cAW], 'mod'));
                } else
                    cAU = cB5['t']('generic.loading'),
                    this['modData'] || (this['modData'] = {},
                    cBQ['listMods'](cBV ? cBV['id'] : null, cKM));
                return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27\x20id=\x27modsList\x27>' + cAU + '</div>';
            }
        }, {
            'header': cB5['t']('windows.publish.mod.header'),
            'gen': function() {
                return cBV ? '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27>' + cB5['t']('windows.publish.mod.header') + '</div><div\x20style=\x27color:rgba(0,0,0,0.4);font-size:18px\x27><input\x20onclick=\x27selectModThumb()\x27\x20type=\x27button\x27\x20id=\x27thumbBtn\x27\x20style=\x27cursor:pointer\x27\x20value=\x27Select\x27\x20/><input\x20id=\x27modThumb\x27\x20type=\x27file\x27\x20accept=\x27image/*\x27\x20style=\x27width:1px;visibility:hidden;\x27\x20onchange=\x27updateModThumb()\x27><span\x20style=\x27color:rgba(0,0,0,0.4);margin-left:10px\x27\x20id=\x27modThumbName\x27>' + cB5['t']('windows.publish.mod.thumbnail') + '</span></div><input\x20id=\x27pubModName\x27\x20type=\x27text\x27\x20placeholder=\x27' + cB5['t']('windows.publish.mod.name') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><input\x20id=\x27pubModURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cB5['t']('windows.publish.mod.paste') + '\x27\x20class=\x27mapInput\x27\x20autocomplete=\x27off\x27\x20autocorrect=\x27off\x27\x20autocapitalize=\x27off\x27\x20spellcheck=\x27false\x27/><div\x20id=\x27modUpResp\x27\x20style=\x27color:rgba(0,0,0,0.3);margin-top:8px\x27></div><div\x20class=\x27mapLoadButton\x27\x20style=\x27margin-top:6px\x27\x20onclick=\x27uploadCustomMod()\x27>' + cB5['t']('windows.publish.mod.update') + '</div>' : '<div\x20style=\x27color:rgba(0,0,0,0.3);\x27><a\x20href=\x27javascript:;\x27\x20onclick=\x27showWindow(5)\x27\x20class=\x27menuLink\x27>' + cB5['t']('windows.publish.mod.login') + '</div>';
            }
        }, {
            'header': cB5['t']('windows.secondary.header'),
            'gen': function() {
                for (var cAU = '<div\x20id=\x27skinList\x27>', cAV = 0x0; cAV < cBS['weapons']['length']; ++cAV)
                    if ((cBW = cBS['weapons'][cAV]) && cBW['secondary']) {
                        var cAW = !cBW['minRec'] || cBV && cBV['level'] >= cBW['minRec'] || cBS['singlePlayer'];
                        cAU += '<div\x20class=\x27skinCard\x27>' + cBW['name'] + '<div\x20class=\x27itemOwn\x27>' + (cBW['minRec'] ? cB5['t']('windows.secondary.' + (cAW ? 'unlocked' : 'req'), cBW['minRec']) : cB5['t']('generic.default')) + '</div><img\x20style=\x27margin-top:10px;image-rendering:pixelated\x27\x20class=\x27skinImgC\x27\x20src=\x27.' + cBJ['versionifyUrl']('/img/prev/' + cBW['src'] + '.png') + '\x27/><div\x20class=\x27selctBtn\x27\x20onmouseenter=\x27playTick()\x27\x20style=\x27width:\x20127px;\x27' + (cAW ? 'onclick=\x27selectSecondary(' + cAV + ')' : '') + '\x27>' + cB5['t']('generic.select') + '</div></div>';
                    }
                return cAU += '</div>';
            }
        }, {
            'header': cB5['t']('windows.advertise.header'),
            'gen': function() {
                return '<div\x20class=\x27setHed\x27\x20style=\x27margin-top:0\x27>Advertise\x20in\x20Game</div><div\x20style=\x27color:rgba(0,0,0,0.4)\x27>On\x20krunker.io\x20you\x20have\x20the\x20ability\x20to\x20place\x20advertisements\x20in\x20game.<div\x20style=\x27height:10px\x27></div>\x20The\x20game\x20features\x20several\x20<b>3d\x20Billboards</b>\x20that\x20yield\x20a\x20very\x20high\x20impression\x20rate\x20&\x20that\x20are\x20<b>not\x20affected\x20by\x20ad\x20blockers</b>.</div><img\x20src=\x27./img/ad_1.png\x27\x20style=\x27width:100%;margin-top:10px\x27/><div\x20style=\x27color:rgba(0,0,0,0.4);margin-top:10px\x27><b>Daily\x20Users:</b>\x20~\x202,000,000<br/><b>Registered\x20Accounts:</b>\x20~\x205,000,000<br/><b>Daily\x20Impressions:</b>\x20~\x206,500,000<br/><b>Peak\x20CCU:</b>\x20~\x2028,000<br/><b>Session\x20Time\x20avg:</b>\x2014\x20minutes<br/><div\x20style=\x27height:5px\x27></div><i\x20style=\x27color:rgba(0,0,0,0.2)\x27>as\x20of\x2016/06/2019</i></div><div\x20style=\x27margin-top:10px;color:rgba(0,0,0,0.4)\x27>For\x20inquiries\x20contact\x20<a>info@yendis.ch</a></div>';
            }
        }, {
            'header': 'Social',
            'gen': function() {
                return 'TODO';
            }
        }, {
            'header': cB5['t']('windows.players.header'),
            'gen': function() {
                var cAU = '<div\x20style=\x27margin-top:0px\x27\x20class=\x27setHed\x27><center>' + (cBS['players']['list']['length'] ? cB5['t']('windows.players.header') + '<hr>' : cB5['t']('windows.players.none')) + '</div>';
                cAU += '<div\x20style=\x27background-color:gainsboro;border-radius:\x2012px;\x27>',
                cBU && (cAU += '<div><span\x20class=\x27settNameSmall\x27>' + (cC6 ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + cBU['name'] + (cBU['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAX['verClans']['indexOf'](cBU['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cBU['clan'] + ']</span>' : '') + '</span>' + (cBV && cBV['developer'] ? '<span\x20style=\x27float:right\x27><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cBU['id'] + '\x22,\x202)\x27>Kill</span><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpall\x27\x20onclick=\x27punishPlayer(null,\x205)\x27>TPAll</span></span>' : '') + '</div>');
                for (let cAV of cBS['players']['list']['filter'](cAU=>!cAU['isYou']))
                    cAU += '<div><span\x20class=\x27settNameSmall\x27>' + (cC7 == cAV['id'] ? '<i\x20class=\x27material-icons\x27\x20style=\x27font-size:25px\x27>stars</i>' : '') + '<a\x20target=\x27_blank\x27\x20class=\x27' + (cAV['isHacker'] ? 'red' : 'grey') + '\x27\x20href=\x27/social.html?p=profile&q=' + cAV['name'] + '\x27>' + cAV['name'] + (cAV['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAX['verClans']['indexOf'](cAV['clan']) ? '#fbc02d' : '#353535') + '\x27>\x20[' + cAV['clan'] + ']</span>' : '') + '</a></span>' + (cC6 || cBV && cBV['developer'] ? '<span\x20style=\x27float:right\x27><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kick\x27\x20onclick=\x27punishPlayer(\x22' + cAV['id'] + '\x22,\x200)\x27>Kick</span><span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20ban\x27\x20onclick=\x27punishPlayer(\x22' + cAV['id'] + '\x22,\x201)\x27>Ban</span>' + (cBV && cBV['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20kill\x27\x20onclick=\x27punishPlayer(\x22' + cAV['id'] + '\x22,\x202)\x27>Kill</span>' : '') + (cBV && cBV['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tp2\x27\x20onclick=\x27punishPlayer(\x22' + cAV['id'] + '\x22,\x203)\x27>TP2</span>' : '') + (cBV && cBV['developer'] ? '<span\x20onmouseenter=\x27playTick()\x27\x20class=\x27punishButton\x20tpme\x27\x20onclick=\x27punishPlayer(\x22' + cAV['id'] + '\x22,\x204)\x27>TPME</span>' : '') + '</span>' : '') + '</div>';
                return cAU += '</div>';
            }
        }, {
            'header': cB5['t']('windows.join.header'),
            'gen': function() {
                return '<input\x20id=\x27gameURL\x27\x20type=\x27text\x27\x20placeholder=\x27' + cB5['t']('windows.join.code') + '\x27\x20class=\x27accountInput\x27\x20style=\x27margin-top:0\x27\x20value=\x27\x27></input>\x0a\x20\x20\x20\x20\x20\x20\x20\x20<div\x20class=\x27accountButton\x27\x20onclick=\x27joinGame()\x27,\x20style=\x27width:100%\x27>' + cB5['t']('windows.join.header') + '</div>';
            }
        }, {
            'header': cB5['t']('windows.client.header'),
            'gen': function() {
                return '<div><ul\x20style=\x27padding:0;display:flex;list-style:none;text-align:center;margin:0;margin-top:-10px\x27><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;margin-right:10px\x27><a\x20href=\x27//client2.krunker.io/setup.exe\x27\x20style=\x27display:block;width:100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/windows.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cB5['t']('windows.client.windows') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client2.krunker.io/setup.dmg\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/mac.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cB5['t']('windows.client.mac') + '</a></li><li\x20style=\x27display:\x20flex;flex-basis:200px;-webkit-box-flex:1;flex-grow:1;\x27><a\x20href=\x27//client2.krunker.io/setup.AppImage\x27\x20style=\x27display:\x20block;width:\x20100%;padding-top:1em;\x27><img\x20src\x20=\x27./img/linux.png\x27\x20style=\x27width:80px;height:80px;display:block;margin:0\x20auto\x2010px;\x27>' + cB5['t']('windows.client.linux') + '</a></li></ul></div>';
            }
        }, {
            'header': cB5['t']('windows.melee.header'),
            'gen': function() {
                return cHr('selectMelee', 0x3);
            }
        }, {
            'header': cB5['t']('windows.ranked.header'),
            'gen': function() {
                return '<div\x20style=\x27color:rgba(0,0,0,0.3)\x27>Coming\x20Soon</div>';
            }
        }, {
            'header': 'Creator\x20Dashboard',
            'getData': function(cAU) {
                var cAV = document['getElementById']('creatorDash');
                if (cAV) {
                    var cAW = 'Error.\x20Try\x20Again';
                    cAU && (cAW = '<div\x20style=\x27margin-bottom:20px;\x27>The\x20following\x20are\x20estimates\x20of\x20your\x20Creator\x20Code\x20earnings</div><div>Earnings\x20this\x20Month:\x20<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAU['revenuesharethismonth'] + '\x20USD</span></div><div>Earnings\x20last\x20Month:\x20<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAU['revenuesharelastmonth'] + '\x20USD</span></div><div>Earning\x20all\x20Time:\x20<span\x20style=\x27color:rgba(0,0,0,0.4)\x27>' + cAU['revenuesharetotal'] + '\x20USD</span></div><div\x20style=\x27color:rgba(0,0,0,0.5);margin-top:20px\x27>Payout\x20happen\x20on\x20a\x20monthly\x20basis</div>'),
                    cAV['innerHTML'] = cAW;
                }
            },
            'gen': function() {
                return cBR['send']('crtD'),
                '<div\x20id=\x27creatorDash\x27>Loading...</div>';
            }
        }];
        for (var cJK = 0x0; cJK < windows['length']; ++cJK)
            windows[cJK]['html'] = '';
        var cJL = 0x0;
        function cJM(cAU, cAV) {
            null == cAU || null == cAU ? (tmpEl = document['getElementById']('vouchRes'),
            tmpEl && (tmpEl['innerHTML'] = cAV || 'Failed\x20to\x20Redeem')) : (cDn(cAU),
            updateWindow(null, !0x0));
        }
        Object['defineProperty'](window, 'updateWindow', {
            'writeable': !0x1,
            'value': function(cAU, cAV) {
                'block' == windowHolder['style']['display'] && (cJL == cAU && null != cAU ? showWindow(cAU, !0x0) : cAV && showWindow(cJL, !0x0));
            }
        }),
        Object['defineProperty'](window, 'showWindow', {
            'writeable': !0x1,
            'value': function(cAU, cAV) {
                window['idleTimer'] = 0x0,
                function() {
                    document['getElementById']('aContainer') || cQo(),
                    windows['length'] > cHk && (windows['length'] = cHk),
                    menuBtnSettings ? 'showWindow(1)' != menuBtnSettings['parentNode']['getAttribute']('onclick') && elm['parentNode']['setAttribute']('onclick', 'showWindow(1)') : cQo();
                    var cAU = document['getElementById']('menuBtnHost');
                    cAU ? 'openHostWindow()' != cAU['getAttribute']('onclick') && cAU['setAttribute']('onclick', 'openHostWindow()') : cQo();
                }(),
                cAV || cAU && ('block' != windowHolder['style']['display'] || cAU != cJL) ? (cBO['toggleMenu'](!0x0),
                menuWindow['innerHTML'] = windows[cAU - 0x1]['gen'] ? windows[cAU - 0x1]['gen']() : windows[cAU - 0x1]['html'],
                cJL = cAU,
                windowHeader['innerHTML'] = windows[cAU - 0x1]['header'],
                cBO['toggleWindow'](!0x0, cBT['gamepad']['_connected'])) : (cBO['toggleWindow'](!0x1, cBT['gamepad']['_connected']),
                cBT['inputChanger'] = null);
            }
        }),
        window['playTick'] = function() {
            cBM['play']('tick_0', 0.2);
        }
        ,
        window['copyInviteLink'] = function() {
            cBJ['copyToClipboard']('https://' + location['host'] + '/?game=' + cBd),
            inviteButton['innerText'] = cB5['t']('menu.btn.invite.clicked'),
            setTimeout(()=>inviteButton['innerText'] = cB5['t']('menu.btn.invite'), 0x4e2);
        }
        ,
        Object['defineProperty'](window, 'punishPlayer', {
            'writeable': !0x1,
            'value': function(cAU, cAV) {
                if (!(0x2 < cAV || 0x0 > cAV) || cBV && cBV['developer']) {
                    let cAW = cBS['players']['list']['find'](cAV=>cAV['id'] == cAU);
                    cAW ? cBR['send']('pnh', cAV, cAW['id']) : 0x4 < cAV && cBR['send']('pnh', cAV, null);
                }
            }
        }),
        window['submitCrtrCod'] = function() {
            var cAU = document['getElementById']('crtrEmail')
              , cAV = document['getElementById']('crtrCode');
            cAU['value'] && cAV['value'] && (tmpEl = document['getElementById']('ctrtRes'),
            tmpEl && (tmpEl['innerHTML'] = 'Loading...'),
            cBR['send']('crtC', cAV['value'], cAU['value']));
        }
        ,
        window['crtrCodRes'] = function(cAU, cAV) {
            cAU ? (tmpEl = document['getElementById']('ctrtRes'),
            tmpEl && (tmpEl['innerHTML'] = cAU)) : windows[0x1b]['getData'](cAV);
        }
        ,
        window['redeemVoucher'] = function() {
            var cAU = document['getElementById']('redVouch');
            if (cAU && cAU['value']) {
                var cAV = cAU['value'];
                (cAU = document['getElementById']('vouchRes')) && (cAU['innerHTML'] = 'Loading...'),
                cBR['send']('vo', cAV);
            }
        }
        ;
        var cK4, cK5, cK6, cK7, cK8, cK9, cKa = spinWindow, cKb = cKa['getContext']('2d'), cKc = 0.95, cKd = 0.6, cKe = null, cKf = !0x1, cKg = 0x0, cKh = 0x0, cKi = 0x0, cKj = 0x0, cKk = 0x0, cKl = 0x1e, cKm = 0x12c, cKn = !0x0, cKo = !0x1, cKp = 0x0, cKq = 0x0, cKr = new cBI['PerspectiveCamera'](0x2d,0x1,0.1,0x64), cKs = new cBI['WebGLRenderer']({
            'precision': 'mediump',
            'antialias': !0x1,
            'alpha': !0x0
        });
        function cKt(cAU, cAV) {
            if (cCs) {
                var cAW = cBS['store']['skins'][cAV];
                cAW && cPW(null, '<span\x20style=\x27color:#fff\x27>' + cB5['t']('windows.store.unboxed', cAU, '</span>') + '\x20<span\x20style=\x27color:' + cBS['store']['rarities'][cAW['rarity']]['color'] + '\x27>' + cAW['name'] + '</span>', !0x0);
            }
        }
        function cKx(cAU, cAV, cAW, cAX, cAY) {
            if (cKf = !0x1,
            cAX)
                ;
            else {
                if (cKe = cBS['store']['skins'][cAV],
                spinItemName['innerHTML'] = cKe['name'] + '<div\x20style=\x27color:rgba(255,255,255,0.5)\x27>by\x20' + (cKe['creator'] || 'Krunker.io') + '</div>',
                cKh = 0x2 * Math['PI'] * (cAU / 0x64 + 0xd) + Math['PI'] / 0x2,
                cBV)
                    if (cAY && (cBV['following'] = cAY),
                    cBV['funds'] = cAW,
                    cFR(),
                    spinKR['innerHTML'] = cBV['funds'] + '\x20KR',
                    cBV['skins']['some'](cAU=>cAU['ind'] === cAV)) {
                        var cAZ = cBV['skins']['find'](cAU=>cAU['ind'] === cAV);
                        cAZ && cAZ['cnt']++;
                    } else
                        cBV['skins']['push']({
                            'ind': cAV,
                            'cnt': 0x1
                        });
                spinRotation = 0x0,
                cKp = 0x0,
                spinCost['innerHTML'] = '',
                (cK4 = new cBI['Scene']())['add'](new cBI['AmbientLight'](0x4f4f4f));
                var cB0 = new cBI['DirectionalLight'](0xffffff,0.5);
                cB0['position']['set'](0x3, 0x1, 0x0),
                cK4['add'](cB0);
                var cB5 = cKe['type'] ? cKe : cBS['store']['previews'][cKe['weapon']] || {};
                (cK5 = cBL['genObj3D'](0x0, 0x1 + (cB5['yOff'] || 0x0), cB5['xOff'] || 0x0))['rotateX'](-Math['PI'] / 0x7),
                cK5['rotateY'](Math['PI'] + 0.5 + (cB5['zRota'] || 0x0)),
                cK5['rotateZ'](-0.5),
                cK5['orgXR'] = cK5['rotation']['x'],
                cK5['orgYP'] = cK5['position']['y'],
                cBL['loadMesh']({
                    'src': cBS['store']['types'][cKe['type'] || 0x0] + (cKe['type'] ? cKe['id'] : cKe['weapon']) + (null == cKe['mid'] ? '' : '_' + cKe['mid']),
                    'texSrc': null == cKe['mid'] ? cKe['type'] && 0x3 == cKe['type'] ? 'melee/melee_' + (cKe['id'] || 0x0) + (cKe['tex'] ? '_' + cKe['tex'] : '') : cKe['type'] ? cKe['tex'] ? (0x1 == cKe['type'] ? 'hats/hat_' : 'body/body_') + cKe['id'] + '_' + cKe['tex'] : null : cKe['tex'] ? cKe['tex'] : 'weapons/skins/weapon_' + cKe['weapon'] + '_' + cKe['id'] : cKe['midT'],
                    'movT': cKe['movT'],
                    'pulsT': cKe['pulsT'],
                    'sameGlow': cKe['sameGlow'],
                    'glowText': cKe['glow'] || cKe['sameGlow'],
                    'emissive': cKe['glow'] || cKe['sameGlow'] ? 0xffffff : null,
                    'noGreen': !0x0,
                    'uv2': !0x0,
                    'fillScale': 0x3c,
                    'centerZ': !0x0
                }, 0x0, 0x0, 0x0, (cKe['type'] && 0x3 != cKe['type'] ? Math['PI'] : Math['PI'] / 0x2) + (cB5['xRot'] || 0x0), 2.2 * (cB5['scl'] || 0x1), cK5),
                cK4['add'](cK5),
                cKr['lookAt'](cK4['position']);
            }
        }
        function cKI(cAU, cAV, cAW) {
            windows[0xc]['resp'](cAU, cAV, cAW);
        }
        function cKM(cAU, cAV) {
            cAV && windows[0x11]['resp'](cAV['data'], cAV['error']);
        }
        function cKP(cAU, cAV) {
            cAV && windows[0x9]['mapsLoaded'](cAV['data'], cAV['index'], cAV['error']);
        }
        function cKS(cAU, cAV) {
            cAV && windows[cAV['index']]['searchResp'](cAV['data']);
        }
        cKs['setPixelRatio'](0.6 * window['devicePixelRatio']),
        cKr['position']['y'] = 0xa,
        spinItemCanvas['appendChild'](cKs['domElement']),
        Object['defineProperty'](window, 'prizeWheel', {
            'writeable': !0x1,
            'value': function(cAU, cAV) {
                (cK6 = cBS['store']['wheels'][cAU])['openURL'] && window['openURL'](cAX['followURLS'][cBJ['randInt'](0x0, cAX['followURLS']['length'] - 0x1)]),
                cKi = cAU,
                showWindow(0x0),
                cKg = 0x0,
                cKn = !cKf,
                cKo = !0x1,
                cKh = 0x0,
                cKq = 0x0,
                spinRotation = 0x0,
                cKj = cKk = 0x0,
                cBO['toggleMenuHider'](!0x1),
                spinItem['style']['display'] = 'none',
                spinItemName['style']['display'] = 'none',
                spinRespin['style']['display'] = 'none',
                spinUI['style']['display'] = 'block',
                cKr['position']['x'] = cKm,
                spinButton['style']['opacity'] = 0x1,
                spinText['style']['display'] = 'table-cell',
                spinHeader['innerHTML'] = 'SPIN',
                spinCost['innerHTML'] = '-' + cK6['price'] + 'KR',
                spinRespin['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27margin-left:-10px;text-shadow:none;vertical-align:sub;font-size:35px;\x27>refresh</i>\x20' + cK6['price'] + '\x20KR';
                for (var cAW = '<div\x20style=\x27font-size:50px;color:#fff\x27>' + cK6['name']['toUpperCase']() + '</div>', cAY = 0x0; cAY < cBS['store']['rarities']['length']; ++cAY)
                    (cBW = cBS['store']['rarities'][cAY])['noSpin'] || (cAW += '<div\x20style=\x27margin-top:5px;color:#fff\x27>' + cBW['name'] + '<span\x20style=\x27color:rgba(255,255,255,0.5)\x27>&emsp;' + cK6['rarities'][cAY] + '%</span><div\x20class=\x27colCub\x27\x20style=\x27background-color:' + cBW['color'] + '\x27></div></div>');
                spinInfo['innerHTML'] = cAW,
                cBV && (spinKR['innerHTML'] = cBV['funds'] + '\x20KR'),
                cAV && spinButton['click']();
            }
        }),
        spinRespin['onclick'] = function() {
            cKo && prizeWheel(cKi, !0x0);
        }
        ,
        spinButton['onclick'] = function(cAU) {
            cAU['stopPropagation'](),
            cAU['preventDefault'](),
            window['idleTimer'] = 0x0,
            cBR && !cKf && cKn && cBV && cBV['funds'] >= cK6['price'] ? (cKf = !0x0,
            cKn = !0x1,
            cBR['send']('spin', cKi),
            spinHeader['innerHTML'] = '',
            spinCost['innerHTML'] = cB5['t']('windows.store.purchasing'),
            cBM['play']('buy_1', 0.1)) : cKo && cAU['shiftKey'] && prizeWheel(cKi, !0x0);
        }
        ,
        spinUI['onclick'] = function(cAU) {
            showWindow(0xe),
            cBO['toggleMenuHider'](!0x0),
            spinUI['style']['display'] = 'none',
            cBR && cBR['send']('unbx'),
            cKo && cAU['shiftKey'] && prizeWheel(cKi, !0x0);
        }
        ,
        Object['defineProperty'](window, 'selectHostMap', {
            'writeable': !0x1,
            'value': function(cAU, cAV=null) {
                cK7 = cAU,
                cK8 = 'undefined' == cAV ? null : cAV,
                showWindow(0x8);
            }
        }),
        Object['defineProperty'](window, 'selectHostMod', {
            'writeable': !0x1,
            'value': function(cAU) {
                cK9 = cAU,
                showWindow(0x8);
            }
        }),
        Object['defineProperty'](window, 'openHostWindow', {
            'writeable': !0x1,
            'value': function(cAU) {
                cK7 = null,
                cK9 = null,
                cK8 = null,
                showWindow(0x8, cAU);
            }
        });
        var cL5, cL6 = !('true' != getSavedVal('krk_record'));
        function cL7(cAU, cAV) {
            try {
                mapUpResp && !cAV && (mapUpResp['innerHTML'] = cAU);
            } catch (cLa) {}
            try {
                modUpResp && cAV && (modUpResp['innerHTML'] = cAU);
            } catch (cLb) {}
        }
        window['enableRecord'] = function(cAU) {
            cL6 = cAU,
            saveVal('krk_record', cAU);
        }
        ,
        enableRecord(cL6),
        window['createClip'] = function() {
            if (cL6 && cBU && cBU['active'] && cL5['states']['length']) {
                for (var cAU = Object['assign']({}, cBS['map']['maps'][cBS['mapIndex']]), cAV = 0x0; cAV < cAU['objects']['length']; ++cAV)
                    cAU['objects'][cAV]['i'] = cAX['prefabIDS']['indexOf'](cAU['objects'][cAV]['i']),
                    cAU['objects'][cAV]['t'] = cAX['textureIDS']['indexOf'](cAU['objects'][cAV]['t']);
                var cAW = {
                    'id': 'clip_' + Date['now'](),
                    'mode': cBS['modeIndex'],
                    'map': cAU,
                    'states': []
                };
                for (cAV = 0x0; cAV < cL5['states']['length']; ++cAV)
                    if (cAV) {
                        var cAY = [];
                        cAY['push'](cL5['states'][cAV]['input']['data']),
                        cL5['states'][cAV]['players']['length'] && cAY['push'](cL5['states'][cAV]['players']),
                        cAW['states']['push'](cAY);
                    } else
                        cAW['states']['push'](cL5['states'][cAV]);
                downloadFile(cAW['id'] + '.txt', cAW);
            }
        }
        ,
        window['downloadFile'] = function(cAU, cAV) {
            var cAW = document['createElement']('a');
            cAW['setAttribute']('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON['stringify'](cAV))),
            cAW['setAttribute']('download', cAU),
            cAW['style']['display'] = 'none',
            document['body']['appendChild'](cAW),
            cAW['click'](),
            document['body']['removeChild'](cAW);
        }
        ,
        window['updateMapThumb'] = function() {
            var cAU = null;
            try {
                cAU = document['getElementById']('mapThumb')['files'][0x0];
            } catch (cLl) {}
            document['getElementById']('mapThumbName')['innerHTML'] = cAU ? cAU['name'] : cB5['t']('generic.failed');
        }
        ,
        window['selectMapThumb'] = function() {
            document['getElementById']('mapThumb')['click']();
        }
        ,
        window['uploadCustomMap'] = function() {
            mapUpResp && (mapUpResp['innerHTML'] = cB5['t']('generic.loading'));
            var cAU = null;
            try {
                cAU = document['getElementById']('mapThumb')['files'][0x0];
            } catch (cLn) {}
            if (cAU) {
                var cAV = new FileReader();
                cAV['readAsDataURL'](cAU),
                cAV['onload'] = function() {
                    return 0x28 < cBJ['thumbnailSize'](cAV['result']) ? void cL7(cB5['t']('thumbnail.upload.limit')) : void cBR['send']('uploadM', mapDataNew['value'], cAV['result']);
                }
                ,
                cAV['onerror'] = function() {
                    mapUpResp['innerHTML'] = cB5['t']('thumbnail.upload.error');
                }
                ;
            } else
                cBR['send']('uploadM', mapDataNew['value']);
        }
        ,
        window['updateModThumb'] = function() {
            var cAU = null;
            try {
                cAU = document['getElementById']('modThumb')['files'][0x0];
            } catch (cLq) {}
            document['getElementById']('modThumbName')['innerHTML'] = cAU ? cAU['name'] : cB5['t']('generic.failed');
        }
        ,
        window['selectModThumb'] = function() {
            document['getElementById']('modThumb')['click']();
        }
        ,
        window['uploadCustomMod'] = function() {
            modUpResp && (modUpResp['innerHTML'] = cB5['t']('generic.loading'));
            var cAU = null;
            try {
                cAU = document['getElementById']('modThumb')['files'][0x0];
            } catch (cLs) {}
            if (cAU) {
                var cAV = new FileReader();
                cAV['readAsDataURL'](cAU),
                cAV['onload'] = function() {
                    return 0x28 < cBJ['thumbnailSize'](cAV['result']) ? void cL7(cB5['t']('thumbnail.upload.limit'), 0x1) : void cBR['send']('uploadMo', pubModName['value'], pubModURL['value'], cAV['result']);
                }
                ,
                cAV['onerror'] = function() {
                    modUpResp['innerHTML'] = cB5['t']('thumbnail.upload.error');
                }
                ;
            } else
                cBR['send']('uploadMo', pubModName['value'], pubModURL['value']);
        }
        ,
        zip['workerScriptsPath'] = './libs/';
        var cLu = new FileReader();
        function cLv(cAU) {
            this['imgAsDataURL'] = '',
            this['process'] = function(cAV) {
                if (this['imgAsDataURL'] = URL['createObjectURL'](cAV),
                this['imgAsDataURL'] && cAU) {
                    try {
                        var cAW = new Image();
                        cAW['onload'] = function() {
                            cBL['updateTexture'](cAU['replace']('textures/', '')['replace']('.png', ''), this);
                        }
                        ,
                        cAW['src'] = this['imgAsDataURL'];
                    } catch (cLz) {}
                    cLS['close']();
                }
            }
            ;
        }
        function cLA(cAU) {
            this['filename'] = cAU;
            var cAV = this;
            this['process'] = function(cAU) {
                var cAW = URL['createObjectURL'](cAU);
                if (cAW) {
                    try {
                        var cAX = cAV['filename']['split']('/')[0x1];
                        if (0x0 <= cAX['indexOf']('ambient'))
                            for (var cAY = 0x1; 0x4 > cAY; ++cAY)
                                cBM['stop']('ambient_' + cAY);
                        cBM['sounds'][cAX] = new Howl({
                            'src': [cAW],
                            'format': 'mp3'
                        }),
                        cBM['sounds'][cAX + '3d'] = new Howl({
                            'src': [cAW],
                            'format': 'mp3'
                        }),
                        'ambient_1' == cAX && cBM['play']('ambient_1', 0.12, !0x0, 0x1);
                    } catch (cLH) {}
                    cLS['close']();
                }
            }
            ;
        }
        function cLI(cAU) {
            this['process'] = function(cAV) {
                if (cAU) {
                    try {
                        const cAW = new FileReader();
                        cAW['addEventListener']('loadend', cAV=>{
                            const cAW = cAV['srcElement']['result'];
                            cBL['updateMesh'](cAU['replace']('models/', '')['replace']('.obj', ''), cAW);
                        }
                        ),
                        cAW['readAsText'](cAV);
                    } catch (cLO) {}
                    cLS['close']();
                }
            }
            ;
        }
        cLu['onload'] = function(cAU) {
            var cAV = cAU['target']['result'];
            loadModPack(cAV);
        }
        ;
        var cLR, cLS = new function() {
            this['init'] = function(cAU, cAV) {
                this['numFiles'] = cAV,
                this['progress'] = 0x0,
                this['reader'] = cAU;
            }
            ,
            this['close'] = function() {
                this['reader'] && (this['progress']++,
                document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('mod.extracting', this['progress'], this['numFiles'])),
                this['numFiles'] === this['progress'] && (spriteIndex = 0x0,
                document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('generic.success')),
                this['reader']['close'](),
                this['reader'] = void 0x0));
            }
            ;
        }
        ();
        function cLV(cAU, cAV, cAW, cAX) {
            cCh = cAV,
            window['spectating'] = cAW,
            !cCh && cAW && (cCh = 0x1),
            cNw(cAU),
            cBO['toggleMenu'](!0x1),
            cPl['length'] = 0x0,
            cPR['length'] = 0x0,
            cBO['toggleGameUI'](!0x0),
            cBP['reset'](),
            cBT['reset'](),
            cMg(!0x1),
            cBS['players']['forcePos'](),
            cBS['players']['resetAim'](),
            cC9['length'] = 0x0,
            cCa['length'] = 0x0,
            cCb = null,
            cCg = 0x1e,
            window['loading'] = !0x1,
            window['idleTimer'] = 0x0,
            teamName['innerHTML'] = '',
            instructions['innerHTML'] = cBT['gamepad']['_connected'] ? cB5['t']('app.play.controller') : cB5['t']('app.play'),
            cBZ = null,
            cBO['toggleControlUI'](cBT['enabled']),
            cBS['updateUI'](),
            challIcon['src'] = cAX ? './img/skull_0.png' : './img/hp_0.png';
        }
        function cM0(cAU, cAV, cAW, cAX, cAY, cAZ, cB0, cB6, cBa, cBb) {
            if (cAZ['isFromQueue'] && window['history']['replaceState']({}, 'Krunker', '/'),
            cCv = !0x1,
            cB6 ? cB6['data'] && cBS['customMap'](cB6['data'], cB6['id'], cB6['creator'], null, !0x0) : cBS['map']['setMaps'](),
            cC7 = cAY,
            cC6 = cAY && cAY == cBR['socketId'],
            mapVote['innerHTML'] = '',
            mapVoteVal = 0x0,
            cAY && cB6 && null != cB6['id'] && (mapVote['innerHTML'] = '<i\x20id=\x27mapVoteD\x27\x20onclick=\x27voteMap(' + cB6['id'] + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27mapVoteU\x27\x20onclick=\x27voteMap(' + cB6['id'] + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i>'),
            cBS['applyConfig'](cAZ, cB6 && cB6['featured']),
            cBS['init'](cAU, cAV, cBb),
            cBS['setObjective'](cAX),
            (cBa = cBa || {})['dest'])
                for (var cBc = 0x0; cBc < cBa['dest']['length']; ++cBc)
                    cBS['destroyObj'](cBa['dest'][cBc]);
            if (cBa['flg'])
                for (cBc = 0x0; cBc < cBa['flg']['length']; ++cBc)
                    cBS['updateFlag'](...cBa['flg'][cBc]);
            if (cBa['pkups'])
                for (cBc = 0x0; cBc < cBa['pkups']['length']; ++cBc)
                    cBS['updatePickup'](...cBa['pkups'][cBc]);
            if (cBa['gates'])
                for (cBc = 0x0; cBc < cBa['gates']['length']; ++cBc)
                    cBS['updateGate'](...cBa['gates'][cBc]);
            if (cBa['zone'] && cBS['updateZone'](cBa['zone']),
            specNameTm0['innerHTML'] = teamNm1['innerHTML'] = 0x0 < cBS['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cBS['config']['nameTeam1'] : 'Team\x201',
            specNameTm1['innerHTML'] = teamNm2['innerHTML'] = 0x0 < cBS['config']['nameTeam1']['replace'](/\s/g, '')['length'] ? cBS['config']['nameTeam2'] : 'Team\x202',
            teamScores['style']['display'] = 'none',
            spec0['style']['display'] = 'none',
            spec1['style']['display'] = 'none',
            cBS['mode']['teams'] && cAW) {
                teamScores['style']['display'] = 'inline-block',
                spec0['style']['display'] = 'inline-block',
                spec1['style']['display'] = 'inline-block';
                var cBd = '';
                for (cBc = 0x0; cBc < cAW['length']; ++cBc)
                    cBd += '<div\x20class=\x27tScore\x27><div\x20id=\x27tScoreC' + cAW[cBc][0x0] + '\x27\x20class=\x27tScoreC\x27></div><span\x20class=\x27tScoreT\x27\x20id=\x27tScoreV' + cAW[cBc][0x0] + '\x27>' + cAW[cBc][0x1] + '</span></div>',
                    document['getElementById']('specScoreTm' + (cAW[cBc][0x0] - 0x1))['innerHTML'] = cAW[cBc][0x1];
                teamScores['innerHTML'] = cBd;
            }
            cB0 && '' != cB0 && loadModPack(cB0, !0x0);
            var cBe = 0x0
              , cBf = 0x0;
            for (cBc = 0x0; cBc < cBS['map']['manager']['objects']['length']; ++cBc)
                cBS['map']['manager']['objects'][cBc]['score'] && (cBe++,
                cBf += cBS['map']['manager']['objects'][cBc]['scoreP']);
            cBe ? (scoreZoneCount['style']['display'] = 'inline-block',
            scoreZoneCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>flag</i>\x20' + cBf) : scoreZoneCount['style']['display'] = 'none',
            cBS['config']['lives'] || cBS['mode']['lives'] ? (livesCount['style']['display'] = 'inline-block',
            livesCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px\x27>favorite</i>\x20<span\x20id=\x27livesDisp\x27\x20style=\x27color:rgba(255,255,255,0.6)\x27>' + (cBS['config']['lives'] || cBS['mode']['lives'] || 0x0) + '</span>') : livesCount['style']['display'] = 'none',
            cBO['setShowSpect'](cBS['config']['allowSpect']),
            cBO['setShowSelTeam'](cBS['config']['selTeam']),
            cCo = null,
            cBT['reset']();
            var cBh = cBS['map']['maps'][cAU];
            cBT['QopwyCmt'](cBh['camPos'][0x0], cBh['camPos'][0x1], cBh['camPos'][0x2]),
            cBT['DlBLfkPUll'](0x0, 0x0, 0x0),
            cBL['clearSprays'](),
            cBL['scene']['add'](cBT['object']),
            cBU = null,
            cBK['showObjective'] = !!cBS['mode']['objective'] && 0x0 < cBS['map']['manager']['objectives']['length'],
            killStreakHolder['innerHTML'] = '',
            bloodDisplay['style']['display'] = 'none',
            killsVal['innerHTML'] = 0x0,
            deathsVal['innerHTML'] = 0x0,
            cCe = 0x0,
            cDK(),
            cBT['masterLock'] = !0x1,
            instructions['innerHTML'] = cBT['gamepad']['_connected'] ? cB5['t']('app.play.controller') : cB5['t']('app.play');
        }
        function cMg(cAU) {
            window['locked'] = cAU,
            blocker['style']['display'] = cAU ? 'block' : 'none';
        }
        function cMi(cAU, cAV, cAW) {
            instructions['innerHTML'] = cBT['gamepad']['_connected'] ? cB5['t']('app.play.controller') : cB5['t']('app.play'),
            victoryText['innerHTML'] = cAV ? 'VICTORY' : 'DEFEAT',
            victorySub['src'] = './img/' + (cAV ? 'sub' : 'defeat') + '.png',
            cBO['toggleWindow'](!0x1, cBT['gamepad']['_connected']),
            cEo['endMessage']['val']['length'] && !cCv && (cBR['send']('c', cEo['endMessage']['val']),
            cCv = !0x0),
            cBU && cBU['active'] || window['spectating'] ? (cBO['showEndScreen'](),
            cCo = cAX['endAnim'],
            setTimeout(function() {
                cBR['connected'] && (cBT['disable'](),
                cMm(cAW));
            }, cAX['endAnim'])) : cAU && (cBT['disable'](),
            cBO['showEndScreen'](),
            cMm(cAW));
        }
        function cMm(cAU) {
            if (cAU && cAU['ed']['length']) {
                var cAV = ''
                  , cAW = cAU['mts']
                  , cAY = cAU['tms'];
                if (endTable['style']['top'] = '310px',
                matchVoteHolder['style']['display'] = 'inline-block',
                cBS['mode']['isRanked'])
                    matchVoteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x20buttonR\x27\x20style=\x27margin-right:10px\x27\x20onclick=\x27location.reload()\x27>Leave\x20Game</div>',
                    matchVoteHolder['innerHTML'] += '<div\x20class=\x27button\x20small\x27\x20onclick=\x27location\x20=\x20\x22/?autoQueue=true\x22\x27>Requeue</div>';
                else if (0x1 < cAW['length']) {
                    for (var cAZ = 0x0; cAZ < cAW['length']; ++cAZ) {
                        var cB0 = cAW[cAZ]['split'](',')
                          , cB5 = cBS['map']['modes'][parseInt(cB0[0x0])]
                          , cB6 = cBS['map']['maps'][parseInt(cB0[0x1])];
                        cB5 && cB6 && (cAV += '<div\x20class=\x22matchVote\x22\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20' + (0x0 == cAZ ? '\x20style=\x22padding-left:\x2010px;\x22\x20' : '') + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20onclick=\x22voteOnMatch(\x27' + cAW[cAZ] + '\x27)\x22>' + '<img\x20src=\x27.' + cBJ['versionifyUrl']('/img/' + (0x0 == parseInt(cB0[0x1]) && 'Burg' != cB6['name'] ? 'noimg' : 'maps/map_' + parseInt(cB0[0x1])) + '.png') + '\x27\x20class=\x27matchVoteThumb\x27><div\x20class=\x27matchVoteMap\x27>' + cB6['name'] + '</div><div\x20class=\x27matchVoteMode\x27>' + cB5['id']['toUpperCase']() + '</div><div\x20class=\x27matchVoteTotal\x27\x20id=\x27voteT' + cAW[cAZ] + '\x27>0</div></div>');
                    }
                    matchVoteHolder['innerHTML'] = cAV,
                    cAV['length'] && (endTable['style']['maxHeight'] = 'calc(100%\x20-\x20490px)'),
                    cAU['vo'] && updMatchVote(cAU['vo'], cAU['mts']);
                } else
                    matchVoteHolder['style']['display'] = 'none',
                    endTable['style']['top'] = '205px';
                cAY ? (teamTotal0['innerHTML'] = '<span\x20class=\x22teamTotalN0\x22>' + teamNm1['innerHTML'] + '</span>' + ('<span\x20class=\x22teamTotalScore\x22>' + (cAY[0x0][0x1] || 0x0) + '</span>'),
                teamTotal1['innerHTML'] = '<span\x20class=\x22teamTotalScore\x22>' + (cAY[0x1][0x1] || 0x0) + '</span>' + ('<span\x20class=\x22teamTotalN1\x22>' + teamNm2['innerHTML'] + '</span>'),
                teamTotal0['style']['display'] = 'inline-block',
                teamTotal1['style']['display'] = 'inline-block') : (teamTotal0['style']['display'] = 'none',
                teamTotal1['style']['display'] = 'none'),
                endTable['style']['display'] = 'inline-block',
                cAV = '<tr><th>Rank</th>';
                var cBa = cBS['mode']['endStats'] || cAX['endStats']
                  , cBb = cBa['length'];
                for (cAZ = 0x1; cAZ < cBb; ++cAZ)
                    cAV += '<th>' + cBJ['capFirst'](cBa[cAZ]) + '</th>';
                cAV += '<th></th></tr>';
                var cBc = 0x1;
                for (cAZ = 0x0; cAZ < cAU['ed']['length']; ) {
                    cBW = cBS['players']['findBySid'](cAU['ed'][cAZ]),
                    cAV += '<tr\x20style=\x27' + (cAZ + cBb >= cAU['ed']['length'] ? 'border-bottom:none' : '') + '\x27><td\x20style=\x27color:#fff\x27>' + cBc + '.</td>';
                    for (var cBd = 0x1; cBd < cBb; ++cBd)
                        cAV += '<td\x20' + (0x1 == cBd ? 'style=\x27color:' + (cBU && cBW && cBU['sid'] == cBW['sid'] ? '#fff\x27' : cBU && cBW && cBU['team'] && cBU['team'] == cBW['team'] ? 'rgba(255,255,255,0.6)\x27' : '#eb5656\x27') : '') + '>' + (cCW && 0x1 == cBd && cC4 ? cBJ['scrambleS'](cAU['ed'][cAZ + cBd] || 0x0) : cAU['ed'][cAZ + cBd] || 0x0) + (0x1 == cBd && cBW && cBW['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAX['verClans']['indexOf'](cBW['clan']) ? '#fbc02d' : '#fff') + '\x27>\x20[' + cBW['clan'] + ']<span>' : '') + '</td>';
                    cBc++,
                    cAZ += cBb;
                }
                endTable['innerHTML'] = cAV;
            } else
                endTable['style']['display'] = 'none';
        }
        function cMz(cAU, cAV, cAW) {
            cBS['playerSound'](cAU, cAV, cAW);
        }
        function cMD(cAU, cAV, cAW, cAX, cAY, cAZ=!0x0, cB0) {
            (cBW = cBS['players']['findBySid'](cAU)) && (cBW == cBU && cBM['play']('pick_0', 0.2),
            cBW['updateLoadout'](cBS, cAW, !0x0, ...cAV)),
            cAZ && cBS['updatePickup'](cAX, cAY, null, cB0);
        }
        window['loadUserMod'] = function(cAU, cAV, cAW) {
            cC8 ? (cC8 = !0x1,
            selectHostMod(cAV)) : (showWindow(0x4),
            document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('generic.loading')),
            loadModPack(cAV, !0x0, cAU, cAW));
        }
        ,
        window['loadModURL'] = function() {
            modURL['value'] && loadModPack(modURL['value'], !0x0);
        }
        ,
        window['loadModPack'] = function(cAU, cAV, cAW, cAX) {
            if (cBJ['isDropbox'](cAU) && !(-0x1 < cAU['indexOf']('&')) || !cAV) {
                if (!cCc)
                    return void (document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('mod.disabled')));
                modVote['innerHTML'] = '',
                cAV && cCA(cAU),
                null != cAW && null != cAX && (cLR = 0x0,
                modVote['innerHTML'] = '<i\x20id=\x27modVoteD\x27\x20onclick=\x27voteMod(' + cAX + ',-1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_down</i><i\x20id=\x27modVoteU\x27\x20onclick=\x27voteMod(' + cAX + ',1)\x27\x20class=\x27material-icons\x20vote\x27>thumb_up</i></br>' + cAW + '\x20Mod');
                try {
                    cAU = cAU['replace']('dropbox.com', 'dl.dropboxusercontent.com')['replace'](/&/g, 'nope');
                    var cAY = ''
                      , cAZ = cAV ? new zip['HttpReader'](cAU) : new zip['Data64URIReader'](cAU);
                    zip['createReader'](cAZ, function(cAU) {
                        cAU['getEntries'](function(cAV) {
                            if (cAV['length']) {
                                cLS['init'](cAU, cAV['length']);
                                for (var cAW, cAX = 0x0; cAX < cAV['length']; cAX++)
                                    (cAW = cAV[cAX])['directory'] ? cLS['close']() : 'textures' == (cAY = cAW['filename']['split']('/')[0x0]) ? cAW['getData'](new zip['BlobWriter']('image/png'), new cLv(cAW['filename'])['process'], function() {}) : 'sound' == cAY ? cAW['getData'](new zip['BlobWriter']('audio/mp3'), new cLA(cAW['filename']['replace']('.mp3', ''))['process'], function() {}) : 'models' == cAY && cAW['getData'](new zip['BlobWriter']('application/x-tgif'), new cLI(cAW['filename'])['process'], function() {});
                            }
                        });
                    }, function() {
                        document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('mod.error'));
                    });
                } catch (cMY) {
                    document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('mod.error'));
                }
            }
        }
        ,
        cEo['autoLoadLast']['val'] && cCz['length'] && loadModPack(cCz, !0x0),
        window['loadMod'] = function() {
            if (modInput['files'] && modInput['files'][0x0]) {
                var cAU = modInput['files'][0x0];
                'zip' == cAU['name']['split']('.')['pop']()['toLowerCase']() ? (document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('mod.loading')),
                cLu['readAsDataURL'](cAU)) : document['getElementById']('modLInfo') && (document['getElementById']('modLInfo')['innerHTML'] = cB5['t']('mod.invalid'));
            }
        }
        ,
        window['joinGame'] = function() {
            let cAU = gameURL['value'] || '';
            cAU['match'](/^(https?:\/\/)?(www\.)?(.+)krunker\.io(|\/|\/\?game=.+)$/) ? location = cAU : cAU['match'](/^([A-Z]+):(\w+)$/) && window['switchServer'](cAU);
        }
        ,
        window['toggleTeam'] = function(cAU) {
            cGy = cAU ? 0x2 : 0x1,
            teamNm1['style']['color'] = cAU ? 'rgba(255,255,255,0.5)' : '#fff',
            teamNm2['style']['color'] = cAU ? '#fff' : 'rgba(255,255,255,0.5)';
        }
        ,
        window['updMatchVote'] = function(cAU, cAV) {
            for (var cAW = 0x0; cAW < cAV['length']; ++cAW)
                if (cBW = document['getElementById']('voteT' + cAV[cAW])) {
                    var cAX = 0x0;
                    if (cAU)
                        for (var cAY in cAU)
                            cAU['hasOwnProperty'](cAY) && cAV[cAW] == cAU[cAY] && cAX++;
                    cBW['innerHTML'] = cAX;
                }
        }
        ,
        window['voteOnMatch'] = function(cAU) {
            document['querySelectorAll']('div[id^=\x22voteT\x22')['forEach'](cAV=>{
                cAV['style']['color'] = cAV['id'] == 'voteT' + cAU ? 'rgba(251,\x20192,\x2045,\x201)' == cAV['style']['color'] ? 'rgba(255,\x20255,\x20255,\x200.7)' : 'rgba(251,\x20192,\x2045,\x201)' : 'rgba(255,\x20255,\x20255,\x200.7)';
            }
            ),
            cBR['send']('maVote', cAU);
        }
        ,
        window['voteMod'] = function(cAU, cAV) {
            if (cBV) {
                var cAW = document['getElementById']('modVoteU')
                  , cAX = document['getElementById']('modVoteD')
                  , cAY = 0x0;
                0x1 == cAV ? (cAY = 0x1,
                0x1 == cLR && (cAY = 0x0)) : -0x1 == cAV && (cAY = -0x1,
                -0x1 == cLR && (cAY = 0x0)),
                cLR = cAY,
                cAW['className'] = 0x1 == cLR ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
                cAX['className'] = -0x1 == cLR ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
                cBR['send']('vote', cBV['id'], loginToken, cAU, cAY, 0x1);
            }
        }
        ,
        window['voteMap'] = function(cAU, cAV) {
            if (cBV) {
                var cAW = document['getElementById']('mapVoteU')
                  , cAX = document['getElementById']('mapVoteD')
                  , cAY = 0x0;
                0x1 == cAV ? (cAY = 0x1,
                0x1 == mapVoteVal && (cAY = 0x0)) : -0x1 == cAV && (cAY = -0x1,
                -0x1 == mapVoteVal && (cAY = 0x0)),
                mapVoteVal = cAY,
                cAW['className'] = 0x1 == mapVoteVal ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
                cAX['className'] = -0x1 == mapVoteVal ? 'material-icons\x20vote\x20a' : 'material-icons\x20vote',
                cBR['send']('vote', cBV['id'], loginToken, cAU, cAY);
            }
        }
        ,
        window['followPlayer'] = function(cAU, cAV) {
            cAV && (cAV['style']['visibility'] = 'hidden'),
            cBR['send']('fo', cAU);
        }
        ;
        var cNl = getSavedVal('sprayindex') || 0x0;
        function cNm(cAU, cAV, cAW, cAX, cAY, cAZ, cB0) {
            cBL['addSpray'](cAU, cAV, cAW, cAX, cAY, cAZ, cB0, cBS['sprays'][cAV]['opacity']);
        }
        function cNu(cAU) {
            0x0 == cAU ? cBM['play']('siren_0') : 0x1 == cAU && (cBM['play']('nuke_0'),
            nukeFlash['style']['display'] = 'block',
            nukeFlash['style']['opacity'] = 0x1,
            cBL['shake'](0x1));
        }
        function cNw(cAU, cAV) {
            0x1 == cAV ? endTimer['innerHTML'] = cB5['t']('timer.end', cAU) : 0x2 == cAV ? endTimer['innerHTML'] = cB5['t']('generic.matchover') : (timerVal['innerHTML'] = cAU,
            specTimer['innerHTML'] = cAU,
            timerDisplay['style']['display'] = '0:00' == cAU ? 'none' : 'inline-block');
        }
        function cNz(cAU) {
            for (var cAV, cAW = 0x0; cAW < cAU['length']; ) {
                if (cAV = cAU[cAW] == cBR['socketId'],
                (cBW = cBS['players']['add'](cAU[cAW], cAU[cAW + 0x1], cAU[cAW + 0x2], cAU[cAW + 0x3], cAU[cAW + 0x4], cAU[cAW + 0x5], cAU[cAW + 0x6], cAU[cAW + 0xc], cAU[cAW + 0xd], cAU[cAW + 0xe], cAU[cAW + 0x13], cAU[cAW + 0x14], cAU[cAW + 0xf], cAU[cAW + 0x15], cAU[cAW + 0x9], cAV, cAU[cAW + 0x10], cAU[cAW + 0x11]))['health'] = null == cAU[cAW + 0x7] ? cBW['maxHealth'] : cAU[cAW + 0x7],
                cBW['maxHealth'] = cAU[cAW + 0x8],
                cBW['hpChase'] = cBW['health'] / cBW['maxHealth'],
                cBW['team'] = cAU[cAW + 0x9],
                cBW['level'] = cAU[cAW + 0xa],
                cBW['clan'] = cAU[cAW + 0xb],
                cBW['xDire'] = cAU[cAW + 0x12],
                cAV) {
                    if (cBU = cBW,
                    cBS['mode']['showTeam'] && (teamName['innerHTML'] = cBU['team']),
                    cBU['team']) {
                        var cAX = document['getElementById']('tScoreC' + cBU['team']);
                        cAX && (cAX['className'] = 'tScoreC\x20you');
                    }
                    cDL(),
                    botRightHider['style']['display'] = 'prop' == cBU['team'] ? 'none' : 'block',
                    propInstruct['style']['display'] = 'prop' == cBU['team'] ? 'block' : 'none',
                    cBT['object']['rotation']['y'] = cBU['xDire'],
                    cBT['xDr'] = cBT['object']['rotation']['y'] % Math['PI2'];
                }
                cPA(cBW['health'], cBW['sid'], null, null),
                cAW += 0x16;
            }
            cNE();
        }
        function cNE() {
            if (window['spectating']) {
                for (var cAU = ['', ''], cAV = 0x0; cAV < cBS['players']['list']['length']; ++cAV)
                    if (!(cBW = cBS['players']['list'][cAV])['isYou']) {
                        var cAW = cBS['mode']['teams'] ? cBW['team'] - 0x1 : 0x1 & cAV;
                        cAU[cAW] += '<div\x20class=\x27specPlayerHolder' + cAW + '\x27><img\x20src=\x27./textures/classes/icon_' + (cBW['classIndex'] || 0x0) + '.png\x27\x20class=\x27specPlayerIcon' + (cBW['active'] ? '' : '\x20silhouette') + '\x27><div\x20class=\x27specPlayerName\x27>' + cBW['name'] + '</div></div>';
                    }
                document['getElementById']('specTeamHolder0')['innerHTML'] = cAU[0x0],
                document['getElementById']('specTeamHolder1')['innerHTML'] = cAU[0x1];
            }
        }
        function cNI(cAU) {
            if (cBR['send']('p'),
            cBU) {
                if (cBU['x'] = cAU[0x1],
                cBU['y'] = cAU[0x2],
                cBU['z'] = cAU[0x3],
                cBU['xVel'] = cAU[0x4],
                cBU['yVel'] = cAU[0x5],
                cBU['zVel'] = cAU[0x6],
                cBU['onGround'] = cAU[0x7],
                cBU['didJump'] = cAU[0x8],
                cBU['onLadder'] = cAU[0x9],
                cBU['aimVal'] = cAU[0xa],
                cBU['crouchVal'] = cAU[0xb],
                cBS['players']['swapWeapon'](cBU, 0x0, !0x1, cAU[0xc], void 0x0, !0x0),
                cBU['slideTimer'] = cAU[0xd],
                cBU['canSlide'] = cAU[0xe],
                cBU['onTerrain'] = cAU[0xf],
                cAU[0x10]) {
                    var cAV = cCk != cAU[0x10];
                    cCk = cAU[0x10],
                    cAV && function() {
                        var cAU = '#9eeb56';
                        0x96 <= cCk ? cAU = '#ff4b42' : 0x32 <= cCk && (cAU = '#ffd542');
                        var cAV = -0x1 == cCk ? '-' : cCk;
                        pingDisplay['innerHTML'] = cAV + '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cAU + '\x27>signal_cellular_alt</i>',
                        menuPingDisplay['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:' + cAU + '\x27>signal_cellular_alt</i>\x20' + cAV;
                    }();
                }
                for (var cAW = 0x0; cAW < cBT['tmpInputs']['length']; )
                    cBT['tmpInputs'][cAW][0x0] <= cAU[0x0] ? cBT['tmpInputs']['splice'](cAW, 0x1) : (cBU['procInputs'](cBT['tmpInputs'][cAW], cBS, !0x0),
                    cAW++);
            }
        }
        function cNO() {
            cBR['send']('po');
        }
        function cNP(cAU) {
            cAU;
        }
        function cNR() {
            if (!cBS['singlePlayer'] && (cBU && cBU['active'] || spectating))
                for (var cAU = 0x0; cAU < cBS['players']['list']['length']; ++cAU)
                    (cBW = cBS['players']['list'][cAU])['active'] && cBW['objInstances'] && cBW != cBU && (cBW['inView'] = !0x0,
                    !spectating && !(cCh && cCh == cBW['team']) && !(cCh && cCh != cBW['team'] && cBS['mode']['teamSee'] && cBS['mode']['teamSee'][0x0] == cCh && cBS['mode']['teamSee'][0x1] == cBW['team']) && (cBS['config']['nameTags'] || cBS['mode']['hideNames'] || null != cBS['canSee'](cBU, cBW['x'], cBW['y'], cBW['z'])) && (cBW['inView'] = !0x1),
                    (0x1 == cEo['hideNames']['val'] && cCh && cCh != cBW['team'] || 0x2 == cEo['hideNames']['val'] && cCh && cCh == cBW['team'] || 0x3 == cEo['hideNames']['val']) && (cBW['inView'] = !0x1),
                    cBS['players']['toggleLOD'](cBW, null == cBS['canSee'](cBL['camera']['getWorldPosition'](), cBW['x'], cBW['y'], cBW['z'], 0xa)));
        }
        function cNT(cAU) {
            'wt' == cAU && (cAU = cB5['t']('player.waiting')),
            gameMessage['innerHTML'] = cAU || '',
            specGameMessage['innerHTML'] = cAU || '';
        }
        function cNV(cAU, cAV) {
            (cBW = cBS['players']['findBySid'](cAU)) && (cBW['team'] = cAV,
            cBW == cBU && (cCh = cAV,
            cBS['mode']['showTeam'] && (teamName['innerHTML'] = cCh)));
        }
        function cNY(cAU) {
            cBS['players']['hideAll']();
            for (var cAV = 0x0; cAV < cAU['length']; )
                (cBW = cBS['players']['findBySid'](cAU[cAV])) && cBW != cBU && (cBW['objInstances']['visible'] = !cBW['lodActive'],
                cBW['latestData'] = !0x0,
                cBW['forcePos'] ? (cBW['x'] = cAU[cAV + 0x1],
                cBW['y'] = cAU[cAV + 0x2],
                cBW['z'] = cAU[cAV + 0x3],
                cBW['xDire'] = cAU[cAV + 0x4],
                cBW['yDire'] = cAU[cAV + 0x5],
                cBW['interpolate'] = !0x1,
                cBW['forcePos'] = !0x1) : (cBW['dt'] = 0x0,
                cBW['x1'] = cBW['x'],
                cBW['x2'] = cAU[cAV + 0x1],
                cBW['y1'] = cBW['y'],
                cBW['y2'] = cAU[cAV + 0x2],
                cBW['z1'] = cBW['z'],
                cBW['z2'] = cAU[cAV + 0x3],
                cBW['xDir1'] = cBW['xDire'],
                cBW['xDir2'] = cAU[cAV + 0x4],
                cBW['yDir1'] = cBW['yDire'],
                cBW['yDir2'] = cAU[cAV + 0x5],
                cBW['interpolate'] = !0x0),
                cBW['onGround'] = cAU[cAV + 0x6],
                cBW['crouchVal'] = cAU[cAV + 0x7],
                cBS['players']['swapWeapon'](cBW, 0x0, !0x1, cAU[cAV + 0x8])),
                cAV += 0x9;
        }
        function cO1(cAU) {
            cBS['players']['remove'](cAU);
        }
        function cO3(cAU, cAV, cAW, cAY, cAZ, cB0) {
            if (cBW = cBS['players']['findBySid'](cAU),
            cBX = cBS['players']['findBySid'](cAW),
            cBW) {
                if (cBS['players']['kill'](cBW),
                cBW['isYou']) {
                    deathsVal['innerHTML'] = cAV || 0x0;
                    var cB6 = '';
                    if (cBX) {
                        cBW != cBX && (cBT['KjFgF'](cBX['x'], cBX['y'] + cBX['height'] - cAX['cameraHeight'], cBX['z']),
                        cBX['interpolate'] = !0x1,
                        cBX['inView'] = !0x0),
                        cB6 = '<img\x20id=\x27kCProfile\x27\x20src=\x27./textures/classes/icon_' + cBX['classIndex'] + '.png\x27\x20/>',
                        cB6 += '<div\x20id=\x27kCName\x27>' + (cBX ? cCW && cC4 ? cBJ['scrambleS'](cBX['name']) : cBX['name'] : 'You') + (cBX['clan'] ? '<span\x20style=\x27color:' + (0x0 <= cAX['verClans']['indexOf'](cBX['clan']) ? '#fbc02d' : 'rgba(255,255,255,0.3)') + '\x27>\x20[' + cBX['clan'] + ']</span>' : '') + '</div>';
                        var cBa = cBX['loadout']['indexOf'](cAY[0x0])
                          , cBb = null == cBX['skins'][cBa] ? null : cBX['skins'][cBa];
                        null != cBb && (cBb = cBS['store']['skins'][cBb]);
                        var cBc = cBb ? cBS['store']['rarities'][cBb['rarity']]['color'] : 'rgba(255,255,255,0.7)'
                          , cBd = cBb ? cBb['name'] : cBS['weapons'][cAY[0x0]]['name'];
                        'Combat\x20Knife' == cBd && 0x0 <= cBX['meleeIndex'] && cBS['store']['skins'][cBX['meleeIndex']] && (cBd = cBS['store']['skins'][cBX['meleeIndex']]['name'],
                        cBc = cBS['store']['rarities'][cBS['store']['skins'][cBX['meleeIndex']]['rarity']]['color']),
                        cB6 += '<br/><div\x20id=\x27kCInfo\x27\x20style=\x27color:' + cBc + '\x27>[' + cBd + ']\x20' + (cAY[0x1] ? '<span\x20id=\x27kCInfoS\x27>+' + cAY[0x1] + '</span>' : '') + '</div>';
                    }
                    killCardHolder['firstChild']['data'] = cBX ? cB5['t']('player.killed') : cB5['t']('player.died'),
                    killCard['style']['display'] = cBX ? 'inline-block' : 'none',
                    killCard['innerHTML'] = cB6,
                    cBO['toggleGameUI'](!0x1),
                    setTimeout(function() {
                        cDK();
                    }, cAX['deathDelay']);
                }
                if (!cB0 && cCq) {
                    var cBe = cBW == cBU ? '<span\x20style=\x27color:#fff\x27>You</span>' : '<span\x20style=\x27color:' + (cCh && cCh == cBW['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + (cCW && cC4 ? cBJ['scrambleS'](cBW['name']) : cBW['name']) + '</span>'
                      , cBf = cBX == cBU ? '<span\x20style=\x27color:#fff\x27>You</span>' : cBX ? '<span\x20style=\x27color:' + (cCh && cCh == cBX['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + (cCW && cC4 ? cBJ['scrambleS'](cBX['name']) : cBX['name']) + '</span>' : '';
                    cBX ? function(cAU, cAV, cAW, cAX) {
                        cCW && cC4 && (cAX = cC4['clean'](cAX),
                        cAW = cBJ['scrambleS'](cAW));
                        var cAY = cBS['weapons'][null == cAV['weaponId'] ? cAU['loadout'][cAU['weaponIndex']] : cAV['weaponId']];
                        for (chatList['innerHTML'] += '<div\x20class=\x27chatItem\x27\x20style=\x27word-break:break-all;overflow-wrap:break-word;\x27><span\x20class=\x27chatMsg\x27>' + cAW + (null == cAV['streak'] ? '<img\x20style=\x27opacity:0.7;margin-right:' + (cAY['melee'] && 0x0 == (cBS['store']['skins'][cAU['meleeIndex']] && cBS['store']['skins'][cAU['meleeIndex']]['id'] || 0x0) ? '5' : cAY['icnPad'] || 0x0) + 'px;' + (cAY['melee'] ? 'margin-bottom:-12px' : '') + '\x27\x20class=\x27weaponChatIcon\x27\x20src=\x27' + (cAY['melee'] ? './textures/melee/icon_' + (cBS['store']['skins'][cAU['meleeIndex']] && cBS['store']['skins'][cAU['meleeIndex']]['id'] || 0x0) : './textures/weapons/' + cAY['icon']) : '<img\x20class=\x27streakChatIcon\x27\x20src=\x27./img/streaks/' + cAV['streak']) + '.png\x27\x20/>' + cAX + '</span></div><br/>'; 0xfa <= chatList['scrollHeight']; )
                            chatList['removeChild'](chatList['childNodes'][0x0]);
                    }(cBX, cAZ, cBf, cBe) : cPW(null, cBe + '\x20committed\x20' + cAX['suicides'][cBJ['randInt'](0x0, cAX['suicides']['length'] - 0x1)], !0x0);
                }
                cNE();
            }
        }
        function cOm(cAU, cAV) {
            if (cBU) {
                cAV ? cBU['streaks'][cAU] ? cBU['streaks'][cAU]['cnt'] = cAV : cBU['streaks'][cAU] = {
                    'cnt': cAV,
                    'streak': cBS['streaks'][cAU]
                } : cBU['streaks'][cAU] = null;
                for (var cAW = '', cAX = 0x0; cAX < cBS['streaks']['length']; ++cAX)
                    cBU['streaks'][cAU] && (cAW += '<div\x20class=\x27killStreakItem\x27\x20style=\x27background-image:\x20url(&quot;./img/streaks/' + cAX + '.png&quot;)\x27><span>[' + cBJ['getKeyName'](cBT['streakKeys'][cAX]) + ']</span><div\x20class=\x27killStreakCnt\x27>x' + cBU['streaks'][cAU]['cnt'] + '</div></div>');
                killStreakHolder['innerHTML'] = cAW;
            }
        }
        function cOr(cAU, cAV) {
            if (cBW = cBS['players']['findBySid'](cAU)) {
                var cAW = cBW == cBU ? '<span\x20style=\x27color:#fff\x27>You\x27re</span>' : '<span\x20style=\x27color:' + (cCh && cCh == cBW['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cBW['name'] + '</span>\x20is';
                cPW(null, cB5['t']('player.killstreak', cAW, cAV), !0x0);
            }
        }
        function cOv(cAU, cAV, cAW) {
            (cBW = cBS['players']['findBySid'](cAU),
            cBX = cBS['players']['findBySid'](cAV),
            cBW) && cPW(null, (cBW == cBU ? '<span\x20style=\x27color:#fff\x27>You</span>' : '<span\x20style=\x27color:' + (cCh && cCh == cBW['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cBW['name'] + '</span>') + '\x20' + cAW + '\x20' + (cBX == cBU ? '<span\x20style=\x27color:#fff\x27>You</span>' : cBX ? '<span\x20style=\x27color:' + (cCh && cCh == cBX['team'] ? '#9eeb56' : '#eb5656') + '\x27>' + cBX['name'] + '</span>' : ''), !0x0);
        }
        Object['defineProperty'](window, 'selectSpray', {
            'writeable': !0x1,
            'value': function(cAU) {
                saveVal('sprayindex', cAU),
                cNl = cAU,
                showWindow(0x3);
            }
        });
        var cOA = null
          , cOB = 0x0;
        function cOC(cAU, cAV) {
            if (cOA = cAU,
            cOB = cAV,
            cAU) {
                for (var cAW = 0x1, cAY = '', cAZ = 0x0; cAZ < cAU['length']; cAZ += 0x6)
                    cAY += '<div\x20class=\x27leaderItem\x27>',
                    cAY += '<div\x20class=\x27leaderCounter\x27>' + cAW + '.</div>',
                    cAY += cAU[cAZ + 0x5] ? '\x20<i\x20class=\x27material-icons\x27\x20style=\x27color:#40C4FF;margin-top:4px;font-size:25px\x27>check_circle</i>' : '',
                    cAY += '<div\x20class=\x27leaderName' + (cBU && cAU[cAZ] == cBU['sid'] ? 'M' : cCh && cCh == cAU[cAZ + 0x2] ? 'F' : '') + '\x27>' + (cCW ? cBJ['scrambleS'](cAU[cAZ + 0x1]) : cAU[cAZ + 0x1]) + (cAU[cAZ + 0x4] ? '<span\x20style=\x27color:' + (0x0 <= cAX['verClans']['indexOf'](cAU[cAZ + 0x4]) ? '#fbc02d' : '#fff') + '\x27>\x20[' + cAU[cAZ + 0x4] + ']</span>' : '') + '</div>',
                    cAY += '<div\x20class=\x27leaderScore\x27>' + cBJ['formatNum'](cAU[cAZ + 0x3], 0x2) + '</div>',
                    cAY += '</div>',
                    cAW++;
                leaderContainer && (leaderContainer['innerHTML'] = cAY),
                0x1 >= cAW && (leaderContainer['innerHTML'] = cB5['t']('leaderboard.empty')),
                spectCount['style']['display'] = cAV ? 'inline-block' : 'none',
                spectCount['innerHTML'] = '<i\x20class=\x27material-icons\x27\x20style=\x27color:#fff;font-size:35px;margin-right:8px\x27>visibility</i>' + cAV;
            }
        }
        function cOI(cAU, cAV, cAW, cAY, cAZ, cB0, cB5) {
            if (cBU && cBU['active'] || window['spectating']) {
                if (cBW = cBS['players']['findBySid'](cAU)) {
                    var cB6 = cBW['y'] + cBW['height'] - cAX['cameraHeight'] - cBW['crouchVal'] * cAX['crouchDst']
                      , cBa = cBJ['getDistance3D'](cBW['x'], cB6, cBW['z'], cAV, cAW, cAY)
                      , cBb = cBJ['getDirection'](cBW['z'], cBW['x'], cAY, cAV)
                      , cBc = cBJ['getDirection'](cBJ['getDistance'](cBW['x'], cBW['z'], cAV, cAY), cAW, 0x0, cB6);
                    cBN['physObj'](cBW['x'], cB6, cBW['z'], cBb, cBc, cBa, cB5, 0x0);
                }
                null != cAZ && null == cBS['canSee'](cBU, cAV, cAW, cAY) && (cBN['effect'](cAV, cAW, cAY, cAZ, cB0, 0x0),
                cBU && cBM['play3Dv']('rico_' + cBJ['randInt'](0x1, 0x2), cAV, cAW, cAY, 0x37, 0.55, cBJ['randFloat'](0.7, 1.1), cBU));
            }
        }
        function cOU(cAU, cAV, cAW, cAX, cAY, cAZ, cB0) {
            var cB5 = cBS['projectiles']['types'][cAZ];
            cBN['physObj'](cAU, cAV, cAW, cAX, cAY, cBS['projectiles']['types'][cAZ]['range'], !0x1, null, null, cB5, cB0);
        }
        function cP3(cAU) {
            cBN['disablePhys'](cAU);
        }
        function cP5(cAU, cAV, cAW, cAY) {
            if (cBU || window['spectating']) {
                cBW = cBL['camera']['getWorldPosition']();
                var cAZ = 0x1 - cBJ['getDistance3D'](cAU, cAV, cAW, cBW['x'], cBW['y'], cBW['z']) / cAX['explosionRange'];
                0x0 < cAZ && cBL['shake'](0.14 * cAZ),
                cBM['play3D']('explosion', cAU, cAV, cAW, 0x1, cBJ['randFloat'](0.9, 1.1)),
                cBN['ExplosionManager']['explodeAt'](cAU, cAV, cAW, 0.08 * cAY);
            }
        }
        function cPb(cAU, cAV) {
            var cAW = document['getElementById']('tScoreV' + cAU);
            cAW && (cAW['innerHTML'] = cAV);
            var cAX = document['getElementById']('specScoreTm' + (cAU - 0x1));
            cAX && (cAX['innerHTML'] = cAV);
        }
        function cPg(cAU) {
            cAU && (cCe += cAU,
            cBP['animateText'](scoreText, (0x0 < cCe ? '+' : '') + cCe, 0x64 * cCx, 0.38, 0x44c, 0x64, 0x0, function() {
                cCe = 0x0;
            }),
            cBU['score'] += cAU);
        }
        function cPi() {
            cCy && cBP['animateText'](checkText, cB5['t']('popup.checkpoint'), 0x4b, 0.38, 0x44c, 0x64, 0x0, null);
        }
        function cPj(cAU) {
            (cBW = document['getElementById']('livesDisp')) && (cBW['innerHTML'] = cAU);
        }
        var cPl = [];
        function cPm(cAU, cAV, cAW) {
            cPr(cAU),
            cAV && cBM['play']('headshot_0'),
            killsVal['innerHTML'] = cAW;
        }
        function cPq() {
            cPr(['Assist', cAX['assistScore']]);
        }
        function cPr(cAU) {
            if (cAU) {
                for (var cAV = 0x0 == cPl['length'], cAW = 0x0; cAW < cAU['length']; ++cAW)
                    '' == cAU[cAW] ? cAW++ : cPl['push'](cAU[cAW]);
                cAV && function cAU(cAV) {
                    !cCy || 0x0 < cPl['length'] && cBP['animateText'](chalName, '<span\x20class=\x27cTxt\x27>' + cPl[0x0] + '</span>' + (cPl[0x1] ? '<div\x20id=\x27chalScore\x27\x20style=\x27color:' + cEo['scoreColor']['val'] + '\x27>+' + cPl[0x1] + '</div>' : ''), 0x82, 0.4, cAX['medalAnim'], 0x64, cAV, function() {
                        cPl['splice'](0x0, 0x2),
                        cAU(0x0);
                    });
                }(cAX['medalDelay']);
            }
        }
        function cPw(cAU, cAV) {
            (cBW = cBS['players']['findBySid'](cAU)) && cBS['players']['updateProp'](cBW, cAV, !0x0);
        }
        var cPz = 0x0;
        function cPA(cAU, cAV, cAW, cAY) {
            if ((cBU || spectating) && (cBW = null == cAV || null == cAV ? cBU : cBS['players']['findBySid'](cAV))) {
                cBW['health'] = cAU,
                cBW['health'] > cBW['maxHealth'] && (cBW['maxHealth'] = cBW['health']);
                var cAZ = cAU / cBW['maxHealth'];
                if (cBW == cBU && cBU) {
                    healthValue['innerHTML'] = cAU + '\x20<span\x20id=\x27maxHP\x27>|\x20' + cBW['maxHealth'] + '</span>';
                    for (var cB0 = '', cB5 = cBS['classes'][cBU['classIndex']]['segs'], cB6 = cB5 * cAZ, cBa = cB6, cBb = 0x0; cBb < cB5; ++cBb)
                        cB0 += '<div\x20class=\x27healthBarSeg\x27><div\x20class=\x27hpBSeg\x27\x20style=\x27width:' + 0x64 * Math['max'](0x0, Math['min'](0x1, cBa)) + '%;background-color:' + (0x3 >= cB6 ? cEo['hudHealthLow']['val'] : cEo['hudHealthHigh']['val']) + '\x27></div></div>',
                        cBa -= 0x1;
                    healthBar['innerHTML'] = cB0,
                    bloodDisplay['style']['display'] = 0.9 >= cAZ ? 'block' : 'none',
                    bloodDisplay['style']['opacity'] = 0x1 - cAZ / 0.9,
                    cAU < cPz && (null != cAW && null != cAW && function(cAU, cAV) {
                        for (var cAW = null, cAY = 0x0; cAY < cPR['length']; ++cAY)
                            if (!cPR[cAY]['life']) {
                                cAW = cPR[cAY];
                                break;
                            }
                        cAW || (cAW = {},
                        cPR['push'](cAW)),
                        cAW['life'] = cAX['hitLife'],
                        cAW['x'] = cAU,
                        cAW['z'] = cAV;
                    }(cAW, cAY),
                    cBM['play']('impact_0', 0.8)),
                    cPz = cAU;
                }
            }
        }
        var cPP, cPQ, cPR = [];
        function cPS(cAU, cAV) {
            if (cBM['play']('hit_0', 3.1),
            cBP['animateDiv'](hitmarker, 0x15e, 0x64, 0x69),
            null != cAU && cAV) {
                var cAW = cBS['players']['findBySid'](cAU);
                cAW && cBK['dmgVal'](cAW['x'], cAW['y'], cAW['z'], cAV);
            }
        }
        function cPW(cAU, cAV, cAW) {
            if (cAW || cCr)
                for (cCW && cC4 && (cAV = cC4['clean'](cAV),
                cAU = cBJ['scrambleS'](cAU)),
                chatList['innerHTML'] += cAW ? '<div\x20class=\x27chatItem\x27><span\x20class=\x27chatMsg\x27>' + cAV + '</span></div><br/>' : '<div\x20class=\x27chatItem\x27>' + (cAU || 'unknown') + ':\x20<span\x20class=\x27chatMsg\x27>' + cAV + '</span></div><br/>'; 0xfa <= chatList['scrollHeight']; )
                    chatList['removeChild'](chatList['childNodes'][0x0]);
        }
        function cQ0() {
            if (cCl = Date['now'](),
            cCm = cCl - cCn,
            cCf && Math['ceil'](0x3e8 / cCf) > cCm)
                setTimeout(cQ0, 0x0);
            else {
                if (cCm = Math['min'](cCm, cAX['dltMx']),
                cCn = cCl,
                function() {
                    if (cEo['showFPS']['val']) {
                        for (; 0x0 < cG4['length'] && cG4[0x0] <= cCl - 0x3e8; )
                            cG4['shift']();
                        cG4['push'](cCl),
                        cG5 = cG4['length'],
                        0x64 <= cCl - cG6 && (cG6 = cCl,
                        ingameFPS['textContent'] = cG5,
                        menuFPS['textContent'] = cG5);
                    }
                }(),
                TWEEN['update'](),
                0x0 < cCo && (0x0 >= (cCo -= cCm) && (cCo = 0x0)),
                cBM['rate'] = cBS['config']['deltaMlt'],
                null != cCo && (cCm *= cCo / cAX['endAnim'],
                cBM['rate'] = cBS['config']['deltaMlt'] * (cCo / cAX['endAnim'])),
                cBU || window['spectating'] || (cCd += 0.0001 * cCm,
                cCd %= 0x2 * Math['PI'],
                cBT['DlBLfkPUll'](cCd, 0x0, 0x0)),
                cGU && 0x0 < classPreviewCanvas['offsetWidth'] && 0x0 < classPreviewCanvas['offsetHeight'] && (cBS['players']['playerStep'](cGV, 0.015 * cCm, !0x0),
                cGV['idleAnim'] += cAX['idleAnimS'] * cCm,
                cBS['players']['updateMesh'](cGV, !0x0),
                cGY['aspect'] = cGW / cGX,
                cGY['updateProjectionMatrix'](),
                cGZ['setSize'](cGW, cGX),
                cGZ['setPixelRatio'](window['devicePixelRatio'] * cEo['resolution']['val']),
                cGZ['render'](cGU, cGY)),
                function(cAU) {
                    if ('block' == spinUI['style']['display'] && (cKa['width'] = cKa['clientWidth'],
                    cKa['height'] = cKa['clientHeight'],
                    spinItemCanvas['style']['width'] = 2.1 * cKa['clientWidth'] + 'px',
                    spinItemCanvas['style']['height'] = 2.1 * cKa['clientWidth'] + 'px',
                    cKs['setSize'](2.1 * cKa['clientWidth'], 2.1 * cKa['clientWidth']),
                    0x0 < cKa['width'])) {
                        0x1 > cKg && 0x1 <= (cKg += 0.008 * cAU) && (cKg = 0x1),
                        cKj < cKk && ((cKj += 0.4 * cAU) >= cKk && (cKj = cKk),
                        cKo = !0x0,
                        spinItem['style']['display'] = 'block',
                        spinItemName['style']['display'] = 'inline-block',
                        spinRespin['style']['display'] = 'inline-block'),
                        spinRotation != cKh && (spinRotation += 0.024 * (cKh - spinRotation),
                        0x0 >= (cKq -= 0.024 * (cKh - spinRotation)) && (cKq += Math['PI'] / 1.5,
                        cBM['play']('tick_0', 0.2)),
                        0.002 >= cKh - spinRotation && (spinRotation = cKh,
                        cKk = 0x64 - cK6['rarities'][cKe['rarity']],
                        cBM['play']('reward', 0.3),
                        cBR && cBR['send']('unbx'),
                        0x1 <= cKe['rarity'] && cBM['play']('cheer_0', 0.1)));
                        var cAV = 0x1 - (cKk ? cKj / cKk : 0x0);
                        cKb['translate'](0x2, 0x2);
                        var cAW = cKa['width'] / 0x2 * cKc * cKg;
                        spinButton['style']['opacity'] = cAV;
                        var cAX = 0.3 * cAW * (0x1 - cAV);
                        spinButton['style']['width'] = 0x2 * cAW * cKd * 0.8 + cAX + 'px',
                        spinButton['style']['height'] = 0x2 * cAW * cKd * 0.8 + cAX + 'px',
                        spinText['style']['fontSize'] = 0x2 * cAW * cKd * 0.15 + cAX + 'px',
                        spinCost['style']['fontSize'] = 0x2 * cAW * cKd * 0.08 + cAX + 'px',
                        cKb['fillStyle'] = '#fff',
                        cKb['beginPath'](),
                        cKb['arc'](cKa['width'] / 0x2, cKa['height'] / 0x2, cAW, 0x0, 0x2 * Math['PI']),
                        cKb['closePath'](),
                        cKb['fill']();
                        var cAY = 0x0;
                        if (cKb['save'](),
                        cKb['translate'](cKa['width'] / 0x2, cKa['height'] / 0x2),
                        cKk) {
                            for (var cAZ = 0x0, cB0 = 0x0; cB0 < cBS['store']['rarities']['length']; cB0++) {
                                if (cKe['rarity'] == cB0) {
                                    cAZ += cK6['rarities'][cB0] / 0x2;
                                    break;
                                }
                                cAZ += cK6['rarities'][cB0];
                            }
                            cAZ /= 0x64,
                            cAZ = 0x2 * Math['PI'] * cAZ * (cKj / cKk) % (0x2 * Math['PI']),
                            cKb['rotate'](cAZ - Math['PI'] * (cKj / cKk));
                        }
                        for (cB0 = 0x0; cB0 < cBS['store']['rarities']['length']; cB0++) {
                            cBW = cBS['store']['rarities'][cB0],
                            cKb['fillStyle'] = cBW['color'],
                            cKb['beginPath']();
                            var cB5 = cK6['rarities'][cB0];
                            cKk && (cKe['rarity'] == cB0 ? cB5 += cKj : cB5 -= cKj * (cK6['rarities'][cB0] / cKk)),
                            0x0 < cB5 && (cKb['moveTo'](0x0, 0x0),
                            cKb['arc'](0x0, 0x0, 0.95 * cAW, cAY, cAY + 0x2 * Math['PI'] * (cB5 / 0x64), !0x1),
                            cKb['lineTo'](0x0, 0x0),
                            cKb['fill']()),
                            cAY += 0x2 * Math['PI'] * (cB5 / 0x64);
                        }
                        cKb['restore'](),
                        cKb['fillStyle'] = '#F44336',
                        cKb['save'](),
                        cKb['translate'](cKa['width'] / 0x2, cKa['height'] / 0x2),
                        cKb['rotate'](spinRotation),
                        cKb['beginPath']();
                        var cB6 = (spinButton['getBoundingClientRect']()['width'] / spinButton['offsetWidth'] - 0x1) * (cAW * cKd) * 0.3;
                        if (cKb['moveTo'](0x0, (cAW * cKd * -1.2 - cB6) * cAV),
                        cKb['lineTo'](cAW * cKd * cAV, 0x0),
                        cKb['lineTo'](-cAW * cKd * cAV, 0x0),
                        cKb['closePath'](),
                        cKb['fill'](),
                        cKb['restore'](),
                        cKb['fillStyle'] = '#fff',
                        cKb['beginPath'](),
                        cKb['arc'](cKa['width'] / 0x2, cKa['height'] / 0x2, cAW * cKd, 0x0, 0x2 * Math['PI']),
                        cKb['closePath'](),
                        cKb['fill'](),
                        'block' == spinItem['style']['display'] && cK4) {
                            var cBa = 0x1 - Math['abs'](cKr['position']['x'] - cKl) / (cKm - cKl);
                            spinItemName['style']['opacity'] = cBa,
                            spinItemName['style']['marginTop'] = 0.6 * cAW + 'px',
                            spinItemName['style']['fontSize'] = cAW / 6.5 * cBa + 'px',
                            spinItemName['children'][0x0]['style']['fontSize'] = cAW / 0xc * cBa + 'px',
                            spinItemName['style']['padding'] = cAW / 0x14 * cBa + 'px',
                            spinItemName['style']['paddingLeft'] = cAW / 0x2 * cBa + 'px',
                            spinItemName['style']['paddingRight'] = cAW / 0x2 * cBa + 'px',
                            cKr['position']['x'] != cKl && (cKr['position']['x'] -= 0.2 * (cKr['position']['x'] - cKl),
                            0.05 >= Math['abs'](cKl - cKr['position']['x']) && (cKr['position']['x'] = cKl),
                            cKr['lookAt'](cK4['position'])),
                            cKp += 0.0018 * cAU,
                            cK5['position']['y'] = cK5['orgYP'] + 0.55 * Math['sin'](cKp),
                            cK5['rotation']['x'] = cK5['orgXR'] + -0.042 * Math['sin'](0.9 * cKp),
                            cKs['render'](cK4, cKr);
                        }
                    }
                }(cCm),
                cGo(),
                cBT['update'](cCm * cBS['config']['deltaMlt']),
                cBU && cBU['active'] && !window['locked'] ? (cBS['config']['thirdPerson'] ? cBL['camera']['position']['set'](cAX['thirdPX'], 0x2, cAX['thirdPZ']) : 'prop' == cBU['team'] ? (cCg += 0x5 * cBT['scrollDelta'],
                cCg = Math['min'](Math['max'](0xa, cCg), 0x64),
                cBL['camera']['position']['set'](0x0, 0x0, cCg)) : cBL['camera']['position']['set'](0x0, 0x0, 0x0),
                cBT['skipScroll'] = !0x1,
                cBY = [cBT['getISN'](), Math['round'](cCm * cBS['config']['deltaMlt']), cBT['xDr']['round'](0x3), cBT['yDr']['round'](0x3), cAX['movDirs']['indexOf'](cBT['moveDir']), cBT['mouseDownL'], cBT['mouseDownR'] || cBT['keys'][cBT['aimKey']] ? 0x1 : 0x0, cBT['keys'][cBT['jumpKey']] ? 0x1 : 0x0, cBT['keys'][cBT['crouchKey']] ? 0x1 : 0x0, cBT['keys'][cBT['reloadKey']] ? 0x1 : 0x0, cBT['scrollToSwap'] ? cBT['scrollDelta'] * cCi : 0x0, cBT['wSwap']],
                cBT['scrollDelta'] && (cBT['skipScroll'] = cBT['scrollToSwap'],
                !cBT['scrollToSwap'] && cBT['fakeKey'](0x4e20, 0x1)),
                cBT['scrollDelta'] = 0x0,
                cBT['wSwap'] = 0x0,
                cBT['tmpInputs']['push'](cBY),
                cBU['procInputs'](cBY, cBS),
                cBT['QopwyCmt'](cBU['x'], cBU['y'] + cBU['height'] - cAX['cameraHeight'], cBU['z']),
                cBT['DlBLfkPUll'](cBL['shakeX'], cBL['shakeY'] + cBU['recoilAnimY'] * cAX['recoilMlt'] + 0.1 * cBU['landBobY'], 0x0),
                cBO['muhcBdwkc'](Math['max'](0x3a, cBU['spread'] * cD3), cBS['config']['thirdPerson'] && !cBU['weapon']['scope'] ? 0x1 : cBU['aimVal'] * (cBU['inspecting'] ? 0x0 : 0x1) * ('prop' == cBU['team'] ? 0x0 : 0x1) * (0x0 < cBU['reloadTimer'] ? 0x0 : 0x1)),
                !cBS['singlePlayer'] && function(cAU) {
                    if (null === cCb && (cCb = cAU[0x0]),
                    cCa['push'](cAU[0x1] - 0xa),
                    cBZ && cBZ[0x2] == cAU[0x2] && cBZ[0x3] == cAU[0x3] && cBZ[0x4] == cAU[0x4] && cBZ[0x5] == cAU[0x5] && cBZ[0x6] == cAU[0x6] && cBZ[0x7] == cAU[0x7] && cBZ[0x8] == cAU[0x8] && cBZ[0x9] == cAU[0x9] && cBZ[0xa] == cAU[0xa] && cBZ[0xb] == cAU[0xb])
                        if ('string' == typeof cC9[cC9['length'] - 0x1]) {
                            var cAV = parseInt(cC9[cC9['length'] - 0x1]) || 0x0;
                            cC9[cC9['length'] - 0x1] = cAV + 0x1 + '';
                        } else
                            cC9['push']('1');
                    else
                        cC9['push'](cAU[0x2], cAU[0x3], cAU[0x4], cAU[0x5], cAU[0x6], cAU[0x7], cAU[0x8], cAU[0x9], cAU[0xa], cAU[0xb]);
                    cBZ = cAU;
                }(cBY),
                Howler['pos'](cBU['x'], cBU['y'] + cBU['height'] - cAX['cameraHeight'], cBU['z']),
                Howler['orientation'](Math['sin'](cBT['xDr'] + Math['PI']), cBT['yDr'], Math['cos'](cBT['xDr'] + Math['PI'])),
                cBS['singlePlayer'] && cBU['y'] <= cBS['map']['deathY'] && cO3(cBU['sid'], cBU['deaths'])) : window['spectating'] && (window['spectTarget'] && (window['spectTarget']['active'] ? cBT['followCam'](window['spectTarget'], cCm) : spectMode()),
                !window['spectTarget'] && cBT['freeCam'](cCm),
                Howler['pos'](cBT['object']['position']['x'], cBT['object']['position']['y'], cBT['object']['position']['z']),
                Howler['orientation'](Math['sin'](cBT['xDr'] + Math['PI']), cBT['yDr'], Math['cos'](cBT['xDr'] + Math['PI']))),
                cBS['update'](cCm, cCl, cBU),
                cBS['updateFlags'](cBU, cCm),
                function(cAU) {
                    var cAV = '';
                    if (cBU && cBU['active'])
                        for (var cAW = 0x0; cAW < cPR['length']; ++cAW)
                            cPR[cAW]['life'] && (cPR[cAW]['life'] -= cAU,
                            0x0 >= cPR[cAW]['life'] && (cPR[cAW]['life'] = 0x0),
                            cAV += '<div\x20class=\x27hitInd\x27\x20style=\x27transform:\x20translate(0,\x20-50%)\x20rotate(' + (cBT['xDr'] + cBJ['getDirection'](cPR[cAW]['x'], cPR[cAW]['z'], cBU['x'], cBU['z'])) + 'rad);opacity:' + cPR[cAW]['life'] / cAX['hitLife'] + '\x27></div>');
                    hitHolder['innerHTML'] = cAV;
                }(cCm),
                cBP['update'](cCm),
                cCp -= cCm,
                'block' == speedDisplay['style']['display'] && 0x0 >= cCp) {
                    var cAU = '';
                    cCp = 0x12c,
                    cBU && cBU['active'] && (cAU = cBJ['getDistance3D'](cBU['oldX'], cBU['oldY'], cBU['oldZ'], cBU['x'], cBU['y'], cBU['z'])),
                    speedDisplay['innerHTML'] = Math['round'](0x64 * cAU);
                }
                'block' == nukeFlash['style']['display'] && (nukeFlash['style']['opacity'] -= 0.002 * cCm,
                0x0 >= nukeFlash['style']['opacity'] && (nukeFlash['style']['opacity'] = 0x0,
                nukeFlash['style']['display'] = 'none')),
                cBK['render'](cCC, cBS, cBL, cBU, cCm),
                window['spectating'] || 'block' != menuHolder['style']['display'] || !cAX['isProd'] || cC6 || cBV && cBV['developer'] || (window['idleTimer'] += cCm,
                window['idleTimer'] >= cAX['kickTimer'] && cQo(cB5['t']('player.inactive'))),
                requestAnimFrame(cQ0);
            }
        }
        function cQh() {
            !cBS['singlePlayer'] && cBU && cBU['active'] && (cBR['send']('i', cCb, cC9, cCa),
            cC9['length'] = 0x0,
            cCa['length'] = 0x0,
            cCb = null);
        }
        function cQi(cAU) {
            cAU && (txtBubble['innerHTML'] = cAU,
            bubbleContainer['style']['transform'] = 'scale(1.0)',
            cPP && clearTimeout(cPP),
            cPP = setTimeout(function() {
                bubbleContainer['style']['transform'] = 'scale(0.0)';
            }, 0x834));
        }
        function cQk(cAU) {
            console['trace']('Error\x20message', cAU),
            instructionHolder['style']['display'] = 'block',
            instructions['innerHTML'] = '<span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cAU + '</span><br/><span\x20style=\x27color:\x20rgba(255,\x20255,\x20255,\x200.6)\x27>' + cB5['t']('error.seek') + '\x20<a\x20href=\x27/\x27>here</a>.</span><div\x20style=\x27margin-top:10px;font-size:20px;color:rgba(255,255,255,0.4)\x27>' + cB5['t']('error.extentions') + '\x20(Error\x200x' + window['krunkerErrorCode'] + ')</div>',
            instructionHolder['style']['pointerEvents'] = 'all';
        }
        function cQm(cAU) {
            cPQ = cAU,
            cBR['connected'] = !0x1,
            showWindow(0x0),
            cBT['disable'](),
            cBO['hideUI'](),
            cBO['hideDiscon'](),
            cQk(cAU),
            cBR['HrUGGfNEAu'] && (cBR['HrUGGfNEAu']['onclose'] = function() {}
            ),
            cQo = function() {}
            ;
        }
        function cQo(cAU, cAV) {
            cPQ || cBS['singlePlayer'] || (cBR['HrUGGfNEAu']['onclose'] = function() {}
            ,
            cBR && cBR['HrUGGfNEAu'] && cBR['HrUGGfNEAu']['close'](),
            !cAV && (showWindow(0x0),
            cBT['disable'](),
            cBO['hideUI'](),
            cBO['hideDiscon'](),
            cQk(cAU || cB5['t']('player.disconnect'))));
        }
        function cQr(cAU) {
            var cAV = '';
            if (cAU) {
                0x3 < cAU['length'] && (cAU['length'] = 0x3);
                for (var cAW = 0x0; cAW < cAU['length']; ++cAW)
                    cAV += '<div\x20class=\x27streamItem\x27\x20onclick=\x27openTab(&quot;https://twitch.tv/' + cAU[cAW]['name'] + '&quot;)\x27><div\x20class=\x27streamName\x27><div\x20class=\x27strmLink\x20blackShad\x27>' + cAU[cAW]['name'] + '</div><div\x20class=\x27strmViews\x27>' + cB5['t']('streamers.views', cAU[cAW]['view']) + '</div></div><img\x20class=\x27strmIcn\x27\x20src=\x27' + cAU[cAW]['logo'] + '\x27/></div>';
            } else
                cAV = '<span\x20style=\x27color:rgba(244,60,60,0.5)\x27>' + cB5['t']('streamers.none') + '</span>';
            streamContainer['innerHTML'] = cAV;
        }
        function cQv(cAU) {
            cBS['singlePlayer'] = !0x0,
            cBR && cBR['HrUGGfNEAu'] && cBR['HrUGGfNEAu']['close'](),
            cBR['send'] = function() {}
            ;
            try {
                cM0(0x0, null, null, null, null, {
                    'maps': [0x0]
                }, 0x0, {
                    'data': cAU
                }, null, !0x0);
            } catch (cQx) {}
            cB0('custMap'),
            cDK(),
            window['history']['replaceState']({}, 'Krunker\x20Offline', 'offline');
        }
        function cQy(cAU) {
            cBR['send']('load', 'undefined' == typeof uptkkjokTqBfyBcoTEKerlJVclzYeikW ? null : uptkkjokTqBfyBcoTEKerlJVclzYeikW(cAU, 9279));
        }
        function cQA() {
            cBR['send']('strm'),
            function() {
                loginToken = getSavedVal('krunker_token');
                var cAU = getSavedVal('krunker_username');
                loginToken && cAU && cGa(0x1, [cAU, null, loginToken]);
                var cAV = getSavedVal('krunker_last')
                  , cAW = Date['now']();
                saveVal('krunker_last', cAW),
                (!cAV || 0x927c0 <= cAW - cAV) && cBR['send']('sb', 'welc', cAU);
            }();
        }
        window['pressButton'] = function(cAU) {
            if (window['spectating'] && 0x46 == cAU && spectMode(),
            cAU == cBT['chatKey'] && (document['activeElement'] == chatInput ? ('' != chatInput['value'] && (cBR['send']('c', chatInput['value']),
            chatInput['value'] = ''),
            chatInput['blur']()) : chatInput['focus']()),
            cAU == cBT['listKey']) {
                if ('INPUT' == document['activeElement']['tagName'])
                    return;
                if (null == endUI['style']['display'])
                    return;
                cBT['keys'][cAU] = 0x0,
                cBT['hasPointerlock'] && cBT['toggle'](!0x1),
                showWindow(0x17);
            }
            if (cBU && cBU['active']) {
                cAU == cBT['sprayKey'] && cBR['send']('int', 0x0),
                cAU == cBT['interactKey'] && cBR['send']('int', 0x1),
                cAU == cBT['dropKey'] && cBR['send']('int', 0x2),
                cAU == cBT['inspKey'] && cBS['players']['wInspect'](cBU);
                var cAV = cBT['streakKeys']['indexOf'](cAU);
                0x0 <= cAV && cBR['send']('k', cAV);
            }
        }
        ,
        window['openTab'] = function(cAU) {
            window['open'](cAU, '_blank');
        }
        ,
        getSavedVal('consent') || (consentBlock['style']['display'] = 'block');
        var cQH = !0x1;
        var cQI = cAX['isProd'] ? ['de-fra', 'us-ca-sv', 'au-syd', 'jb-hnd', 'us-fl', 'sgp', 'us-nj'] : ['local'];
        var cQJ, cQK, cQL = !0x1;
        function cQM(cAU) {
            return clearTimeout(cQJ),
            clearTimeout(cQK),
            cQL ? (cQL = !0x1,
            document['getElementById']('pre-content-container')['style']['display'] = 'none',
            document['getElementById']('my-content')['style']['display'] = 'none',
            void (cAU ? cBR['send']('rew') : alert(cB5['t']('adblocker')))) : void console['warn']('Attempting\x20to\x20finish\x20when\x20pre\x20ad\x20not\x20showing');
        }
        window['boltEventHandlers'] = function() {
            Bolt['on']('pre-content-player', 'showHiddenContainer', function() {
                console['log']('Ad\x20finished\x20successfully'),
                cQM(!0x0);
            });
        }
        ,
        window['debugMatchmaker'] = function(cAU, cAV) {
            return cAV || (cAV = cBd),
            Promise['all']([cBc['fetchGameInfo'](cAV), cBc['fetchGameDebugInfo'](cAU, cAV), cBc['fetchAllDebugInfo'](cAU)])['then'](([cAU,cAV,cAW])=>({
                'gameInfo': cAU,
                'gameDebugInfo': cAV,
                'allDebugInfo': cAW
            }));
        }
        ,
        window['getGameActivity'] = function() {
            return {
                'id': cBd,
                'time': timerVal['innerHTML'] ? timerVal['innerHTML']['split'](':')['reverse']()['reduce']((cAU,cAV,cAW)=>cAU + cAV * Math['pow'](0x3c, cAW), 0x0) : null,
                'user': cBV ? cBV['name'] : 'Guest' + (cBU ? '_' + cBU['sid'] : ''),
                'class': {
                    'name': cBS['classes'][cCw]['name'] || null,
                    'index': cBU ? cBU['classIndex'] : cCw
                },
                'mode': cBS['mode'] ? cBS['mode']['name'] : null,
                'map': cBS['map']['maps'][cBS['map']['lastGen']]['name'],
                'custom': cBS['isCustom']
            };
        }
        ,
        function() {
            if (!cAY && (instructions['innerHTML'] = cB5['get']('generic.connecting'),
            !cQH)) {
                cQH = !0x0;
                var cAU = getSavedVal('custMap');
                cB0('custMap'),
                cAU ? cQv(cAU) : ('undefined' == typeof PCSYdqhOuVtBuTFktISzBFlNIdMTrUaE ? Promise['resolve'](null) : PCSYdqhOuVtBuTFktISzBFlNIdMTrUaE)['then'](cAU=>cBc['seek']({
                    'autoChangeGame': !0x1,
                    'dataQuery': {
                        'version': cAX['useLooseClient'] ? void 0x0 : cC5
                    },
                    'skipReplaceState': cCW,
                    'validationToken': cAU
                }))['then'](cAU=>{
                    cBd = cAU['gameId'],
                    cAU['host'],
                    cBe = cAU['port'];
                    var cAV = '//' + cAU['host'] + ':' + cBe + '/ws?gameId=' + cAU['gameId'] + '&clientKey=' + cAU['clientId'];
                    cBR['connect'](cAV, function(cAU) {
                        if (cAU) {
                            if (console['warn']('IO\x20connect\x20error', cAU),
                            null != cPQ)
                                return;
                            cQo();
                        } else {
                            cDK(),
                            aHolder['style']['display'] = null;
                            var cAV = getSavedVal('mapToLoad');
                            cB0('mapToLoad'),
                            cAV && selectHostMap(cAV);
                            var cAW = getSavedVal('custToLoad');
                            cB0('custToLoad'),
                            cAW && selectHostMap(!0x1, cAW);
                        }
                    }, {
                        'init': cM0,
                        'load': cQy,
                        'ready': cQA,
                        'start': cLV,
                        'cust': cBn,
                        'iq': cBs,
                        'pur': cDp,
                        'uf': cDn,
                        'clm': cGr,
                        'gmsg': cNT,
                        'pc': cQv,
                        'cln': cKI,
                        'upMp': cL7,
                        'lock': cMg,
                        'spin': cKx,
                        'unb': cKt,
                        'end': cMi,
                        'pErr': purchaseError,
                        'error': cQm,
                        'strm': cQr,
                        'dc': cQo,
                        'ts': cPb,
                        't': cNw,
                        'n': cNu,
                        0: cNz,
                        1: cNY,
                        8: cNI,
                        2: cO1,
                        3: cO3,
                        'kst': cOr,
                        'am': cPr,
                        'ac': cOv,
                        4: cPS,
                        5: cPg,
                        6: cPm,
                        'lv': cPj,
                        'up': cPw,
                        7: cOC,
                        9: cOI,
                        10: cPq,
                        'h': cPA,
                        's': cMz,
                        'sp': cNm,
                        'ch': cPW,
                        'vc': voiceChat,
                        'a': cGd,
                        'ua': cFP,
                        'ex': cP5,
                        'st': cOm,
                        'pr': cOU,
                        'tm': cNV,
                        'pre': cP3,
                        'obj': cBS['setObjective'],
                        'do': cBS['destroyObj'],
                        'ro': cBS['respawnObj'],
                        'ufl': cBS['updateFlag'],
                        'gte': cBS['updateGate'],
                        'pi': cNO,
                        'pir': cNP,
                        'chp': cPi,
                        'mv': updMatchVote,
                        'nwT': newTok,
                        'inat': cMD,
                        'sb': cQi,
                        'zn': cBS['updateZone'],
                        'vr': cJM,
                        'ctrR': crtrCodRes,
                        'rejoin': cBf
                    }),
                    cBc['fetchGameInfo'](cAU['gameId'])['then'](cAU=>{
                        cAU['region'],
                        menuRegionLabel['innerText'] = cAX['regionNames'][cAU['region']],
                        mainLogo['src'] = '/img/logo_1.png';
                    }
                    )['catch'](cAU=>console['error']('Failed\x20to\x20fetch\x20game\x20info', cAU));
                }
                )['catch'](cAU=>{
                    console['warn']('Matchmaker\x20error:', cAU, cAU['message'], cAU['response']);
                    let cAV = cAU['message'];
                    cAU['response'] ? 'InvalidGameId' == (cAV = cAU['response']['data'] && cAU['response']['data']['error'] ? cAU['response']['data']['error'] : 'GameFull') ? cAV = cB5['t']('matchmaker.none') : 'GameFull' == cAV ? cAV = cB5['t']('matchmaker.full2') : console['warn']('Unhandled\x20error\x20message', cAV) : console['warn']('No\x20error\x20response', cAU['response']),
                    cQm(cAV);
                }
                ),
                window['requestAnimFrame'] = window['requestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['mozRequestAnimationFrame'] || function(cAU) {
                    window['setTimeout'](cAU, 0x3e8 / 0x3c);
                }
                ,
                setInterval(()=>{
                    window['chH'](cBR);
                }
                , 0x2710),
                setInterval(cQh, cAX['clientSendRate']),
                setInterval(cNR, cAX['nameVisRate']),
                cCn = Date['now'](),
                cQ0();
            }
        }();
    }
    , function(cR8, cR9, cRa) {
        'use strict';
        var cRb = this && this['__awaiter'] || function(cR8, cR9, cRa, cRb) {
            function cRg(cR8) {
                return cR8 instanceof cRa ? cR8 : new cRa(function(cR9) {
                    cR9(cR8);
                }
                );
            }
            return new (cRa || (cRa = Promise))(function(cRa, cRk) {
                function cRl(cR8) {
                    try {
                        cRr(cRb['next'](cR8));
                    } catch (cRn) {
                        cRk(cRn);
                    }
                }
                function cRo(cR8) {
                    try {
                        cRr(cRb['throw'](cR8));
                    } catch (cRq) {
                        cRk(cRq);
                    }
                }
                function cRr(cR8) {
                    cR8['done'] ? cRa(cR8['value']) : cRg(cR8['value'])['then'](cRl, cRo);
                }
                cRr((cRb = cRb['apply'](cR8, cR9 || []))['next']());
            }
            );
        }
        ;
        Object['defineProperty'](cR9, '__esModule', {
            'value': !0x0
        });
        const cRt = cRa(0x6e)
          , cRu = cRa(0x71);
        class cRv {
            constructor(cR8, cR9, cRa, cRb) {
                this['manager'] = cR8,
                this['queueClientId'] = cR9,
                this['statusCallback'] = cRa,
                this['hostCallback'] = cRb,
                this['status'] = 'Queuing',
                this['queueSize'] = 0x0;
            }
            get['isQueued']() {
                return 'Host' != this['status'] && 'Join' != this['status'];
            }
            get['isActive']() {
                return this['manager']['queueManager'] === this;
            }
            ['_start']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    this['_poll']();
                });
            }
            ['_poll']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    let cR8 = yield this['manager']['matchmakerRequest']('/queue/poll', {
                        'clientId': this['queueClientId']
                    });
                    this['_handleNewStatus'](cR8['status']);
                });
            }
            ['_handleNewStatus'](cR8) {
                this['status'] = cR8['t'];
                let cR9 = !0x1;
                switch (cR8['t']) {
                case 'Queued':
                    this['queueSize'] = cR8['c']['queueSize'];
                    break;
                case 'CreatingGame':
                    break;
                case 'Host':
                    cR9 = !0x0;
                    let cRa = cR8['c']['pendingGameId'];
                    this['hostCallback'](cRa);
                    break;
                case 'Join':
                    cR9 = !0x0;
                    let cRb = cR8['c']['gameId'];
                    this['manager']['switchGame'](cRb);
                    break;
                default:
                    return void console['error']('Unknown\x20status', cR8);
                }
                cR9 ? this['manager']['unqueue']() : setTimeout(()=>{
                    this['isActive'] && this['_poll']();
                }
                , 0x3e8),
                this['statusCallback'](cR8['t'], cR8['c']);
            }
            ['_stop']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    this['isQueued'] && (yield this['manager']['matchmakerRequest']('/queue/unqueue', {
                        'clientId': this['queueClientId']
                    }));
                });
            }
        }
        cR9['QueueManager'] = cRv;
        class cRF {
            constructor(cR8) {
                this['matchmakerAddress'] = cR8,
                this['cachePingRegion'] = !0x0,
                this['enableLogging'] = !!localStorage['getItem']('CLIENT_MANAGER_LOGGING');
            }
            get['hostname']() {
                return location['hostname'];
            }
            ['seek'](cR8) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    this['log']('Seeking\x20games...');
                    let cR9 = cR8['regionId'] || (yield this['getRegion']())
                      , cRa = cR8['gameId'] || this['parseQuery']()
                      , cRb = yield this['matchmakerSeek'](cR9, cRa, cR8['dataQuery'] || null, cR8['autoChangeGame'], cR8['validationToken'], cR8['captchaToken']);
                    return cR8['skipReplaceState'] || window['history']['replaceState'](document['title'], document['title'], this['generateHref'](cRb['gameId'])),
                    cRb;
                });
            }
            ['getRegion']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return new Promise((cR8,cR9)=>cRb(this, void 0x0, void 0x0, function*() {
                        let cRa = localStorage['getItem'](cRF['PING_REGION_CACHE_KEY']);
                        if (cRa)
                            return void cR8(cRa);
                        let cRb = yield this['fetchPingList']()
                          , cRt = 0x0
                          , cRv = !0x1;
                        for (let cRa in cRb) {
                            let cRS = cRb[cRa]
                              , cRT = cRS['endsWith'](':443') ? 'https:' : 'http:';
                            cRu['default']['get'](cRT + '//' + cRS + '/ping')['then'](()=>{
                                cRv || cRF['setDefaultRegion'](cRa),
                                cRv = !0x0,
                                cR8(cRa);
                            }
                            )['catch'](()=>{
                                ++cRt >= Object['keys'](cRb)['length'] && cR9('All\x20pings\x20failed.');
                            }
                            );
                        }
                    }));
                });
            }
            ['switchGame'](cR8) {
                window['location']['href'] = this['generateHref'](cR8);
            }
            static['setDefaultRegion'](cR8) {
                localStorage['setItem'](cRF['PING_REGION_CACHE_KEY'], cR8);
            }
            ['parseQuery']() {
                this['log']('Parsing\x20query...');
                var cR8 = cRt(location['href'], !0x0)['query']['game'];
                return 'string' == typeof cR8 ? cR8 : null;
            }
            ['fetchPingList']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return this['log']('Fetching\x20list\x20of\x20servrs\x20to\x20ping...'),
                    yield this['matchmakerRequest']('/ping-list', {
                        'hostname': this['hostname']
                    });
                });
            }
            ['fetchGameList']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return this['log']('Fetching\x20game\x20list...'),
                    yield this['matchmakerRequest']('/game-list', {
                        'hostname': this['hostname']
                    });
                });
            }
            ['fetchGameInfo'](cR8) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return this['log']('Fetching\x20game\x20info\x20for\x20' + cR8 + '...'),
                    yield this['matchmakerRequest']('/game-info', {
                        'game': cR8
                    });
                });
            }
            ['matchmakerSeek'](cR8, cR9=null, cRa, cRt=!0x0, cRu, cRv=null) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    this['log']('Seeking\x20matchmaker\x20with\x20region\x20' + cR8 + '...');
                    let cRb = {
                        'hostname': this['hostname'],
                        'region': cR8,
                        'autoChangeGame': cRt,
                        'validationToken': cRu
                    };
                    return cR9 && (cRb['game'] = cR9),
                    cRa && (cRb['dataQuery'] = JSON['stringify'](cRa)),
                    cRv && (cRb['captchaToken'] = cRv),
                    yield this['matchmakerRequest']('/seek-game', cRb);
                });
            }
            ['fetchAllDebugInfo'](cR8) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return this['log']('Fetching\x20all\x20debug\x20info...'),
                    yield this['matchmakerRequest']('/internal/all-debug-info', {
                        'key': cR8
                    });
                });
            }
            ['fetchGameDebugInfo'](cR8, cR9) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return this['log']('Fetching\x20game\x20debug\x20info\x20for\x20' + cR9 + '...'),
                    yield this['matchmakerRequest']('/internal/game-debug-info', {
                        'key': cR8,
                        'gameId': cR9
                    });
                });
            }
            ['queue'](cR8) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    this['queueManager'] && this['unqueue']();
                    let cR9 = new cRv(this,cR8['clientId'],cR8['statusCallback'],cR8['hostCallback']);
                    return this['queueManager'] = cR9,
                    yield cR9['_start']();
                });
            }
            ['unqueue']() {
                return cRb(this, void 0x0, void 0x0, function*() {
                    let cR8 = this['queueManager'];
                    this['queueManager'] = void 0x0,
                    cR8 && (yield cR8['_stop']());
                });
            }
            ['generateHref'](cR8) {
                return '/?game=' + cR8;
            }
            ['matchmakerRequest'](cR8, cR9={}) {
                return cRb(this, void 0x0, void 0x0, function*() {
                    return this['log']('Executing\x20matchmaker\x20request\x20' + cR8 + '\x20with\x20params\x20' + JSON['stringify'](cR9) + '...'),
                    (yield cRu['default']['get']('' + this['matchmakerAddress'] + cR8, {
                        'params': cR9,
                        'responseType': 'json'
                    }))['data'];
                });
            }
            ['log'](...cR8) {
                return this['enableLogging'] ? (console['debug'] || console['info'] || console['log'])(...cR8) : void 0x0;
            }
        }
        cR9['default'] = cRF,
        cRF['PING_REGION_CACHE_KEY'] = 'sid-utils:ping-region';
    }
    , function(cSf, cSg, cSh) {
        'use strict';
        (function(cSg) {
            var cSj = cSh(0x6f)
              , cSk = cSh(0x70)
              , cSl = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i
              , cSm = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
              , cSn = [['#', 'hash'], ['?', 'query'], function(cSf) {
                return cSf['replace']('\x5c', '/');
            }
            , ['/', 'pathname'], ['@', 'auth', 0x1], [NaN, 'host', void 0x0, 0x1, 0x1], [/:(\d+)$/, 'port', void 0x0, 0x1], [NaN, 'hostname', void 0x0, 0x1, 0x1]]
              , cSo = {
                'hash': 0x1,
                'query': 0x1
            };
            function cSq(cSf) {
                var cSh, cSj = ('undefined' == typeof window ? void 0x0 === cSg ? 'undefined' == typeof self ? {} : self : cSg : window)['location'] || {}, cSk = {}, cSl = typeof (cSf = cSf || cSj);
                if ('blob:' === cSf['protocol'])
                    cSk = new cSz(unescape(cSf['pathname']),{});
                else if ('string' == cSl)
                    for (cSh in cSk = new cSz(cSf,{}),
                    cSo)
                        delete cSk[cSh];
                else if ('object' == cSl) {
                    for (cSh in cSf)
                        cSh in cSo || (cSk[cSh] = cSf[cSh]);
                    void 0x0 === cSk['slashes'] && (cSk['slashes'] = cSm['test'](cSf['href']));
                }
                return cSk;
            }
            function cSw(cSf) {
                var cSg = cSl['exec'](cSf);
                return {
                    'protocol': cSg[0x1] ? cSg[0x1]['toLowerCase']() : '',
                    'slashes': !!cSg[0x2],
                    'rest': cSg[0x3]
                };
            }
            function cSz(cSf, cSg, cSh) {
                if (!(this instanceof cSz))
                    return new cSz(cSf,cSg,cSh);
                var cSl, cSm, cSo, cSG, cSH, cSI, cSJ = cSn['slice'](), cSK = typeof cSg, cSL = this, cSM = 0x0;
                for ('object' != cSK && 'string' != cSK && (cSh = cSg,
                cSg = null),
                cSh && 'function' != typeof cSh && (cSh = cSk['parse']),
                cSg = cSq(cSg),
                cSl = !(cSm = cSw(cSf || ''))['protocol'] && !cSm['slashes'],
                cSL['slashes'] = cSm['slashes'] || cSl && cSg['slashes'],
                cSL['protocol'] = cSm['protocol'] || cSg['protocol'] || '',
                cSf = cSm['rest'],
                cSm['slashes'] || (cSJ[0x3] = [/(.*)/, 'pathname']); cSM < cSJ['length']; cSM++)
                    'function' != typeof (cSG = cSJ[cSM]) ? (cSo = cSG[0x0],
                    cSI = cSG[0x1],
                    cSo == cSo ? 'string' == typeof cSo ? ~(cSH = cSf['indexOf'](cSo)) && ('number' == typeof cSG[0x2] ? (cSL[cSI] = cSf['slice'](0x0, cSH),
                    cSf = cSf['slice'](cSH + cSG[0x2])) : (cSL[cSI] = cSf['slice'](cSH),
                    cSf = cSf['slice'](0x0, cSH))) : (cSH = cSo['exec'](cSf)) && (cSL[cSI] = cSH[0x1],
                    cSf = cSf['slice'](0x0, cSH['index'])) : cSL[cSI] = cSf,
                    cSL[cSI] = cSL[cSI] || cSl && cSG[0x3] && cSg[cSI] || '',
                    cSG[0x4] && (cSL[cSI] = cSL[cSI]['toLowerCase']())) : cSf = cSG(cSf);
                cSh && (cSL['query'] = cSh(cSL['query'])),
                cSl && cSg['slashes'] && '/' !== cSL['pathname']['charAt'](0x0) && ('' !== cSL['pathname'] || '' !== cSg['pathname']) && (cSL['pathname'] = function(cSf, cSg) {
                    for (var cSh = (cSg || '/')['split']('/')['slice'](0x0, -0x1)['concat'](cSf['split']('/')), cSj = cSh['length'], cSk = cSh[cSj - 0x1], cSl = !0x1, cSm = 0x0; cSj--; )
                        '.' === cSh[cSj] ? cSh['splice'](cSj, 0x1) : '..' === cSh[cSj] ? (cSh['splice'](cSj, 0x1),
                        cSm++) : cSm && (0x0 === cSj && (cSl = !0x0),
                        cSh['splice'](cSj, 0x1),
                        cSm--);
                    return cSl && cSh['unshift'](''),
                    ('.' === cSk || '..' === cSk) && cSh['push'](''),
                    cSh['join']('/');
                }(cSL['pathname'], cSg['pathname'])),
                cSj(cSL['port'], cSL['protocol']) || (cSL['host'] = cSL['hostname'],
                cSL['port'] = ''),
                cSL['username'] = cSL['password'] = '',
                cSL['auth'] && (cSG = cSL['auth']['split'](':'),
                cSL['username'] = cSG[0x0] || '',
                cSL['password'] = cSG[0x1] || ''),
                cSL['origin'] = cSL['protocol'] && cSL['host'] && 'file:' !== cSL['protocol'] ? cSL['protocol'] + '//' + cSL['host'] : 'null',
                cSL['href'] = cSL['toString']();
            }
            cSz['prototype'] = {
                'set': function(cSf, cSg, cSh) {
                    var cSl = this;
                    switch (cSf) {
                    case 'query':
                        'string' == typeof cSg && cSg['length'] && (cSg = (cSh || cSk['parse'])(cSg)),
                        cSl[cSf] = cSg;
                        break;
                    case 'port':
                        cSl[cSf] = cSg,
                        cSj(cSg, cSl['protocol']) ? cSg && (cSl['host'] = cSl['hostname'] + ':' + cSg) : (cSl['host'] = cSl['hostname'],
                        cSl[cSf] = '');
                        break;
                    case 'hostname':
                        cSl[cSf] = cSg,
                        cSl['port'] && (cSg += ':' + cSl['port']),
                        cSl['host'] = cSg;
                        break;
                    case 'host':
                        cSl[cSf] = cSg,
                        /:\d+$/['test'](cSg) ? (cSg = cSg['split'](':'),
                        cSl['port'] = cSg['pop'](),
                        cSl['hostname'] = cSg['join'](':')) : (cSl['hostname'] = cSg,
                        cSl['port'] = '');
                        break;
                    case 'protocol':
                        cSl['protocol'] = cSg['toLowerCase'](),
                        cSl['slashes'] = !cSh;
                        break;
                    case 'pathname':
                    case 'hash':
                        if (cSg) {
                            var cSm = 'pathname' === cSf ? '/' : '#';
                            cSl[cSf] = cSg['charAt'](0x0) === cSm ? cSg : cSm + cSg;
                        } else
                            cSl[cSf] = cSg;
                        break;
                    default:
                        cSl[cSf] = cSg;
                    }
                    for (var cSo, cSq = 0x0; cSq < cSn['length']; cSq++)
                        (cSo = cSn[cSq])[0x4] && (cSl[cSo[0x1]] = cSl[cSo[0x1]]['toLowerCase']());
                    return cSl['origin'] = cSl['protocol'] && cSl['host'] && 'file:' !== cSl['protocol'] ? cSl['protocol'] + '//' + cSl['host'] : 'null',
                    cSl['href'] = cSl['toString'](),
                    cSl;
                },
                'toString': function(cSf) {
                    cSf && 'function' == typeof cSf || (cSf = cSk['stringify']);
                    var cSg, cSh = this, cSj = cSh['protocol'];
                    cSj && ':' !== cSj['charAt'](cSj['length'] - 0x1) && (cSj += ':');
                    var cSl = cSj + (cSh['slashes'] ? '//' : '');
                    return cSh['username'] && (cSl += cSh['username'],
                    cSh['password'] && (cSl += ':' + cSh['password']),
                    cSl += '@'),
                    cSl += cSh['host'] + cSh['pathname'],
                    (cSg = 'object' == typeof cSh['query'] ? cSf(cSh['query']) : cSh['query']) && (cSl += '?' === cSg['charAt'](0x0) ? cSg : '?' + cSg),
                    cSh['hash'] && (cSl += cSh['hash']),
                    cSl;
                }
            },
            cSz['extractProtocol'] = cSw,
            cSz['location'] = cSq,
            cSz['qs'] = cSk,
            cSf['exports'] = cSz;
        }
        ['call'](this, cSh(0x15)));
    }
    , function(cT6, cT7, cT8) {
        'use strict';
        cT6['exports'] = function(cT6, cT7) {
            return cT7 = cT7['split'](':')[0x0],
            !!(cT6 = +cT6) && ('http' === cT7 || 'ws' === cT7 ? 0x50 !== cT6 : 'https' === cT7 || 'wss' === cT7 ? 0x1bb !== cT6 : 'ftp' === cT7 ? 0x15 !== cT6 : 'gopher' === cT7 ? 0x46 !== cT6 : 'file' !== cT7 && 0x0 !== cT6);
        }
        ;
    }
    , function(cTb, cTc, cTd) {
        'use strict';
        var cTe, cTf = Object['prototype']['hasOwnProperty'];
        function cTg(cTb) {
            return decodeURIComponent(cTb['replace'](/\+/g, '\x20'));
        }
        cTc['stringify'] = function(cTb, cTc) {
            cTc = cTc || '';
            var cTd, cTg, cTm = [];
            for (cTg in 'string' != typeof cTc && (cTc = '?'),
            cTb)
                cTf['call'](cTb, cTg) && (!(cTd = cTb[cTg]) && (null === cTd || cTd === cTe || isNaN(cTd)) && (cTd = ''),
                cTm['push'](encodeURIComponent(cTg) + '=' + encodeURIComponent(cTd)));
            return cTm['length'] ? cTc + cTm['join']('&') : '';
        }
        ,
        cTc['parse'] = function(cTb) {
            for (var cTc, cTd = /([^=?&]+)=?([^&]*)/g, cTe = {}; cTc = cTd['exec'](cTb); ) {
                var cTf = cTg(cTc[0x1])
                  , cTs = cTg(cTc[0x2]);
                cTf in cTe || (cTe[cTf] = cTs);
            }
            return cTe;
        }
        ;
    }
    , function(cTt, cTu, cTv) {
        cTt['exports'] = cTv(0x72);
    }
    , function(cTw, cTx, cTy) {
        'use strict';
        var cTz = cTy(0x24)
          , cTA = cTy(0x5e)
          , cTB = cTy(0x74)
          , cTC = cTy(0x57);
        function cTD(cTw) {
            var cTx = new cTB(cTw)
              , cTy = cTA(cTB['prototype']['request'], cTx);
            return cTz['extend'](cTy, cTB['prototype'], cTx),
            cTz['extend'](cTy, cTx),
            cTy;
        }
        var cTH = cTD(cTC);
        cTH['Axios'] = cTB,
        cTH['create'] = function(cTw) {
            return cTD(cTz['merge'](cTC, cTw));
        }
        ,
        cTH['Cancel'] = cTy(0x62),
        cTH['CancelToken'] = cTy(0x82),
        cTH['isCancel'] = cTy(0x61),
        cTH['all'] = function(cTw) {
            return Promise['all'](cTw);
        }
        ,
        cTH['spread'] = cTy(0x83),
        cTw['exports'] = cTH,
        cTw['exports']['default'] = cTH;
    }
    , function(cTK, cTL) {
        function cTM(cTK) {
            return !!cTK['constructor'] && 'function' == typeof cTK['constructor']['isBuffer'] && cTK['constructor']['isBuffer'](cTK);
        }
        cTK['exports'] = function(cTK) {
            return null != cTK && (cTM(cTK) || function(cTK) {
                return 'function' == typeof cTK['readFloatLE'] && 'function' == typeof cTK['slice'] && cTM(cTK['slice'](0x0, 0x0));
            }(cTK) || !!cTK['_isBuffer']);
        }
        ;
    }
    , function(cTQ, cTR, cTS) {
        'use strict';
        var cTT = cTS(0x57)
          , cTU = cTS(0x24)
          , cTV = cTS(0x7d)
          , cTW = cTS(0x7e);
        function cTX(cTQ) {
            this['defaults'] = cTQ,
            this['interceptors'] = {
                'request': new cTV(),
                'response': new cTV()
            };
        }
        cTX['prototype']['request'] = function(cTQ) {
            'string' == typeof cTQ && (cTQ = cTU['merge']({
                'url': arguments[0x0]
            }, arguments[0x1])),
            (cTQ = cTU['merge'](cTT, {
                'method': 'get'
            }, this['defaults'], cTQ))['method'] = cTQ['method']['toLowerCase']();
            var cTR = [cTW, void 0x0]
              , cTS = Promise['resolve'](cTQ);
            for (this['interceptors']['request']['forEach'](function(cTQ) {
                cTR['unshift'](cTQ['fulfilled'], cTQ['rejected']);
            }),
            this['interceptors']['response']['forEach'](function(cTQ) {
                cTR['push'](cTQ['fulfilled'], cTQ['rejected']);
            }); cTR['length']; )
                cTS = cTS['then'](cTR['shift'](), cTR['shift']());
            return cTS;
        }
        ,
        cTU['forEach'](['delete', 'get', 'head', 'options'], function(cTQ) {
            cTX['prototype'][cTQ] = function(cTR, cTS) {
                return this['request'](cTU['merge'](cTS || {}, {
                    'method': cTQ,
                    'url': cTR
                }));
            }
            ;
        }),
        cTU['forEach'](['post', 'put', 'patch'], function(cTQ) {
            cTX['prototype'][cTQ] = function(cTR, cTS, cTT) {
                return this['request'](cTU['merge'](cTT || {}, {
                    'method': cTQ,
                    'url': cTR,
                    'data': cTS
                }));
            }
            ;
        }),
        cTQ['exports'] = cTX;
    }
    , function(cUb, cUc, cUd) {
        'use strict';
        var cUe = cUd(0x24);
        cUb['exports'] = function(cUb, cUc) {
            cUe['forEach'](cUb, function(cUd, cUe) {
                cUe !== cUc && cUe['toUpperCase']() === cUc['toUpperCase']() && (cUb[cUc] = cUd,
                delete cUb[cUe]);
            });
        }
        ;
    }
    , function(cUj, cUk, cUl) {
        'use strict';
        var cUm = cUl(0x60);
        cUj['exports'] = function(cUj, cUk, cUl) {
            var cUq = cUl['config']['validateStatus'];
            cUl['status'] && cUq && !cUq(cUl['status']) ? cUk(cUm('Request\x20failed\x20with\x20status\x20code\x20' + cUl['status'], cUl['config'], null, cUl['request'], cUl)) : cUj(cUl);
        }
        ;
    }
    , function(cUr, cUs, cUt) {
        'use strict';
        cUr['exports'] = function(cUr, cUs, cUt, cUx, cUy) {
            return cUr['config'] = cUs,
            cUt && (cUr['code'] = cUt),
            cUr['request'] = cUx,
            cUr['response'] = cUy,
            cUr;
        }
        ;
    }
    , function(cUz, cUA, cUB) {
        'use strict';
        var cUC = cUB(0x24);
        function cUD(cUz) {
            return encodeURIComponent(cUz)['replace'](/%40/gi, '@')['replace'](/%3A/gi, ':')['replace'](/%24/g, '$')['replace'](/%2C/gi, ',')['replace'](/%20/g, '+')['replace'](/%5B/gi, '[')['replace'](/%5D/gi, ']');
        }
        cUz['exports'] = function(cUz, cUA, cUB) {
            if (!cUA)
                return cUz;
            var cUI;
            if (cUB)
                cUI = cUB(cUA);
            else if (cUC['isURLSearchParams'](cUA))
                cUI = cUA['toString']();
            else {
                var cUJ = [];
                cUC['forEach'](cUA, function(cUz, cUA) {
                    null == cUz || (cUC['isArray'](cUz) ? cUA += '[]' : cUz = [cUz],
                    cUC['forEach'](cUz, function(cUz) {
                        cUC['isDate'](cUz) ? cUz = cUz['toISOString']() : cUC['isObject'](cUz) && (cUz = JSON['stringify'](cUz)),
                        cUJ['push'](cUD(cUA) + '=' + cUD(cUz));
                    }));
                }),
                cUI = cUJ['join']('&');
            }
            return cUI && (cUz += (-0x1 === cUz['indexOf']('?') ? '?' : '&') + cUI),
            cUz;
        }
        ;
    }
    , function(cUN, cUO, cUP) {
        'use strict';
        var cUQ = cUP(0x24)
          , cUR = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
        cUN['exports'] = function(cUN) {
            var cUO, cUP, cUV, cUW = {};
            return cUN ? (cUQ['forEach'](cUN['split']('\x0a'), function(cUN) {
                if (cUV = cUN['indexOf'](':'),
                cUO = cUQ['trim'](cUN['substr'](0x0, cUV))['toLowerCase'](),
                cUP = cUQ['trim'](cUN['substr'](cUV + 0x1)),
                cUO) {
                    if (cUW[cUO] && 0x0 <= cUR['indexOf'](cUO))
                        return;
                    cUW[cUO] = 'set-cookie' === cUO ? (cUW[cUO] ? cUW[cUO] : [])['concat']([cUP]) : cUW[cUO] ? cUW[cUO] + ',\x20' + cUP : cUP;
                }
            }),
            cUW) : cUW;
        }
        ;
    }
    , function(cUY, cUZ, cV0) {
        'use strict';
        var cV1 = cV0(0x24);
        cUY['exports'] = cV1['isStandardBrowserEnv']() ? function() {
            function cUY(cUY) {
                var cUZ = cUY;
                return cV0 && (cV7['setAttribute']('href', cUZ),
                cUZ = cV7['href']),
                cV7['setAttribute']('href', cUZ),
                {
                    'href': cV7['href'],
                    'protocol': cV7['protocol'] ? cV7['protocol']['replace'](/:$/, '') : '',
                    'host': cV7['host'],
                    'search': cV7['search'] ? cV7['search']['replace'](/^\?/, '') : '',
                    'hash': cV7['hash'] ? cV7['hash']['replace'](/^#/, '') : '',
                    'hostname': cV7['hostname'],
                    'port': cV7['port'],
                    'pathname': '/' === cV7['pathname']['charAt'](0x0) ? cV7['pathname'] : '/' + cV7['pathname']
                };
            }
            var cUZ, cV0 = /(msie|trident)/i['test'](navigator['userAgent']), cV7 = document['createElement']('a');
            return cUZ = cUY(window['location']['href']),
            function(cV0) {
                var cV7 = cV1['isString'](cV0) ? cUY(cV0) : cV0;
                return cV7['protocol'] === cUZ['protocol'] && cV7['host'] === cUZ['host'];
            }
            ;
        }() : function() {
            return !0x0;
        }
        ;
    }
    , function(cVa, cVb, cVc) {
        'use strict';
        var cVd = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
        function cVe() {
            this['message'] = 'String\x20contains\x20an\x20invalid\x20character';
        }
        cVe['prototype'] = new Error(),
        cVe['prototype']['code'] = 0x5,
        cVe['prototype']['name'] = 'InvalidCharacterError',
        cVa['exports'] = function(cVa) {
            for (var cVb, cVc, cVi = cVa + '', cVj = '', cVk = 0x0, cVl = cVd; cVi['charAt'](0x0 | cVk) || (cVl = '=',
            cVk % 0x1); cVj += cVl['charAt'](0x3f & cVb >> 0x8 - cVk % 0x1 * 0x8)) {
                if (0xff < (cVc = cVi['charCodeAt'](cVk += 0.75)))
                    throw new cVe();
                cVb = cVb << 0x8 | cVc;
            }
            return cVj;
        }
        ;
    }
    , function(cVm, cVn, cVo) {
        'use strict';
        var cVp = cVo(0x24);
        cVm['exports'] = cVp['isStandardBrowserEnv']() ? {
            'write': function(cVm, cVn, cVo, cVt, cVu, cVv) {
                var cVw = [];
                cVw['push'](cVm + '=' + encodeURIComponent(cVn)),
                cVp['isNumber'](cVo) && cVw['push']('expires=' + new Date(cVo)['toGMTString']()),
                cVp['isString'](cVt) && cVw['push']('path=' + cVt),
                cVp['isString'](cVu) && cVw['push']('domain=' + cVu),
                !0x0 === cVv && cVw['push']('secure'),
                document['cookie'] = cVw['join'](';\x20');
            },
            'read': function(cVm) {
                var cVn = document['cookie']['match'](new RegExp('(^|;\x5cs*)(' + cVm + ')=([^;]*)'));
                return cVn ? decodeURIComponent(cVn[0x3]) : null;
            },
            'remove': function(cVm) {
                this['write'](cVm, '', Date['now']() - 0x5265c00);
            }
        } : {
            'write': function() {},
            'read': function() {
                return null;
            },
            'remove': function() {}
        };
    }
    , function(cVA, cVB, cVC) {
        'use strict';
        var cVD = cVC(0x24);
        function cVE() {
            this['handlers'] = [];
        }
        cVE['prototype']['use'] = function(cVA, cVB) {
            return this['handlers']['push']({
                'fulfilled': cVA,
                'rejected': cVB
            }),
            this['handlers']['length'] - 0x1;
        }
        ,
        cVE['prototype']['eject'] = function(cVA) {
            this['handlers'][cVA] && (this['handlers'][cVA] = null);
        }
        ,
        cVE['prototype']['forEach'] = function(cVA) {
            cVD['forEach'](this['handlers'], function(cVB) {
                null !== cVB && cVA(cVB);
            });
        }
        ,
        cVA['exports'] = cVE;
    }
    , function(cVK, cVL, cVM) {
        'use strict';
        var cVN = cVM(0x24)
          , cVO = cVM(0x7f)
          , cVP = cVM(0x61)
          , cVQ = cVM(0x57)
          , cVR = cVM(0x80)
          , cVS = cVM(0x81);
        function cVT(cVK) {
            cVK['cancelToken'] && cVK['cancelToken']['throwIfRequested']();
        }
        cVK['exports'] = function(cVK) {
            return cVT(cVK),
            cVK['baseURL'] && !cVR(cVK['url']) && (cVK['url'] = cVS(cVK['baseURL'], cVK['url'])),
            cVK['headers'] = cVK['headers'] || {},
            cVK['data'] = cVO(cVK['data'], cVK['headers'], cVK['transformRequest']),
            cVK['headers'] = cVN['merge'](cVK['headers']['common'] || {}, cVK['headers'][cVK['method']] || {}, cVK['headers'] || {}),
            cVN['forEach'](['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function(cVL) {
                delete cVK['headers'][cVL];
            }),
            (cVK['adapter'] || cVQ['adapter'])(cVK)['then'](function(cVL) {
                return cVT(cVK),
                cVL['data'] = cVO(cVL['data'], cVL['headers'], cVK['transformResponse']),
                cVL;
            }, function(cVL) {
                return cVP(cVL) || (cVT(cVK),
                cVL && cVL['response'] && (cVL['response']['data'] = cVO(cVL['response']['data'], cVL['response']['headers'], cVK['transformResponse']))),
                Promise['reject'](cVL);
            });
        }
        ;
    }
    , function(cVZ, cW0, cW1) {
        'use strict';
        var cW2 = cW1(0x24);
        cVZ['exports'] = function(cVZ, cW0, cW1) {
            return cW2['forEach'](cW1, function(cW1) {
                cVZ = cW1(cVZ, cW0);
            }),
            cVZ;
        }
        ;
    }
    , function(cW7, cW8, cW9) {
        'use strict';
        cW7['exports'] = function(cW7) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i['test'](cW7);
        }
        ;
    }
    , function(cWb, cWc, cWd) {
        'use strict';
        cWb['exports'] = function(cWb, cWc) {
            return cWc ? cWb['replace'](/\/+$/, '') + '/' + cWc['replace'](/^\/+/, '') : cWb;
        }
        ;
    }
    , function(cWg, cWh, cWi) {
        'use strict';
        var cWj = cWi(0x62);
        function cWk(cWg) {
            if ('function' != typeof cWg)
                throw new TypeError('executor\x20must\x20be\x20a\x20function.');
            var cWh;
            this['promise'] = new Promise(function(cWg) {
                cWh = cWg;
            }
            );
            var cWi = this;
            cWg(function(cWg) {
                cWi['reason'] || (cWi['reason'] = new cWj(cWg),
                cWh(cWi['reason']));
            });
        }
        cWk['prototype']['throwIfRequested'] = function() {
            if (this['reason'])
                throw this['reason'];
        }
        ,
        cWk['source'] = function() {
            var cWg;
            return {
                'token': new cWk(function(cWh) {
                    cWg = cWh;
                }
                ),
                'cancel': cWg
            };
        }
        ,
        cWg['exports'] = cWk;
    }
    , function(cWs, cWt, cWu) {
        'use strict';
        cWs['exports'] = function(cWs) {
            return function(cWt) {
                return cWs['apply'](null, cWt);
            }
            ;
        }
        ;
    }
    , function(cWx, cWy, cWz) {
        var cWA = cWz(0x63)
          , cWB = cWx['exports'];
        cWB['active'] = !0x0,
        cWB['menu2'] = 'rcY';
        var cWC = !0x0;
        cWB['toggleMenu'] = function(cWx) {
            menuHolder['style']['display'] = cWx ? 'block' : 'none',
            speakerDisplay['style']['display'] = cWx ? 'none' : 'block',
            chatHolder['style']['bottom'] = (cWx ? 0x14 : 0x8c) + 'px',
            voiceDisplay['style']['bottom'] = (cWx ? 0x12 : 0x87) + 'px',
            cWB['toggleMenuHider'](cWx),
            cWx && (endUI['style']['display'] = 'none',
            instructionHolder['style']['display'] = 'block',
            'block' != windowHolder['style']['display'] && (baseLinks['style']['display'] = 'block')),
            cWB['active'] = !0x0;
        }
        ,
        cWB['hideUI'] = function() {
            cWB['toggleMenu'](!0x1),
            inGameUI['style']['display'] = 'none',
            overlay['style']['display'] = 'none',
            vignette['style']['display'] = 'none',
            spectateUI['style']['display'] = 'none',
            aimRecticle['style']['display'] = 'none',
            instructionHolder['style']['display'] = 'none',
            baseLinks['style']['display'] = 'none',
            chatHolder['style']['bottom'] = '20px',
            voiceDisplay['style']['bottom'] = '18px',
            speakerDisplay['style']['right'] = '20px',
            purchaseHolder['style']['display'] = 'none',
            consentBlock['style']['display'] = 'none',
            cWB['active'] = !0x1;
        }
        ,
        cWB['hideDiscon'] = function() {
            chatHolder['style']['display'] = 'none',
            voiceDisplay['style']['display'] = 'none',
            speakerDisplay['style']['display'] = 'none',
            purchaseHolder['style']['display'] = 'none';
        }
        ,
        cWB['showEndScreen'] = function() {
            endTable['style']['display'] = 'none',
            matchVoteHolder['style']['display'] = 'none',
            teamTotal0['style']['display'] = 'none',
            teamTotal1['style']['display'] = 'none',
            endUI['style']['display'] = null,
            cWB['hideUI']();
        }
        ,
        cWB['toggleWindow'] = function(cWx, cWy) {
            windowHolder['style']['display'] = cWx ? 'block' : 'none',
            baseLinks['style']['display'] = cWx ? 'none' : 'block',
            instructions['innerHTML'] = cWx ? '' : cWy ? 'PRESS\x20START' : 'CLICK\x20TO\x20PLAY';
        }
        ,
        cWB['toggleMenuHider'] = function(cWx) {
            menuHider['style']['display'] = cWx ? 'block' : 'none',
            uiBase['classList']['toggle']('onMenu', cWx),
            gameNameHolder['style']['display'] = cWx ? null : 'none',
            spectButton['style']['display'] = cWC && cWx ? null : 'none',
            cWx && (spinUI['style']['display'] = 'none'),
            spinRespin['style']['display'] = 'none';
        }
        ,
        cWB['setShowSpect'] = function(cWx) {
            cWC = cWx,
            spectButton['style']['display'] = cWx ? null : 'none';
        }
        ,
        cWB['setShowSelTeam'] = function(cWx) {
            teamSelector['style']['display'] = cWx ? 'block' : 'none';
        }
        ,
        cWB['showError'] = function(cWx) {
            cWB['toggleMenu'](!0x0),
            instructions['innerHTML'] = cWx;
        }
        ,
        cWB['toggleGameUI'] = function(cWx) {
            var cWy = cWx && !window['spectating'];
            spectateUI['style']['display'] = window['spectating'] && cWx ? 'block' : 'none',
            window['spectating'] && (propInstruct['style']['display'] = 'none'),
            gameMessage['style']['display'] = cWy ? 'block' : 'none',
            topLeftHolder['style']['display'] = cWy ? 'block' : 'none',
            topRight['style']['display'] = cWx ? 'block' : 'none',
            reloadMsg['style']['display'] = cWy ? 'block' : 'none',
            bottomLeftHolder['style']['display'] = cWy ? 'block' : 'none',
            weaponDisplay['style']['display'] = cWy ? 'block' : 'none',
            bottomRight['style']['display'] = cWy ? 'block' : 'none',
            killCardHolder['style']['display'] = cWx ? 'none' : 'block',
            speakerDisplay['style']['right'] = (cWx ? 0x17c : 0x14) + 'px',
            chatHolder['style']['bottom'] = (cWy ? 0x8c : 0x14) + 'px',
            voiceDisplay['style']['bottom'] = (cWy ? 0x87 : 0x12) + 'px',
            overlay['style']['display'] = cWy ? 'block' : 'none',
            vignette['style']['display'] = cWy ? 'block' : 'none';
        }
        ,
        cWB['toggleControlUI'] = function(cWx) {
            window['loading'] && (cWx = !0x1),
            spectateUI['style']['display'] = window['spectating'] && cWx && !cWB['hideGameUI'] ? 'block' : 'none',
            inGameUI['style']['display'] = cWx && cWB['active'] && !cWB['hideGameUI'] ? 'block' : 'none',
            overlay['style']['display'] = cWx && cWB['active'] && !cWB['hideGameUI'] ? 'block' : 'none',
            vignette['style']['display'] = cWx && cWB['active'] && !cWB['hideGameUI'] ? 'block' : 'none',
            aimRecticle['style']['display'] = cWx && cWB['active'] ? 'block' : 'none',
            instructionHolder['style']['display'] = !cWx && cWB['active'] ? 'block' : 'none',
            aHolder['style']['display'] = cWx ? 'none' : 'block',
            toggleAd(!cWx),
            infoHolder['style']['display'] = cWx ? 'none' : null,
            chatHolder['style']['bottom'] = (cWx && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x8c : 0x14) + 'px',
            voiceDisplay['style']['bottom'] = (cWx && !window['spectating'] && 'block' == bottomLeftHolder['style']['display'] ? 0x87 : 0x12) + 'px',
            speakerDisplay['style']['display'] = cWx && cWB['active'] ? 'block' : 'none',
            endUI['style']['display'] && (menuHolder['style']['display'] = cWx ? 'none' : 'block',
            cWB['toggleMenuHider'](!cWx));
        }
        ;
        cWB['muhcBdwkc'] = function(cWx, cWy) {
            cWA['crosshairOpacity'] = cWy,
            cWA['crosshairScale'] = cWx;
        }
        ;
    }
    , function(cWP, cWQ) {
        cWP['exports'] = function() {
            var cWP;
            this['divs'] = [],
            this['update'] = function(cWQ) {
                for (var cWT = this['divs']['length'] - 0x1; 0x0 <= cWT; --cWT)
                    if (0x0 < (cWP = this['divs'][cWT])['delay'])
                        cWP['delay'] -= cWQ,
                        0x0 >= cWP['delay'] && (cWP['style']['display'] = 'inline-block');
                    else {
                        if (cWP['scale'] > cWP['minScale'] && (cWP['scale'] -= cWP['scaleSpeed'] * cWQ,
                        cWP['scale'] <= cWP['minScale'] && (cWP['scale'] = cWP['minScale']),
                        cWP['style']['fontSize'] = cWP['scale'] + 'px'),
                        cWP['scaleSpd'] && (cWP['startS'] += cWP['scaleSpd'] * cWQ,
                        cWP['style']['width'] = cWP['startS'] + 'px',
                        cWP['style']['height'] = cWP['startS'] + 'px'),
                        cWP['life'] -= cWQ,
                        0x0 >= cWP['life']) {
                            cWP['style']['display'] = 'none';
                            var cWU = cWP['callback'];
                            this['divs']['splice'](cWT, 0x1),
                            cWU && cWU();
                        }
                        if (cWP['fade'] && cWP['life'] <= cWP['fade'] && (cWP['style']['opacity'] = cWP['life'] / cWP['fade']),
                        cWP['srcA'] && cWP['srcA']['cnt'] && cWP['maxLife'] - cWP['life'] <= cWP['srcA']['tim']) {
                            var cWV = Math['floor'](cWP['srcA']['cnt'] * ((cWP['maxLife'] - cWP['life']) / cWP['srcA']['tim']));
                            cWP['src'] = './textures/' + cWP['srcA']['src'] + '_' + cWV + '.png';
                        }
                    }
            }
            ,
            this['animateText'] = function(cWP, cWQ, cWY, cWZ, cX0, cX1, cX2, cX3) {
                0x0 > this['divs']['indexOf'](cWP) && this['divs']['push'](cWP),
                cWP['delay'] = cX2,
                cX2 || (cWP['style']['display'] = 'inline-block'),
                cWP['style']['fontSize'] = cWY + 'px',
                cWP['scale'] = cWY,
                cWP['minScale'] = cWZ ? 0.4 * cWY : cWY,
                cWP['innerHTML'] = cWQ,
                cWP['scaleSpeed'] = cWZ,
                cWP['life'] = cX0,
                cWP['fade'] = cX1,
                cWP['style']['opacity'] = 0x1,
                cWP['callback'] = cX3;
            }
            ,
            this['animateDiv'] = function(cWP, cWQ, cX6, cX7, cX8, cX9) {
                0x0 > this['divs']['indexOf'](cWP) && this['divs']['push'](cWP),
                cWP['style']['display'] = 'block',
                cWP['life'] = cWQ,
                cWP['maxLife'] = cWQ,
                cWP['srcA'] = cX9,
                cX9 && (cWP['src'] = './textures/' + cX9['src'] + '_0.png'),
                cWP['style']['opacity'] = 0x1,
                cWP['fade'] = cX6,
                cX7 && (cWP['style']['width'] = cX7 + 'px',
                cWP['style']['height'] = cX7 + 'px',
                cWP['startS'] = cX7,
                cWP['scaleSpd'] = cX8);
            }
            ,
            this['reset'] = function() {
                for (var cWP = 0x0; cWP < this['divs']['length']; ++cWP)
                    this['divs'][cWP]['style']['display'] = 'none';
                this['divs']['length'] = 0x0;
            }
            ;
        }
        ;
    }
    , function(cXb, cXc, cXd) {
        const cXe = cXd(0x87)
          , cXf = cXd(0x7)['apiURL']
          , cXg = {
            'listMaps'(cXb, cXc, cXd) {
                cXe['get'](cXf + '/maps', {
                    'params': {
                        'index': cXb,
                        'accountId': cXc
                    }
                })['then'](cXb=>{
                    cXd(null, cXb['data']);
                }
                )['catch'](cXb=>{
                    cXd(cXb, cXb['response'] && cXb['response']['data']);
                }
                );
            },
            'listMods'(cXb, cXc) {
                cXe['get'](cXf + '/mods', {
                    'params': {
                        'accountId': cXb
                    }
                })['then'](cXb=>{
                    cXc(null, cXb['data']);
                }
                )['catch'](cXb=>{
                    cXc(cXb, cXb['response'] && cXb['response']['data']);
                }
                );
            },
            'searchMap'(cXb, cXc) {
                cXe['get'](cXf + '/search', {
                    'params': {
                        'type': 'map',
                        'val': cXb
                    }
                })['then'](cXb=>{
                    cXc(null, cXb['data']);
                }
                )['catch'](cXb=>{
                    cXc(cXb, cXb['response'] && cXb['response']['data']);
                }
                );
            },
            'getMapPreset'(cXb, cXc) {
                cXe['get'](cXf + '/config', {
                    'params': {
                        'mn': cXb
                    }
                })['then'](cXd=>{
                    var cXe = cXd['data'] || {};
                    cXc(cXb, cXe['da']);
                }
                )['catch'](()=>{
                    cXc(cXb, null);
                }
                );
            },
            'searchMod'(cXb, cXc) {
                cXe['get'](cXf + '/search', {
                    'params': {
                        'type': 'mod',
                        'val': cXb
                    }
                })['then'](cXb=>{
                    cXc(null, cXb['data']);
                }
                )['catch'](cXb=>{
                    cXc(cXb, cXb['response'] && cXb['response']['data']);
                }
                );
            }
        };
        cXb['exports'] = cXg;
    }
    , function(cXC, cXD, cXE) {
        cXC['exports'] = cXE(0x88);
    }
    , function(cXF, cXG, cXH) {
        'use strict';
        var cXI = cXH(0x22)
          , cXJ = cXH(0x64)
          , cXK = cXH(0x8a)
          , cXL = cXH(0x6a);
        function cXM(cXF) {
            var cXG = new cXK(cXF)
              , cXH = cXJ(cXK['prototype']['request'], cXG);
            return cXI['extend'](cXH, cXK['prototype'], cXG),
            cXI['extend'](cXH, cXG),
            cXH;
        }
        var cXQ = cXM(cXH(0x67));
        cXQ['Axios'] = cXK,
        cXQ['create'] = function(cXF) {
            return cXM(cXL(cXQ['defaults'], cXF));
        }
        ,
        cXQ['Cancel'] = cXH(0x6b),
        cXQ['CancelToken'] = cXH(0x96),
        cXQ['isCancel'] = cXH(0x66),
        cXQ['all'] = function(cXF) {
            return Promise['all'](cXF);
        }
        ,
        cXQ['spread'] = cXH(0x97),
        cXF['exports'] = cXQ,
        cXF['exports']['default'] = cXQ;
    }
    , function(cXT, cXU) {
        /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
        cXT['exports'] = function(cXT) {
            return null != cXT && null != cXT['constructor'] && 'function' == typeof cXT['constructor']['isBuffer'] && cXT['constructor']['isBuffer'](cXT);
        }
        ;
    }
    , function(cXW, cXX, cXY) {
        'use strict';
        var cXZ = cXY(0x22)
          , cY0 = cXY(0x65)
          , cY1 = cXY(0x8b)
          , cY2 = cXY(0x8c)
          , cY3 = cXY(0x6a);
        function cY4(cXW) {
            this['defaults'] = cXW,
            this['interceptors'] = {
                'request': new cY1(),
                'response': new cY1()
            };
        }
        cY4['prototype']['request'] = function(cXW) {
            'string' == typeof cXW ? (cXW = arguments[0x1] || {})['url'] = arguments[0x0] : cXW = cXW || {},
            (cXW = cY3(this['defaults'], cXW))['method'] = cXW['method'] ? cXW['method']['toLowerCase']() : 'get';
            var cXX = [cY2, void 0x0]
              , cXY = Promise['resolve'](cXW);
            for (this['interceptors']['request']['forEach'](function(cXW) {
                cXX['unshift'](cXW['fulfilled'], cXW['rejected']);
            }),
            this['interceptors']['response']['forEach'](function(cXW) {
                cXX['push'](cXW['fulfilled'], cXW['rejected']);
            }); cXX['length']; )
                cXY = cXY['then'](cXX['shift'](), cXX['shift']());
            return cXY;
        }
        ,
        cY4['prototype']['getUri'] = function(cXW) {
            return cXW = cY3(this['defaults'], cXW),
            cY0(cXW['url'], cXW['params'], cXW['paramsSerializer'])['replace'](/^\?/, '');
        }
        ,
        cXZ['forEach'](['delete', 'get', 'head', 'options'], function(cXW) {
            cY4['prototype'][cXW] = function(cXX, cXY) {
                return this['request'](cXZ['merge'](cXY || {}, {
                    'method': cXW,
                    'url': cXX
                }));
            }
            ;
        }),
        cXZ['forEach'](['post', 'put', 'patch'], function(cXW) {
            cY4['prototype'][cXW] = function(cXX, cXY, cY0) {
                return this['request'](cXZ['merge'](cY0 || {}, {
                    'method': cXW,
                    'url': cXX,
                    'data': cXY
                }));
            }
            ;
        }),
        cXW['exports'] = cY4;
    }
    , function(cYj, cYk, cYl) {
        'use strict';
        var cYm = cYl(0x22);
        function cYn() {
            this['handlers'] = [];
        }
        cYn['prototype']['use'] = function(cYj, cYk) {
            return this['handlers']['push']({
                'fulfilled': cYj,
                'rejected': cYk
            }),
            this['handlers']['length'] - 0x1;
        }
        ,
        cYn['prototype']['eject'] = function(cYj) {
            this['handlers'][cYj] && (this['handlers'][cYj] = null);
        }
        ,
        cYn['prototype']['forEach'] = function(cYj) {
            cYm['forEach'](this['handlers'], function(cYk) {
                null !== cYk && cYj(cYk);
            });
        }
        ,
        cYj['exports'] = cYn;
    }
    , function(cYt, cYu, cYv) {
        'use strict';
        var cYw = cYv(0x22)
          , cYx = cYv(0x8d)
          , cYy = cYv(0x66)
          , cYz = cYv(0x67)
          , cYA = cYv(0x94)
          , cYB = cYv(0x95);
        function cYC(cYt) {
            cYt['cancelToken'] && cYt['cancelToken']['throwIfRequested']();
        }
        cYt['exports'] = function(cYt) {
            return cYC(cYt),
            cYt['baseURL'] && !cYA(cYt['url']) && (cYt['url'] = cYB(cYt['baseURL'], cYt['url'])),
            cYt['headers'] = cYt['headers'] || {},
            cYt['data'] = cYx(cYt['data'], cYt['headers'], cYt['transformRequest']),
            cYt['headers'] = cYw['merge'](cYt['headers']['common'] || {}, cYt['headers'][cYt['method']] || {}, cYt['headers'] || {}),
            cYw['forEach'](['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function(cYu) {
                delete cYt['headers'][cYu];
            }),
            (cYt['adapter'] || cYz['adapter'])(cYt)['then'](function(cYu) {
                return cYC(cYt),
                cYu['data'] = cYx(cYu['data'], cYu['headers'], cYt['transformResponse']),
                cYu;
            }, function(cYu) {
                return cYy(cYu) || (cYC(cYt),
                cYu && cYu['response'] && (cYu['response']['data'] = cYx(cYu['response']['data'], cYu['response']['headers'], cYt['transformResponse']))),
                Promise['reject'](cYu);
            });
        }
        ;
    }
    , function(cYI, cYJ, cYK) {
        'use strict';
        var cYL = cYK(0x22);
        cYI['exports'] = function(cYI, cYJ, cYK) {
            return cYL['forEach'](cYK, function(cYK) {
                cYI = cYK(cYI, cYJ);
            }),
            cYI;
        }
        ;
    }
    , function(cYQ, cYR, cYS) {
        'use strict';
        var cYT = cYS(0x22);
        cYQ['exports'] = function(cYQ, cYR) {
            cYT['forEach'](cYQ, function(cYS, cYT) {
                cYT !== cYR && cYT['toUpperCase']() === cYR['toUpperCase']() && (cYQ[cYR] = cYS,
                delete cYQ[cYT]);
            });
        }
        ;
    }
    , function(cYY, cYZ, cZ0) {
        'use strict';
        var cZ1 = cZ0(0x69);
        cYY['exports'] = function(cYY, cYZ, cZ0) {
            var cZ5 = cZ0['config']['validateStatus'];
            !cZ5 || cZ5(cZ0['status']) ? cYY(cZ0) : cYZ(cZ1('Request\x20failed\x20with\x20status\x20code\x20' + cZ0['status'], cZ0['config'], null, cZ0['request'], cZ0));
        }
        ;
    }
    , function(cZ6, cZ7, cZ8) {
        'use strict';
        cZ6['exports'] = function(cZ6, cZ7, cZ8, cZc, cZd) {
            return cZ6['config'] = cZ7,
            cZ8 && (cZ6['code'] = cZ8),
            cZ6['request'] = cZc,
            cZ6['response'] = cZd,
            cZ6['isAxiosError'] = !0x0,
            cZ6['toJSON'] = function() {
                return {
                    'message': this['message'],
                    'name': this['name'],
                    'description': this['description'],
                    'number': this['number'],
                    'fileName': this['fileName'],
                    'lineNumber': this['lineNumber'],
                    'columnNumber': this['columnNumber'],
                    'stack': this['stack'],
                    'config': this['config'],
                    'code': this['code']
                };
            }
            ,
            cZ6;
        }
        ;
    }
    , function(cZe, cZf, cZg) {
        'use strict';
        var cZh = cZg(0x22)
          , cZi = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];
        cZe['exports'] = function(cZe) {
            var cZf, cZg, cZm, cZn = {};
            return cZe ? (cZh['forEach'](cZe['split']('\x0a'), function(cZe) {
                if (cZm = cZe['indexOf'](':'),
                cZf = cZh['trim'](cZe['substr'](0x0, cZm))['toLowerCase'](),
                cZg = cZh['trim'](cZe['substr'](cZm + 0x1)),
                cZf) {
                    if (cZn[cZf] && 0x0 <= cZi['indexOf'](cZf))
                        return;
                    cZn[cZf] = 'set-cookie' === cZf ? (cZn[cZf] ? cZn[cZf] : [])['concat']([cZg]) : cZn[cZf] ? cZn[cZf] + ',\x20' + cZg : cZg;
                }
            }),
            cZn) : cZn;
        }
        ;
    }
    , function(cZp, cZq, cZr) {
        'use strict';
        var cZs = cZr(0x22);
        cZp['exports'] = cZs['isStandardBrowserEnv']() ? function() {
            function cZp(cZp) {
                var cZq = cZp;
                return cZr && (cZy['setAttribute']('href', cZq),
                cZq = cZy['href']),
                cZy['setAttribute']('href', cZq),
                {
                    'href': cZy['href'],
                    'protocol': cZy['protocol'] ? cZy['protocol']['replace'](/:$/, '') : '',
                    'host': cZy['host'],
                    'search': cZy['search'] ? cZy['search']['replace'](/^\?/, '') : '',
                    'hash': cZy['hash'] ? cZy['hash']['replace'](/^#/, '') : '',
                    'hostname': cZy['hostname'],
                    'port': cZy['port'],
                    'pathname': '/' === cZy['pathname']['charAt'](0x0) ? cZy['pathname'] : '/' + cZy['pathname']
                };
            }
            var cZq, cZr = /(msie|trident)/i['test'](navigator['userAgent']), cZy = document['createElement']('a');
            return cZq = cZp(window['location']['href']),
            function(cZr) {
                var cZy = cZs['isString'](cZr) ? cZp(cZr) : cZr;
                return cZy['protocol'] === cZq['protocol'] && cZy['host'] === cZq['host'];
            }
            ;
        }() : function() {
            return !0x0;
        }
        ;
    }
    , function(cZB, cZC, cZD) {
        'use strict';
        var cZE = cZD(0x22);
        cZB['exports'] = cZE['isStandardBrowserEnv']() ? {
            'write': function(cZB, cZC, cZD, cZI, cZJ, cZK) {
                var cZL = [];
                cZL['push'](cZB + '=' + encodeURIComponent(cZC)),
                cZE['isNumber'](cZD) && cZL['push']('expires=' + new Date(cZD)['toGMTString']()),
                cZE['isString'](cZI) && cZL['push']('path=' + cZI),
                cZE['isString'](cZJ) && cZL['push']('domain=' + cZJ),
                !0x0 === cZK && cZL['push']('secure'),
                document['cookie'] = cZL['join'](';\x20');
            },
            'read': function(cZB) {
                var cZC = document['cookie']['match'](new RegExp('(^|;\x5cs*)(' + cZB + ')=([^;]*)'));
                return cZC ? decodeURIComponent(cZC[0x3]) : null;
            },
            'remove': function(cZB) {
                this['write'](cZB, '', Date['now']() - 0x5265c00);
            }
        } : {
            'write': function() {},
            'read': function() {
                return null;
            },
            'remove': function() {}
        };
    }
    , function(cZP, cZQ, cZR) {
        'use strict';
        cZP['exports'] = function(cZP) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i['test'](cZP);
        }
        ;
    }
    , function(cZT, cZU, cZV) {
        'use strict';
        cZT['exports'] = function(cZT, cZU) {
            return cZU ? cZT['replace'](/\/+$/, '') + '/' + cZU['replace'](/^\/+/, '') : cZT;
        }
        ;
    }
    , function(cZY, cZZ, d00) {
        'use strict';
        var d01 = d00(0x6b);
        function d02(cZY) {
            if ('function' != typeof cZY)
                throw new TypeError('executor\x20must\x20be\x20a\x20function.');
            var cZZ;
            this['promise'] = new Promise(function(cZY) {
                cZZ = cZY;
            }
            );
            var d00 = this;
            cZY(function(cZY) {
                d00['reason'] || (d00['reason'] = new d01(cZY),
                cZZ(d00['reason']));
            });
        }
        d02['prototype']['throwIfRequested'] = function() {
            if (this['reason'])
                throw this['reason'];
        }
        ,
        d02['source'] = function() {
            var cZY;
            return {
                'token': new d02(function(cZZ) {
                    cZY = cZZ;
                }
                ),
                'cancel': cZY
            };
        }
        ,
        cZY['exports'] = d02;
    }
    , function(d0a, d0b, d0c) {
        'use strict';
        d0a['exports'] = function(d0a) {
            return function(d0b) {
                return d0a['apply'](null, d0b);
            }
            ;
        }
        ;
    }
    , function(d0f, d0g, d0h) {
        d0h(0x4);
        var d0i = d0h(0x99);
        d0f['exports'] = function(d0f, d0g, d0h, d0m, d0n, d0o, d0p) {
            function d0q(d0f, d0g) {
                if (window['idleTimer'] = 0x0,
                d0D['keys'])
                    if (d0g && d0D['keys'][d0f] !== d0g && null != d0D['inputChanger'])
                        d0D['moveKeys'][d0D['inputChanger']] ? d0D['moveKeys'][d0D['inputChanger']] = d0f : d0D['streakKeys'][d0D['inputChanger'] - 0x12] ? d0D['streakKeys'][d0D['inputChanger'] - 0x12] = d0f : d0D[d0D['inputChanger']] = d0f,
                        d0D['checkForScroll'](),
                        saveVal('cont_' + d0D['inputChanger'], d0f),
                        showWindow(0x7, !0x0),
                        d0D['inputChanger'] = null;
                    else {
                        if (d0D['keys'][d0f] !== d0g && d0f == d0D['voiceKey'] && toggleRecord(d0g),
                        !d0D['enabled'])
                            return;
                        d0D['keys'][d0f] !== d0g && (d0D['keys'][d0f] = d0g,
                        0x0 <= d0D['moveKeys']['indexOf'](d0f) && d0D['updateMoveDir'](),
                        d0g && (d0f == d0D['swapKey'] ? d0D['wSwap'] = 0x1 : d0f == d0D['meleeKey'] ? d0D['wSwap'] = 0x2 : d0f == d0D['primKey'] ? d0D['wSwap'] = 0x3 : window['pressButton'](d0f)));
                    }
            }
            function d0t(d0f, d0g) {
                var d0h = d0f['which']
                  , d0i = d0f['keyCode'];
                d0g && (d0f['preventDefault'](),
                d0h = d0i = 0x2710 + d0f['which']),
                (d0h || d0i) == d0D['chatKey'] ? window['pressButton'](d0h || d0i) : document['activeElement'] != chatInput && (d0D['enabled'] && d0f['preventDefault'](),
                d0q(d0h || d0i || 0x0, 0x1));
            }
            function d0y(d0f, d0g) {
                var d0h = d0f['which']
                  , d0i = d0f['keyCode'];
                d0g && (d0f['preventDefault'](),
                d0h = d0i = 0x2710 + d0f['which']),
                d0D['enabled'] && d0f['preventDefault'](),
                d0q(d0h || d0i || 0x0, 0x0);
            }
            var d0D = this;
            this['gamepad'] = new d0i();
            var d0E = d0f['renderer']['domElement'];
            if (this['hasPointerlock'] = 'pointerLockElement'in document || 'mozPointerLockElement'in document || 'webkitPointerLockElement'in document,
            this['hasPointerlock']) {
                d0E['requestPointerLock'] = d0E['requestPointerLock'] || d0E['mozRequestPointerLock'] || d0E['webkitRequestPointerLock'];
                var d0F = function() {
                    d0D['enabled'] = document['pointerLockElement'] === d0E || document['mozPointerLockElement'] === d0E || document['webkitPointerLockElement'] === d0E,
                    (d0p['connected'] || d0n['singlePlayer']) && (d0D['enabled'] && enterGame(),
                    d0h['toggleControlUI'](d0D['enabled']));
                };
                document['addEventListener']('pointerlockchange', d0F, !0x1),
                document['addEventListener']('mozpointerlockchange', d0F, !0x1),
                document['addEventListener']('webkitpointerlockchange', d0F, !0x1);
            }
            this['isn'] = 0x0,
            this['tmpInputs'] = [],
            this['getISN'] = function() {
                return this['isn']++;
            }
            ,
            this['masterLock'] = !0x0,
            this['sensMlt'] = 0x1,
            this['sensAimMlt'] = 0x1,
            this['locked'] = !0x1,
            this['enabled'] = !0x1,
            d0f['camera']['rotation']['set'](0x0, 0x0, 0x0),
            this['pitchObject'] = new d0g['Object3D'](),
            this['pitchObject']['add'](d0f['camera']),
            this['object'] = new d0g['Object3D'](),
            this['object']['add'](this['pitchObject']);
            var d0G = Math['PI'] / 0x2
              , d0H = function(d0g) {
                if (d0D['enabled'] && !window['locked']) {
                    d0g['preventDefault'](),
                    window['idleTimer'] = 0x0;
                    var d0h = d0g['movementX'] || d0g['mozMovementX'] || d0g['webkitMovementX'] || 0x0
                      , d0i = d0g['movementY'] || d0g['mozMovementY'] || d0g['webkitMovementY'] || 0x0
                      , d0m = d0D['mouseDownR'] ? d0D['sensAimMlt'] : d0D['sensMlt']
                      , d0n = d0o['mouseSens'] * d0m * (d0D['target'] ? d0o['camChaseSen'] : 0x1) * (d0f['camera']['fov'] / d0f['fov']);
                    d0D['pitchObject']['rotation']['x'] -= d0i * d0n * (d0D['invertY'] ? -0x1 : 0x1),
                    d0D['unlockView'] || (d0D['pitchObject']['rotation']['x'] = Math['max'](-d0G, Math['min'](d0G, d0D['pitchObject']['rotation']['x']))),
                    d0D['object']['rotation']['y'] -= d0h * d0n,
                    d0D['yDr'] = d0D['pitchObject']['rotation']['x'] % Math['PI2'],
                    d0D['xDr'] = d0D['object']['rotation']['y'] % Math['PI2'];
                }
            };
            d0E['addEventListener']('mousemove', d0H, !0x1);
            var d0N = function(d0f) {
                if (!d0D['masterLock'])
                    switch (d0D['enabled'] || d0D['toggle'](!0x0),
                    document['activeElement'] == chatInput && chatInput['blur'](),
                    d0f['which']) {
                    case 0x3:
                        d0D['mouseDownR'] = 0x1,
                        window['spectating'] && window['spectMode'](0x1);
                        break;
                    default:
                        0x3 < d0f['which'] || 0x2 == d0f['which'] ? (d0f['preventDefault'](),
                        d0t(d0f, !0x0)) : (d0D['mouseDownL'] = 0x1,
                        window['spectating'] && window['spectMode'](-0x1));
                    }
            };
            d0E['addEventListener']('mousedown', d0N, !0x1),
            window['addEventListener']('mousedown', function(d0f) {
                d0D['enabled'] || (0x3 < d0f['which'] || 0x2 == d0f['which']) && (d0f['preventDefault'](),
                d0t(d0f, !0x0));
            }, !0x1);
            var d0Q = function(d0f) {
                if (!d0D['locked'])
                    switch (d0f['which']) {
                    case 0x3:
                        d0D['mouseDownR'] = 0x0;
                        break;
                    default:
                        0x3 < d0f['which'] || 0x2 == d0f['which'] ? (d0f['preventDefault'](),
                        d0y(d0f, !0x0)) : d0D['mouseDownL'] = 0x0;
                    }
            };
            d0E['addEventListener']('mouseup', d0Q, !0x1),
            window['addEventListener']('mouseup', function(d0f) {
                d0D['enabled'] || (0x3 < d0f['which'] || 0x2 == d0f['which']) && (d0f['preventDefault'](),
                d0y(d0f, !0x0));
            }, !0x1),
            this['specSpeed'] = 0x1;
            var d0T = function(d0f) {
                d0f = window['event'] || d0f;
                var d0g = -Math['max'](-0x1, Math['min'](0x1, d0f['wheelDelta'] || -d0f['detail']))
                  , d0h = 0x0 < d0g ? -0x1 : 0x1;
                return window['spectating'] && (window['spectTarget'] ? (d0D['followCamD'] -= 0x3 * d0h,
                d0D['followCamD'] < d0o['specMinD'] && (d0D['followCamD'] = d0o['specMinD']),
                d0D['followCamD'] > d0o['specMaxD'] && (d0D['followCamD'] = d0o['specMaxD'])) : (d0D['specSpeed'] += d0h,
                0x1 > d0D['specSpeed'] && (d0D['specSpeed'] = 0x1),
                0xa < d0D['specSpeed'] && (d0D['specSpeed'] = 0xa))),
                d0D['skipScroll'] ? d0D['skipScroll'] = !0x1 : d0D['scrollDelta'] = d0g,
                d0D['fakeKey'](0x4e20, 0x0),
                !0x1;
            }
              , d0U = function() {
                return null != d0D['inputChanger'] && (d0D['fakeKey'](0x4e20, 0x0),
                d0D['fakeKey'](0x4e20, 0x1)),
                !0x1;
            };
            d0E['addEventListener'] ? (d0E['addEventListener']('mousewheel', d0T, !0x1),
            d0E['addEventListener']('DOMMouseScroll', d0T, !0x1)) : myitem['attachEvent']('onmousewheel', d0T),
            window['addEventListener']('mousewheel', d0U, !0x1),
            window['addEventListener']('DOMMouseScroll', d0U, !0x1),
            this['xVel'] = 0x0,
            this['yVel'] = 0x0,
            this['zVel'] = 0x0;
            var d0Y = new d0g['Vector3'](0x0,0x0,0x0);
            for (let d0g in this['freeCam'] = function(d0g) {
                d0Y['set'](0x0, 0x0, 0x0),
                this['keys'][this['moveKeys'][0x0]] && (d0Y['z'] -= 0x1),
                this['keys'][this['moveKeys'][0x1]] && (d0Y['z'] += 0x1),
                this['keys'][this['moveKeys'][0x2]] && (d0Y['x'] -= 0x1),
                this['keys'][this['moveKeys'][0x3]] && (d0Y['x'] += 0x1),
                this['keys'][0x51] && (d0Y['y'] -= 0x1),
                this['keys'][0x45] && (d0Y['y'] += 0x1),
                d0Y['applyQuaternion'](d0f['camera']['getWorldQuaternion']());
                var d0h = (this['keys'][this['crouchKey']] ? 0.08 : 0.04) * this['specSpeed'] * d0g;
                d0D['object']['position']['add'](d0Y['multiplyScalar'](d0h)),
                d0f['camera']['position']['set'](0x0, 0x0, 0x0),
                d0f['updateFrustum']();
            }
            ,
            this['followCamD'] = d0o['specMinD'],
            this['followCam'] = function(d0g) {
                d0Y['set'](d0g['x'], d0g['y'] + d0g['height'], d0g['z']),
                d0D['object']['position']['lerp'](d0Y, 0.9),
                d0f['camera']['position']['set'](0x0, 0x0, this['followCamD']),
                d0f['camera']['updateProjectionMatrix'](),
                d0f['updateFrustum']();
            }
            ,
            this['setCamPosOff'] = function() {
                d0f['camera']['updateMatrixWorld'](),
                d0D['object']['position']['setFromMatrixPosition'](d0f['camera']['matrixWorld']),
                d0f['camera']['position']['set'](0x0, 0x0, 0x0);
            }
            ,
            this['update'] = function(d0g) {
                if (this['target']) {
                    var d0h = d0m['getAngleDst'](this['object']['rotation']['y'], this['target']['yD']);
                    this['object']['rotation']['y'] += d0h * d0g * d0o['camChaseTrn'],
                    d0h = d0m['getAngleDst'](d0D['pitchObject']['rotation']['x'], this['target']['xD']),
                    this['pitchObject']['rotation']['x'] += d0h * d0g * d0o['camChaseTrn'],
                    d0h = d0m['getDistance3D'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], this['target']['x'], this['target']['y'], this['target']['z']) * d0g * d0o['camChaseSpd'];
                    var d0i = d0m['getDirection'](this['object']['position']['z'], this['object']['position']['x'], this['target']['z'], this['target']['x'])
                      , d0n = d0m['getXDir'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], this['target']['x'], this['target']['y'], this['target']['z']);
                    this['object']['position']['x'] -= d0h * Math['sin'](d0i) * Math['cos'](d0n),
                    this['object']['position']['y'] += d0h * Math['sin'](d0n),
                    this['object']['position']['z'] -= d0h * Math['cos'](d0i) * Math['cos'](d0n),
                    d0f['updateFrustum']();
                }
            }
            ,
            this['KjFgF'] = function(d0f, d0g, d0h) {
                var d0i = d0m['getXDir'](this['object']['position']['x'], this['object']['position']['y'], this['object']['position']['z'], d0f, d0g, d0h)
                  , d0n = d0m['getDirection'](this['object']['position']['z'], this['object']['position']['x'], d0h, d0f);
                this['target'] = {
                    'xD': d0i,
                    'yD': d0n,
                    'x': d0f + d0o['camChaseDst'] * Math['sin'](d0n) * Math['cos'](d0i),
                    'y': d0g - d0o['camChaseDst'] * Math['sin'](d0i),
                    'z': d0h + d0o['camChaseDst'] * Math['cos'](d0n) * Math['cos'](d0i)
                };
            }
            ,
            this['QopwyCmt'] = function(d0g, d0h, d0i) {
                d0D['object']['position']['set'](d0g, d0h, d0i),
                d0f['camera']['updateProjectionMatrix'](),
                d0f['updateFrustum']();
            }
            ,
            this['DlBLfkPUll'] = function(d0g, d0h, d0i) {
                d0f['camera']['rotation']['y'] = d0g,
                d0f['camera']['rotation']['x'] = d0h,
                d0f['camera']['rotation']['z'] = d0i;
            }
            ,
            this['scrollToSwap'] = !0x0,
            this['jumpKey'] = parseInt(getSavedVal('cont_jumpKey') || 0x20),
            this['crouchKey'] = parseInt(getSavedVal('cont_crouchKey') || 0x10),
            this['meleeKey'] = parseInt(getSavedVal('cont_meleeKey') || 0x51),
            this['swapKey'] = parseInt(getSavedVal('cont_swapKey') || 0x45),
            this['primKey'] = parseInt(getSavedVal('cont_primKey') || 0x54),
            this['reloadKey'] = parseInt(getSavedVal('cont_reloadKey') || 0x52),
            this['sprayKey'] = parseInt(getSavedVal('cont_sprayKey') || 0x46),
            this['inspKey'] = parseInt(getSavedVal('cont_inspKey') || 0x58),
            this['aimKey'] = parseInt(getSavedVal('cont_aimKey') || 0x43),
            this['chatKey'] = parseInt(getSavedVal('cont_chatKey') || 0xd),
            this['voiceKey'] = parseInt(getSavedVal('cont_voiceKey') || 0x56),
            this['listKey'] = parseInt(getSavedVal('cont_listKey') || 0x9),
            this['interactKey'] = parseInt(getSavedVal('cont_interactKey') || 0x47),
            this['dropKey'] = parseInt(getSavedVal('cont_dropKey') || 0x5a),
            this['streakKeys'] = [parseInt(getSavedVal('cont_18') || 0x31), parseInt(getSavedVal('cont_19') || 0x32), parseInt(getSavedVal('cont_20') || 0x33), parseInt(getSavedVal('cont_21') || 0x34)],
            this['moveKeys'] = [parseInt(getSavedVal('cont_0') || 0x57), parseInt(getSavedVal('cont_1') || 0x53), parseInt(getSavedVal('cont_2') || 0x41), parseInt(getSavedVal('cont_3') || 0x44)],
            this['moveDirs'] = [[0x0, -0x1], [0x0, 0x1], [-0x1, 0x0], [0x1, 0x0]],
            this['checkForScroll'] = function() {
                for (var d0f = ['jumpKey', 'crouchKey', 'meleeKey', 'swapKey', 'primKey', 'reloadKey', 'sprayKey', 'inspKey', 'aimKey', 'chatKey', 'voiceKey', 'listKey', 'interactKey', 'dropKey'], d0g = 0x0; d0g < d0f['length']; d0g++)
                    if (0x4e20 == d0D[d0f[d0g]])
                        return void (d0D['scrollToSwap'] = !0x1);
                return 0x0 <= d0D['streakKeys']['indexOf'](0x4e20) || 0x0 <= d0D['moveKeys']['indexOf'](0x4e20) ? void (d0D['scrollToSwap'] = !0x1) : void (d0D['scrollToSwap'] = !0x0);
            }
            ,
            this['checkForScroll'](),
            this['updateMoveDir'] = function() {
                for (var d0f = 0x0, d0g = 0x0, d0h = 0x0; d0h < d0D['moveKeys']['length']; ++d0h)
                    d0D['keys'][d0D['moveKeys'][d0h]] && (d0f += d0D['moveDirs'][d0h][0x0],
                    d0g += d0D['moveDirs'][d0h][0x1]);
                this['moveDir'] = 0x0 == d0f && 0x0 == d0g ? null : Math['atan2'](d0g, d0f);
            }
            ,
            window['addEventListener']('keydown', d0t, !0x1),
            window['addEventListener']('keyup', d0y, !0x1),
            this['mapping'] = {
                'JUMP': {
                    'INPUT': 'button_1',
                    'KEY': 'jumpKey'
                },
                'CROUCH': {
                    'INPUT': 'button_2',
                    'KEY': 'crouchKey'
                },
                'RELOAD': {
                    'INPUT': 'button_3',
                    'KEY': 'reloadKey'
                },
                'AIM': {
                    'INPUT': 'shoulder_bottom_left',
                    'KEY': 'aimKey'
                },
                'SWAP': {
                    'INPUT': 'button_4',
                    'KEY': 'swapKey'
                },
                'SWAP_SECONDARY': {
                    'INPUT': 'shoulder_top_left',
                    'KEY': 'swapKey'
                },
                'SWAP_MELEE': {
                    'INPUT': 'shoulder_top_right',
                    'KEY': 'meleeKey'
                },
                'SHOOT': {
                    'INPUT': ['shoulder_bottom_right', 0.5],
                    'KEY': null,
                    'MOUSE': !0x0
                },
                'PLAYER_LIST': {
                    'INPUT': 'select',
                    'KEY': 'listKey'
                },
                'VOICE': {
                    'INPUT': 'd_pad_up',
                    'KEY': 'voiceKey'
                },
                'SPRAY': {
                    'INPUT': 'd_pad_down',
                    'KEY': 'sprayKey'
                },
                'PICKUP': {
                    'INPUT': 'd_pad_left',
                    'KEY': 'interactKey'
                },
                'DROP': {
                    'INPUT': 'd_pad_right',
                    'KEY': 'dropKey'
                }
            },
            this['mapping']) {
                var d1n = Array['isArray'](this['mapping'][d0g]['INPUT']) ? this['mapping'][d0g]['INPUT'][0x0] : this['mapping'][d0g]['INPUT']
                  , d1o = !!Array['isArray'](this['mapping'][d0g]['INPUT']) && this['mapping'][d0g]['INPUT'][0x1];
                this['gamepad']['on']('press', d1n, d0f=>{
                    this['mapping'][d0g]['MOUSE'] ? (d0f['value'] >= d1o || !0x1 === d1o) && this['fakeMouse'](0x0) : this['mapping'][d0g]['KEY'] && this['fakeKey'](this[this['mapping'][d0g]['KEY']]);
                }
                ),
                this['gamepad']['on']('release', d1n, ()=>{
                    this['mapping'][d0g]['MOUSE'] ? this['fakeMouse'](0x1) : this['fakeKey'](this[this['mapping'][d0g]['KEY']], 0x1);
                }
                );
            }
            this['gamepad']['on']('hold', 'stick_axis_left', d0f=>{
                -0.3 > d0f['value'][0x1] ? (this['fakeKey'](this['moveKeys'][0x1], 0x1),
                this['fakeKey'](this['moveKeys'][0x0])) : this['fakeKey'](this['moveKeys'][0x0], 0x1),
                0.3 < d0f['value'][0x1] ? (this['fakeKey'](this['moveKeys'][0x0], 0x1),
                this['fakeKey'](this['moveKeys'][0x1])) : this['fakeKey'](this['moveKeys'][0x1], 0x1),
                -0.3 > d0f['value'][0x0] ? (this['fakeKey'](this['moveKeys'][0x3], 0x1),
                this['fakeKey'](this['moveKeys'][0x2])) : this['fakeKey'](this['moveKeys'][0x2], 0x1),
                0.3 < d0f['value'][0x0] ? (this['fakeKey'](this['moveKeys'][0x2], 0x1),
                this['fakeKey'](this['moveKeys'][0x3])) : this['fakeKey'](this['moveKeys'][0x3], 0x1);
            }
            ),
            this['gamepad']['on']('release', 'stick_axis_left', ()=>{
                this['fakeKey'](this['moveKeys'][0x0], 0x1),
                this['fakeKey'](this['moveKeys'][0x1], 0x1),
                this['fakeKey'](this['moveKeys'][0x2], 0x1),
                this['fakeKey'](this['moveKeys'][0x3], 0x1);
            }
            ),
            this['gamepad']['on']('hold', 'stick_axis_right', d0f=>{
                this['fakeMouse'](0x2, 0x28 * this['applyDeadzone'](d0f['value'][0x0], 0.25), 22.5 * this['applyDeadzone'](d0f['value'][0x1], 0.25));
            }
            ),
            this['gamepad']['on']('press', 'start', ()=>{
                d0D['toggle'](!d0D['enabled']);
            }
            ),
            this['applyDeadzone'] = function(d0f, d0g) {
                let d0h = (Math['abs'](d0f) - d0g) / (0x1 - d0g);
                return 0x0 > d0h && (d0h = 0x0),
                d0h * (0x0 < d0f ? 0x1 : -0x1);
            }
            ,
            this['fakeKey'] = function(d0f, d0g=0x0) {
                var d0h = {
                    'preventDefault': function() {},
                    'keyCode': d0f,
                    'which': d0f
                };
                0x0 == d0g && d0t(d0h),
                0x1 == d0g && d0y(d0h);
            }
            ,
            this['fakeMouse'] = function(d0f=0x0, d0g=0x0, d0h=0x0, d0i=0x0) {
                var d0m = {
                    'preventDefault': function() {},
                    'movementX': d0g,
                    'movementY': d0h,
                    'which': d0i
                };
                0x0 == d0f && d0N(d0m),
                0x1 == d0f && d0Q(d0m),
                0x2 == d0f && d0H(d0m);
            }
            ,
            this['toggle'] = function(d0f) {
                this['locked'] || this['masterLock'] || ('block' == windowHolder['style']['display'] ? d0f && d0h['toggleWindow'](!0x1, this['gamepad']['_connected']) : d0f ? d0E['requestPointerLock']() : document['exitPointerLock']());
            }
            ,
            this['disable'] = function() {
                d0D['toggle'](!0x1),
                d0D['locked'] = !0x0;
            }
            ,
            this['reset'] = function() {
                this['mouseDownL'] = 0x0,
                this['mouseDownR'] = 0x0,
                this['keys'] = {},
                this['tmpInputs']['length'] = 0x0,
                this['wSwap'] = 0x0,
                this['scrollDelta'] = 0x0,
                this['xDr'] = 0x0,
                this['yDr'] = 0x0,
                this['isn'] = 0x0,
                this['moveDir'] = null,
                this['skipScroll'] = !0x1,
                this['inputChanger'] = null,
                this['target'] = null,
                this['locked'] = !0x1,
                d0D['pitchObject']['rotation']['x'] = 0x0,
                d0D['object']['rotation']['y'] = 0x0,
                d0f['camera']['rotation']['set'](0x0, 0x0, 0x0);
            }
            ;
        }
        ;
    }
    , function(d1E, d1F) {
        d1E['exports'] = function() {
            void 0x0 !== window['navigator']['getGamepads'] || window['navigator']['webkitGetGamepads'];
            var d1E = window['requestAnimationFrame'] || window['webkitRequestAnimationFrame'] || window['mozRequestAnimationFrame'] || null
              , d1F = window['cancelAnimationFrame'] || window['webkitCancelAnimationFrame'] || window['mozCancelAnimationFrame'] || null;
            this['_connected'] = !0x1,
            this['_gamepad'] = null,
            this['_events'] = {
                'gamepad': {},
                'axes': {}
            },
            this['_keyMapping'] = {
                'gamepad': {
                    'button_1': 0x0,
                    'button_2': 0x1,
                    'button_3': 0x2,
                    'button_4': 0x3,
                    'shoulder_top_left': 0x4,
                    'shoulder_top_right': 0x5,
                    'shoulder_bottom_left': 0x6,
                    'shoulder_bottom_right': 0x7,
                    'select': 0x8,
                    'start': 0x9,
                    'stick_button_left': 0xa,
                    'stick_button_right': 0xb,
                    'd_pad_up': 0xc,
                    'd_pad_down': 0xd,
                    'd_pad_left': 0xe,
                    'd_pad_right': 0xf
                },
                'axes': {
                    'stick_axis_left': [0x0, 0x2],
                    'stick_axis_right': [0x2, 0x4]
                }
            },
            this['_threshold'] = 0.3,
            this['_listeners'] = [];
            var d1I = this;
            this['_handleGamepadConnected'] = function(d1F) {
                d1I['_connected'] || (d1I['_connected'] = !0x0,
                d1I['_gamepad'] = d1F['gamepad'],
                d1I['_events']['gamepad'] = {},
                d1I['_events']['axes'] = {},
                d1I['_handleGamepadEventListener'](d1F['gamepad']),
                d1I['_handleGamepadAxisEventListener'](d1F['gamepad']),
                d1I['_requestAnimation'] = d1E(d1I['_loop']['bind'](d1I)));
            }
            ,
            this['_handleGamepadDisconnected'] = function() {
                d1F(d1I['_requestAnimation']),
                d1I['_requestAnimation'] = null,
                d1I['_connected'] = !0x1,
                d1I['_events']['gamepad'] = null,
                d1I['_events']['axes'] = null,
                d1I['_gamepad'] = null;
            }
            ,
            this['_handleGamepadEventListener'] = function(d1E) {
                var d1F = d1I;
                d1E && d1E['connected'] && d1E['buttons']['forEach'](function(d1E, d1I) {
                    var d1O = function(d1E, d1F) {
                        var d1I = [];
                        return Object['keys'](d1F)['forEach'](function(d1O) {
                            d1F[d1O] === d1E ? d1I['push'](d1O) : Array['isArray'](d1F[d1O]) && -0x1 !== d1F[d1O]['indexOf'](d1E) && d1I['push'](d1O);
                        }),
                        d1I;
                    }(d1I, d1F['_keyMapping']['gamepad']);
                    d1O && d1O['forEach'](function(d1I) {
                        d1E['pressed'] ? (!d1F['_events']['gamepad'][d1I] && (d1F['_events']['gamepad'][d1I] = {
                            'pressed': !0x0,
                            'hold': !0x1,
                            'released': !0x1
                        }),
                        d1F['_events']['gamepad'][d1I]['value'] = d1E['value']) : !d1E['pressed'] && d1F['_events']['gamepad'][d1I] && (d1F['_events']['gamepad'][d1I]['released'] = !0x0,
                        d1F['_events']['gamepad'][d1I]['hold'] = !0x1);
                    });
                });
            }
            ,
            this['_handleGamepadAxisEventListener'] = function(d1E) {
                var d1F = d1I;
                d1E && d1E['connected'] && Object['keys'](d1I['_keyMapping']['axes'])['forEach'](function(d1I) {
                    var d1X = Array['prototype']['slice']['apply'](d1E['axes'], d1F['_keyMapping']['axes'][d1I]);
                    Math['abs'](d1X[0x0]) > d1F['_threshold'] || Math['abs'](d1X[0x1]) > d1F['_threshold'] ? d1F['_events']['axes'][d1I] = {
                        'pressed': !d1F['_events']['axes'][d1I],
                        'hold': !!d1F['_events']['axes'][d1I],
                        'released': !0x1,
                        'value': d1X
                    } : d1F['_events']['axes'][d1I] && (d1F['_events']['axes'][d1I] = {
                        'pressed': !0x1,
                        'hold': !0x1,
                        'released': !0x0,
                        'value': d1X
                    });
                });
            }
            ,
            this['_handleEvent'] = function(d1E, d1F) {
                d1F[d1E]['pressed'] ? (d1I['trigger']('press', d1E, d1F[d1E]['value']),
                d1F[d1E]['pressed'] = !0x1,
                d1F[d1E]['hold'] = !0x0) : d1F[d1E]['hold'] ? d1I['trigger']('hold', d1E, d1F[d1E]['value']) : d1F[d1E]['released'] && (d1I['trigger']('release', d1E, d1F[d1E]['value']),
                delete d1F[d1E]);
            }
            ,
            this['_loop'] = function() {
                var d1F = navigator['getGamepads'] ? navigator['getGamepads']() : navigator['webkitGetGamepads'] ? navigator['webkitGetGamepads'] : [];
                if (!d1F)
                    return d1I['_handleGamepadDisconnected']();
                d1I['_gamepad'] = d1F[0x0],
                d1F[0x0] && d1F[0x0]['connected'] && (d1I['_handleGamepadEventListener'](d1F[0x0]),
                d1I['_handleGamepadAxisEventListener'](d1F[0x0])),
                d1I['_events']['gamepad'] && Object['keys'](d1I['_events']['gamepad'])['forEach'](function(d1E) {
                    d1I['_handleEvent'](d1E, d1I['_events']['gamepad']);
                }),
                d1I['_events']['axes'] && Object['keys'](d1I['_events']['axes'])['forEach'](function(d1E) {
                    d1I['_handleEvent'](d1E, d1I['_events']['axes']);
                }),
                d1I['_requestAnimation'] && (d1I['_requestAnimation'] = d1E(d1I['_loop']['bind'](d1I)));
            }
            ,
            this['on'] = function(d1E, d1F, d25, d26) {
                'string' == typeof d1E && d1E['match'](/\s+/) && (d1E = d1E['split'](/\s+/g)),
                'string' == typeof d1F && d1F['match'](/\s+/) && (d1F = d1F['split'](/\s+/g)),
                Array['isArray'](d1E) ? d1E['forEach'](function(d1E) {
                    d1I['on'](d1E, d1F, d25, d26);
                }) : Array['isArray'](d1F) ? d1F['forEach'](function(d1F) {
                    d1I['on'](d1E, d1F, d25, d26);
                }) : d1I['_listeners']['push']({
                    'type': d1E,
                    'button': d1F,
                    'callback': d25,
                    'options': d26,
                    'rumble': this['rumble']
                });
            }
            ,
            this['off'] = function(d1E, d1F) {
                'string' == typeof d1E && d1E['match'](/\s+/) && (d1E = d1E['split'](/\s+/g)),
                'string' == typeof d1F && d1F['match'](/\s+/) && (d1F = d1F['split'](/\s+/g)),
                Array['isArray'](d1E) ? d1E['forEach'](function(d1E) {
                    d1I['off'](d1E, d1F);
                }) : Array['isArray'](d1F) ? d1F['forEach'](function(d1F) {
                    d1I['off'](d1E, d1F);
                }) : d1I['_listeners'] = d1I['_listeners']['filter'](function(d1I) {
                    return d1I['type'] !== d1E && d1I['button'] !== d1F;
                });
            }
            ,
            this['trigger'] = function(d1E, d1F, d2g) {
                d1I['_listeners'] && d1I['_listeners']['forEach'](function(d1I) {
                    d1I['type'] === d1E && d1I['button'] === d1F && d1I['callback']({
                        'type': d1I['type'],
                        'button': d1I['button'],
                        'value': d2g,
                        'event': d1I,
                        'timestamp': Date['now']()
                    });
                });
            }
            ,
            this['rumble'] = function(d1E, d1F) {
                d1I['_gamepad'] && d1I['_gamepad']['vibrationActuator'] && 'dual-rumble' == d1I['_gamepad']['vibrationActuator']['type'] && d1I['_gamepad']['vibrationActuator']['playEffect'] && d1I['_gamepad']['vibrationActuator']['playEffect']('dual-rumble', {
                    'startDelay': 0x0,
                    'duration': d1E || 0xc8,
                    'weakMagnitude': 0.5 * (d1F || 0.5),
                    'strongMagnitude': d1F || 0.5
                });
            }
            ,
            window['addEventListener']('MozGamepadConnected', this['_handleGamepadConnected'], !0x1),
            window['addEventListener']('MozGamepadDisconnected', this['_handleGamepadDisconnected'], !0x1),
            window['addEventListener']('gamepadconnected', this['_handleGamepadConnected'], !0x1),
            window['addEventListener']('gamepaddisconnected', this['_handleGamepadDisconnected'], !0x1);
        }
        ;
    }
    , function(d2k, d2l, d2m) {
        const d2n = d2m(0x9b)['words']
          , d2o = d2m(0x9c)['array'];
        d2k['exports'] = class {
            constructor(d2k={}) {
                Object['assign'](this, {
                    'list': d2k['emptyList'] && [] || Array['prototype']['concat']['apply'](d2n, [d2o, d2k['list'] || []]),
                    'exclude': d2k['exclude'] || [],
                    'placeHolder': d2k['placeHolder'] || '*',
                    'regex': d2k['regex'] || /[^a-zA-Z0-9|\$|\@]|\^/g,
                    'replaceRegex': d2k['replaceRegex'] || /\w/g
                });
            }
            ['isProfane'](d2k) {
                return 0x0 < this['list']['filter'](d2l=>{
                    const d2m = new RegExp('\x5cb' + d2l['replace'](/(\W)/g, '\x5c$1') + '\x5cb','gi');
                    return !this['exclude']['includes'](d2l['toLowerCase']()) && d2m['test'](d2k);
                }
                )['length'] || !0x1;
            }
            ['replaceWord'](d2k) {
                return d2k['replace'](this['regex'], '')['replace'](this['replaceRegex'], this['placeHolder']);
            }
            ['clean'](d2k) {
                return d2k['split'](/\b/)['map'](d2k=>this['isProfane'](d2k) ? this['replaceWord'](d2k) : d2k)['join']('');
            }
            ['addWords']() {
                let d2k = Array['from'](arguments);
                this['list']['push'](...d2k),
                d2k['map'](d2k=>d2k['toLowerCase']())['forEach'](d2k=>{
                    this['exclude']['includes'](d2k) && this['exclude']['splice'](this['exclude']['indexOf'](d2k), 0x1);
                }
                );
            }
            ['removeWords']() {
                this['exclude']['push'](...Array['from'](arguments)['map'](d2k=>d2k['toLowerCase']()));
            }
        }
        ;
    }
    , function(d2A) {
        d2A['exports'] = {
            'words': ['ahole', 'anus', 'ash0le', 'ash0les', 'asholes', 'ass', 'Ass\x20Monkey', 'Assface', 'assh0le', 'assh0lez', 'asshole', 'assholes', 'assholz', 'asswipe', 'azzhole', 'bassterds', 'bastard', 'bastards', 'bastardz', 'basterds', 'basterdz', 'Biatch', 'bitch', 'bitches', 'Blow\x20Job', 'boffing', 'butthole', 'buttwipe', 'c0ck', 'c0cks', 'c0k', 'Carpet\x20Muncher', 'cawk', 'cawks', 'Clit', 'cnts', 'cntz', 'cock', 'cockhead', 'cock-head', 'cocks', 'CockSucker', 'cock-sucker', 'crap', 'cum', 'cunt', 'cunts', 'cuntz', 'dick', 'dild0', 'dild0s', 'dildo', 'dildos', 'dilld0', 'dilld0s', 'dominatricks', 'dominatrics', 'dominatrix', 'dyke', 'enema', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'fag', 'fag1t', 'faget', 'fagg1t', 'faggit', 'faggot', 'fagg0t', 'fagit', 'fags', 'fagz', 'faig', 'faigs', 'fart', 'flipping\x20the\x20bird', 'fuck', 'fucker', 'fuckin', 'fucking', 'fucks', 'Fudge\x20Packer', 'fuk', 'Fukah', 'Fuken', 'fuker', 'Fukin', 'Fukk', 'Fukkah', 'Fukken', 'Fukker', 'Fukkin', 'g00k', 'God-damned', 'h00r', 'h0ar', 'h0re', 'hells', 'hoar', 'hoor', 'hoore', 'jackoff', 'jap', 'japs', 'jerk-off', 'jisim', 'jiss', 'jizm', 'jizz', 'knob', 'knobs', 'knobz', 'kunt', 'kunts', 'kuntz', 'Lezzian', 'Lipshits', 'Lipshitz', 'masochist', 'masokist', 'massterbait', 'masstrbait', 'masstrbate', 'masterbaiter', 'masterbate', 'masterbates', 'Motha\x20Fucker', 'Motha\x20Fuker', 'Motha\x20Fukkah', 'Motha\x20Fukker', 'Mother\x20Fucker', 'Mother\x20Fukah', 'Mother\x20Fuker', 'Mother\x20Fukkah', 'Mother\x20Fukker', 'mother-fucker', 'Mutha\x20Fucker', 'Mutha\x20Fukah', 'Mutha\x20Fuker', 'Mutha\x20Fukkah', 'Mutha\x20Fukker', 'n1gr', 'nastt', 'nigger;', 'nigur;', 'niiger;', 'niigr;', 'orafis', 'orgasim;', 'orgasm', 'orgasum', 'oriface', 'orifice', 'orifiss', 'packi', 'packie', 'packy', 'paki', 'pakie', 'paky', 'pecker', 'peeenus', 'peeenusss', 'peenus', 'peinus', 'pen1s', 'penas', 'penis', 'penis-breath', 'penus', 'penuus', 'Phuc', 'Phuck', 'Phuk', 'Phuker', 'Phukker', 'polac', 'polack', 'polak', 'Poonani', 'pr1c', 'pr1ck', 'pr1k', 'pusse', 'pussee', 'pussy', 'puuke', 'puuker', 'queer', 'queers', 'queerz', 'qweers', 'qweerz', 'qweir', 'recktum', 'rectum', 'retard', 'sadist', 'scank', 'schlong', 'screwing', 'semen', 'sex', 'sexy', 'Sh!t', 'sh1t', 'sh1ter', 'sh1ts', 'sh1tter', 'sh1tz', 'shit', 'shits', 'shitter', 'Shitty', 'Shity', 'shitz', 'Shyt', 'Shyte', 'Shytty', 'Shyty', 'skanck', 'skank', 'skankee', 'skankey', 'skanks', 'Skanky', 'slag', 'slut', 'sluts', 'Slutty', 'slutz', 'son-of-a-bitch', 'tit', 'turd', 'va1jina', 'vag1na', 'vagiina', 'vagina', 'vaj1na', 'vajina', 'vullva', 'vulva', 'w0p', 'wh00r', 'wh0re', 'whore', 'xrated', 'xxx', 'b!+ch', 'bitch', 'blowjob', 'clit', 'arschloch', 'fuck', 'shit', 'ass', 'asshole', 'b!tch', 'b17ch', 'b1tch', 'bastard', 'bi+ch', 'boiolas', 'buceta', 'c0ck', 'cawk', 'chink', 'cipa', 'clits', 'cock', 'cum', 'cunt', 'dildo', 'dirsa', 'ejakulate', 'fatass', 'fcuk', 'fuk', 'fux0r', 'hoer', 'hore', 'jism', 'kawk', 'l3itch', 'l3i+ch', 'lesbian', 'masturbate', 'masterbat*', 'masterbat3', 'motherfucker', 's.o.b.', 'mofo', 'nazi', 'nigga', 'nigger', 'nutsack', 'phuck', 'pimpis', 'pusse', 'pussy', 'scrotum', 'sh!t', 'shemale', 'shi+', 'sh!+', 'slut', 'smut', 'teets', 'tits', 'boobs', 'b00bs', 'teez', 'testical', 'testicle', 'titt', 'w00se', 'jackoff', 'wank', 'whoar', 'whore', '*damn', '*dyke', '*fuck*', '*shit*', '@$$', 'amcik', 'andskota', 'arse*', 'assrammer', 'ayir', 'bi7ch', 'bitch*', 'bollock*', 'breasts', 'butt-pirate', 'cabron', 'cazzo', 'chraa', 'chuj', 'Cock*', 'cunt*', 'd4mn', 'daygo', 'dego', 'dick*', 'dike*', 'dupa', 'dziwka', 'ejackulate', 'Ekrem*', 'Ekto', 'enculer', 'faen', 'fag*', 'fanculo', 'fanny', 'feces', 'feg', 'Felcher', 'ficken', 'fitt*', 'Flikker', 'foreskin', 'Fotze', 'Fu(*', 'fuk*', 'futkretzn', 'gook', 'guiena', 'h0r', 'h4x0r', 'hell', 'helvete', 'hoer*', 'honkey', 'Huevon', 'hui', 'injun', 'jizz', 'kanker*', 'kike', 'klootzak', 'kraut', 'knulle', 'kuk', 'kuksuger', 'Kurac', 'kurwa', 'kusi*', 'kyrpa*', 'lesbo', 'mamhoon', 'masturbat*', 'merd*', 'mibun', 'monkleigh', 'mouliewop', 'muie', 'mulkku', 'muschi', 'nazis', 'nepesaurio', 'nigger*', 'orospu', 'paska*', 'perse', 'picka', 'pierdol*', 'pillu*', 'pimmel', 'piss*', 'pizda', 'poontsee', 'poop', 'porn', 'p0rn', 'pr0n', 'preteen', 'pula', 'pule', 'puta', 'puto', 'qahbeh', 'queef*', 'rautenberg', 'schaffer', 'scheiss*', 'schlampe', 'schmuck', 'screw', 'sh!t*', 'sharmuta', 'sharmute', 'shipal', 'shiz', 'skribz', 'skurwysyn', 'sphencter', 'spic', 'spierdalaj', 'splooge', 'suka', 'b00b*', 'testicle*', 'titt*', 'twat', 'vittu', 'wank*', 'wetback*', 'wichser', 'wop*', 'yed', 'zabourah']
        };
    }
    , function(d2B, d2C, d2D) {
        d2B['exports'] = {
            'object': d2D(0x9d),
            'array': d2D(0x9e),
            'regex': d2D(0x9f)
        };
    }
    , function(d2E, d2F) {
        d2E['exports'] = {
            '4r5e': 0x1,
            '5h1t': 0x1,
            '5hit': 0x1,
            'a55': 0x1,
            'anal': 0x1,
            'anus': 0x1,
            'ar5e': 0x1,
            'arrse': 0x1,
            'arse': 0x1,
            'ass': 0x1,
            'ass-fucker': 0x1,
            'asses': 0x1,
            'assfucker': 0x1,
            'assfukka': 0x1,
            'asshole': 0x1,
            'assholes': 0x1,
            'asswhole': 0x1,
            'a_s_s': 0x1,
            'b!tch': 0x1,
            'b00bs': 0x1,
            'b17ch': 0x1,
            'b1tch': 0x1,
            'ballbag': 0x1,
            'balls': 0x1,
            'ballsack': 0x1,
            'bastard': 0x1,
            'beastial': 0x1,
            'beastiality': 0x1,
            'bellend': 0x1,
            'bestial': 0x1,
            'bestiality': 0x1,
            'bi+ch': 0x1,
            'biatch': 0x1,
            'bitch': 0x1,
            'bitcher': 0x1,
            'bitchers': 0x1,
            'bitches': 0x1,
            'bitchin': 0x1,
            'bitching': 0x1,
            'bloody': 0x1,
            'blow job': 0x1,
            'blowjob': 0x1,
            'blowjobs': 0x1,
            'boiolas': 0x1,
            'bollock': 0x1,
            'bollok': 0x1,
            'boner': 0x1,
            'boob': 0x1,
            'boobs': 0x1,
            'booobs': 0x1,
            'boooobs': 0x1,
            'booooobs': 0x1,
            'booooooobs': 0x1,
            'breasts': 0x1,
            'buceta': 0x1,
            'bugger': 0x1,
            'bum': 0x1,
            'bunny fucker': 0x1,
            'butt': 0x1,
            'butthole': 0x1,
            'buttmuch': 0x1,
            'buttplug': 0x1,
            'c0ck': 0x1,
            'c0cksucker': 0x1,
            'carpet muncher': 0x1,
            'cawk': 0x1,
            'chink': 0x1,
            'cipa': 0x1,
            'cl1t': 0x1,
            'clit': 0x1,
            'clitoris': 0x1,
            'clits': 0x1,
            'cnut': 0x1,
            'cock': 0x1,
            'cock-sucker': 0x1,
            'cockface': 0x1,
            'cockhead': 0x1,
            'cockmunch': 0x1,
            'cockmuncher': 0x1,
            'cocks': 0x1,
            'cocksuck': 0x1,
            'cocksucked': 0x1,
            'cocksucker': 0x1,
            'cocksucking': 0x1,
            'cocksucks': 0x1,
            'cocksuka': 0x1,
            'cocksukka': 0x1,
            'cok': 0x1,
            'cokmuncher': 0x1,
            'coksucka': 0x1,
            'coon': 0x1,
            'cox': 0x1,
            'crap': 0x1,
            'cum': 0x1,
            'cummer': 0x1,
            'cumming': 0x1,
            'cums': 0x1,
            'cumshot': 0x1,
            'cunilingus': 0x1,
            'cunillingus': 0x1,
            'cunnilingus': 0x1,
            'cunt': 0x1,
            'cuntlick': 0x1,
            'cuntlicker': 0x1,
            'cuntlicking': 0x1,
            'cunts': 0x1,
            'cyalis': 0x1,
            'cyberfuc': 0x1,
            'cyberfuck': 0x1,
            'cyberfucked': 0x1,
            'cyberfucker': 0x1,
            'cyberfuckers': 0x1,
            'cyberfucking': 0x1,
            'd1ck': 0x1,
            'damn': 0x1,
            'dick': 0x1,
            'dickhead': 0x1,
            'dildo': 0x1,
            'dildos': 0x1,
            'dink': 0x1,
            'dinks': 0x1,
            'dirsa': 0x1,
            'dlck': 0x1,
            'dog-fucker': 0x1,
            'doggin': 0x1,
            'dogging': 0x1,
            'donkeyribber': 0x1,
            'doosh': 0x1,
            'duche': 0x1,
            'dyke': 0x1,
            'ejaculate': 0x1,
            'ejaculated': 0x1,
            'ejaculates': 0x1,
            'ejaculating': 0x1,
            'ejaculatings': 0x1,
            'ejaculation': 0x1,
            'ejakulate': 0x1,
            'f u c k': 0x1,
            'f u c k e r': 0x1,
            'f4nny': 0x1,
            'fag': 0x1,
            'fagging': 0x1,
            'faggitt': 0x1,
            'faggot': 0x1,
            'faggs': 0x1,
            'fagot': 0x1,
            'fagots': 0x1,
            'fags': 0x1,
            'fanny': 0x1,
            'fannyflaps': 0x1,
            'fannyfucker': 0x1,
            'fanyy': 0x1,
            'fatass': 0x1,
            'fcuk': 0x1,
            'fcuker': 0x1,
            'fcuking': 0x1,
            'feck': 0x1,
            'fecker': 0x1,
            'felching': 0x1,
            'fellate': 0x1,
            'fellatio': 0x1,
            'fingerfuck': 0x1,
            'fingerfucked': 0x1,
            'fingerfucker': 0x1,
            'fingerfuckers': 0x1,
            'fingerfucking': 0x1,
            'fingerfucks': 0x1,
            'fistfuck': 0x1,
            'fistfucked': 0x1,
            'fistfucker': 0x1,
            'fistfuckers': 0x1,
            'fistfucking': 0x1,
            'fistfuckings': 0x1,
            'fistfucks': 0x1,
            'flange': 0x1,
            'fook': 0x1,
            'fooker': 0x1,
            'fuck': 0x1,
            'fucka': 0x1,
            'fucked': 0x1,
            'fucker': 0x1,
            'fuckers': 0x1,
            'fuckhead': 0x1,
            'fuckheads': 0x1,
            'fuckin': 0x1,
            'fucking': 0x1,
            'fuckings': 0x1,
            'fuckingshitmotherfucker': 0x1,
            'fuckme': 0x1,
            'fucks': 0x1,
            'fuckwhit': 0x1,
            'fuckwit': 0x1,
            'fudge packer': 0x1,
            'fudgepacker': 0x1,
            'fuk': 0x1,
            'fuker': 0x1,
            'fukker': 0x1,
            'fukkin': 0x1,
            'fuks': 0x1,
            'fukwhit': 0x1,
            'fukwit': 0x1,
            'fux': 0x1,
            'fux0r': 0x1,
            'f_u_c_k': 0x1,
            'gangbang': 0x1,
            'gangbanged': 0x1,
            'gangbangs': 0x1,
            'gaylord': 0x1,
            'gaysex': 0x1,
            'goatse': 0x1,
            'God': 0x1,
            'god-dam': 0x1,
            'god-damned': 0x1,
            'goddamn': 0x1,
            'goddamned': 0x1,
            'hardcoresex': 0x1,
            'hell': 0x1,
            'heshe': 0x1,
            'hoar': 0x1,
            'hoare': 0x1,
            'hoer': 0x1,
            'homo': 0x1,
            'hore': 0x1,
            'horniest': 0x1,
            'horny': 0x1,
            'hotsex': 0x1,
            'jack-off': 0x1,
            'jackoff': 0x1,
            'jap': 0x1,
            'jerk-off': 0x1,
            'jism': 0x1,
            'jiz': 0x1,
            'jizm': 0x1,
            'jizz': 0x1,
            'kawk': 0x1,
            'knob': 0x1,
            'knobead': 0x1,
            'knobed': 0x1,
            'knobend': 0x1,
            'knobhead': 0x1,
            'knobjocky': 0x1,
            'knobjokey': 0x1,
            'kock': 0x1,
            'kondum': 0x1,
            'kondums': 0x1,
            'kum': 0x1,
            'kummer': 0x1,
            'kumming': 0x1,
            'kums': 0x1,
            'kunilingus': 0x1,
            'l3i+ch': 0x1,
            'l3itch': 0x1,
            'labia': 0x1,
            'lust': 0x1,
            'lusting': 0x1,
            'm0f0': 0x1,
            'm0fo': 0x1,
            'm45terbate': 0x1,
            'ma5terb8': 0x1,
            'ma5terbate': 0x1,
            'masochist': 0x1,
            'master-bate': 0x1,
            'masterb8': 0x1,
            'masterbat*': 0x1,
            'masterbat3': 0x1,
            'masterbate': 0x1,
            'masterbation': 0x1,
            'masterbations': 0x1,
            'masturbate': 0x1,
            'mo-fo': 0x1,
            'mof0': 0x1,
            'mofo': 0x1,
            'mothafuck': 0x1,
            'mothafucka': 0x1,
            'mothafuckas': 0x1,
            'mothafuckaz': 0x1,
            'mothafucked': 0x1,
            'mothafucker': 0x1,
            'mothafuckers': 0x1,
            'mothafuckin': 0x1,
            'mothafucking': 0x1,
            'mothafuckings': 0x1,
            'mothafucks': 0x1,
            'mother fucker': 0x1,
            'motherfuck': 0x1,
            'motherfucked': 0x1,
            'motherfucker': 0x1,
            'motherfuckers': 0x1,
            'motherfuckin': 0x1,
            'motherfucking': 0x1,
            'motherfuckings': 0x1,
            'motherfuckka': 0x1,
            'motherfucks': 0x1,
            'muff': 0x1,
            'mutha': 0x1,
            'muthafecker': 0x1,
            'muthafuckker': 0x1,
            'muther': 0x1,
            'mutherfucker': 0x1,
            'n1gga': 0x1,
            'n1gger': 0x1,
            'nazi': 0x1,
            'nigg3r': 0x1,
            'nigg4h': 0x1,
            'nigga': 0x1,
            'niggah': 0x1,
            'niggas': 0x1,
            'niggaz': 0x1,
            'nigger': 0x1,
            'niggers': 0x1,
            'nob': 0x1,
            'nob jokey': 0x1,
            'nobhead': 0x1,
            'nobjocky': 0x1,
            'nobjokey': 0x1,
            'numbnuts': 0x1,
            'nutsack': 0x1,
            'orgasim': 0x1,
            'orgasims': 0x1,
            'orgasm': 0x1,
            'orgasms': 0x1,
            'p0rn': 0x1,
            'pawn': 0x1,
            'pecker': 0x1,
            'penis': 0x1,
            'penisfucker': 0x1,
            'phonesex': 0x1,
            'phuck': 0x1,
            'phuk': 0x1,
            'phuked': 0x1,
            'phuking': 0x1,
            'phukked': 0x1,
            'phukking': 0x1,
            'phuks': 0x1,
            'phuq': 0x1,
            'pigfucker': 0x1,
            'pimpis': 0x1,
            'piss': 0x1,
            'pissed': 0x1,
            'pisser': 0x1,
            'pissers': 0x1,
            'pisses': 0x1,
            'pissflaps': 0x1,
            'pissin': 0x1,
            'pissing': 0x1,
            'pissoff': 0x1,
            'poop': 0x1,
            'porn': 0x1,
            'porno': 0x1,
            'pornography': 0x1,
            'pornos': 0x1,
            'prick': 0x1,
            'pricks': 0x1,
            'pron': 0x1,
            'pube': 0x1,
            'pusse': 0x1,
            'pussi': 0x1,
            'pussies': 0x1,
            'pussy': 0x1,
            'pussys': 0x1,
            'rectum': 0x1,
            'retard': 0x1,
            'rimjaw': 0x1,
            'rimming': 0x1,
            's hit': 0x1,
            's.o.b.': 0x1,
            'sadist': 0x1,
            'schlong': 0x1,
            'screwing': 0x1,
            'scroat': 0x1,
            'scrote': 0x1,
            'scrotum': 0x1,
            'semen': 0x1,
            'sex': 0x1,
            'sh!+': 0x1,
            'sh!t': 0x1,
            'sh1t': 0x1,
            'shag': 0x1,
            'shagger': 0x1,
            'shaggin': 0x1,
            'shagging': 0x1,
            'shemale': 0x1,
            'shi+': 0x1,
            'shit': 0x1,
            'shitdick': 0x1,
            'shite': 0x1,
            'shited': 0x1,
            'shitey': 0x1,
            'shitfuck': 0x1,
            'shitfull': 0x1,
            'shithead': 0x1,
            'shiting': 0x1,
            'shitings': 0x1,
            'shits': 0x1,
            'shitted': 0x1,
            'shitter': 0x1,
            'shitters': 0x1,
            'shitting': 0x1,
            'shittings': 0x1,
            'shitty': 0x1,
            'skank': 0x1,
            'slut': 0x1,
            'sluts': 0x1,
            'smegma': 0x1,
            'smut': 0x1,
            'snatch': 0x1,
            'son-of-a-bitch': 0x1,
            'spac': 0x1,
            'spunk': 0x1,
            's_h_i_t': 0x1,
            't1tt1e5': 0x1,
            't1tties': 0x1,
            'teets': 0x1,
            'teez': 0x1,
            'testical': 0x1,
            'testicle': 0x1,
            'tit': 0x1,
            'titfuck': 0x1,
            'tits': 0x1,
            'titt': 0x1,
            'tittie5': 0x1,
            'tittiefucker': 0x1,
            'titties': 0x1,
            'tittyfuck': 0x1,
            'tittywank': 0x1,
            'titwank': 0x1,
            'tosser': 0x1,
            'turd': 0x1,
            'tw4t': 0x1,
            'twat': 0x1,
            'twathead': 0x1,
            'twatty': 0x1,
            'twunt': 0x1,
            'twunter': 0x1,
            'v14gra': 0x1,
            'v1gra': 0x1,
            'vagina': 0x1,
            'viagra': 0x1,
            'vulva': 0x1,
            'w00se': 0x1,
            'wang': 0x1,
            'wank': 0x1,
            'wanker': 0x1,
            'wanky': 0x1,
            'whoar': 0x1,
            'whore': 0x1,
            'willies': 0x1,
            'willy': 0x1,
            'xrated': 0x1,
            'xxx': 0x1
        };
    }
    , function(d2G, d2H) {
        d2G['exports'] = ['4r5e', '5h1t', '5hit', 'a55', 'anal', 'anus', 'ar5e', 'arrse', 'arse', 'ass', 'ass-fucker', 'asses', 'assfucker', 'assfukka', 'asshole', 'assholes', 'asswhole', 'a_s_s', 'b!tch', 'b00bs', 'b17ch', 'b1tch', 'ballbag', 'balls', 'ballsack', 'bastard', 'beastial', 'beastiality', 'bellend', 'bestial', 'bestiality', 'bi+ch', 'biatch', 'bitch', 'bitcher', 'bitchers', 'bitches', 'bitchin', 'bitching', 'bloody', 'blow\x20job', 'blowjob', 'blowjobs', 'boiolas', 'bollock', 'bollok', 'boner', 'boob', 'boobs', 'booobs', 'boooobs', 'booooobs', 'booooooobs', 'breasts', 'buceta', 'bugger', 'bum', 'bunny\x20fucker', 'butt', 'butthole', 'buttmuch', 'buttplug', 'c0ck', 'c0cksucker', 'carpet\x20muncher', 'cawk', 'chink', 'cipa', 'cl1t', 'clit', 'clitoris', 'clits', 'cnut', 'cock', 'cock-sucker', 'cockface', 'cockhead', 'cockmunch', 'cockmuncher', 'cocks', 'cocksuck', 'cocksucked', 'cocksucker', 'cocksucking', 'cocksucks', 'cocksuka', 'cocksukka', 'cok', 'cokmuncher', 'coksucka', 'coon', 'cox', 'crap', 'cum', 'cummer', 'cumming', 'cums', 'cumshot', 'cunilingus', 'cunillingus', 'cunnilingus', 'cunt', 'cuntlick', 'cuntlicker', 'cuntlicking', 'cunts', 'cyalis', 'cyberfuc', 'cyberfuck', 'cyberfucked', 'cyberfucker', 'cyberfuckers', 'cyberfucking', 'd1ck', 'damn', 'dick', 'dickhead', 'dildo', 'dildos', 'dink', 'dinks', 'dirsa', 'dlck', 'dog-fucker', 'doggin', 'dogging', 'donkeyribber', 'doosh', 'duche', 'dyke', 'ejaculate', 'ejaculated', 'ejaculates', 'ejaculating', 'ejaculatings', 'ejaculation', 'ejakulate', 'f\x20u\x20c\x20k', 'f\x20u\x20c\x20k\x20e\x20r', 'f4nny', 'fag', 'fagging', 'faggitt', 'faggot', 'faggs', 'fagot', 'fagots', 'fags', 'fanny', 'fannyflaps', 'fannyfucker', 'fanyy', 'fatass', 'fcuk', 'fcuker', 'fcuking', 'feck', 'fecker', 'felching', 'fellate', 'fellatio', 'fingerfuck', 'fingerfucked', 'fingerfucker', 'fingerfuckers', 'fingerfucking', 'fingerfucks', 'fistfuck', 'fistfucked', 'fistfucker', 'fistfuckers', 'fistfucking', 'fistfuckings', 'fistfucks', 'flange', 'fook', 'fooker', 'fuck', 'fucka', 'fucked', 'fucker', 'fuckers', 'fuckhead', 'fuckheads', 'fuckin', 'fucking', 'fuckings', 'fuckingshitmotherfucker', 'fuckme', 'fucks', 'fuckwhit', 'fuckwit', 'fudge\x20packer', 'fudgepacker', 'fuk', 'fuker', 'fukker', 'fukkin', 'fuks', 'fukwhit', 'fukwit', 'fux', 'fux0r', 'f_u_c_k', 'gangbang', 'gangbanged', 'gangbangs', 'gaylord', 'gaysex', 'goatse', 'God', 'god-dam', 'god-damned', 'goddamn', 'goddamned', 'hardcoresex', 'hell', 'heshe', 'hoar', 'hoare', 'hoer', 'homo', 'hore', 'horniest', 'horny', 'hotsex', 'jack-off', 'jackoff', 'jap', 'jerk-off', 'jism', 'jiz', 'jizm', 'jizz', 'kawk', 'knob', 'knobead', 'knobed', 'knobend', 'knobhead', 'knobjocky', 'knobjokey', 'kock', 'kondum', 'kondums', 'kum', 'kummer', 'kumming', 'kums', 'kunilingus', 'l3i+ch', 'l3itch', 'labia', 'lust', 'lusting', 'm0f0', 'm0fo', 'm45terbate', 'ma5terb8', 'ma5terbate', 'masochist', 'master-bate', 'masterb8', 'masterbat*', 'masterbat3', 'masterbate', 'masterbation', 'masterbations', 'masturbate', 'mo-fo', 'mof0', 'mofo', 'mothafuck', 'mothafucka', 'mothafuckas', 'mothafuckaz', 'mothafucked', 'mothafucker', 'mothafuckers', 'mothafuckin', 'mothafucking', 'mothafuckings', 'mothafucks', 'mother\x20fucker', 'motherfuck', 'motherfucked', 'motherfucker', 'motherfuckers', 'motherfuckin', 'motherfucking', 'motherfuckings', 'motherfuckka', 'motherfucks', 'muff', 'mutha', 'muthafecker', 'muthafuckker', 'muther', 'mutherfucker', 'n1gga', 'n1gger', 'nazi', 'nigg3r', 'nigg4h', 'nigga', 'niggah', 'niggas', 'niggaz', 'nigger', 'niggers', 'nob', 'nob\x20jokey', 'nobhead', 'nobjocky', 'nobjokey', 'numbnuts', 'nutsack', 'orgasim', 'orgasims', 'orgasm', 'orgasms', 'p0rn', 'pawn', 'pecker', 'penis', 'penisfucker', 'phonesex', 'phuck', 'phuk', 'phuked', 'phuking', 'phukked', 'phukking', 'phuks', 'phuq', 'pigfucker', 'pimpis', 'piss', 'pissed', 'pisser', 'pissers', 'pisses', 'pissflaps', 'pissin', 'pissing', 'pissoff', 'poop', 'porn', 'porno', 'pornography', 'pornos', 'prick', 'pricks', 'pron', 'pube', 'pusse', 'pussi', 'pussies', 'pussy', 'pussys', 'rectum', 'retard', 'rimjaw', 'rimming', 's\x20hit', 's.o.b.', 'sadist', 'schlong', 'screwing', 'scroat', 'scrote', 'scrotum', 'semen', 'sex', 'sh!+', 'sh!t', 'sh1t', 'shag', 'shagger', 'shaggin', 'shagging', 'shemale', 'shi+', 'shit', 'shitdick', 'shite', 'shited', 'shitey', 'shitfuck', 'shitfull', 'shithead', 'shiting', 'shitings', 'shits', 'shitted', 'shitter', 'shitters', 'shitting', 'shittings', 'shitty', 'skank', 'slut', 'sluts', 'smegma', 'smut', 'snatch', 'son-of-a-bitch', 'spac', 'spunk', 's_h_i_t', 't1tt1e5', 't1tties', 'teets', 'teez', 'testical', 'testicle', 'tit', 'titfuck', 'tits', 'titt', 'tittie5', 'tittiefucker', 'titties', 'tittyfuck', 'tittywank', 'titwank', 'tosser', 'turd', 'tw4t', 'twat', 'twathead', 'twatty', 'twunt', 'twunter', 'v14gra', 'v1gra', 'vagina', 'viagra', 'vulva', 'w00se', 'wang', 'wank', 'wanker', 'wanky', 'whoar', 'whore', 'willies', 'willy', 'xrated', 'xxx'];
    }
    , function(d2I, d2J) {
        d2I['exports'] = /\b(4r5e|5h1t|5hit|a55|anal|anus|ar5e|arrse|arse|ass|ass-fucker|asses|assfucker|assfukka|asshole|assholes|asswhole|a_s_s|b!tch|b00bs|b17ch|b1tch|ballbag|balls|ballsack|bastard|beastial|beastiality|bellend|bestial|bestiality|bi\+ch|biatch|bitch|bitcher|bitchers|bitches|bitchin|bitching|bloody|blow job|blowjob|blowjobs|boiolas|bollock|bollok|boner|boob|boobs|booobs|boooobs|booooobs|booooooobs|breasts|buceta|bugger|bum|bunny fucker|butt|butthole|buttmuch|buttplug|c0ck|c0cksucker|carpet muncher|cawk|chink|cipa|cl1t|clit|clitoris|clits|cnut|cock|cock-sucker|cockface|cockhead|cockmunch|cockmuncher|cocks|cocksuck|cocksucked|cocksucker|cocksucking|cocksucks|cocksuka|cocksukka|cok|cokmuncher|coksucka|coon|cox|crap|cum|cummer|cumming|cums|cumshot|cunilingus|cunillingus|cunnilingus|cunt|cuntlick|cuntlicker|cuntlicking|cunts|cyalis|cyberfuc|cyberfuck|cyberfucked|cyberfucker|cyberfuckers|cyberfucking|d1ck|damn|dick|dickhead|dildo|dildos|dink|dinks|dirsa|dlck|dog-fucker|doggin|dogging|donkeyribber|doosh|duche|dyke|ejaculate|ejaculated|ejaculates|ejaculating|ejaculatings|ejaculation|ejakulate|f u c k|f u c k e r|f4nny|fag|fagging|faggitt|faggot|faggs|fagot|fagots|fags|fanny|fannyflaps|fannyfucker|fanyy|fatass|fcuk|fcuker|fcuking|feck|fecker|felching|fellate|fellatio|fingerfuck|fingerfucked|fingerfucker|fingerfuckers|fingerfucking|fingerfucks|fistfuck|fistfucked|fistfucker|fistfuckers|fistfucking|fistfuckings|fistfucks|flange|fook|fooker|fuck|fucka|fucked|fucker|fuckers|fuckhead|fuckheads|fuckin|fucking|fuckings|fuckingshitmotherfucker|fuckme|fucks|fuckwhit|fuckwit|fudge packer|fudgepacker|fuk|fuker|fukker|fukkin|fuks|fukwhit|fukwit|fux|fux0r|f_u_c_k|gangbang|gangbanged|gangbangs|gaylord|gaysex|goatse|God|god-dam|god-damned|goddamn|goddamned|hardcoresex|hell|heshe|hoar|hoare|hoer|homo|hore|horniest|horny|hotsex|jack-off|jackoff|jap|jerk-off|jism|jiz|jizm|jizz|kawk|knob|knobead|knobed|knobend|knobhead|knobjocky|knobjokey|kock|kondum|kondums|kum|kummer|kumming|kums|kunilingus|l3i\+ch|l3itch|labia|lust|lusting|m0f0|m0fo|m45terbate|ma5terb8|ma5terbate|masochist|master-bate|masterb8|masterbat*|masterbat3|masterbate|masterbation|masterbations|masturbate|mo-fo|mof0|mofo|mothafuck|mothafucka|mothafuckas|mothafuckaz|mothafucked|mothafucker|mothafuckers|mothafuckin|mothafucking|mothafuckings|mothafucks|mother fucker|motherfuck|motherfucked|motherfucker|motherfuckers|motherfuckin|motherfucking|motherfuckings|motherfuckka|motherfucks|muff|mutha|muthafecker|muthafuckker|muther|mutherfucker|n1gga|n1gger|nazi|nigg3r|nigg4h|nigga|niggah|niggas|niggaz|nigger|niggers|nob|nob jokey|nobhead|nobjocky|nobjokey|numbnuts|nutsack|orgasim|orgasims|orgasm|orgasms|p0rn|pawn|pecker|penis|penisfucker|phonesex|phuck|phuk|phuked|phuking|phukked|phukking|phuks|phuq|pigfucker|pimpis|piss|pissed|pisser|pissers|pisses|pissflaps|pissin|pissing|pissoff|poop|porn|porno|pornography|pornos|prick|pricks|pron|pube|pusse|pussi|pussies|pussy|pussys|rectum|retard|rimjaw|rimming|s hit|s.o.b.|sadist|schlong|screwing|scroat|scrote|scrotum|semen|sex|sh!\+|sh!t|sh1t|shag|shagger|shaggin|shagging|shemale|shi\+|shit|shitdick|shite|shited|shitey|shitfuck|shitfull|shithead|shiting|shitings|shits|shitted|shitter|shitters|shitting|shittings|shitty|skank|slut|sluts|smegma|smut|snatch|son-of-a-bitch|spac|spunk|s_h_i_t|t1tt1e5|t1tties|teets|teez|testical|testicle|tit|titfuck|tits|titt|tittie5|tittiefucker|titties|tittyfuck|tittywank|titwank|tosser|turd|tw4t|twat|twathead|twatty|twunt|twunter|v14gra|v1gra|vagina|viagra|vulva|w00se|wang|wank|wanker|wanky|whoar|whore|willies|willy|xrated|xxx)\b/gi;
    }
    ]);
}
)
